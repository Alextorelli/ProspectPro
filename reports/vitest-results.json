{"numTotalTestSuites":21,"numPassedTestSuites":21,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":29,"numPassedTests":29,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1761740756664,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["ConfigLocator","loadConfig"],"fullName":"ConfigLocator loadConfig should load config from primary location (.vscode/mcp_config.json)","status":"passed","title":"should load config from primary location (.vscode/mcp_config.json)","duration":6.755471,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigLocator","loadConfig"],"fullName":"ConfigLocator loadConfig should fallback to secondary location (config/mcp-config.json) when primary fails","status":"passed","title":"should fallback to secondary location (config/mcp-config.json) when primary fails","duration":0.6769649999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigLocator","loadConfig"],"fullName":"ConfigLocator loadConfig should throw error when both locations fail","status":"passed","title":"should throw error when both locations fail","duration":0.8915159999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigLocator","loadConfig"],"fullName":"ConfigLocator loadConfig should throw error for invalid JSON","status":"passed","title":"should throw error for invalid JSON","duration":0.44534299999997984,"failureMessages":[],"meta":{}}],"startTime":1761740757065,"endTime":1761740757074.4453,"status":"passed","message":"","name":"/workspaces/ProspectPro/dev-tools/agents/client-service-layer/__tests__/ConfigLocator.test.ts"},{"assertionResults":[{"ancestorTitles":["MCPClientManager Integration Tests"],"fullName":"MCPClientManager Integration Tests should initialize, create clients, and dispose properly","status":"passed","title":"should initialize, create clients, and dispose properly","duration":211.22289599999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager Integration Tests: Stress Testing"],"fullName":"MCPClientManager Integration Tests: Stress Testing should handle configuration errors gracefully","status":"passed","title":"should handle configuration errors gracefully","duration":2.495672000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager Integration Tests: Stress Testing"],"fullName":"MCPClientManager Integration Tests: Stress Testing should handle retry logic on connection failures","status":"passed","title":"should handle retry logic on connection failures","duration":109.57914800000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager Integration Tests: Stress Testing"],"fullName":"MCPClientManager Integration Tests: Stress Testing should handle multiple concurrent client requests","status":"passed","title":"should handle multiple concurrent client requests","duration":101.50695199999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager Integration Tests: Stress Testing"],"fullName":"MCPClientManager Integration Tests: Stress Testing should handle rapid create/dispose cycles","status":"passed","title":"should handle rapid create/dispose cycles","duration":504.111135,"failureMessages":[],"meta":{}}],"startTime":1761740757065,"endTime":1761740757995.111,"status":"passed","message":"","name":"/workspaces/ProspectPro/dev-tools/agents/client-service-layer/__tests__/MCPClientManager.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["MCPClientManager","initialize"],"fullName":"MCPClientManager initialize should initialize successfully with valid config","status":"passed","title":"should initialize successfully with valid config","duration":4.749712999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","initialize"],"fullName":"MCPClientManager initialize should handle config warnings","status":"passed","title":"should handle config warnings","duration":0.5934090000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","initialize"],"fullName":"MCPClientManager initialize should throw error on config load failure","status":"passed","title":"should throw error on config load failure","duration":1.9770540000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","getClient"],"fullName":"MCPClientManager getClient should throw error if not initialized","status":"passed","title":"should throw error if not initialized","duration":0.6909299999999803,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","getClient"],"fullName":"MCPClientManager getClient should return client for valid server","status":"passed","title":"should return client for valid server","duration":101.02837600000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","getClient"],"fullName":"MCPClientManager getClient should throw error for unknown server","status":"passed","title":"should throw error for unknown server","duration":0.5394170000000145,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","retry logic"],"fullName":"MCPClientManager retry logic should retry on failure and succeed","status":"passed","title":"should retry on failure and succeed","duration":782.337608,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","retry logic"],"fullName":"MCPClientManager retry logic should fail after max attempts","status":"passed","title":"should fail after max attempts","duration":3184.2784659999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","dispose and destroyAll"],"fullName":"MCPClientManager dispose and destroyAll should dispose client successfully","status":"passed","title":"should dispose client successfully","duration":1.1098730000003343,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","dispose and destroyAll"],"fullName":"MCPClientManager dispose and destroyAll should handle dispose errors gracefully","status":"passed","title":"should handle dispose errors gracefully","duration":1.0782039999994595,"failureMessages":[],"meta":{}},{"ancestorTitles":["MCPClientManager","dispose and destroyAll"],"fullName":"MCPClientManager dispose and destroyAll should destroy all clients","status":"passed","title":"should destroy all clients","duration":1.219097000000147,"failureMessages":[],"meta":{}}],"startTime":1761740757067,"endTime":1761740761147.219,"status":"passed","message":"","name":"/workspaces/ProspectPro/dev-tools/agents/client-service-layer/__tests__/MCPClientManager.test.ts"},{"assertionResults":[{"ancestorTitles":["WorkspaceContext","getWorkspaceRoot"],"fullName":"WorkspaceContext getWorkspaceRoot should return injected root when provided","status":"passed","title":"should return injected root when provided","duration":1.163392999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorkspaceContext","getWorkspaceRoot"],"fullName":"WorkspaceContext getWorkspaceRoot should return VS Code workspace folder when available","status":"passed","title":"should return VS Code workspace folder when available","duration":0.1863480000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorkspaceContext","getWorkspaceRoot"],"fullName":"WorkspaceContext getWorkspaceRoot should prioritize injected root over VS Code folders","status":"passed","title":"should prioritize injected root over VS Code folders","duration":0.23033000000000925,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorkspaceContext","getWorkspaceRoot"],"fullName":"WorkspaceContext getWorkspaceRoot should throw error when no workspace root available","status":"passed","title":"should throw error when no workspace root available","duration":0.9114630000000261,"failureMessages":[],"meta":{}}],"startTime":1761740757445,"endTime":1761740757446.9114,"status":"passed","message":"","name":"/workspaces/ProspectPro/dev-tools/agents/client-service-layer/__tests__/WorkspaceContext.test.ts"},{"assertionResults":[{"ancestorTitles":["Frontend utilities"],"fullName":"Frontend utilities should have basic test coverage","status":"passed","title":"should have basic test coverage","duration":1.4589660000000038,"failureMessages":[],"meta":{}}],"startTime":1761740757796,"endTime":1761740757797.459,"status":"passed","message":"","name":"/workspaces/ProspectPro/app/frontend/src/utils/__tests__/basic.test.ts"},{"assertionResults":[{"ancestorTitles":["transformCampaignData"],"fullName":"transformCampaignData normalizes campaign status, metrics, and lead enrichment","status":"passed","title":"normalizes campaign status, metrics, and lead enrichment","duration":3.3551080000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["transformCampaignData"],"fullName":"transformCampaignData provides safe defaults when enrichment data is missing","status":"passed","title":"provides safe defaults when enrichment data is missing","duration":0.8814569999999833,"failureMessages":[],"meta":{}},{"ancestorTitles":["transformCampaignData"],"fullName":"transformCampaignData drops leads that do not have an identifier","status":"passed","title":"drops leads that do not have an identifier","duration":1.442926,"failureMessages":[],"meta":{}}],"startTime":1761740757260,"endTime":1761740757265.4429,"status":"passed","message":"","name":"/workspaces/ProspectPro/app/frontend/src/utils/__tests__/campaignTransforms.test.ts"},{"assertionResults":[{"ancestorTitles":["Smoke tests"],"fullName":"Smoke tests should pass basic smoke test","status":"passed","title":"should pass basic smoke test","duration":1.035775000000001,"failureMessages":[],"meta":{}}],"startTime":1761740757615,"endTime":1761740757616.036,"status":"passed","message":"","name":"/workspaces/ProspectPro/app/frontend/src/utils/__tests__/smoke.test.ts"}]}