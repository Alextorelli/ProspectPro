C4Container
    title Container diagram for ProspectPro AI-Powered Development Ecosystem

    Person(dev, "Solo Developer", "Alex - Technical entrepreneur", "Orchestrates AI agents and dev tools")

    System_Ext(supabase, "Supabase", "Database, Auth, Edge Functions")
    System_Ext(vercel, "Vercel", "Frontend deployment platform")
    System_Ext(github, "GitHub", "Source control and CI/CD")

    Container_Boundary(vscode, "VS Code Environment") {
        Container(chat, "Chat Participants", "TypeScript", "@debug, @deliver, @support, @research, @optimize agents provide specialized workflows")
        Container(modes, "Chat Modes", "Markdown", "Smart Debug, Feature Delivery, Production Support, API Research, Cost Optimization")
        Container(tasks, "VS Code Tasks", "JSON", "Automated deployment and testing workflows")
        Container(thunder, "Thunder Client", "VS Code Extension", "API testing collections and environment management")
    }

    Container_Boundary(mcp, "MCP Server Layer") {
        Container(supabase_mcp, "Supabase Troubleshooting", "Node.js", "Log analysis, auth diagnostics, function deployment")
        Container(postgres_mcp, "PostgreSQL", "Node.js", "Database operations, RLS management, migrations")
        Container(github_mcp, "GitHub", "Node.js", "Repository management, issue tracking, project automation")
        Container(integration_mcp, "Integration Hub", "Node.js", "Zapier, Stripe, Slack integrations")
        Container(observability_mcp, "Observability", "Node.js", "Monitoring, tracing, alerting via OpenTelemetry")
        Container(chrome_mcp, "Chrome DevTools", "Node.js", "Browser automation, performance profiling")
    }

    Container_Boundary(automation, "Automation Scripts") {
        Container(supabase_logs, "Supabase Logs", "Bash", "supabase-pull-logs.sh - aggregates edge function logs")
        Container(context_snap, "Context Snapshot", "Bash", "context-snapshot.sh - captures repo state")
        Container(vercel_status, "Vercel Status", "Bash", "vercel-status-check.sh - deployment validation")
    }

    Rel(dev, chat, "Invokes agents via @mentions", "VS Code Chat")
    UpdateRelStyle(dev, chat, $offsetY="-30")
    
    Rel(chat, modes, "Executes specialized workflows")
    UpdateRelStyle(chat, modes, $offsetX="100")
    
    Rel(chat, mcp, "Orchestrates MCP tools", "JSON-RPC")
    UpdateRelStyle(chat, mcp, $offsetY="40")
    
    Rel(modes, automation, "Triggers automation scripts", "Shell commands")
    UpdateRelStyle(modes, automation, $offsetY="-50")
    
    Rel(tasks, supabase_mcp, "Deploys edge functions", "CLI")
    Rel(tasks, vercel, "Deploys frontend", "HTTPS")
    UpdateRelStyle(tasks, vercel, $offsetX="-100")
    
    Rel(supabase_mcp, supabase, "Manages backend services", "REST API")
    UpdateRelStyle(supabase_mcp, supabase, $offsetY="-60")
    
    Rel(postgres_mcp, supabase, "Database operations", "PostgreSQL protocol")
    Rel(github_mcp, github, "Repository management", "GraphQL/REST")
    UpdateRelStyle(github_mcp, github, $offsetY="-40")
    
    Rel(automation, supabase, "Fetches logs and metrics", "Supabase CLI")
    Rel(automation, vercel, "Validates deployments", "Vercel CLI")
    
    Rel(observability_mcp, supabase, "Collects traces", "OpenTelemetry")
    UpdateRelStyle(observability_mcp, supabase, $offsetX="-120")
    
    Rel(thunder, supabase, "Tests API endpoints", "HTTPS")
    UpdateRelStyle(thunder, supabase, $offsetY="60")