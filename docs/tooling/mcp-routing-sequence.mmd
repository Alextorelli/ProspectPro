---
id: mcp-routing-sequence
intent: "MCP Routing Sequence: Ingress → ContextManager → MCP → Telemetry with ZeroFakeData validation."
context: |
  Sequence diagram showing the stepwise flow from ingress through context validation, routing, MCP invocation, and telemetry emission. Highlights the ZeroFakeData checkpoint and all major agentic handoffs.
---
sequenceDiagram
    participant INGRESS as Ingress Gateway\n(scripts/shell/ingress-gateway.sh)
    participant ROUTER as Context Router\n(scripts/shell/context-router.sh)
    participant ZFD as ZeroFakeData Checkpoint\n(scripts/shell/zero-fake-data-check.sh)
    participant CTX_MGR as ContextManager\n(dev-tools/context/context-manager.ts)
    participant MCP_PROD as MCP Production\n(mcp-servers/production-server.js)
    participant MCP_DEV as MCP Development\n(mcp-servers/development-server.js)
    participant MCP_TROUBLE as MCP Troubleshooting\n(mcp-servers/troubleshooting-server.js)
    participant THUNDER as Thunder Reports\n(dev-tools/monitoring/jaeger/)
    participant SUPABASE as Supabase Logs\n(supabase/functions/)

    INGRESS->>ROUTER: receive request
    ROUTER->>ZFD: validate (ZeroFakeData)
    ZFD-->>ROUTER: pass/fail
    ROUTER->>CTX_MGR: forward if pass
    CTX_MGR->>MCP_PROD: route:prod
    CTX_MGR->>MCP_DEV: route:dev
    CTX_MGR->>MCP_TROUBLE: route:trouble
    MCP_PROD->>THUNDER: emit:thunder
    MCP_PROD->>SUPABASE: emit:logs
    MCP_DEV->>THUNDER: emit:thunder
    MCP_TROUBLE->>SUPABASE: emit:logs
    MCP_PROD-->>MCP_TROUBLE: escalate (on error)
