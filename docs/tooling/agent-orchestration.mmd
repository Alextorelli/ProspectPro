sequenceDiagram
    participant REQUEST as Developer / AI Request\n(src/agent-orchestration/request.ts)
    participant PLAN as Plan Tasks\n(src/agent-orchestration/plan.ts)
    participant LEDGER as Update Ledger\n(src/agent-orchestration/ledger.ts)
    participant CONTEXT_MGR as Context Manager\n(scripts/context/event-bus.ts)
    participant SKILL_ROUTER as Route Skills\n(src/agent-orchestration/skill-router.ts)
    participant AGENT_POOL as Agent Pool\n(dev-tools/agent-orchestration/agents/)
    participant MCP_BRIDGE as Invoke MCP\n(mcp-servers/production-server.js)
    participant DELIVERABLE as Deliver Result\n(src/agent-orchestration/deliverable.ts)

    REQUEST->>PLAN: submit request
    PLAN->>LEDGER: plan tasks
    LEDGER->>CONTEXT_MGR: update context
    CONTEXT_MGR->>SKILL_ROUTER: manage context
    SKILL_ROUTER->>AGENT_POOL: route skills
    AGENT_POOL->>MCP_BRIDGE: execute
    MCP_BRIDGE->>DELIVERABLE: deliver result
    DELIVERABLE-->>REQUEST: feedback
    MCP_BRIDGE->>LEDGER: update ledger

    %% Validation checkpoint
    Note over MCP_BRIDGE,LEDGER: Validation & Checkpoints\n- Validate: agent state\n- Log: orchestration diagnostics

