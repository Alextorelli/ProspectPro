%%{init: { 'theme': '', 'themeVariables': , 'logLevel': '' }}%%
---
id: mcp-routing-sequence
intent: "MCP Routing Sequence: Ingress → ContextManager → MCP → Telemetry with ZeroFakeData validation."
context: |
  Sequence diagram showing the stepwise flow from ingress through context validation, routing, MCP invocation, and telemetry emission. Highlights the ZeroFakeData checkpoint and all major agentic handoffs.
---
%% config: theme: dark
sequenceDiagram
    participant INGRESS as Ingress Gateway\n(scripts/shell/ingress-gateway.sh)
    participant ROUTER as Context Router\n(scripts/shell/context-router.sh)
    participant ZFD as ZeroFakeData Checkpoint\n(scripts/shell/zero-fake-data-check.sh)
    participant CTX_MGR as ContextManager\n(dev-tools/context/context-manager.ts)
    participant MCP_PROD as MCP Production\n(mcp-servers/production-server.js)
    participant MCP_DEV as MCP Development\n(mcp-servers/development-server.js)
  participant MCP_TROUBLE as MCP Troubleshooting\n(mcp-servers/supabase-troubleshooting-server.js)
  participant OTEL as OTEL Collector\n(telemetry/otel)
    participant TOOL_IFACE as Tooling Interface Layer\n(React DevTools, Docker, Repo APIs)
    participant TELEMETRY_STREAM as Telemetry Stream\n(dev-tools/monitoring/log-forwarder.ts)
    participant SUPABASE as Supabase Platform\n(Database + Functions)

    INGRESS->>ROUTER: receive request
    ROUTER->>ZFD: validate (ZeroFakeData)
    ZFD-->>ROUTER: pass/fail
    ROUTER->>CTX_MGR: forward if pass
    CTX_MGR->>MCP_PROD: route:prod
    CTX_MGR->>MCP_DEV: route:dev
    CTX_MGR->>MCP_TROUBLE: route:trouble
    MCP_PROD->>TELEMETRY_STREAM: emit telemetry
    MCP_PROD->>SUPABASE: write logs & events
    MCP_PROD->>TOOL_IFACE: expose deployment hooks
    MCP_DEV->>TELEMETRY_STREAM: emit telemetry
    MCP_DEV->>TOOL_IFACE: surface dev metrics
    MCP_TROUBLE->>SUPABASE: persist diagnostics
  MCP_TROUBLE->>OTEL: run telemetry tools (capture_api_trace, compare_campaign_costs, predict_campaign_roi)
  MCP_TROUBLE->>TOOL_IFACE: stream troubleshooting data
    MCP_PROD-->>MCP_TROUBLE: escalate (on error)
  %% Validation checkpoint
  Note over MCP_TROUBLE,OTEL: Telemetry & Validation\n- Tools: capture_api_trace, compare_campaign_costs, predict_campaign_roi\n- Validate: ZeroFakeData, cost, ROI\n- Log: diagnostics, OTEL traces
