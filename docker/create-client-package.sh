#!/bin/bash

# ProspectPro Client Deployment Package Creator
# Creates a portable deployment package for client distribution

set -e

echo "📦 Creating ProspectPro Client Deployment Package"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Configuration
PACKAGE_NAME="prospectpro-deploy"
VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "1.0.0")
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
PACKAGE_DIR="${PACKAGE_NAME}-v${VERSION}-${TIMESTAMP}"

echo -e "${BLUE}Package: ${PACKAGE_DIR}${NC}"

# Create package directory
echo -e "${GREEN}📁 Creating package directory...${NC}"
rm -rf "$PACKAGE_DIR" || true
mkdir -p "$PACKAGE_DIR"

# Copy essential files
echo -e "${GREEN}📋 Copying application files...${NC}"
cp -r \
    api \
    modules \
    config \
    database \
    public \
    frontend \
    server.js \
    package.json \
    Dockerfile \
    docker-compose.yml \
    .env.docker \
    "$PACKAGE_DIR/"

# Copy Docker deployment scripts
cp docker/deploy-prod.sh "$PACKAGE_DIR/"
chmod +x "$PACKAGE_DIR/deploy-prod.sh"

# Create client setup script
cat > "$PACKAGE_DIR/setup.sh" << 'EOF'
#!/bin/bash

echo "🚀 ProspectPro Setup"
echo "===================="

# Check for Docker
if ! command -v docker &> /dev/null; then
    echo "❌ Docker is not installed. Please install Docker first."
    echo "Visit: https://docs.docker.com/get-docker/"
    exit 1
fi

# Create environment file
if [ ! -f .env ]; then
    echo "📝 Setting up environment configuration..."
    cp .env.docker .env
    echo ""
    echo "⚠️  IMPORTANT: You must configure the following in .env:"
    echo "   - SUPABASE_URL"
    echo "   - SUPABASE_SECRET_KEY"
    echo "   - API keys for external services"
    echo ""
    read -p "Press Enter to open .env for editing..."
    ${EDITOR:-nano} .env
fi

echo "✅ Setup complete! Run './start.sh' to start ProspectPro."
EOF

# Create client start script
cat > "$PACKAGE_DIR/start.sh" << 'EOF'
#!/bin/bash

echo "🚀 Starting ProspectPro..."

# Check environment
if [ ! -f .env ]; then
    echo "❌ Environment not configured. Run './setup.sh' first."
    exit 1
fi

# Run deployment script
./deploy-prod.sh
EOF

# Create client README
cat > "$PACKAGE_DIR/README.md" << EOF
# ProspectPro Client Deployment

Version: $VERSION
Generated: $(date)

## Quick Start

1. Run setup: \`./setup.sh\`
2. Start application: \`./start.sh\`
3. Access ProspectPro: http://localhost:3000

## Requirements

- Docker and Docker Compose
- Internet connection for API calls
- Valid API keys for external services

## Configuration

Edit \`.env\` file with your API keys and settings:

- **SUPABASE_URL**: Your Supabase project URL
- **SUPABASE_SECRET_KEY**: Your Supabase secret key
- **GOOGLE_PLACES_API_KEY**: Google Places API key
- **FOURSQUARE_API_KEY**: Foursquare API key
- **HUNTER_IO_API_KEY**: Hunter.io API key
- **NEVERBOUNCE_API_KEY**: NeverBounce API key

## Management

- **View logs**: \`docker-compose logs -f prospectpro\`
- **Stop application**: \`docker-compose down\`
- **Restart**: \`docker-compose restart\`
- **Update**: Replace files and run \`./start.sh\`

## Support

- Check logs for error messages
- Verify API keys are valid and have sufficient quotas
- Ensure port 3000 is available

## API Endpoints

- **Health Check**: http://localhost:3000/health
- **Diagnostics**: http://localhost:3000/diag
- **Business Discovery**: POST http://localhost:3000/api/business-discovery

Generated by ProspectPro v$VERSION deployment system.
EOF

# Make scripts executable
chmod +x "$PACKAGE_DIR/setup.sh"
chmod +x "$PACKAGE_DIR/start.sh"

# Create archive
echo -e "${GREEN}📦 Creating deployment archive...${NC}"
tar -czf "${PACKAGE_DIR}.tar.gz" "$PACKAGE_DIR"

# Cleanup
rm -rf "$PACKAGE_DIR"

# Summary
echo -e "\n${GREEN}✅ Deployment package created successfully!${NC}"
echo -e "${BLUE}📦 Package: ${PACKAGE_DIR}.tar.gz${NC}"
echo -e "${BLUE}📏 Size: $(du -h "${PACKAGE_DIR}.tar.gz" | cut -f1)${NC}"

echo -e "\n${GREEN}📋 Client Instructions:${NC}"
echo -e "1. Extract: tar -xzf ${PACKAGE_DIR}.tar.gz"
echo -e "2. Setup: cd ${PACKAGE_DIR} && ./setup.sh"
echo -e "3. Start: ./start.sh"

echo -e "\n${GREEN}🚀 Package ready for distribution!${NC}"