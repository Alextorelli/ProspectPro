{
  "name": "prospectpro-verified-business-intelligence",
  "version": "4.1.0",
  "type": "module",
  "description": "ProspectPro - Verified Business Intelligence Platform with Zero Fake Data Policy",
  "scripts": {
    "archive:legacy": "mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'",
    "build": "tsc -p config/tsconfig.json && vite build && echo '{\"version\":2,\"rewrites\":[{\"source\":\"/(.*)\",\"destination\":\"/index.html\"}],\"headers\":[{\"source\":\"/(.*)\",\"headers\":[{\"key\":\"Cache-Control\",\"value\":\"public, max-age=0, s-maxage=0, must-revalidate\"}]},{\"source\":\"/assets/(.*)\",\"headers\":[{\"key\":\"Cache-Control\",\"value\":\"public, max-age=31536000, immutable\"}]}]}' > dist/vercel.json",
    "build:static": "npm run build",
    "clean": "rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'",
    "cost:analyze": "echo 'Check GitHub billing dashboard for usage trends'",
    "db:setup": "echo 'Apply /supabase/schema-sql/001_core_schema.sql through 004_enrichment_cache.sql in Supabase dashboard'",
    "docs:update": "node scripts/tooling/update-docs.js",
    "codebase:index": "npm run docs:update",
    "docs:update:legacy": "npm run codebase:index && npm run system:reference",
    "system:reference": "node scripts/tooling/generate-system-reference.js",
    "db:status": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest db status'",
    "debug:edge-function": "echo 'Test Verified Edge Function: curl -X POST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-background -H \"Authorization: Bearer YOUR_SESSION_JWT\" -H \"Content-Type: application/json\" -d \"{\\\"businessType\\\": \\\"test\\\", \\\"location\\\": \\\"test\\\"}\"'",
    "debug:fake-data": "echo 'Verify zero fake data: Check CSV exports for pattern emails (info@, contact@, etc.)'",
    "debug:quick": "echo 'Common issue: Check anon key sync and verified contact authentication'",
    "debug:vercel": "echo 'Check Vercel deployment: curl -I https://your-vercel-url.vercel.app'",
    "deploy:all": "npm run deploy:functions",
    "deploy:critical": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions deploy business-discovery-background --no-verify-jwt && npx --yes supabase@latest functions deploy enrichment-orchestrator'",
    "deploy:diagnostics": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions deploy test-google-places'",
    "deploy:discovery": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions deploy business-discovery-background --no-verify-jwt && npx --yes supabase@latest functions deploy business-discovery-optimized && npx --yes supabase@latest functions deploy business-discovery-user-aware'",
    "deploy:edge-functions": "npm run deploy:functions",
    "deploy:enrichment": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions deploy enrichment-orchestrator && npx --yes supabase@latest functions deploy enrichment-hunter && npx --yes supabase@latest functions deploy enrichment-neverbounce && npx --yes supabase@latest functions deploy enrichment-business-license && npx --yes supabase@latest functions deploy enrichment-pdl'",
    "deploy:exports": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions deploy campaign-export-user-aware'",
    "deploy:functions": "npm run deploy:discovery && npm run deploy:enrichment && npm run deploy:exports && npm run deploy:diagnostics",
    "deploy:gcs": "npm run build && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/",
    "deploy:netlify": "netlify deploy --prod --dir=dist",
    "deploy:vercel": "npx --yes vercel@latest --prod",
    "validate:ignores": "node scripts/tooling/validate-ignore-config.cjs",
    "dev": "vite",
    "devtools:react": "npx react-devtools --port 8097 --host 0.0.0.0",
    "dev:supabase": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions serve --no-verify-jwt --debug'",
    "frontend:build": "npm run build",
    "frontend:deploy": "npm run build && cd dist && npx --yes vercel@latest --prod",
    "functions:list": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions list'",
    "functions:logs": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions logs'",
    "health": "echo 'Use Edge Function endpoints for health checks'",
    "health:check": "curl -f https://prospectpro.appsmithery.co/ || echo 'Health check failed'",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "logs:errors": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions logs --filter=error'",
    "logs:live": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions logs --follow'",
    "mcp:debug": "cd mcp-servers && npm run start:troubleshooting",
    "mcp:dev": "cd mcp-servers && npm run start:development",
    "mcp:init": "npm run mcp:install && npm run mcp:test",
    "mcp:install": "cd mcp-servers && npm install",
    "mcp:prod": "cd mcp-servers && npm run start:production",
    "mcp:start": "bash scripts/operations/start-mcp.sh",
    "mcp:stop": "bash scripts/operations/stop-mcp.sh",
    "mcp:test": "cd mcp-servers && npm run test",
    "mcp:troubleshoot": "cd mcp-servers && npm run start:troubleshooting",
    "preview": "vite preview",
    "roadmap:batch": "node scripts/roadmap/roadmap-batch.js",
    "roadmap:dashboard": "node scripts/roadmap/roadmap-dashboard.js",
    "roadmap:epic": "node scripts/roadmap/roadmap-epic.js",
    "roadmap:open": "node scripts/roadmap/roadmap-open.js",
    "roadmap:pull": "node scripts/roadmap/roadmap-pull.js",
    "roadmap:start": "bash ./scripts/roadmap/start-epic.sh",
    "serve:local": "npm run preview",
    "session:wrap": "bash ./scripts/operations/post-session.sh",
    "static:deploy": "npm run build && cd dist && npx --yes vercel@latest --prod",
    "supabase:auth": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh'",
    "supabase:db:pull": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest db pull --schema public'",
    "supabase:db:push": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest migration list && npx --yes supabase@latest db push'",
    "supabase:link": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest link --project-ref sriycekxdqnesdsgwiuc'",
    "supabase:migrations:list": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest migration list'",
    "supabase:migrations:new": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && read -p \"Migration name: \" name && npx --yes supabase@latest migration new \"$name\"'",
    "supabase:status": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest status'",
    "supabase:start:local": "bash -lc 'cd supabase && npx --yes supabase@latest start'",
    "supabase:types": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest gen types --lang typescript > ../src/types/supabase.ts'",
    "supabase:test:functions": "bash -lc 'source scripts/testing/test-env.local.sh && deno test --allow-all supabase/functions/tests/'",
    "supabase:workflow": "npm run supabase:auth && npm run supabase:link && npm run supabase:migrations:list",
    "edge:serve": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions serve --no-verify-jwt --debug'",
    "edge:serve:local": "bash -lc 'cd supabase && npx --yes supabase@latest functions serve --no-verify-jwt'",
    "edge:serve:single": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && read -p \"Function name: \" func && npx --yes supabase@latest functions serve \"$func\" --no-verify-jwt --debug'",
    "edge:deploy:critical": "npm run deploy:critical",
    "edge:deploy:discovery": "npm run deploy:discovery",
    "edge:deploy:enrichment": "npm run deploy:enrichment",
    "edge:deploy:all": "npm run deploy:all",
    "edge:logs": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions logs --follow'",
    "edge:logs:errors": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions logs --filter=error --follow'",
    "edge:logs:function": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && read -p \"Function name: \" func && npx --yes supabase@latest functions logs \"$func\" --follow'",
    "edge:list": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions list'",
    "edge:test:local": "curl -X POST 'http://localhost:54321/functions/v1/business-discovery-background' -H 'Content-Type: application/json' -d '{\"businessType\":\"test\",\"location\":\"test\"}'",
    "edge:new": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && read -p \"Function name: \" func && npx --yes supabase@latest functions new \"$func\"'",
    "edge:workflow:dev": "bash -lc 'npm run edge:serve & sleep 5 && npm run edge:logs'",
    "edge:workflow:deploy": "bash -lc 'npm run edge:deploy:critical && npm run edge:logs'",
    "test": "vitest run --exclude supabase/functions/tests/**",
    "test:edge": "curl -X POST 'http://localhost:54321/functions/v1/business-discovery-background' -H 'Content-Type: application/json' -d '{\"businessType\":\"test\",\"location\":\"test\"}'",
    "test:edge:local": "bash -lc 'source scripts/testing/test-env.local.sh && deno test --allow-all supabase/functions/tests/'",
    "test:edge-functions": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest functions serve'",
    "test:verified-contacts": "echo 'Test verified contact discovery with zero fake data validation'",
    "test:watch": "vitest --exclude supabase/functions/tests/**",
    "type-check": "tsc -p config/tsconfig.json --noEmit",
    "supabase:test:db": "bash -lc 'cd supabase && source ../scripts/operations/ensure-supabase-cli-session.sh && npx --yes supabase@latest test db'",
    "thunder:test": "echo 'Run Thunder Client tests via VS Code extension (Thunder: Run Full Test Suite task)'",
    "thunder:env:sync": "vercel env pull .env.thunder --yes && echo 'Thunder Client environment synced to .env.thunder'"
  },
  "keywords": [
    "verified-business-intelligence",
    "professional-contacts",
    "apollo-api",
    "chamber-of-commerce",
    "professional-licensing",
    "zero-fake-data",
    "supabase",
    "edge-functions",
    "verified-contacts"
  ],
  "author": "Alex Torelli",
  "license": "MIT",
  "dependencies": {
    "@googlemaps/js-api-loader": "^2.0.1",
    "@supabase/supabase-js": "^2.39.0",
    "@tanstack/react-query": "^5.17.0",
    "clsx": "^2.0.0",
    "lucide-react": "^0.294.0",
    "minimatch": "^10.0.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.20.1",
    "recharts": "^2.8.0",
    "tailwind-merge": "^2.2.0",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@modelcontextprotocol/sdk": "^1.20.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.54.0",
    "@opentelemetry/sdk-node": "^0.54.0",
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "^10.4.16",
    "chrome-devtools-mcp": "^0.8.1",
    "eslint": "^8.55.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.5",
    "ignore": "^7.0.5",
    "ioredis-mock": "^8.13.0",
    "jsdom": "^27.0.0",
    "p-retry": "^6.2.1",
    "p-timeout": "^6.1.3",
    "pg": "^8.13.1",
    "postcss": "^8.4.32",
    "react-devtools-core": "^7.0.0",
    "redis": "^4.7.0",
    "supabase": "^2.51.0",
    "tailwindcss": "^3.3.6",
    "ts-node": "^10.9.2",
    "typescript": "^5.2.2",
    "vite": "^7.1.10",
    "vitest": "^3.2.4"
  },
  "overrides": {
    "esbuild": "^0.24.2"
  },
  "engines": {
    "node": "22.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Alextorelli/ProspectPro"
  },
  "architecture": {
    "frontend": "Static HTML/JS with verified contact display",
    "backend": "Supabase Edge Functions with zero fake data",
    "database": "Supabase PostgreSQL with verification tracking",
    "contacts": "Apollo API + Professional Licensing + Chamber Directories",
    "dataPolicy": "Zero fake data - verified contacts only",
    "hosting": "Static hosting (Cloud Storage/CDN)",
    "deployment": "Supabase CLI + gsutil"
  },
  "postdeploy": "npm run docs:update"
}
