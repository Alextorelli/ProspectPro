name: ProspectPro Frontend Deploy

on:
  push:
    branches: [main]
    paths:
      - "public/**"
      - "supabase/functions/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
    paths:
      - "public/**"

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  Deploy-Frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Edge-Functions:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'supabase/functions/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy Edge Functions
        run: |
          supabase functions deploy business-discovery --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          supabase functions deploy campaign-export --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

  Validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run Validation Suite
        run: bash scripts/shell/validation-suite.sh

      - name: Upload Validation Summary
        uses: actions/upload-artifact@v4
        with:
          name: validation-summary
          path: reports/validation/template.md

  Update-Domain:
    runs-on: ubuntu-latest
    needs: [Deploy-Frontend, Validation]
    steps:
      - name: Update Custom Domain
        run: |
          # Get the latest deployment URL
          DEPLOYMENT_URL=$(vercel ls --token=${{ secrets.VERCEL_TOKEN }} | grep "âœ…" | head -1 | awk '{print $2}')
          echo "Latest deployment: $DEPLOYMENT_URL"

          # Update custom domain to point to latest deployment
          vercel domains add prospectpro.appsmithery.co --token=${{ secrets.VERCEL_TOKEN }} || true
