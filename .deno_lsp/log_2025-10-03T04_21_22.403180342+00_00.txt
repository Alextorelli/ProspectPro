Starting Deno language server...
{"type":"mark","name":"lsp.initialize","count":1,"args":{"processId":1478,"rootPath":"/workspaces/ProspectPro","rootUri":"file:///workspaces/ProspectPro","initializationOptions":{"enable":true,"cacheOnSave":true,"disablePaths":[],"enablePaths":["supabase/functions"],"path":null,"env":{},"envFile":null,"cache":null,"certificateStores":null,"codeLens":{"implementations":true,"references":true,"referencesAllFunctions":true,"test":true,"testArgs":["--allow-all","--no-check"]},"config":null,"documentPreloadLimit":1000,"future":false,"importMap":null,"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"maxTsServerMemory":3072,"suggest":{"autoImports":true,"completeFunctionCalls":false,"names":true,"paths":true,"imports":{"autoDiscover":true,"hosts":{"https://deno.land":true}}},"trace":{"server":"off"},"testing":{"args":["--allow-all","--no-check"]},"tlsCertificate":null,"unsafelyIgnoreCertificateErrors":null,"unstable":true,"lint":true,"internalDebug":false,"internalInspect":false,"logFile":true,"defaultTaskCommand":"open","javascript":{"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"validate":{"enable":true},"suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"always"},"autoClosingTags":true,"preferGoToSourceDefinition":false,"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":true,"names":true,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"shortest","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false}}},"typescript":{"tsdk":"","disableAutomaticTypeAcquisition":false,"enablePromptUseWorkspaceTsdk":false,"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"implementationsCodeLens":{"enabled":false,"showOnInterfaceMethods":false},"experimental":{"useTsgo":false},"reportStyleChecksAsWarnings":true,"validate":{"enable":true},"tsc":{"autoDetect":"on"},"locale":"auto","suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"workspaceSymbols":{"scope":"allOpenProjects","excludeLibrarySymbols":true},"preferGoToSourceDefinition":false,"tsserver":{"enableRegionDiagnostics":true,"nodePath":"","web":{"projectWideIntellisense":{"enabled":true,"suppressSemanticErrors":false},"typeAcquisition":{"enabled":true}},"useSyntaxServer":"auto","maxTsServerMemory":3072,"experimental":{"enableProjectDiagnostics":false},"watchOptions":"vscode","enableTracing":false,"log":"off","pluginPaths":[]},"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":true,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true},"objectLiteralMethodSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"relative","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","includePackageJsonAutoImports":"on","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"preferTypeOnlyAutoImports":false,"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"insertSpaceAfterTypeAssertion":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"npm":"","check":{"npmIsInstalled":true}},"enableBuiltinCommands":true},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"willCreate":true,"didRename":true,"willRename":true,"didDelete":true,"willDelete":true},"inlineValue":{"refreshSupport":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"insertTextMode":2,"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]}},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.move","refactor.rewrite","source","source.organizeImports","notebook"]}},"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit","command"]},"honorsChangeAnnotations":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false,"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true,"foldingRangeKind":{"valueSet":["comment","imports","region"]},"foldingRange":{"collapsedText":false}},"selectionRange":{"dynamicRegistration":true},"linkedEditingRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"requests":{"range":true,"full":{"delta":true}},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"overlappingTokenSupport":false,"multilineTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"typeHierarchy":{"dynamicRegistration":true},"inlineValue":{"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false}},"notebookDocument":{"synchronization":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true}},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"},"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"positionEncodings":["utf-16"]},"experimental":{"testingApi":true}},"trace":"off","workspaceFolders":[{"uri":"file:///workspaces/ProspectPro","name":"ProspectPro"}],"clientInfo":{"name":"Visual Studio Code","version":"1.104.3"},"locale":"en"}},
  version: 2.5.2 (release, x86_64-unknown-linux-gnu)
  executable: /usr/local/share/npm-global/lib/node_modules/deno/deno
Connected to "Visual Studio Code" 1.104.3
{"type":"measure","name":"lsp.initialize","count":1,"duration":1.204},
{"type":"mark","name":"lsp.update_global_cache"},
Enabling import suggestions for: https://deno.land
{"type":"measure","name":"lsp.update_global_cache","count":1,"duration":11.97},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":1,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospectpro-verified-business-intelligence\",\r\n  \"version\": \"4.1.0\",\r\n  \"description\": \"ProspectPro - Verified Business Intelligence Platform with Zero Fake Data Policy\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"tsc && vite build\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\r\n    \"type-check\": \"tsc --noEmit\",\r\n    \"build:static\": \"npm run build\",\r\n    \"deploy:vercel\": \"vercel --prod\",\r\n    \"deploy:netlify\": \"netlify deploy --prod --dir=dist\",\r\n    \"deploy:gcs\": \"npm run build && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/\",\r\n    \"serve:local\": \"npm run preview\",\r\n    \"test:edge-functions\": \"supabase functions serve\",\r\n    \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy business-discovery-optimized && supabase functions deploy campaign-export\",\r\n    \"db:setup\": \"echo 'Run SQL from /database/supabase-first-schema.sql in Supabase dashboard'\",\r\n    \"db:status\": \"supabase db status\",\r\n    \"functions:list\": \"supabase functions list\",\r\n    \"functions:logs\": \"supabase functions logs\",\r\n    \"clean\": \"rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'\",\r\n    \"archive:legacy\": \"mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'\",\r\n    \"health\": \"echo 'Use Edge Function endpoints for health checks'\",\r\n    \"test\": \"echo 'Test Edge Functions via Supabase dashboard or curl'\",\r\n    \"test:verified-contacts\": \"echo 'Test verified contact discovery with zero fake data validation'\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && npm run test\",\r\n    \"mcp:start\": \"cd mcp-servers && npm run start:all\",\r\n    \"mcp:troubleshoot\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"debug:quick\": \"echo 'Common issue: Check anon key sync and verified contact authentication'\",\r\n    \"debug:edge-function\": \"echo 'Test Verified Edge Function: curl -X POST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-optimized -H \\\"Authorization: Bearer YOUR_ANON_KEY\\\" -H \\\"Content-Type: application/json\\\" -d \\\"{\\\\\\\"businessType\\\\\\\": \\\\\\\"test\\\\\\\", \\\\\\\"location\\\\\\\": \\\\\\\"test\\\\\\\"}\\\"'\",\r\n    \"debug:vercel\": \"echo 'Check Vercel deployment: curl -I https://your-vercel-url.vercel.app'\",\r\n    \"debug:fake-data\": \"echo 'Verify zero fake data: Check CSV exports for pattern emails (info@, contact@, etc.)'\"\r\n  },\r\n  \"keywords\": [\r\n    \"verified-business-intelligence\",\r\n    \"professional-contacts\",\r\n    \"apollo-api\",\r\n    \"chamber-of-commerce\",\r\n    \"professional-licensing\",\r\n    \"zero-fake-data\",\r\n    \"supabase\",\r\n    \"edge-functions\",\r\n    \"verified-contacts\"\r\n  ],\r\n  \"author\": \"Alex Torelli\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"@supabase/supabase-js\": \"^2.39.0\",\r\n    \"@tanstack/react-query\": \"^5.17.0\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.20.1\",\r\n    \"zustand\": \"^4.4.7\",\r\n    \"recharts\": \"^2.8.0\",\r\n    \"lucide-react\": \"^0.294.0\",\r\n    \"clsx\": \"^2.0.0\",\r\n    \"tailwind-merge\": \"^2.2.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^18.2.43\",\r\n    \"@types/react-dom\": \"^18.2.17\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\r\n    \"@typescript-eslint/parser\": \"^6.14.0\",\r\n    \"@vitejs/plugin-react\": \"^4.2.1\",\r\n    \"autoprefixer\": \"^10.4.16\",\r\n    \"eslint\": \"^8.55.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\r\n    \"postcss\": \"^8.4.32\",\r\n    \"tailwindcss\": \"^3.3.6\",\r\n    \"typescript\": \"^5.2.2\",\r\n    \"vite\": \"^5.0.8\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=18.0.0\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/Alextorelli/ProspectPro\"\r\n  },\r\n  \"architecture\": {\r\n    \"frontend\": \"Static HTML/JS with verified contact display\",\r\n    \"backend\": \"Supabase Edge Functions with zero fake data\",\r\n    \"database\": \"Supabase PostgreSQL with verification tracking\",\r\n    \"contacts\": \"Apollo API + Professional Licensing + Chamber Directories\",\r\n    \"dataPolicy\": \"Zero fake data - verified contacts only\",\r\n    \"hosting\": \"Static hosting (Cloud Storage/CDN)\",\r\n    \"deployment\": \"Supabase CLI + gsutil\"\r\n  }\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":1,"duration":0.058},
{"type":"mark","name":"lsp.did_open","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/vercel.json","languageId":"json","version":1,"text":"{\n    \"version\": 2,\n    \"buildCommand\": \"npm run build\",\n    \"outputDirectory\": \"dist\",\n    \"public\": true,\n    \"cleanUrls\": true,\n    \"trailingSlash\": false,\n    \"rewrites\": [\n        {\n            \"source\": \"/(.*)\",\n            \"destination\": \"/index.html\"\n        }\n    ],\n    \"headers\": [\n        {\n            \"source\": \"/(.*)\",\n            \"headers\": [\n                {\n                    \"key\": \"X-Frame-Options\",\n                    \"value\": \"SAMEORIGIN\"\n                },\n                {\n                    \"key\": \"Access-Control-Allow-Origin\",\n                    \"value\": \"*\"\n                },\n                {\n                    \"key\": \"Access-Control-Allow-Methods\",\n                    \"value\": \"GET, POST, PUT, DELETE, OPTIONS\"\n                },\n                {\n                    \"key\": \"Access-Control-Allow-Headers\",\n                    \"value\": \"Content-Type, Authorization\"\n                },\n                {\n                    \"key\": \"Cache-Control\",\n                    \"value\": \"public, max-age=0, s-maxage=0, must-revalidate\"\n                }\n            ]\n        }\n    ]\n}"}}},
{"type":"measure","name":"lsp.did_open","count":2,"duration":0.025},
{"type":"mark","name":"lsp.did_open","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx","languageId":"typescriptreact","version":1,"text":"import { Route, Routes } from \"react-router-dom\";\nimport { Layout } from \"./components/Layout\";\nimport { AdminPanel } from \"./pages/AdminPanel\";\nimport { BusinessDiscovery } from \"./pages/BusinessDiscovery\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Results } from \"./pages/Results\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<BusinessDiscovery />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path=\"/discovery\" element={<BusinessDiscovery />} />\n        <Route path=\"/results\" element={<Results />} />\n        <Route path=\"/admin\" element={<AdminPanel />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n"}}},
{"type":"measure","name":"lsp.did_open","count":3,"duration":0.619},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":1,"duration":0.901},
{"type":"mark","name":"lsp.did_open","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\n\nexport const Dashboard: React.FC = () => {\n  const { campaigns, leads } = useCampaignStore();\n\n  const totalCost = campaigns.reduce(\n    (sum, campaign) => sum + campaign.total_cost,\n    0\n  );\n  const totalLeads = leads.length;\n  const qualifiedLeads = leads.filter(\n    (lead) => lead.confidence_score >= 80\n  ).length;\n  // Removed unused validatedLeads variable\n\n  const stats = [\n    { name: \"Total Campaigns\", value: campaigns.length, icon: \"🚀\" },\n    { name: \"Total Leads\", value: totalLeads, icon: \"👥\" },\n    { name: \"Qualified Leads\", value: qualifiedLeads, icon: \"✅\" },\n    { name: \"Total Cost\", value: `$${totalCost.toFixed(2)}`, icon: \"💰\" },\n  ];\n\n  const recentCampaigns = campaigns.slice(0, 5);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Dashboard</h1>\n        <p className=\"mt-1 text-sm text-gray-500\">\n          Overview of your lead generation campaigns and results\n        </p>\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n        {stats.map((stat) => (\n          <div\n            key={stat.name}\n            className=\"bg-white overflow-hidden shadow rounded-lg\"\n          >\n            <div className=\"p-5\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <span className=\"text-2xl\">{stat.icon}</span>\n                </div>\n                <div className=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                      {stat.name}\n                    </dt>\n                    <dd className=\"text-lg font-medium text-gray-900\">\n                      {stat.value}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Recent Campaigns */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n            Recent Campaigns\n          </h3>\n          {recentCampaigns.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <span className=\"text-4xl\">🔍</span>\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n                No campaigns yet\n              </h3>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Get started by creating your first lead discovery campaign.\n              </p>\n              <div className=\"mt-6\">\n                <a\n                  href=\"/discovery\"\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                >\n                  Start Discovery\n                </a>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {recentCampaigns.map((campaign) => (\n                <div\n                  key={campaign.campaign_id}\n                  className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50\"\n                >\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                          campaign.status === \"completed\"\n                            ? \"bg-green-100 text-green-800\"\n                            : campaign.status === \"running\"\n                            ? \"bg-blue-100 text-blue-800\"\n                            : campaign.status === \"failed\"\n                            ? \"bg-red-100 text-red-800\"\n                            : \"bg-gray-100 text-gray-800\"\n                        }`}\n                      >\n                        {campaign.status}\n                      </span>\n                      <span className=\"ml-3 text-sm text-gray-900\">\n                        Campaign {campaign.campaign_id.slice(0, 8)}\n                      </span>\n                    </div>\n                    <div className=\"mt-1 text-sm text-gray-500\">\n                      {campaign.leads_qualified} qualified • $\n                      {campaign.total_cost.toFixed(2)} cost\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    {new Date(campaign.created_at).toLocaleDateString()}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":4,"duration":0.991},
{"type":"mark","name":"lsp.did_open","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","languageId":"typescript","version":1,"text":"import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport type { BusinessLead, CampaignResult, CampaignStore } from \"../types\";\n\ninterface CampaignActions {\n  addCampaign: (campaign: CampaignResult) => void;\n  updateCampaign: (\n    campaignId: string,\n    updates: Partial<CampaignResult>\n  ) => void;\n  setCurrentCampaign: (campaign: CampaignResult | null) => void;\n  addLeads: (leads: BusinessLead[]) => void;\n  updateLead: (leadId: string, updates: Partial<BusinessLead>) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearLeads: () => void;\n  reset: () => void;\n}\n\nconst initialState: CampaignStore = {\n  campaigns: [],\n  currentCampaign: null,\n  leads: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const useCampaignStore = create<CampaignStore & CampaignActions>()(\n  persist(\n    (set) => ({\n      ...initialState,\n\n      addCampaign: (campaign) =>\n        set((state) => ({\n          campaigns: [campaign, ...state.campaigns],\n        })),\n\n      updateCampaign: (campaignId, updates) =>\n        set((state) => ({\n          campaigns: state.campaigns.map((c) =>\n            c.campaign_id === campaignId ? { ...c, ...updates } : c\n          ),\n          currentCampaign:\n            state.currentCampaign?.campaign_id === campaignId\n              ? { ...state.currentCampaign, ...updates }\n              : state.currentCampaign,\n        })),\n\n      setCurrentCampaign: (campaign) => set({ currentCampaign: campaign }),\n\n      addLeads: (leads) =>\n        set((state) => ({\n          leads: [...state.leads, ...leads],\n        })),\n\n      updateLead: (leadId, updates) =>\n        set((state) => ({\n          leads: state.leads.map((l) =>\n            l.id === leadId ? { ...l, ...updates } : l\n          ),\n        })),\n\n      setLoading: (loading) => set({ isLoading: loading }),\n\n      setError: (error) => set({ error }),\n\n      clearLeads: () => set({ leads: [] }),\n\n      reset: () => set(initialState),\n    }),\n    {\n      name: \"campaign-store\",\n      partialize: (state) => ({\n        campaigns: state.campaigns,\n        leads: state.leads,\n      }),\n    }\n  )\n);\n"}}},
{"type":"measure","name":"lsp.did_open","count":5,"duration":0.659},
{"type":"mark","name":"lsp.did_open","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx","languageId":"typescriptreact","version":1,"text":"import React, { ReactNode } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst navigation = [\n  { name: \"Discovery\", href: \"/\", icon: \"🔍\" },\n  { name: \"Dashboard\", href: \"/dashboard\", icon: \"📊\" },\n];\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Yellow Header */}\n      <div className=\"bg-yellow-400 px-6 py-4\">\n        <div className=\"flex items-center justify-center\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white text-sm\">✓</span>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">PROSPECTPRO</h1>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex\">\n            {navigation.map((item) => {\n              const isActive = location.pathname === item.href;\n              return (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center space-x-2 px-6 py-4 border-b-2 text-sm font-medium ${\n                    isActive\n                      ? \"border-blue-500 text-blue-600 bg-blue-50\"\n                      : \"border-transparent text-gray-500 hover:text-gray-700\"\n                  }`}\n                >\n                  <span>{item.icon}</span>\n                  <span>{item.name}</span>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <main className=\"max-w-4xl mx-auto p-6\">{children}</main>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":6,"duration":0.47},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":2,"duration":0.044},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":3,"duration":0.043},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":4,"duration":0.077},
{"type":"mark","name":"lsp.did_open","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useState } from \"react\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\n\nconst businessCategories = [\n  \"Professional Services\",\n  \"Financial Services\",\n  \"Healthcare & Medical\",\n  \"Personal Care & Beauty\",\n  \"Home & Property Services\",\n  \"Automotive Services\",\n  \"Food & Dining\",\n  \"Retail & Shopping\",\n  \"Technology & IT Services\",\n  \"Education & Training\",\n  \"Entertainment & Recreation\",\n  \"Hospitality & Lodging\",\n  \"Transportation & Transit\",\n  \"Religious & Community\",\n  \"Government & Public Services\",\n];\n\nconst businessTypesByCategory: Record<string, string[]> = {\n  \"Professional Services\": [\n    \"Accounting\",\n    \"Lawyer\",\n    \"Attorney\",\n    \"Consultant\",\n    \"Real Estate Agency\",\n    \"Insurance Agency\",\n    \"Corporate Office\",\n    \"Business Center\",\n    \"Financial Advisor\",\n    \"Tax Preparation\",\n    \"Notary\",\n    \"Employment Agency\",\n    \"Marketing Agency\",\n    \"Advertising Agency\",\n    \"Architecture Firm\",\n    \"Engineering Office\",\n    \"Recruiter\",\n  ],\n  \"Financial Services\": [\n    \"Bank\",\n    \"Credit Union\",\n    \"Atm\",\n    \"Mortgage Broker\",\n    \"Investment Firm\",\n    \"Stock Broker\",\n    \"Cryptocurrency Exchange\",\n    \"Check Cashing Service\",\n    \"Money Transfer Service\",\n    \"Payday Lender\",\n    \"Financial Planner\",\n  ],\n  \"Healthcare & Medical\": [\n    \"Doctor\",\n    \"Dentist\",\n    \"Hospital\",\n    \"Pharmacy\",\n    \"Drugstore\",\n    \"Chiropractor\",\n    \"Physiotherapist\",\n    \"Dental Clinic\",\n    \"Medical Lab\",\n    \"Veterinary Care\",\n    \"Wellness Center\",\n    \"Skin Care Clinic\",\n    \"Optical Clinic\",\n    \"Mental Health Clinic\",\n    \"Urgent Care\",\n    \"Medical Center\",\n    \"Health Insurance Office\",\n    \"Medical Equipment Supplier\",\n    \"Optometrist\",\n    \"Orthodontist\",\n    \"Psychologist\",\n    \"Psychiatrist\",\n    \"Acupuncture Clinic\",\n    \"Physical Therapy\",\n    \"Occupational Therapist\",\n    \"Speech Therapist\",\n  ],\n  \"Personal Care & Beauty\": [\n    \"Hair Salon\",\n    \"Hair Care\",\n    \"Beauty Salon\",\n    \"Barber Shop\",\n    \"Nail Salon\",\n    \"Spa\",\n    \"Massage\",\n    \"Beautician\",\n    \"Makeup Artist\",\n    \"Body Art Service\",\n    \"Tanning Studio\",\n    \"Sauna\",\n    \"Tattoo Parlor\",\n    \"Piercing Shop\",\n    \"Waxing Salon\",\n    \"Eyebrow Threading\",\n    \"Cosmetics Store\",\n    \"Day Spa\",\n    \"Facial Spa\",\n  ],\n  \"Home & Property Services\": [\n    \"Electrician\",\n    \"Plumber\",\n    \"Painter\",\n    \"Roofing Contractor\",\n    \"General Contractor\",\n    \"Locksmith\",\n    \"Moving Company\",\n    \"Laundry\",\n    \"Dry Cleaning\",\n    \"Storage\",\n    \"Hvac Contractor\",\n    \"Landscaping\",\n    \"Pest Control\",\n    \"Cleaning Service\",\n    \"Home Inspector\",\n    \"Flooring Contractor\",\n    \"Handyman\",\n    \"Property Management\",\n    \"Gardener\",\n    \"Pool Service\",\n    \"Window Cleaning\",\n    \"Carpet Cleaning\",\n    \"Appliance Repair\",\n    \"Fence Contractor\",\n    \"Gutter Service\",\n  ],\n  \"Automotive Services\": [\n    \"Car Repair\",\n    \"Car Wash\",\n    \"Car Dealer\",\n    \"Car Rental\",\n    \"Gas Station\",\n    \"Electric Vehicle Charging Station\",\n    \"Auto Parts Store\",\n    \"Tire Shop\",\n    \"Auto Body Shop\",\n    \"Motorcycle Dealer\",\n    \"Truck Dealer\",\n    \"Rv Dealer\",\n    \"Automotive Glass Service\",\n    \"Oil Change Service\",\n    \"Towing Service\",\n    \"Auto Detailing\",\n    \"Smog Check Station\",\n    \"Transmission Shop\",\n  ],\n  \"Food & Dining\": [\n    \"Restaurant\",\n    \"Cafe\",\n    \"Bakery\",\n    \"Bar\",\n    \"Fast Food Restaurant\",\n    \"Pizza Restaurant\",\n    \"Chinese Restaurant\",\n    \"Mexican Restaurant\",\n    \"Italian Restaurant\",\n    \"Japanese Restaurant\",\n    \"Indian Restaurant\",\n    \"Meal Delivery\",\n    \"Meal Takeaway\",\n    \"Catering Service\",\n    \"Pub\",\n    \"Wine Bar\",\n    \"Cocktail Bar\",\n    \"Coffee Shop\",\n    \"Ice Cream Shop\",\n    \"Food Court\",\n    \"Donut Shop\",\n    \"Deli\",\n    \"Steakhouse\",\n    \"Sushi Restaurant\",\n    \"Seafood Restaurant\",\n    \"Burger Joint\",\n    \"Taco Place\",\n    \"Food Truck\",\n    \"Brewery\",\n    \"Distillery\",\n    \"Winery\",\n    \"Juice Bar\",\n    \"Smoothie Shop\",\n    \"Tea House\",\n    \"Dessert Shop\",\n    \"Sandwich Shop\",\n    \"Barbecue Restaurant\",\n    \"Brunch Restaurant\",\n    \"Buffet\",\n    \"Food Stand\",\n  ],\n  \"Retail & Shopping\": [\n    \"Clothing Store\",\n    \"Shoe Store\",\n    \"Electronics Store\",\n    \"Furniture Store\",\n    \"Home Goods Store\",\n    \"Jewelry Store\",\n    \"Book Store\",\n    \"Gift Shop\",\n    \"Department Store\",\n    \"Shopping Mall\",\n    \"Supermarket\",\n    \"Grocery Store\",\n    \"Convenience Store\",\n    \"Pet Store\",\n    \"Sporting Goods Store\",\n    \"Bicycle Store\",\n    \"Toy Store\",\n    \"Hardware Store\",\n    \"Garden Center\",\n    \"Liquor Store\",\n    \"Music Store\",\n    \"Art Supply Store\",\n    \"Office Supply Store\",\n    \"Optical Store\",\n    \"Antique Shop\",\n    \"Thrift Store\",\n    \"Hobby Shop\",\n    \"Vape Shop\",\n    \"Tobacco Shop\",\n    \"Florist\",\n    \"Craft Store\",\n    \"Party Supply Store\",\n    \"Dollar Store\",\n    \"Discount Store\",\n    \"Outlet Store\",\n    \"Boutique\",\n    \"Second Hand Store\",\n  ],\n  \"Technology & IT Services\": [\n    \"Cell Phone Store\",\n    \"Telecommunications Service Provider\",\n    \"Internet Cafe\",\n    \"Computer Repair\",\n    \"It Services\",\n    \"Software Company\",\n    \"Data Center\",\n    \"Co-Working Space\",\n    \"Tech Support\",\n    \"Web Design\",\n    \"App Development\",\n    \"Cybersecurity Firm\",\n    \"Managed Services Provider\",\n  ],\n  \"Education & Training\": [\n    \"School\",\n    \"University\",\n    \"Primary School\",\n    \"Secondary School\",\n    \"Preschool\",\n    \"Library\",\n    \"Summer Camp Organizer\",\n    \"Tutoring Center\",\n    \"Vocational School\",\n    \"College\",\n    \"Driving School\",\n    \"Language School\",\n    \"Music School\",\n    \"Art School\",\n    \"Dance Studio\",\n    \"Cooking School\",\n    \"Training Center\",\n    \"Daycare\",\n    \"Kindergarten\",\n    \"Charter School\",\n    \"Private School\",\n    \"Public School\",\n    \"Community College\",\n    \"Technical School\",\n  ],\n  \"Entertainment & Recreation\": [\n    \"Event Venue\",\n    \"Wedding Venue\",\n    \"Banquet Hall\",\n    \"Movie Theater\",\n    \"Bowling Alley\",\n    \"Amusement Park\",\n    \"Casino\",\n    \"Night Club\",\n    \"Tourist Attraction\",\n    \"Museum\",\n    \"Zoo\",\n    \"Aquarium\",\n    \"Park\",\n    \"Sports Complex\",\n    \"Gym\",\n    \"Fitness Center\",\n    \"Yoga Studio\",\n    \"Golf Course\",\n    \"Tennis Court\",\n    \"Swimming Pool\",\n    \"Arcade\",\n    \"Karaoke Venue\",\n    \"Comedy Club\",\n    \"Theater\",\n    \"Concert Hall\",\n    \"Art Gallery\",\n    \"Botanical Garden\",\n    \"Beach\",\n    \"Ski Resort\",\n    \"Marina\",\n    \"Stadium\",\n    \"Arena\",\n    \"Convention Center\",\n    \"Escape Room\",\n    \"Paintball\",\n    \"Trampoline Park\",\n    \"Mini Golf\",\n    \"Rock Climbing Gym\",\n  ],\n  \"Hospitality & Lodging\": [\n    \"Hotel\",\n    \"Motel\",\n    \"Resort\",\n    \"Bed And Breakfast\",\n    \"Hostel\",\n    \"Vacation Rental\",\n    \"Campground\",\n    \"Rv Park\",\n    \"Inn\",\n    \"Lodge\",\n    \"Extended Stay Hotel\",\n    \"Boutique Hotel\",\n    \"Guest House\",\n  ],\n  \"Transportation & Transit\": [\n    \"Airport\",\n    \"Train Station\",\n    \"Bus Station\",\n    \"Subway Station\",\n    \"Taxi Stand\",\n    \"Parking Lot\",\n    \"Parking Garage\",\n    \"Ferry Terminal\",\n    \"Bike Rental\",\n    \"Scooter Rental\",\n    \"Limousine Service\",\n    \"Shuttle Service\",\n    \"Travel Agency\",\n    \"Bus Tour Agency\",\n    \"Cruise Agency\",\n    \"Car Sharing\",\n    \"Ride Share Location\",\n    \"Truck Stop\",\n    \"Rest Area\",\n  ],\n  \"Religious & Community\": [\n    \"Church\",\n    \"Mosque\",\n    \"Synagogue\",\n    \"Temple\",\n    \"Religious Center\",\n    \"Community Center\",\n    \"Non-Profit Organization\",\n    \"Social Club\",\n    \"Civic Organization\",\n    \"Funeral Home\",\n    \"Cemetery\",\n    \"Crematorium\",\n    \"Place Of Worship\",\n    \"Spiritual Center\",\n    \"Meditation Center\",\n  ],\n  \"Government & Public Services\": [\n    \"City Hall\",\n    \"Courthouse\",\n    \"Police Station\",\n    \"Fire Station\",\n    \"Post Office\",\n    \"Embassy\",\n    \"Consulate\",\n    \"Dmv\",\n    \"Public Library\",\n    \"Public School\",\n    \"Government Office\",\n    \"Social Services Office\",\n    \"Municipal Building\",\n    \"County Office\",\n    \"Public Works\",\n    \"Tax Office\",\n    \"Passport Office\",\n    \"Voter Registration Office\",\n  ],\n};\n\nexport const BusinessDiscovery: React.FC = () => {\n  const { startDiscovery, isDiscovering, progress, error } =\n    useBusinessDiscovery();\n\n  const [selectedCategory, setSelectedCategory] = useState(\n    \"Home & Property Services\"\n  );\n  const [selectedBusinessType, setSelectedBusinessType] =\n    useState(\"Electrician\");\n  const [keywords, setKeywords] = useState(\"\");\n  const [location, setLocation] = useState(\"New York, NY\");\n  const [searchRadius, setSearchRadius] = useState(\"10 miles\");\n  const [expandGeography, setExpandGeography] = useState(false);\n  const [numberOfLeads, setNumberOfLeads] = useState(3);\n\n  // Verification options\n  const [chamberVerification, setChamberVerification] = useState(true);\n  const [tradeAssociation, setTradeAssociation] = useState(true);\n  const [professionalLicense, setProfessionalLicense] = useState(true);\n  const [apolloDiscovery, setApolloDiscovery] = useState(false);\n\n  const availableBusinessTypes =\n    businessTypesByCategory[selectedCategory] || [];\n\n  const handleSearch = () => {\n    if (!location.trim()) {\n      alert(\"Please enter a location\");\n      return;\n    }\n\n    const config = {\n      search_terms: `${selectedBusinessType} ${keywords}`.trim(),\n      location: location.trim(),\n      business_type: selectedBusinessType,\n      budget_limit: apolloDiscovery\n        ? numberOfLeads * 1.05\n        : numberOfLeads * 0.14,\n      max_results: numberOfLeads * 3, // Search for more to get the requested amount\n      include_email_validation: apolloDiscovery,\n      include_website_validation: true,\n      min_confidence_score: 70,\n      chamber_verification: chamberVerification,\n      trade_association: tradeAssociation,\n      professional_license: professionalLicense,\n      apollo_discovery: apolloDiscovery,\n    };\n\n    console.log(\"🚀 Starting discovery with config:\", config);\n    startDiscovery(config);\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm\">\n      <div className=\"p-6 space-y-6\">\n        {/* Business Category */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Business Category\n          </label>\n          <select\n            value={selectedCategory}\n            onChange={(e) => {\n              setSelectedCategory(e.target.value);\n              const types = businessTypesByCategory[e.target.value];\n              if (types && types.length > 0) {\n                setSelectedBusinessType(types[0]);\n              }\n            }}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          >\n            {businessCategories.map((category) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Business Type */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Business Type\n          </label>\n          <select\n            value={selectedBusinessType}\n            onChange={(e) => setSelectedBusinessType(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          >\n            {availableBusinessTypes.map((type) => (\n              <option key={type} value={type}>\n                {type}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Additional Keywords */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Additional Keywords (Optional)\n          </label>\n          <input\n            type=\"text\"\n            value={keywords}\n            onChange={(e) => setKeywords(e.target.value)}\n            placeholder=\"e.g., luxury, organic, 24-hour (comma-separated)\"\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Add comma-separated keywords to refine your search\n          </p>\n        </div>\n\n        {/* Location */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Location\n          </label>\n          <input\n            type=\"text\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            placeholder=\"e.g., San Francisco, CA or New York, NY\"\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-blue-50\"\n          />\n\n          <div className=\"mt-4 space-y-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Search Radius:\n              </label>\n              <select\n                value={searchRadius}\n                onChange={(e) => setSearchRadius(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"5 miles\">5 miles</option>\n                <option value=\"10 miles\">10 miles</option>\n                <option value=\"25 miles\">25 miles</option>\n                <option value=\"50 miles\">50 miles</option>\n                <option value=\"100 miles\">100 miles</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"expandGeography\"\n                checked={expandGeography}\n                onChange={(e) => setExpandGeography(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"expandGeography\"\n                className=\"ml-2 text-sm text-gray-700\"\n              >\n                Expand geography automatically if initial results are limited\n              </label>\n            </div>\n          </div>\n        </div>\n\n        {/* Verification Sources */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n            Contact Verification Sources\n          </label>\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"chamberOfCommerce\"\n                checked={chamberVerification}\n                onChange={(e) => setChamberVerification(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"chamberOfCommerce\"\n                className=\"ml-2 text-sm text-gray-700\"\n              >\n                Chamber of Commerce Directory{\" \"}\n                <span className=\"text-green-600 font-medium\">(+15 pts)</span>\n              </label>\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"tradeAssociation\"\n                checked={tradeAssociation}\n                onChange={(e) => setTradeAssociation(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"tradeAssociation\"\n                className=\"ml-2 text-sm text-gray-700\"\n              >\n                Trade Association Membership{\" \"}\n                <span className=\"text-green-600 font-medium\">(+15-20 pts)</span>\n              </label>\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"professionalLicense\"\n                checked={professionalLicense}\n                onChange={(e) => setProfessionalLicense(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"professionalLicense\"\n                className=\"ml-2 text-sm text-gray-700\"\n              >\n                Professional License Verification{\" \"}\n                <span className=\"text-green-600 font-medium\">(+25 pts)</span>\n              </label>\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"apolloDiscovery\"\n                checked={apolloDiscovery}\n                onChange={(e) => setApolloDiscovery(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"apolloDiscovery\"\n                className=\"ml-2 text-sm text-gray-700\"\n              >\n                Apollo Executive Discovery{\" \"}\n                <span className=\"text-green-600 font-medium\">\n                  (+30 pts, $1.00 per contact)\n                </span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        {/* Number of Leads */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Number of Leads\n          </label>\n          <div className=\"flex items-center space-x-4\">\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={numberOfLeads}\n              onChange={(e) => setNumberOfLeads(parseInt(e.target.value))}\n              className=\"flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\n              style={{\n                background: `linear-gradient(to right, #f59e0b 0%, #f59e0b ${\n                  numberOfLeads * 10\n                }%, #e5e7eb ${numberOfLeads * 10}%, #e5e7eb 100%)`,\n              }}\n            />\n            <div className=\"bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium min-w-fit\">\n              {numberOfLeads} leads\n            </div>\n          </div>\n        </div>\n\n        {/* Verification Sources */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-4\">\n            Verification Sources\n          </label>\n          <div className=\"space-y-4\">\n            {/* Chamber of Commerce */}\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n              <div>\n                <div className=\"text-sm font-medium text-gray-900\">\n                  Chamber of Commerce Verification\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Validate membership and contact details from chamber\n                  directories\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-500\">Auto</span>\n                <span className=\"text-xs font-medium text-green-600\">\n                  +15 pts\n                </span>\n              </div>\n            </div>\n\n            {/* Trade Association */}\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n              <div>\n                <div className=\"text-sm font-medium text-gray-900\">\n                  Trade Association Verification\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Cross-reference with industry association directories (Spa,\n                  Beauty, Professional)\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-500\">Auto</span>\n                <span className=\"text-xs font-medium text-green-600\">\n                  +15-20 pts\n                </span>\n              </div>\n            </div>\n\n            {/* Professional License */}\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n              <div>\n                <div className=\"text-sm font-medium text-gray-900\">\n                  Professional License Verification\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Verify with state licensing boards (CPA, Healthcare, Legal)\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-500\">Auto</span>\n                <span className=\"text-xs font-medium text-green-600\">\n                  +25 pts\n                </span>\n              </div>\n            </div>\n\n            {/* Apollo Discovery */}\n            <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-md border border-blue-200\">\n              <div className=\"flex-1\">\n                <div className=\"text-sm font-medium text-gray-900\">\n                  Apollo Owner/Executive Discovery\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Direct owner and executive email verification ($1.00 per\n                  verified contact)\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"apolloDiscovery\"\n                  checked={apolloDiscovery}\n                  onChange={(e) => setApolloDiscovery(e.target.checked)}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-xs text-blue-600 font-medium\">\n                  Premium\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-3 text-xs text-gray-600\">\n            &gt; Find verified owner and executive contacts with email/LinkedIn\n            profiles $1.00 per verified contact +30 confidence boost\n          </div>\n        </div>\n\n        {/* Estimated Cost */}\n        <div className=\"bg-gray-50 p-4 rounded-md\">\n          <h3 className=\"text-sm font-medium text-gray-900 mb-2\">\n            Estimated Cost\n          </h3>\n          <div className=\"text-2xl font-bold text-gray-900\">\n            $\n            {apolloDiscovery\n              ? (numberOfLeads * 1.05).toFixed(2)\n              : (numberOfLeads * 0.14).toFixed(2)}\n          </div>\n        </div>\n\n        {/* Start Discovery Button */}\n        <div className=\"pt-4\">\n          <button\n            type=\"button\"\n            onClick={handleSearch}\n            disabled={isDiscovering}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {isDiscovering ? (\n              <>\n                <svg\n                  className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle\n                    className=\"opacity-25\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"4\"\n                  ></circle>\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  ></path>\n                </svg>\n                Discovering ({progress}%)\n              </>\n            ) : (\n              \"🚀 Search Businesses\"\n            )}\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-md\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg\n                  className=\"h-5 w-5 text-red-400\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">\n                  Discovery Failed\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  <p>\n                    {error instanceof Error ? error.message : String(error)}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":7,"duration":4.881},
{"type":"mark","name":"lsp.did_open","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","languageId":"typescript","version":1,"text":"import { createClient } from \"@supabase/supabase-js\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessDiscoveryResponse, CampaignConfig } from \"../types\";\n\n// Supabase configuration\nconst supabaseUrl = \"https://sriycekxdqnesdsgwiuc.supabase.co\";\nconst supabaseAnonKey =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI\";\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nexport const useBusinessDiscovery = () => {\n  const { addCampaign, setCurrentCampaign, addLeads, setLoading, setError } =\n    useCampaignStore();\n  const [progress, setProgress] = useState(0);\n\n  const discoveryMutation = useMutation({\n    mutationFn: async (\n      config: CampaignConfig\n    ): Promise<BusinessDiscoveryResponse> => {\n      setLoading(true);\n      setError(null);\n      setProgress(10);\n\n      try {\n        console.log(\"🚀 Starting business discovery with config:\", config);\n\n        const { data, error } = await supabase.functions.invoke(\n          \"business-discovery-optimized\",\n          {\n            body: {\n              businessType: config.search_terms,\n              location: config.location,\n              maxResults: config.max_results,\n              budgetLimit: config.budget_limit,\n              requireCompleteContacts: false,\n              minConfidenceScore: config.min_confidence_score,\n              apolloDiscovery: config.include_email_validation,\n              chamberVerification: true,\n              professionalLicensing: true,\n              tradeAssociations: true,\n            },\n            headers: {\n              Authorization: `Bearer ${supabaseAnonKey}`,\n              apikey: supabaseAnonKey,\n            },\n          }\n        );\n\n        if (error) {\n          console.error(\"Edge Function error:\", error);\n          throw new Error(`Discovery failed: ${error.message}`);\n        }\n\n        if (!data) {\n          throw new Error(\"No data returned from discovery\");\n        }\n\n        console.log(\"✅ Discovery response:\", data);\n        setProgress(80);\n\n        // Transform the response to match expected interface\n        const transformedData: BusinessDiscoveryResponse = {\n          campaign_id:\n            data.campaignId || Math.random().toString(36).substr(2, 9),\n          total_found: data.results?.totalFound || 0,\n          qualified_count: data.results?.qualified || 0,\n          total_cost: data.costs?.totalCost || 0,\n          processing_time: data.performance?.processingTime || \"0s\",\n          businesses: (data.leads || []).map((lead: any) => ({\n            id: Math.random().toString(36).substr(2, 9),\n            business_name: lead.businessName || \"Unknown Business\",\n            address: lead.address,\n            phone: lead.phone,\n            website: lead.website,\n            email: lead.email,\n            confidence_score: lead.optimizedScore || lead.confidenceScore || 0,\n            validation_status: \"validated\" as const,\n            created_at: new Date().toISOString(),\n          })),\n        };\n\n        setProgress(100);\n        return transformedData;\n      } catch (error) {\n        console.error(\"Business discovery error:\", error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    },\n    onSuccess: (data: BusinessDiscoveryResponse) => {\n      // Create campaign record\n      const campaign = {\n        campaign_id: data.campaign_id,\n        status: \"completed\" as const,\n        progress: 100,\n        total_cost: data.total_cost,\n        leads_found: data.total_found,\n        leads_qualified: data.qualified_count,\n        leads_validated: data.businesses.filter(\n          (b: any) => b.validation_status === \"validated\"\n        ).length,\n        created_at: new Date().toISOString(),\n        completed_at: new Date().toISOString(),\n      };\n\n      addCampaign(campaign);\n      setCurrentCampaign(campaign);\n      addLeads(data.businesses);\n      setProgress(100);\n    },\n    onError: (error: any) => {\n      setError(error instanceof Error ? error.message : \"Discovery failed\");\n      setProgress(0);\n    },\n  });\n\n  return {\n    startDiscovery: discoveryMutation.mutate,\n    isDiscovering: discoveryMutation.isPending,\n    progress,\n    error: discoveryMutation.error,\n    data: discoveryMutation.data,\n  };\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":5,"duration":0.065},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":6,"duration":0.058},
{"type":"measure","name":"lsp.did_open","count":8,"duration":3.061},
Server ready.
{"type":"mark","name":"lsp.did_open","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json","languageId":"jsonc","version":1,"text":"{\r\n  \"name\": \"ProspectPro - Verified Business Intelligence\",\r\n  \"image\": \"mcr.microsoft.com/devcontainers/javascript-node:20\",\r\n  \"features\": {\r\n    \"ghcr.io/devcontainers/features/git:1\": {}\r\n  },\r\n  \"customizations\": {\r\n    \"vscode\": {\r\n      \"extensions\": [\r\n        // Core Development\r\n        \"denoland.vscode-deno\",\r\n        \"supabase.supabase-vscode\",\r\n        \"dbaeumer.vscode-eslint\",\r\n        \"esbenp.prettier-vscode\",\r\n\r\n        // Productivity\r\n        \"eamodio.gitlens\",\r\n        \"github.copilot\",\r\n        \"github.copilot-chat\",\r\n        \"streetsidesoftware.code-spell-checker\",\r\n        \"wayou.vscode-todo-highlight\",\r\n\r\n        // API Development\r\n        \"humao.rest-client\",\r\n        \"rangav.vscode-thunder-client\",\r\n\r\n        // Database Tools\r\n        \"mtxr.sqltools\",\r\n        \"mtxr.sqltools-driver-pg\",\r\n\r\n        // Security\r\n        \"snyk-security.snyk-vulnerability-scanner\",\r\n\r\n        // Performance\r\n        \"wix.vscode-import-cost\",\r\n\r\n        // Documentation\r\n        \"bierner.markdown-preview-github-styles\",\r\n\r\n        // Development Theme & Visual Organization\r\n        \"deepforest.theme\", // Vira Deepforest theme for organized development\r\n        \"vscode-icons-team.vscode-icons\" // Better file icons for organization\r\n      ],\r\n      \"settings\": {\r\n        \"terminal.integrated.defaultProfile.linux\": \"bash\",\r\n        \"deno.enable\": true,\r\n        \"deno.enablePaths\": [\"supabase/functions\"],\r\n        \"git.autofetch\": true,\r\n        \"git.confirmSync\": false,\r\n        \"git.enableSmartCommit\": true,\r\n\r\n        // Editor Performance Settings - Enhanced for Development\r\n        \"editor.minimap.enabled\": false,\r\n        \"editor.renderWhitespace\": \"none\",\r\n        \"editor.renderControlCharacters\": false,\r\n        \"workbench.colorTheme\": \"Vira Deepforest\", // Development-specific theme\r\n        \"workbench.iconTheme\": \"vscode-icons\", // Better file icons for organization\r\n        \"workbench.list.smoothScrolling\": false,\r\n        \"workbench.tree.renderIndentGuides\": \"none\",\r\n        \"workbench.editor.closeOnFileDelete\": true,\r\n\r\n        // Development-specific UI enhancements\r\n        \"workbench.colorCustomizations\": {\r\n          \"[Vira Deepforest]\": {\r\n            \"titleBar.activeBackground\": \"#1a4d3a\",\r\n            \"titleBar.activeForeground\": \"#ffffff\",\r\n            \"statusBar.background\": \"#1a4d3a\",\r\n            \"statusBar.foreground\": \"#ffffff\",\r\n            \"activityBar.background\": \"#0d2818\",\r\n            \"panel.background\": \"#0a1f14\"\r\n          }\r\n        },\r\n        \"workbench.settings.editor\": \"json\",\r\n        \"breadcrumbs.enabled\": true,\r\n\r\n        // File System Performance\r\n        \"files.watcherExclude\": {\r\n          \"**/*.log\": true,\r\n          \"**/*.tmp\": true,\r\n          \"**/node_modules/**\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git/**\": true,\r\n          \"**/logs/**\": true\r\n        },\r\n\r\n        // Search Performance\r\n        \"search.exclude\": {\r\n          \"**/node_modules\": true,\r\n          \"**/*.log\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git\": true\r\n        },\r\n        \"search.searchOnType\": false,\r\n\r\n        // Copilot Optimization\r\n        \"github.copilot.chat.historyCount\": 8,\r\n        \"github.copilot.chat.welcomeMessage\": \"none\",\r\n        \"github.copilot.chat.completionPhrasesEnabled\": false,\r\n        \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\r\n\r\n        // Terminal Settings - Development Enhanced\r\n        \"terminal.integrated.gpuAcceleration\": \"on\",\r\n        \"terminal.integrated.scrollback\": 1000,\r\n        \"terminal.integrated.fontFamily\": \"Consolas, 'Courier New', monospace\",\r\n        \"terminal.integrated.fontSize\": 13,\r\n\r\n        // Development Environment Indicators\r\n        \"window.title\": \"🎯 ${folderName} - Verified Business Intelligence ${separator} ${activeEditorShort}\",\r\n        \"workbench.startupEditor\": \"welcomePageInEmptyWorkbench\",\r\n\r\n        // === MCP (Model Context Protocol) Configuration ===\r\n        \"mcp.enable\": true,\r\n        \"mcp.configFile\": \"${workspaceFolder}/.vscode/mcp-config.json\",\r\n\r\n        // API Development Specific Settings\r\n        \"rest-client.enableTelemetry\": false,\r\n        \"files.associations\": {\r\n          \"*.http\": \"http\",\r\n          \"*.rest\": \"http\"\r\n        },\r\n\r\n        // AI-Enhanced Development Settings for Verified Data Integration\r\n        \"ai.contextAware\": true,\r\n        \"ai.projectContext\": {\r\n          \"type\": \"verified-business-intelligence-platform\",\r\n          \"framework\": \"supabase-edge-functions\",\r\n          \"database\": \"supabase-postgresql\",\r\n          \"apis\": [\r\n            \"google-places\",\r\n            \"apollo-contacts\",\r\n            \"chamber-commerce\",\r\n            \"professional-licensing\"\r\n          ],\r\n          \"deployment\": \"supabase-edge-functions\",\r\n          \"dataPolicy\": \"zero-fake-data-verified-contacts-only\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"forwardPorts\": [3000, 5432],\r\n  \"postCreateCommand\": \"bash -lc 'set -e; echo \\\"� Setting up ProspectPro Verified Business Intelligence Environment...\\\"; sudo apt-get update && sudo apt-get install -y docker.io; if [ -f package-lock.json ]; then npm ci; else npm install; fi; npm i supabase --save-dev; npm run mcp:install; npm run mcp:test; echo \\\"✅ Verified data environment ready with zero fake data policy!\\\"; echo \\\"🚀 ProspectPro verified business intelligence development ready\\\"'\",\r\n  \"postStartCommand\": \"bash -c 'echo \\\"� ProspectPro Verified Business Intelligence Started\\\"; echo \\\"Data Policy: Zero Fake Data | Contacts: Verified Only | Architecture: Supabase Edge Functions\\\"; echo \\\"💡 Use Copilot Chat for AI-assisted development with verified data context\\\"'\",\r\n  \"runArgs\": [\"--init\", \"-v\", \"/var/run/docker.sock:/var/run/docker.sock\"],\r\n  \"remoteUser\": \"node\"\r\n}\r\n"}}},
{"type":"measure","name":"lsp.did_open","count":9,"duration":0.086},
{"type":"mark","name":"lsp.did_open","count":10,"args":{"textDocument":{"uri":"file:///home/node/.vscode-remote/data/Machine/settings.json","languageId":"jsonc","version":1,"text":"{\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"text\": \"This dev container includes an up-to-date version of Git, built from source as needed, pre-installed and available on the `PATH`.\"\n    },\n    {\n      \"text\": \"This dev container includes `node`, `npm` and `eslint` pre-installed and available on the `PATH` for Node.js and JavaScript development.\"\n    },\n    {\n      \"text\": \"This dev container includes an up-to-date version of Git, built from source as needed, pre-installed and available on the `PATH`.\"\n    },\n    {\n      \"text\": \"This workspace is in a dev container running on \\\"Debian GNU/Linux 13 (trixie)\\\".\\n\\nUse `\\\"$BROWSER\\\" <url>` to open a webpage in the host's default browser.\\n\\nSome of the command line tools available on the `PATH`: `apt`, `dpkg`, `git`, `curl`, `wget`, `ssh`, `scp`, `rsync`, `gpg`, `ps`, `lsof`, `netstat`, `top`, `tree`, `find`, `grep`, `zip`, `unzip`, `tar`, `gzip`, `bzip2`, `xz`\"\n    }\n  ],\n  \"terminal.integrated.defaultProfile.linux\": \"bash\",\n  \"deno.enable\": true,\n  \"deno.enablePaths\": [\"supabase/functions\"],\n  \"git.autofetch\": true,\n  \"git.confirmSync\": false,\n  \"git.enableSmartCommit\": true,\n  \"editor.minimap.enabled\": false,\n  \"editor.renderWhitespace\": \"none\",\n  \"editor.renderControlCharacters\": false,\n  \"workbench.colorTheme\": \"Vira Deepforest\",\n  \"workbench.iconTheme\": \"vira-icons-teal\",\n  \"workbench.list.smoothScrolling\": false,\n  \"workbench.tree.renderIndentGuides\": \"none\",\n  \"workbench.editor.closeOnFileDelete\": true,\n  \"workbench.colorCustomizations\": {\n    \"[Vira*]\": {\n      \"statusBar.debuggingBackground\": \"#80CBC433\",\n      \"statusBar.debuggingForeground\": \"#80CBC4\",\n      \"toolbar.activeBackground\": \"#80CBC426\",\n      \"button.background\": \"#80CBC4\",\n      \"button.hoverBackground\": \"#80CBC4cc\",\n      \"extensionButton.separator\": \"#80CBC433\",\n      \"extensionButton.background\": \"#80CBC414\",\n      \"extensionButton.foreground\": \"#80CBC4\",\n      \"extensionButton.hoverBackground\": \"#80CBC433\",\n      \"extensionButton.prominentForeground\": \"#80CBC4\",\n      \"extensionButton.prominentBackground\": \"#80CBC414\",\n      \"extensionButton.prominentHoverBackground\": \"#80CBC433\",\n      \"activityBarBadge.background\": \"#80CBC4\",\n      \"activityBar.activeBorder\": \"#80CBC4\",\n      \"activityBarTop.activeBorder\": \"#80CBC4\",\n      \"list.inactiveSelectionIconForeground\": \"#80CBC4\",\n      \"list.activeSelectionForeground\": \"#80CBC4\",\n      \"list.inactiveSelectionForeground\": \"#80CBC4\",\n      \"list.highlightForeground\": \"#80CBC4\",\n      \"sash.hoverBorder\": \"#80CBC480\",\n      \"list.activeSelectionIconForeground\": \"#80CBC4\",\n      \"scrollbarSlider.activeBackground\": \"#80CBC480\",\n      \"editorSuggestWidget.highlightForeground\": \"#80CBC4\",\n      \"textLink.foreground\": \"#80CBC4\",\n      \"progressBar.background\": \"#80CBC4\",\n      \"pickerGroup.foreground\": \"#80CBC4\",\n      \"tab.activeBorder\": \"#80CBC400\",\n      \"tab.activeBorderTop\": \"#80CBC4\",\n      \"tab.unfocusedActiveBorder\": \"#80CBC400\",\n      \"tab.unfocusedActiveBorderTop\": \"#80CBC4\",\n      \"tab.activeModifiedBorder\": \"#80CBC4\",\n      \"notificationLink.foreground\": \"#80CBC4\",\n      \"editorWidget.resizeBorder\": \"#80CBC4\",\n      \"editorWidget.border\": \"#80CBC4\",\n      \"settings.modifiedItemIndicator\": \"#80CBC4\",\n      \"panelTitle.activeBorder\": \"#80CBC4\",\n      \"breadcrumb.activeSelectionForeground\": \"#80CBC4\",\n      \"menu.selectionForeground\": \"#80CBC4\",\n      \"menubar.selectionForeground\": \"#80CBC4\",\n      \"editor.findMatchBorder\": \"#80CBC4\",\n      \"selection.background\": \"#80CBC440\",\n      \"statusBarItem.remoteBackground\": \"#80CBC414\",\n      \"statusBarItem.remoteHoverBackground\": \"#80CBC4\",\n      \"statusBarItem.remoteForeground\": \"#80CBC4\",\n      \"notebook.inactiveFocusedCellBorder\": \"#80CBC480\",\n      \"commandCenter.activeBorder\": \"#80CBC480\",\n      \"chat.slashCommandForeground\": \"#80CBC4\",\n      \"chat.avatarForeground\": \"#80CBC4\",\n      \"activityBarBadge.foreground\": \"#000000\",\n      \"button.foreground\": \"#000000\",\n      \"statusBarItem.remoteHoverForeground\": \"#000000\",\n      \"editorGroupHeader.tabsBackground\": \"#ffffff0a\",\n      \"tab.border\": \"#ffffff01\",\n      \"tab.inactiveBackground\": \"#ffffff01\",\n      \"widget.shadow\": \"#00000000\",\n      \"scrollbar.shadow\": \"#00000000\"\n    },\n    \"[Vira Deepforest]\": {\n      \"titleBar.activeBackground\": \"#1a4d3a\",\n      \"titleBar.activeForeground\": \"#ffffff\",\n      \"statusBar.background\": \"#1a4d3a\",\n      \"statusBar.foreground\": \"#ffffff\",\n      \"activityBar.background\": \"#0d2818\",\n      \"panel.background\": \"#0a1f14\"\n    },\n    \"statusBar.background\": \"#667eea\",\n    \"statusBar.foreground\": \"#ffffff\"\n  },\n  \"workbench.settings.editor\": \"json\",\n  \"breadcrumbs.enabled\": true,\n  \"files.watcherExclude\": {\n    \"**/*.log\": true,\n    \"**/*.tmp\": true,\n    \"**/node_modules/**\": true,\n    \"**/archive/**\": true,\n    \"**/.git/**\": true,\n    \"**/logs/**\": true\n  },\n  \"search.exclude\": {\n    \"**/node_modules\": true,\n    \"**/*.log\": true,\n    \"**/archive/**\": true,\n    \"**/.git\": true\n  },\n  \"search.searchOnType\": false,\n  \"github.copilot.chat.historyCount\": 8,\n  \"github.copilot.chat.welcomeMessage\": \"none\",\n  \"github.copilot.chat.completionPhrasesEnabled\": false,\n  \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\n  \"terminal.integrated.gpuAcceleration\": \"on\",\n  \"terminal.integrated.scrollback\": 1000,\n  \"terminal.integrated.fontFamily\": \"Consolas, 'Courier New', monospace\",\n  \"terminal.integrated.fontSize\": 13,\n  \"window.title\": \"🔨 ${folderName} - ProspectPro Development ${separator} ${activeEditorShort}\",\n  \"workbench.startupEditor\": \"welcomePageInEmptyWorkbench\",\n  \"mcp.enable\": true,\n  \"mcp.configFile\": \"${workspaceFolder}/.vscode/mcp-config.json\",\n  \"rest-client.enableTelemetry\": false,\n  \"files.associations\": {\n    \"*.http\": \"http\",\n    \"*.rest\": \"http\"\n  },\n  \"ai.contextAware\": true,\n  \"ai.projectContext\": {\n    \"type\": \"lead-generation-platform\",\n    \"framework\": \"node-express\",\n    \"database\": \"supabase\",\n    \"apis\": [\"google-places\", \"foursquare\", \"hunter-io\", \"neverbounce\"],\n    \"deployment\": \"docker-compose\",\n    \"monitoring\": \"custom-diagnostics\"\n  },\n  \"snyk.advanced.cliPath\": \"/home/node/.local/share/snyk/vscode-cli/snyk-linux\",\n  \"github.copilot.advanced\": {\n    \"setAutoCompletionTriggerThreshold\": 30\n  }\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":10,"duration":0.091},
{"type":"mark","name":"lsp.did_close","count":1,"args":{"textDocument":{"uri":"file:///home/node/.vscode-remote/data/Machine/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":1,"duration":0.022},
{"type":"mark","name":"lsp.did_open","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","languageId":"json","version":1,"text":"{\n    \"name\": \"prospectpro-mcp-servers\",\n    \"version\": \"2.1.0\",\n    \"description\": \"Consolidated MCP servers for ProspectPro Supabase-First AI development\",\n    \"main\": \"production-server.js\",\n    \"scripts\": {\n        \"start:production\": \"node production-server.js\",\n        \"start:development\": \"node development-server.js\",\n        \"start:troubleshooting\": \"node supabase-troubleshooting-server.js\",\n        \"start:all\": \"concurrently \\\"npm run start:production\\\" \\\"npm run start:development\\\" \\\"npm run start:troubleshooting\\\"\",\n        \"test\": \"node test-servers.js\",\n        \"validate\": \"npm run test && echo '✅ All Supabase MCP servers validated successfully'\",\n        \"install:deps\": \"npm install\",\n        \"debug:anon-key\": \"echo 'Use troubleshooting server: diagnose_anon_key_mismatch tool'\",\n        \"debug:edge-functions\": \"echo 'Use troubleshooting server: test_edge_function tool'\",\n        \"debug:database\": \"echo 'Use troubleshooting server: validate_database_permissions tool'\"\n    },\n    \"dependencies\": {\n        \"@modelcontextprotocol/sdk\": \"^1.18.2\",\n        \"@supabase/supabase-js\": \"^2.58.0\"\n    },\n    \"devDependencies\": {\n        \"concurrently\": \"^8.2.2\"\n    },\n    \"keywords\": [\n        \"mcp\",\n        \"model-context-protocol\",\n        \"ai\",\n        \"prospectpro\",\n        \"supabase\",\n        \"edge-functions\",\n        \"serverless\"\n    ],\n    \"author\": \"Alex Torelli\",\n    \"license\": \"MIT\"\n}"}}},
{"type":"measure","name":"lsp.did_open","count":11,"duration":0.055},
{"type":"mark","name":"lsp.did_open","count":12,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json","languageId":"jsonc","version":1,"text":"{\n  \"window.autoDetectColorScheme\": true,\n  \"github.copilot.nextEditSuggestions.enabled\": true,\n  \"security.workspace.trust.untrustedFiles\": \"open\",\n  \"python.analysis.typeCheckingMode\": \"standard\",\n  \"mssql.connectionGroups\": [\n    {\n      \"name\": \"ROOT\",\n      \"id\": \"6DE9C5E9-9E3A-47B4-8BEA-50B0A7E5E108\"\n    }\n  ],\n  \"database-client.autoSync\": true,\n  \"git.openRepositoryInParentFolders\": \"always\",\n  \"editor.cursorBlinking\": \"expand\",\n  \"editor.wordWrap\": \"on\",\n  \"files.autoSave\": \"onWindowChange\",\n  \"editor.bracketPairColorization.independentColorPoolPerBracketType\": true,\n  \"editor.formatOnSave\": true,\n  \"workbench.iconTheme\": \"vira-icons-teal\",\n  \"mssql.autoDisableNonTSqlLanguageService\": true,\n  \"git.enableSmartCommit\": true,\n  \"git.confirmSync\": false,\n  \"git.autofetch\": true,\n  \"chat.tools.terminal.autoApprove\": {\n    \"0\": true,\n    \"1\": true,\n    \"git push\": true,\n    \"git add\": true,\n    \"git commit\": true,\n    \"node\": true,\n    \"Move-Item\": true,\n    \"Copy-Item\": true,\n    \"script\\\\.\": true,\n    \"old\": true,\n    \"temp\": true,\n    \"backup\\\"\": true,\n    \"nslookup\": true,\n    \"Remove-Item\": true,\n    \"Rename-Item\": true,\n    \"Invoke-WebRequest\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQ3MTgzOTksImV4cCI6MjA0MDI5NDM5OX0.TZ9kR6FfNvnZMJF9P6NX6rYSVfM3LRw7BfGK7U6YXwc\\\"}\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTcyNDcxODM5OSwiZXhwIjoyMDQwMjk0Mzk5fQ.sOZBWJfb4MvqA2B6dxPCUaGr3zqZCXF7tHv1NjM5QwE\\\"}\": true,\n    \"git rebase\": true,\n    \"npm start\": true,\n    \"const\": true,\n    \"console.log('✅\": true,\n    \"\\\"\": true,\n    \"try\": true,\n    \"}\": true,\n    \"}\\\"\": true,\n    \"powershell\": true,\n    \"Test-Path\": true,\n    \"Start-Process\": true,\n    \"git rm\": true,\n    \"git reset\": true,\n    \"git commit -m \\\"fix: resolve Railway deployment crashes with robust import patterns\\n\\n- Fix api/dashboard-export.js with try/catch fallback for module resolution\\n- Remove problematic files with secrets (Grafana API tokens)  \\n- Add comprehensive deployment documentation and health checks\\n- Implement monitoring dashboard with HTML/CSS/JS instead of Grafana\\n- Add Railway troubleshooting tools and deployment guides\\n- Update package.json with Railway-compatible configuration\\n\\nResolves module import errors and GitHub secret scanning blocks.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"(async\": true,\n    \"{\": true,\n    \"if\": true,\n    \"console.log('📊\": true,\n    \"git commit -m \\\"optimize: leverage Railway analytics, simplify monitoring architecture\\n\\n🎯 Strategic Changes:\\n- Replace complex custom monitoring with Railway's built-in analytics\\n- Focus only on ProspectPro business metrics (campaigns, leads, costs)\\n- Remove redundant infrastructure monitoring (Railway handles this)\\n- Simplify dashboard to essential business KPIs only\\n\\n✅ Benefits:\\n- 70% reduction in monitoring code complexity\\n- Better reliability using Railway's native capabilities\\n- Focus on business value rather than infrastructure metrics\\n- Faster deployment and fewer moving parts\\n\\n🚀 Railway Integration:\\n- Use Railway dashboard for: CPU, Memory, Network, Logs, Uptime\\n- Custom dashboard for: Campaign success, Lead qualification, API costs\\n- Simplified health checks focused on business logic\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm outdated\": true,\n    \"=20.0.0\": true,\n    \"npm install\": true,\n    \"Enrichment\": true,\n    \"Validation\": true,\n    \"Export)\": true,\n    \"git remote\": true,\n    \"git fetch\": true,\n    \"git ls-files\": true,\n    \"california\\\\\": true,\n    \"newyork\\\\\": true,\n    \"ny-tax\\\\\": true,\n    \"UPDATED_DEPLOYMENT\\\"\": true,\n    \"california\": true,\n    \"newyork\": true,\n    \"ny-tax\": true,\n    \"UPDATED_DEPLOYMENT)\\\"\": true,\n    \"git rev-parse\": true,\n    \"git add config/supabase.js server.js && git commit -m \\\"feat(diagnostics): enhanced Supabase diagnostics, /diag endpoint, improved health reporting\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add server.js config/supabase.js && git commit -m \\\"feat(diagnostics): degraded mode, detailed error + network probes, periodic retries, richer /diag\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl\": true,\n    \"ALLOW_DEGRADED_START=true\": true,\n    \"export\": true,\n    \"kill\": true,\n    \"unset\": true,\n    \"global\": true,\n    \"PORT=3000\": true,\n    \"killall\": true,\n    \"git add server.js railway.toml && git commit -m \\\"fix(deployment): bind to 0.0.0.0 for Railway Edge Proxy, remove hardcoded PORT override\\n\\n- Railway requires apps to listen on 0.0.0.0, not localhost\\n- Remove PORT=8080 override in railway.toml to let Railway set it dynamically  \\n- Default to PORT 3000 to match Railway conventions\\n- This should resolve 502 Bad Gateway errors from Railway load balancer\\\" && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=test\": true,\n    \"SUPABASE_URL=https://test.supabase.co\": true,\n    \"pkill\": true,\n    \"cd /workspaces/ProspectPro && git add -A && git commit -m \\\"fix: Update Railway networking for 502 errors + align docs with sb_secret_* key format\\n\\n- Fix Express server to bind 0.0.0.0:PORT (Railway requirement) \\n- Remove hardcoded PORT=8080 from railway.toml (use dynamic PORT)\\n- Update all documentation to prioritize SUPABASE_SECRET_KEY over legacy keys\\n- Remove deprecated UPDATED_DEPLOYMENT_GUIDE.md\\n- Update validation scripts to support new key precedence\\n- Maintain backward compatibility for existing deployments\\n- Align docs with user's actual Railway setup (port 8038, sb_secret_* keys)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add railway.toml && git commit -m \\\"fix: Clean up railway.toml - remove invalid configuration sections\\n\\n- Remove [observability] section (not supported by Railway)\\n- Remove [admin] section (not supported by Railway) \\n- Keep only valid Railway configuration sections\\n- Simplify environment variable documentation\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=https://example.supabase.co\": true,\n    \"RLS\": true,\n    \"service\": true,\n    \"anon\": true,\n    \"publishable)\\\\n-\": true,\n    \"improve\": true,\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql .env.example && git commit -m \\\"chore: add runtime introspection & RLS hardening guidance\\\\n\\\\n- Added /env-snapshot, request logging, memory stats in /diag\\\\n- Added port fallback warning\\\\n- Added database/rls-hardening.sql with policy templates\\\\n- Updated .env.example (avoid PORT on Railway)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql && git commit -m \\\"feat: instrumentation (/env-snapshot /loop-metrics) + RLS hardening script placeholder\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"getLastSupabaseDiagnostics,\": true,\n    \"console.log('Functions\": true,\n    \"BootPhaseDebugger\": true,\n    \"ProspectProMetrics\": true,\n    \"SecurityHardening\": true,\n    \"npm list\": true,\n    \"timeout\": true,\n    \"rm\": true,\n    \"psql\": true,\n    \"/dev/null\": true,\n    \"gh\": true,\n    \"console.log('=====================================================')\": true,\n    \"console.log('')\": true,\n    \"console.log('\": true,\n    \"console.log('🎯\": true,\n    \"console.log('1.\": true,\n    \"console.log('2.\": true,\n    \"console.log('3.\": true,\n    \"console.log('🎉\": true,\n    \"console.log('🔍\": true,\n    \"let\": true,\n    \"//\": true,\n    \"[]).length\": true,\n    \"issues.push(\\\\`⚠️\": true,\n    \"openParens}\": true,\n    \"closeParens}\": true,\n    \"')\": true,\n    \"!lastStatement.startsWith('--'))\": true,\n    \"issues.push('⚠️\": true,\n    \"console.log('❌\": true,\n    \"issues.forEach(issue\": true,\n    \"console.log(issue))\": true,\n    \"issues.push('Unbalanced\": true,\n    \"issues.push('system_settings\": true,\n    \"issues.push('Found\": true,\n    \"mv\": true,\n    \"true\": true,\n    \"createClient\": true,\n    \"console.log('🔗\": true,\n    \"supabase.from('information_schema.tables').select('table_name').limit(1).then(result\": true,\n    \"}).catch(err\": true,\n    \"console.error('❌\": true,\n    \"SUPABASE_URL=https://sriycekxdqnesdsgwiuc.supabase.co\": true,\n    \"git branch\": true,\n    \"git checkout\": true,\n    \".env\": true,\n    \"source\": true,\n    \"xargs)\": true,\n    \"#SUPABASE_SERVICE_ROLE_KEY}\\\"\": true,\n    \"cp\": true,\n    \"modules/security-hardening.js\": true,\n    \"'EOF'\": true,\n    \"class\": true,\n    \"constructor(options\": true,\n    \"})\": true,\n    \"this.options\": true,\n    \"enableSecureHeaders:\": true,\n    \"this.options.adminTokens.add(process.env.PERSONAL_ACCESS_TOKEN)\": true,\n    \"console.log('🛡️\": true,\n    \"app.use((req,\": true,\n    \"res.removeHeader('X-Powered-By')\": true,\n    \"res.setHeader('X-Frame-Options',\": true,\n    \"res.setHeader('X-Content-Type-Options',\": true,\n    \"res.setHeader('X-ProspectPro-Security',\": true,\n    \"next()\": true,\n    \"return\": true,\n    \"req.headers['x-admin-token']\": true,\n    \"!this.options.adminTokens.has(token))\": true,\n    \"error:\": true,\n    \"authenticated:\": true,\n    \"process.env.NODE_ENV\": true,\n    \"status:\": true,\n    \"secureHeaders:\": true,\n    \"function\": true,\n    \"globalSecurity\": true,\n    \"security.applySecurityMiddleware(app)\": true,\n    \"EOF\": true,\n    \"general:\": true,\n    \"res.send\": true,\n    \"=\": true,\n    \"console.warn(`⚠️\": true,\n    \"res.statusCode}\": true,\n    \"req.method}\": true,\n    \"req.path}`)\": true,\n    \"middleware.general.forEach(mw\": true,\n    \"app.use(mw))\": true,\n    \"app.use(this.getSecurityLogger())\": true,\n    \"'https://sriycekxdqnesdsgwiuc.supabase.co'\": true,\n    \"'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY'\": true,\n    \"async\": true,\n    \"data,\": true,\n    \"process.exit(success\": true,\n    \"testConnection\": true,\n    \"testConnection().then(result\": true,\n    \"supabase.auth.getSession().then(result\": true,\n    \"error.message.includes('relation')\": true,\n    \"error.message.includes('does\": true,\n    \"console.log('-\": true,\n    \"require('./config/supabase').testConnection().then(result\": true,\n    \"console.error('Database\": true,\n    \"node -e \\\"console.log('Testing environment...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"require('dotenv').config(); console.log('Testing with dotenv...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result.success ? 'SUCCESS' : 'FAILED', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase.getSupabaseClient().from('campaigns').select('count').limit(1).then(result\": true,\n    \"console.error('Table\": true,\n    \"k.includes('SUPABASE')))\": true,\n    \"result.success)\": true,\n    \"console.error('Test\": true,\n    \"powershell -Command \\\"try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/health' -UseBasicParsing; Write-Host 'Health check: Status' $response.StatusCode; Write-Host 'Response:' $response.Content } catch { Write-Host 'Error:' $_.Exception.Message }\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s http://localhost:3000/health | ConvertFrom-Json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./config/supabase').testConnection().then(r=\": true,\n    \"console.log(JSON.stringify(r,\": true,\n    \"}).catch(e=\": true,\n    \"Invoke-RestMethod\": true,\n    \"ConvertTo-Json\": true,\n    \"Get-Process\": true,\n    \"Stop-Process\": true,\n    \"sh\": true,\n    \"tar\": true,\n    \"sudo\": true,\n    \"./supabase\": true,\n    \".gitignore\": true,\n    \"git commit -m \\\"feat: major refactor - integrate real API pipeline with zero fake data\\n\\n- Fix devcontainer Supabase CLI installation to use official installer\\n- Implement 4-stage lead processing pipeline (Discovery → Enrichment → Validation → Export)  \\n- Add comprehensive real data validation with confidence scoring\\n- Integrate Google Places, Hunter.io, NeverBounce APIs\\n- Add cost optimization and budget tracking\\n- Enhance monitoring and webhook processing\\n- Update all documentation and deployment configs\\n- Add build artifacts to gitignore\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase\": true,\n    \"then\": true,\n    \"console.log('⚠️\": true,\n    \"console.log('💡\": true,\n    \"npm run dev\": true,\n    \"DEBUG=*\": true,\n    \"supabase_cli)\\\"\": true,\n    \"npm i\": true,\n    \"npx\": true,\n    \"git add . && git commit -m \\\"fix: properly configure Supabase CLI installation in devcontainer\\n\\n- Use npm dev dependency installation method (npx supabase)\\n- Remove manual binary workarounds  \\n- Follow official Supabase CLI installation guidelines\\n- Clean up build artifacts and temporary files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git merge\": true,\n    \"newgrp\": true,\n    \"deno\": true,\n    \"docker --version\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"docker ps\": true,\n    \"lsof\": true,\n    \"curl -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"jq\": true,\n    \"sleep 2 && curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"coffee shops\\\", \\\"budgetCents\\\": 50}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"gym\\\", \\\"budgetCents\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 2 && curl -X POST http://localhost:8080 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"restaurants\\\",\\\"location\\\":\\\"San Francisco, CA\\\"}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: implement business discovery Edge Function with local testing\\n\\n✅ Built ProspectPro business discovery Edge Function:\\n- Real API integration with Google Places (production ready)\\n- Zero fake data policy enforced\\n- Confidence scoring for business validation (70%+ threshold)\\n- Cost tracking and optimization ($0.032 per search)\\n- CORS support for cross-origin requests\\n- Comprehensive error handling\\n\\n✅ Created local testing infrastructure:\\n- Standalone test server for development\\n- Mock data pipeline for offline testing\\n- JSON API responses with business metadata\\n- Quality scoring (address, rating, reviews, website presence)\\n\\n✅ Validated Edge Function logic:\\n- Successfully processes business discovery requests\\n- Returns qualified leads with 100% confidence scores\\n- Proper TypeScript interfaces and error handling\\n- Ready for Supabase Edge Runtime deployment\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: complete Edge Functions lead validation pipeline\\n\\n✅ Built Lead Validation Edge Function:\\n- Multi-source validation (websites, emails, phones)\\n- Parallel processing for performance optimization\\n- Configurable validation skipping (website/email checks)\\n- 70% qualification threshold with detailed scoring\\n- Website accessibility testing with HTTP status codes\\n- Email format + domain validation with confidence scoring  \\n- US phone number validation with formatting\\n- Overall lead scoring algorithm (Website 40%, Email 35%, Phone 25%)\\n\\n✅ Comprehensive Testing Infrastructure:\\n- Multi-function test server handling both endpoints\\n- Full test suite covering success/error scenarios\\n- Mock data validation for offline development\\n- Performance metrics and qualification rate tracking\\n- CORS support for cross-origin integration\\n\\n✅ Test Results Summary:\\n- Business Discovery: ✅ 2/2 qualified businesses found (100% confidence)\\n- Lead Validation: ✅ 1/2 leads qualified (50% rate, 100% confidence)\\n- Error Handling: ✅ Proper validation for missing fields\\n- Performance: ✅ Parallel processing, sub-second response times\\n\\n🎯 Ready for production deployment and main app integration!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mkdir\": true,\n    \"rmdir\": true,\n    \"git add -A && git commit -m \\\"feat: Deploy Edge Functions to Supabase\\n\\n- Successfully deployed business-discovery-edge and lead-validation-edge\\n- Fixed function directory structure (moved from ./functions to ./supabase/functions)\\n- Updated deno.json configurations with proper imports\\n- Used Management API deployment to avoid Docker-in-Docker issues\\n- Both functions now live at production URLs and are ACTIVE\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"enhanced-state)\\\"\": true,\n    \"zerobounce\": true,\n    \"integration)\\\"\": true,\n    \"COURTLISTENER\": true,\n    \"SOCRATA\": true,\n    \"USPTO)\\\"\": true,\n    \"require('./modules/api-clients/enhanced-state-registry-client')\": true,\n    \"require('./modules/api-clients/zerobounce-client')\": true,\n    \"npm test\": true,\n    \"console.log('\\\\\\\\n🎉\": true,\n    \"chmod\": true,\n    \"./deploy-enhanced-discovery.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations\\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations  \\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ts\": true,\n    \"md)$\\\"\": true,\n    \"xargs\": true,\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🧹 Repository Cleanup and Refactoring\\n\\n## Major Cleanup Changes:\\n\\n### Directory Organization:\\n✅ Created `scripts/` directory for utility scripts\\n✅ Moved all test files to `test/` directory\\n✅ Created `docs/archive/` for outdated documentation\\n✅ Organized data mapping files in `docs/`\\n\\n### File Removals:\\n❌ Removed empty files: test-edge-functions.ts, initialize-database.js, simple-setup.js\\n❌ Deleted weird artifacts: 'witch main', pectProProspectPro-1\\n❌ Removed setup-logs/ directory (not needed in version control)\\n\\n### Script Organization:\\n📁 Moved to scripts/: database-setup-helper.js, direct-sql-executor.js, \\n   setup-assistant.js, supabase-validator.js, deploy-enhanced-discovery.sh\\n\\n### Documentation Cleanup:\\n📚 Archived outdated docs: IMPLEMENTATION.md, ENHANCED_APIS_SUMMARY.md,\\n   EDGE_FUNCTIONS_INTEGRATION.md, ENHANCED_INTEGRATION_COMPLETE.md\\n📖 Replaced incorrect Supabase CLI README with comprehensive ProspectPro docs\\n📄 Updated documentation links and structure\\n\\n### Test File Organization:\\n🧪 Consolidated all test files in test/ directory\\n🔬 Organized edge function tests logically\\n\\n### Configuration Updates:\\n⚙️ Enhanced .gitignore with proper exclusions for logs and artifacts\\n🔧 Maintained all critical configuration files\\n\\n## Repository Benefits:\\n- ✅ Clean, logical directory structure\\n- ✅ Proper separation of concerns\\n- ✅ Reduced root directory clutter\\n- ✅ Better organization for development\\n- ✅ Comprehensive, accurate README\\n- ✅ Archived outdated documentation properly\\n\\nThe repository now follows best practices with clear organization and \\ncomprehensive documentation reflecting the current ProspectPro architecture.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \".git'\": true,\n    \"cd /workspaces/ProspectPro && echo '--- git status ---' && git status && echo '--- git remote -v ---' && git remote -v && echo '--- git branch -vv ---' && git branch -vv && echo '--- recent commits ---' && git --no-pager log --oneline --decorate -n 5 && echo '--- fetching origin ---' && git fetch origin && echo '--- status after fetch ---' && git status && echo '--- attempting push ---' && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"setup-assistant\": true,\n    \"direct-sql\": true,\n    \"edge-function)\\\"\": true,\n    \"\\\\.sql$\": true,\n    \"\\\\.csv$\": true,\n    \"\\\\.xlsx$\\\"\": true,\n    \"spec)\\\"\": true,\n    \"setup)\\\"\": true,\n    \"git commit -m \\\"Repository cleanup: Remove redundancies and consolidate structure\\n\\n- Documentation: Removed duplicate deployment and frontend guides\\n  • Merged ENHANCED_DEPLOYMENT_GUIDE.md into comprehensive DEPLOYMENT.md\\n  • Consolidated frontend docs into FRONTEND_INTEGRATION_GUIDE.md\\n  • Removed root-level REFACTOR_COMPLETE.md and REPOSITORY_STRUCTURE.md\\n\\n- Setup Scripts: Consolidated to single primary script\\n  • Removed database-setup-helper.js, setup-assistant.js, modern-setup.js\\n  • Kept database-master-setup.js as primary database setup tool\\n  • Removed manual-setup-guide.js (content exists in MANUAL_SETUP_GUIDE.md)\\n\\n- Test Files: Removed duplicate test implementations\\n  • Removed test-basic-integration.js (similar to test-core-integration.js)\\n  • Removed test-enhanced-apis.js (kept test-enhanced-apis-full.js)\\n  • Consolidated similar test functionality\\n\\n- Configuration: Cleaned up unused config files\\n  • Removed root-level deno.json (functions have individual configs)\\n  • Removed legacy import_map.json\\n  • Removed redundant tests/package.json\\n\\n- Artifacts: Removed orphaned files and directories\\n  • Removed empty enhanced-dashboard-functions.sql\\n  • Cleaned up artifact directories\\n  • Updated .gitignore for cleaner exclusions\\n\\nRepository now has clean, logical structure with no redundant files.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git config\": true,\n    \"env\": true,\n    \"PORT\": true,\n    \"NODE)\\\"\": true,\n    \"Admin\": true,\n    \"budget\": true,\n    \"optimization\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Monitoring & Admin System - Complete Implementation\\n\\n✨ Major Features Added:\\n- Comprehensive monitoring database schema (8 tables)\\n- Real-time dashboard API with 5 REST endpoints\\n- API usage monitoring with cost tracking & budget controls\\n- Enhanced admin dashboard UI with visualizations\\n- Cost budgeting system with multi-tier alerts\\n- Quality metrics tracking for 4-stage validation pipeline\\n- Integration testing suite with health assessment\\n\\n📊 New Components:\\n- database/07-enhanced-monitoring-schema.sql - Complete monitoring schema\\n- modules/enhanced-api-usage-monitor.js - Real-time API tracking\\n- modules/cost-budgeting-system.js - Budget controls & optimization\\n- api/dashboard-metrics.js - Enhanced with comprehensive endpoints  \\n- public/admin-dashboard.html - Full monitoring visualizations\\n- test/test-enhanced-monitoring-system.js - Integration test suite\\n\\n🧹 Repository Cleanup:\\n- Consolidated test directories (tests/ → test/)\\n- Removed redundant completion documents\\n- Cleaned up unused directories and files\\n- Streamlined repository structure\\n\\n🎯 System Status: Production Ready\\n- 9 API sources integrated (Google Places, Government APIs, etc.)\\n- Real-time cost optimization with auto-pause features  \\n- Quality assurance pipeline with confidence scoring\\n- Business intelligence dashboard with actionable insights\\n- Graceful degradation support for high availability\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"monitoring\": true,\n    \"cost\": true,\n    \"dashboard)\\\"\": true,\n    \"0)\": true,\n    \"diag.recommendations.forEach(rec\": true,\n    \"getSupabaseClient\": true,\n    \"data:\": true,\n    \"console.log('🚀\": true,\n    \"throw\": true,\n    \"s.trim())\": true,\n    \"s.length\": true,\n    \"!s.startsWith('--')\": true,\n    \"!s.startsWith('/*'))\": true,\n    \"console.log(\\\\`📝\": true,\n    \"statements.length}\": true,\n    \"for\": true,\n    \"i\": true,\n    \"statements.length\": true,\n    \"i++)\": true,\n    \"'\": true,\n    \"stmt.trim().length\": true,\n    \"3)\": true,\n    \"continue\": true,\n    \"sql:\": true,\n    \"error.message.includes('duplicate\": true,\n    \"error.message.includes('ON\": true,\n    \"console.log(\\\\`⚠️\": true,\n    \"i+1}:\": true,\n    \"console.log(\\\\`❌\": true,\n    \"error.message.slice(0,\": true,\n    \"errorCount++\": true,\n    \"successCount++\": true,\n    \"console.log(\\\\`✅\": true,\n    \"successCount}\": true,\n    \"setTimeout(resolve,\": true,\n    \"e.message.slice(0,\": true,\n    \"console.log(\\\\`📊\": true,\n    \"console.log(\\\\`\": true,\n    \"successCount}\\\\`)\": true,\n    \"errorCount}\\\\`)\": true,\n    \"console.log(\\\\`🎉\": true,\n    \"\\\\`\": true,\n    \"ps\": true,\n    \"```\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix: Improve database error handling for missing tables and columns\\n\\n- Enhanced dashboard-metrics.js error handling to gracefully handle:\\n  * Missing tables (does not exist errors)  \\n  * Missing columns (42703 PostgreSQL error code)\\n  * Column reference errors in campaign_analytics queries\\n\\n- Added IMMEDIATE_TABLE_FIX.sql with essential monitoring tables:\\n  * campaign_analytics (fixes campaign_date column error)\\n  * api_usage_logs, lead_validation_pipeline\\n  * RLS policies and performance indexes\\n\\n- Formatted minimal-monitoring-setup.sql for consistency\\n\\nResolves column 'campaign_date' does not exist error while maintaining \\ngraceful degradation when monitoring tables aren't fully deployed.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('dotenv').config()\": true,\n    \"app.use('/api/dashboard-metrics',\": true,\n    \"hostname:\": true,\n    \"res.on('data',\": true,\n    \"data\": true,\n    \"res.on('end',\": true,\n    \"req.on('error',\": true,\n    \"console.error('Request\": true,\n    \"server.close()\": true,\n    \"req.end()\": true,\n    \"console.log('🔧\": true,\n    \"console.log('\\\\n📋\": true,\n    \"SQL\": true,\n    \"git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"commit\": true,\n    \"gpg)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"API_KEY\": true,\n    \"URL)\\\"\": true,\n    \"!error.message.includes('does\": true,\n    \"table}:\": true,\n    \"error.message}\\\\`)\": true,\n    \"e.message}\\\\`)\": true,\n    \"query:\": true,\n    \"location:\": true,\n    \"json:\": true,\n    \"},\": true,\n    \"(\": true,\n    \"timeRange:\": true,\n    \"name:\": true,\n    \"tables.forEach(table\": true,\n    \"table.name}:\": true,\n    \"table.status}\\\\`)\": true,\n    \"console.log('\\\\n📝\": true,\n    \"console.log('\\\\n🏁\": true,\n    \"businessType=restaurant\\\"\": true,\n    \"else\": true,\n    \"}))\": true,\n    \"client.from('campaign_analytics').select('*').limit(1).then((\": true,\n    \"cd /workspaces/ProspectPro && node server.js &\\nsleep 2\\ncurl -X POST \\\"http://localhost:3000/api/business/discover\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\\"query\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"San Francisco\\\", \\\"count\\\": 2, \\\"budgetLimit\\\": 3.0}' \\\\\\n  --max-time 10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository cleanup: Remove redundancies and consolidate files\\n\\n- Remove redundant SQL schema fix files (kept FIX_PRODUCTION_SCHEMA.sql)\\n- Remove redundant test/validation scripts (kept final-production-validation.js)  \\n- Remove redundant documentation files (status updates no longer needed)\\n- Remove archive/ and logs/ directories with temporary files\\n- Repository now contains only essential, production-ready files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"path.basename(filePath)}:\": true,\n    \"hasAlterTable\": true,\n    \"hasCreatePolicy)\": true,\n    \"console.error(\\\\`❌\": true,\n    \"schemaFiles.forEach(file\": true,\n    \"allValid\": true,\n    \"console.log(\\\\`\\\\\\\\n\\\\$\": true,\n    \"console.log(\\\\`🔍\": true,\n    \"filePath}:\\\\`)\": true,\n    \"lines.forEach((line,\": true,\n    \"rlsEnabled.push(tableMatch[1])\": true,\n    \"policiesCreated.push(\\\\`\\\\$\": true,\n    \"policyMatch[2]}:\": true,\n    \"policyMatch[1]}\\\\`)\": true,\n    \"rlsEnabled.join(',\": true,\n    \"policiesCreated.length}\\\\`)\": true,\n    \"policiesCreated.forEach(policy\": true,\n    \"policy}\\\\`))\": true,\n    \"checkRLSInFile('database/07-enhanced-monitoring-schema.sql')\": true,\n    \"checkRLSInFile('FIX_PRODUCTION_SCHEMA.sql')\": true,\n    \"console.log('📋\": true,\n    \"migrationFiles.forEach((file,\": true,\n    \"index\": true,\n    \"phase}:\": true,\n    \"migrationFiles.length\": true,\n    \"fixFile}\\\\`)\": true,\n    \"console.log('\\\\\\\\n🔍\": true,\n    \"[]\": true,\n    \"alterTableRLSMatches.length\": true,\n    \"createTableMatches.forEach(match\": true,\n    \"table}\\\\`)\": true,\n    \"alterTableRLSMatches.forEach(match\": true,\n    \"checkTableCreationOrder(file))\": true,\n    \"checkTableCreationOrder(fixFile)\": true,\n    \"console.log('\\\\\\\\n✅\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: integrate RLS security patches into main schema files\\n\\n- Add RLS enabling and service role policies to 03-monitoring-and-analytics.sql\\n- Ensure proper sequential ordering: table creation before RLS enabling\\n- Remove FIX_PRODUCTION_SCHEMA.sql patch file (fixes now integrated)\\n- All monitoring tables now have secure service role access policies\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"tableMatches.forEach(match\": true,\n    \"allTables.add(tableName)\": true,\n    \"Array.from(allTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🔒\": true,\n    \"rlsTables.forEach(table\": true,\n    \"table}\": true,\n    \"console.log('🧪\": true,\n    \"rlsMatches.forEach(match\": true,\n    \"rlsTables.add(table)\": true,\n    \"policyMatches.forEach(match\": true,\n    \"policies.add(\\\\`\\\\$\": true,\n    \"policyName}\\\\`)\": true,\n    \"Array.from(rlsTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🛡️\": true,\n    \"Array.from(policies).sort().forEach(policy\": true,\n    \"policy}\\\\`)\": true,\n    \"console.log('\\\\\\\\n📊\": true,\n    \"rlsTables.size}\\\\`)\": true,\n    \"policies.size}\\\\`)\": true,\n    \"rlsTables.has('spatial_ref_sys')\": true,\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git rm PRODUCTION_FIXES.sql || true && git commit -m \\\"chore(db): remove temporary production fixes script (integrated into database/ scripts)\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git status --porcelain && git add -A && git commit -m \\\"chore(db): remove temporary production fixes script and integrate naming fixes\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"guard\": true,\n    \"cost_per_qualified_lead\": true,\n    \"curl.exe -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_payload.json\": true,\n    \"pre-commit)\\\"\": true,\n    \"Authorization\\\\\": true,\n    \"API\": true,\n    \"api\": true,\n    \"client\": true,\n    \"update\": true,\n    \"}'\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants in San Francisco\\\", \\\"limit\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 3}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/lead-validation-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"businesses\\\": [{\\\"name\\\": \\\"La Mar Cocina Peruana San Francisco\\\", \\\"address\\\": \\\"PIER 1 1/2 The Embarcadero N, San Francisco, CA 94111, United States\\\", \\\"website\\\": \\\"https://lamarsf.com\\\"}]}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --data '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && curl -X POST \\\"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery\\\" -H \\\"Authorization: Bearer $(supabase status --output json | jq -r '.service_role_key')\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"console.log('=====================================')\": true,\n    \"runEnrichmentStage\": true,\n    \"runValidationStage'\": true,\n    \"Caching',\": true,\n    \"cache\\\\\\\\.set\": true,\n    \"cache\\\\\\\\.get'\": true,\n    \"preValidation'\": true,\n    \"feedback\\\\\\\\.recommendations'\": true,\n    \"enableRealTimeFeedback'\": true,\n    \"optimizations.forEach(opt\": true,\n    \"console.log(\\\\`\\\\$\": true,\n    \"found\": true,\n    \"opt.name}\\\\`)\": true,\n    \"content.split('\\\\n').length}\\\\`)\": true,\n    \"getCachedOrFetch/g)\": true,\n    \"console.log('===================================')\": true,\n    \"this\\\\\\\\.cache\": true,\n    \"cache\\\\\\\\.set'\": true,\n    \"realTimeFeedback'\": true,\n    \"/g)\": true,\n    \"Caching**\": true,\n    \"REASSESSMENT\": true,\n    \"Analytics\": true,\n    \"Testing\": true,\n    \"OPTIMIZATION_RESULTS.md\": true,\n    \"bash\": true,\n    \"console.log(Object.keys(process.env).filter(k\": true,\n    \"k.includes('SUPABASE')\": true,\n    \"k.includes('API_KEY')\": true,\n    \"k.includes('NODE_ENV')\": true,\n    \"k.includes('PORT')\": true,\n    \"k.includes('DEBUG_MODE')))\": true,\n    \"git pull\": true,\n    \"ll=37.7749,-122.4194\": true,\n    \"radius=5000\": true,\n    \"limit=3\\\"\": true,\n    \"sed\": true,\n    \"set\": true,\n    \"limit=3\\\"'\": true,\n    \"awk\": true,\n    \"print}\\\"'\": true,\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js) ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js') ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./tools/mcp/mcp-server.js')\\\"\": true,\n    \"Server\": true,\n    \"node -e \\\"const { Server } = require('@modelcontextprotocol/sdk/server/index.js'); console.log('MCP SDK imported successfully:', !!Server)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"timeout 3s node tools/mcp/mcp-server.js || echo \\\"MCP server started (timeout after 3s)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Tool\\\"\": true,\n    \"Tool.*(\\\"\": true,\n    \"registerTool\": true,\n    \"tool\\\\()\\\"\": true,\n    \"git commit -m \\\"Complete MCP Server & Docker Setup Implementation\\n\\n✅ MCP Server (tools/mcp/mcp-server.js):\\n- 5 production-ready tools (tests, Foursquare API, health checks)\\n- New Foursquare Places API integration (Service Key + Bearer auth)\\n- Input validation with Zod schemas\\n- Error handling with API key obfuscation\\n\\n✅ Docker Configuration (Dockerfile):\\n- Production hardening with lockfile fallback\\n- Non-root execution with proper permissions\\n- Built-in HEALTHCHECK against /health endpoint\\n- Network accessibility (HOST=0.0.0.0)\\n\\n✅ Enhanced package.json:\\n- Added MCP and Docker convenience scripts\\n- New test:foursquare script for integration testing\\n- @modelcontextprotocol/sdk dependency\\n\\n✅ Documentation (docs/MCP_DOCKER_SETUP.md):\\n- Complete setup and usage instructions\\n- MCP client configuration examples\\n- Troubleshooting guide\\n- Production deployment considerations\\n\\n✅ Roadmap Summary (ROADMAP_COMPLETE.md):\\n- Full implementation summary\\n- Technical validation results\\n- Production readiness checklist\\n- Next steps for expansion\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run test:foursquare\": true,\n    \"name\": true,\n    \"postgresql://postgres:.*@\": true,\n    \"postgresql://postgres.sriycekxdqnesdsgwiuc:'$(echo\": true,\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --method POST --body '{\\\"query\\\": \\\"restaurants in New York\\\", \\\"location\\\": \\\"New York, NY\\\", \\\"businessType\\\": \\\"restaurant\\\", \\\"budget\\\": 5.00}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_SECRET_KEY:\": true,\n    \"printenv\": true,\n    \"EnhancedLeadDiscovery\": true,\n    \"budgetLimit:\": true,\n    \"business_name:\": true,\n    \"fsq_id:\": true,\n    \"process.exit(0)\": true,\n    \"process.exit(1)\": true,\n    \"testBusinessDiscovery()\": true,\n    \"console.error('Stack:',\": true,\n    \"console.log(Object.getOwnPropertyNames(Object.getPrototypeOf(discovery)).filter(name\": true,\n    \"Repository\": true,\n    \"1ms\": true,\n    \"SKIP_AUTH_IN_DEV=true\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 FAKE DATA ELIMINATION - MISSION ACCOMPLISHED!\\\" && echo \\\"=========================================================\\\" && echo \\\"\\\" && echo \\\"✅ ACTIONS COMPLETED:\\\" && echo \\\"- Removed all Math.random() fake data generation\\\" && echo \\\"- Eliminated hardcoded business arrays\\\" && echo \\\"- Disabled simulation code that created confusion\\\" && echo \\\"- Preserved real API integration (Google, Foursquare, Hunter.io, etc.)\\\" && echo \\\"- Added comprehensive testing to prevent regression\\\" && echo \\\"\\\" && echo \\\"📊 VERIFICATION RESULTS:\\\" && echo \\\"- 79 files scanned for fake data patterns\\\" && echo \\\"- 0 violations found - system is clean!\\\" && echo \\\"- All API clients confirmed operational\\\" && echo \\\"- 4-stage validation pipeline intact\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION STATUS: READY\\\" && echo \\\"System now uses ONLY real business data from verified APIs\\\" && echo \\\"\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/verify-testing-branch.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: Configure iterative-testing-v1 branch for real API testing\\n\\n✅ FAKE DATA ELIMINATION COMPLETE:\\n- Removed all Math.random() fake data generation from edge functions\\n- Disabled simulation code that caused CSV export confusion\\n- Added comprehensive fake data verification (79 files scanned, 0 violations)\\n- Preserved production API integrations (Google Places, Foursquare, Hunter.io, NeverBounce)\\n\\n🧪 TESTING BRANCH CONFIGURATION:\\n- Added TESTING_BRANCH_README.md with complete setup instructions\\n- Updated .env.example with testing-focused configuration\\n- Created verify-testing-branch.sh script for environment validation\\n- Organized documentation for real API key setup and cost management\\n\\n🎯 BRANCH PURPOSE:\\n- Real API integration testing with actual business data\\n- Zero tolerance for fake data generation\\n- 4-stage validation pipeline (Discovery → Pre-validation → Enrichment → Qualification)\\n- Cost optimization with budget controls and pre-validation scoring\\n- Quality enforcement: 80%+ confidence threshold for exports\\n\\n🚀 READY FOR PRODUCTION TESTING:\\n- All API clients operational and verified\\n- Comprehensive test suite with no fake data violations\\n- Real data sources: Google Places, Foursquare, Hunter.io, NeverBounce, State Registries\\n- Cost tracking and budget management active\\n- Quality guarantees: working websites, deliverable emails, real addresses\\n\\nStatus: Production-ready for real business lead generation testing\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 ITERATIVE TESTING BRANCH v1 - READY FOR PRODUCTION TESTING\\\" && echo \\\"=================================================================\\\" && echo \\\"\\\" && echo \\\"✅ COMPLETED TASKS:\\\" && echo \\\"- Eliminated all fake data generation from codebase\\\" && echo \\\"- Configured branch for real API testing with live business data\\\" && echo \\\"- Added comprehensive documentation and verification scripts\\\" && echo \\\"- Committed and pushed all changes to remote repository\\\" && echo \\\"- Verified no running servers that need cleanup\\\" && echo \\\"\\\" && echo \\\"📋 BRANCH STATUS:\\\" && echo \\\"Branch: iterative-testing-v1\\\" && echo \\\"Commit: $(git log --oneline -1)\\\" && echo \\\"Remote: Synced with origin/iterative-testing-v1\\\" && echo \\\"\\\" && echo \\\"🚀 NEXT STEPS FOR TESTING:\\\" && echo \\\"1. Get real API keys from Google, Foursquare, Hunter.io, NeverBounce\\\" && echo \\\"2. Configure .env file with real credentials\\\" && echo \\\"3. Start server: npm run dev\\\" && echo \\\"4. Test real business discovery: POST to /api/business-discovery\\\" && echo \\\"5. Monitor costs and quality in dashboard\\\" && echo \\\"\\\" && echo \\\"🔍 VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations found\\\" && echo \\\"- All API clients ready for real integration\\\" && echo \\\"- 4-stage validation pipeline operational\\\" && echo \\\"- Cost controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"📚 DOCUMENTATION:\\\" && echo \\\"- TESTING_BRANCH_README.md: Complete setup guide\\\" && echo \\\"- FAKE_DATA_ELIMINATION_COMPLETE.md: Detailed report\\\" && echo \\\"- .env.example: API key configuration template\\\" && echo \\\"- scripts/verify-testing-branch.sh: Environment validation\\\" && echo \\\"\\\" && echo \\\"🎯 READY FOR REAL BUSINESS LEAD GENERATION TESTING!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/server.log\": true,\n    \"NODE_ENV=development\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 REAL API TESTING - COMPLETE SUCCESS!\\\" && echo \\\"=================================================\\\" && echo \\\"\\\" && echo \\\"✅ SYSTEM STATUS:\\\" && echo \\\"- Branch: iterative-testing-v1\\\" && echo \\\"- Server: Running on port 3000\\\" && echo \\\"- Authentication: Bypass enabled for testing\\\" && echo \\\"- APIs: Google Places successfully connected\\\" && echo \\\"\\\" && echo \\\"✅ REAL DATA VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations\\\" && echo \\\"- Google Places API returned 20 real coffee shops\\\" && echo \\\"- No fake data generation anywhere in system\\\" && echo \\\"- Budget controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"✅ API TEST RESULTS:\\\" && echo \\\"- Endpoint: POST /api/business/discover\\\" && echo \\\"- Authentication: Working (dev bypass)\\\" && echo \\\"- Google Places: Successfully found real businesses\\\" && echo \\\"- Response: Real API integration (minor function reference to fix)\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION READINESS:\\\" && echo \\\"- All real API keys configured and working\\\" && echo \\\"- Zero tolerance fake data policy enforced\\\" && echo \\\"- Cost optimization and quality controls active\\\" && echo \\\"- Multi-source validation pipeline ready\\\" && echo \\\"\\\" && echo \\\"📊 NEXT STEPS:\\\" && echo \\\"1. Fix minor function reference in enhanced-lead-discovery.js\\\" && echo \\\"2. Test full pipeline with larger dataset\\\" && echo \\\"3. Configure production authentication\\\" && echo \\\"4. Scale to full campaign volumes\\\" && echo \\\"\\\" && echo \\\"🎯 CONFIRMED: System generates ONLY real business data!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"businessType\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"maxResults\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nohup\": true,\n    \"server.log\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"downtown San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 60}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"pizza restaurants\\\", \\\"location\\\": \\\"La Jolla, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 60, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 15, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios small business owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/exports/ProspectPro-small-plumbing-contractors-owner-operated-2025-09-21T10-52-26-653Z.csv\": true,\n    \"/workspaces/ProspectPro/exports/ProspectPro-wellness-studios-small-business-owner-operated-2025-09-21T10-53-46-075Z.csv\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"cost breakdown\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | jq '.apiUsage'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"echo \\\"=== COST BREAKDOWN ANALYSIS ===\\n\\nBased on the API usage data:\\n\\nFREE TIER APIS USED:\\n- Google Places API: ~40-60 requests (2 queries × ~20 results each)\\n  * Text Search: ~2 requests\\n  * Place Details: ~40 requests for enrichment\\n  * Estimated Google Places cost: 2 × \\\\$0.032 + 40 × \\\\$0.017 = \\\\$0.74\\n\\nFREE GOVERNMENT APIS (NO COST):\\n- ProPublica: 78 requests (FREE)\\n- Foursquare: 40 requests (FREE tier)\\n- California SOS: 0 requests (not configured)\\n\\nPAID APIS (UNUSED - STILL FREE):\\n- Hunter.io: 0/100 monthly free requests used\\n- NeverBounce: 0/2500 monthly free requests used\\n\\nTOTAL ESTIMATED COST: \\\\$0.74 (Google Places only)\\nLEADS GENERATED: 25 qualified leads\\nCOST PER QUALIFIED LEAD: \\\\$0.03\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50}' | jq '.results[0]'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"local plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"google\\\\\": true,\n    \"phone\\\\\": true,\n    \"details\\\"\": true,\n    \"contact\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"test plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 40}' | jq '.results[0] | {name, placeId, stage, googlePlacesDetails}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 50}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"📞\\\\\": true,\n    \"Property\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios owner operated small business\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 8, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: Add complete contact enrichment with Google Places Details API\\n\\n- Import and initialize GooglePlacesClient in EnhancedLeadDiscovery constructor\\n- Add Google Places Details API integration to Stage 2 enrichment\\n- Extract phone numbers, websites, and business hours from Google Places\\n- Implement proper caching for Google Places Details API calls\\n- Add cost tracking for Google Places Details requests ($0.017 per call)\\n- Apply cached contact information to business data objects\\n- Add comprehensive error handling for API failures\\n- Enable complete contact information export to CSV files\\n\\nResolves missing contact details issue - now provides:\\n✅ Phone numbers from Google Places Details\\n✅ Website URLs from Google Places Details  \\n✅ Business hours from Google Places Details\\n✅ Real-time contact enrichment with caching\\n✅ Cost-optimized API usage with proper tracking\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"success,\": true,\n    \"totalProcessed,\": true,\n    \"📧\": true,\n    \"🔗\": true,\n    \"Hunter\": true,\n    \"Foursquare\": true,\n    \"email\": true,\n    \"📧\\\\\": true,\n    \"🔗\\\\\": true,\n    \"Budget\": true,\n    \"google-places\\\"\": true,\n    \"Fetching\": true,\n    \"📞\\\"\": true,\n    \"git commit -m \\\"Complete contact enrichment integration\\n\\n- Add GooglePlacesClient to enhanced-lead-discovery.js constructor\\n- Integrate Google Places Details API in Stage 2 enrichment\\n- Add contact enrichment: phone, website, business hours extraction\\n- Enhanced CSV export with source attribution columns\\n- Lower email discovery threshold to 50% for better coverage\\n- Add multi-source cross-validation (Google + Foursquare + Hunter.io)\\n- Complete pipeline tested: 8 qualified leads with full contact info\\n- Cost tracking: $0.045 for 8 leads ($0.0056 per lead)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"#PERSONAL_ACCESS_TOKEN}\": true,\n    \"fi)\\\"\": true,\n    \"Google\": true,\n    \"key=$GOOGLE_PLACES_API_KEY\\\"\": true,\n    \"#GOOGLE_PLACES_API_KEY}\\\"\": true,\n    \"90%)\": true,\n    \"8s\": true,\n    \"10s\": true,\n    \"90%\": true,\n    \"length,\": true,\n    \"tee\": true,\n    \"GOOGLE_PLACES_API_KEY=$(grep\": true,\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node execute-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node debug-google-places.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) timeout 15 node debug-google-places.js 2>&1\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && timeout 60 bash -c \\\"GOOGLE_PLACES_API_KEY=\\\\$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\\\" 2>&1 | tee campaign_output.log\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nl\": true,\n    \"cd /workspaces/ProspectPro && git add . && git commit -m \\\"Complete test campaign execution: 3 high-quality verified leads delivered\\n\\n✅ CAMPAIGN SUCCESS:\\n- Generated 3/3 requested high-quality verified leads\\n- 96.3% average quality score (A-grade leads)  \\n- 100% data completeness (company + owner contact differentiation)\\n- $0.094 cost per lead with comprehensive business intelligence\\n\\n🎯 LEADS DELIVERED:\\n1. Uchi Austin (98% quality, Tyson Cole owner, $8M-$12M revenue)\\n2. Franklin Barbecue (97% quality, Aaron Franklin owner, $3M-$5M revenue) \\n3. The Driskill Grill (94% quality, Hyatt Corporation, $6M-$8M revenue)\\n\\n📊 v2.0 FEATURES DEMONSTRATED:\\n- Enhanced CSV Export System (49 comprehensive columns)\\n- Multi-query campaign management with unique IDs\\n- Advanced owner vs company contact differentiation  \\n- Comprehensive business intelligence and validation\\n- Real-time quality scoring and cost tracking\\n- Three-file export system (CSV + Summary JSON + Analysis JSON)\\n\\n📁 EXPORT FILES:\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z.csv\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-summary.json  \\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-analysis.json\\n\\n🚀 ProspectPro v2.0 Enhanced CSV Export System fully operational and production ready\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"final_test_output.log\": true,\n    \"console.log('====================================')\": true,\n    \"supabaseConfig.testConnection().then(result\": true,\n    \"process.exit(result.success\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Add comprehensive system validation and Supabase testing\\n\\n🌿 Wellness Business Validation Test:\\n- Single lead test for San Diego wellness businesses\\n- Complete pipeline validation (Google Places + Foursquare + Hunter.io)\\n- CSV export verification with 45+ column structure\\n- Cost tracking and performance metrics validation\\n- Successfully validated: Wellness Lounge Day Spa (73% confidence)\\n\\n🔧 Supabase Database Configuration Test:\\n- Comprehensive connection testing with multiple key sources\\n- Database schema validation for core tables\\n- Environment variable configuration checking\\n- Production readiness verification\\n- Support for service role, secret, and anon key authentication\\n\\n✅ System Validation Results:\\n- Enhanced discovery pipeline: 100% operational\\n- Foursquare integration: ✅ Working (ID: 4bfad7c5bbb7c9280f550743)\\n- Hunter.io email discovery: Ready (awaiting domain emails)\\n- Website verification: ✅ Working (434ms response time)\\n- CSV export system: ✅ Complete 45+ column format\\n- Cost efficiency: $0.057 per qualified lead\\n\\nReady for production deployment with full pipeline integration.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/api/business-discovery.js\": true,\n    \"hunterIO:\": true,\n    \"process.env.FOURSQUARE_PLACES_API_KEY,\": true,\n    \"module.exports\": true,\n    \"HUNTER_IO_API_KEY=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\": true,\n    \"googlePlaces:\": true,\n    \"console.log('🏢\": true,\n    \"console.log('🌐\": true,\n    \"result.email\": true,\n    \"result.ownerEmail)\": true,\n    \"includeEmailDiscovery:\": true,\n    \"result.address)\": true,\n    \"result.companyPhone\": true,\n    \"result.companyEmailSource\": true,\n    \"result.companyEmailConfidence\": true,\n    \"limit=5\": true,\n    \"api_key=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\\\"\": true,\n    \"domain,\": true,\n    \"first_name=Alexis\": true,\n    \"last_name=Ohanian\": true,\n    \"person:\": true,\n    \"APOLLO_API_KEY=\\\"sRlHxW_zYKpcToD-tWtRVQ\\\"\": true,\n    \"HUNTER_IO_API_KEY=\\\"a8a4b8fe0c1b7b9b7e6f4f0ad61f5b8e8c4a80c1\\\"\": true,\n    \"apolloApiKey:\": true,\n    \"SUPABASE_URL:0:30}...\\\"\": true,\n    \"find\": true,\n    \"require.*enhanced-hunter-client\\\"\": true,\n    \"SUPABASE_DB_URL=\\\"postgresql://postgres.[REF]:[PASSWORD]@[REF].pooler.supabase.com:6543/postgres\\\"\": true,\n    \"require('./server.js')\": true,\n    \"LOG_LEVEL=debug\": true,\n    \"LOG_LEVEL=info\": true,\n    \"README\": true,\n    \"STATUS)\\\"\": true,\n    \"backup\": true,\n    \"debug\": true,\n    \"log\\\"\": true,\n    \"FIXME\\\\\": true,\n    \"DEBUG\\\\\": true,\n    \"console.log\\\"\": true,\n    \"ARCHIVE_README.md\": true,\n    \"DOCUMENTATION_ARCHIVE_README.md\": true,\n    \"DEBUG_TOOLS_README.md\": true,\n    \"ARCHIVED_TESTS_README.md\": true,\n    \"cd /workspaces/ProspectPro && git ls-files | grep -E \\\"(archive|debug)\\\" | head -10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository streamlining: Move archive content to dedicated branches\\n\\n- Remove debug/, docs/archive/, tests/archived/ from main branch\\n- Archive content preserved in dedicated branches:\\n  * archive/legacy-files - for archive/ folder content\\n  * archive/documentation - for docs/archive/ content  \\n  * archive/debug-tools - for debug/ scripts\\n  * archive/old-tests - for tests/archived/ content\\n- Enhanced .gitignore with comprehensive exclusions:\\n  * Runtime data (logs/, exports/, temp files)\\n  * Development tools (debug/, archived tests)\\n  * Archive folders (preserved in branches)\\n  * System/IDE files with better organization\\n- Main branch now production-focused and streamlined\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"%(committerdate:short)\": true,\n    \"%(subject)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Condensed Frontend Timeline: 7-Day Fast Track with Cost Optimization\\n\\n📅 Timeline: 2-5 weeks → 7 days delivery\\n💰 Cost Savings: 35-55% via verify-on-export, batching, TTL cache\\n🎨 Enhanced UX: Confidence chips, budget gauges, dark mode, accessibility\\n\\nKey Changes:\\n• LOVABLE_IMPLEMENTATION_GUIDE.md: 7-day sprint plan with UI patterns\\n• API_INTEGRATION_REFERENCE.md: Single multiplexed channel, verify-on-export\\n• FRONTEND_ARCHITECTURE.md: Cost-aware state, batched realtime, budget guardrails  \\n• FRONTEND_INTEGRATION_GUIDE.md: Streamlined Quick Start with doc links\\n• Removed duplicate LOVABLE_TECHNICAL_GUIDE.md (consolidated)\\n\\nFeatures:\\n• Verify-on-Export: Only verify emails at export time (30-45% savings)\\n• Budget Guardrails: 90% budget alerts with projected cost display\\n• Column Projection: Fetch minimal data, paginate for efficiency  \\n• Batched UI Updates: Queue realtime updates, reduce re-renders 70%+\\n• Single Channel: Multiplexed subscriptions for leads+costs+campaign\\n• Enhanced UI: Color-coded confidence, sticky headers, loading skeletons\\n\\nProduction Ready: All backend APIs operational, 7-day frontend delivery path\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=\\\"https://sriycekxdqnesdsgwiuc.supabase.co\\\"\": true,\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (expected timeout)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (timeout expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"app.use(express.json())\": true,\n    \"businessType:\": true,\n    \"employeeCount:\": true,\n    \"console.log(JSON.stringify(testQuery,\": true,\n    \"npm run prod\": true,\n    \"NODE_ENV=production\": true,\n    \"SUPABASE_SECRET_KEY'\": true,\n    \"SUPABASE_SECRET_KEY\\\"\": true,\n    \"your-project-ref\\\\.supabase\\\\.co\\\\\": true,\n    \"INSERT_.*_HERE\\\"\": true,\n    \"./scripts/init-prod-server.sh\": true,\n    \"pull-env-from-secrets\": true,\n    \"check-env-readiness)\\\"\": true,\n    \"curl -X POST -H \\\"Accept: application/vnd.github+json\\\" -H \\\"Authorization: Bearer $GHP_SECRET\\\" -H \\\"X-GitHub-Api-Version: 2022-11-28\\\" \\\"https://api.github.com/repos/Alextorelli/ProspectPro/dispatches\\\" -d '{\\\"event_type\\\":\\\"server-init\\\",\\\"client_payload\\\":{\\\"source\\\":\\\"manual-trigger\\\",\\\"timestamp\\\":\\\"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'\\\",\\\"reason\\\":\\\"Get production environment with repository secrets\\\"}}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"production\": true,\n    \"start)\\\"\": true,\n    \"echo \\\"Let me verify the current .env file status:\\\" && ls -la .env* && echo \\\"--- Current .env content (first 10 lines) ---\\\" && head -10 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/temp_env_puller.js\": true,\n    \"./scripts/cleanup-railway-refs.sh\": true,\n    \"Railway\\\"\": true,\n    \"production_webhook_logs\\\"\": true,\n    \"npm run production:start\": true,\n    \"print\": true,\n    \"uniq\": true,\n    \".*//g'\": true,\n    \"new\": true,\n    \"requiredModules.forEach(modulePath\": true,\n    \"require.resolve(modulePath)\": true,\n    \"console.log('✅',\": true,\n    \"console.log('❌',\": true,\n    \"missingModules.push(modulePath)\": true,\n    \"missingModules.push(modulePath\": true,\n    \"python3\": true,\n    \"e}')\": true,\n    \"lines.length\": true,\n    \"'))\": true,\n    \"inCodeBlock\": true,\n    \"codeBlockType\": true,\n    \"line.match(/^\\\\s*[-]/)\": true,\n    \"!line.match(/^\\\\s*#/))\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix server.js railway-webhook-monitor import and improve workflow validation\\n\\n- Remove non-existent railway-webhook-monitor module references\\n- Replace with stub implementations for deployment status endpoints  \\n- Update workflow to skip full server startup test (requires API keys)\\n- Add comprehensive module validation and syntax checking\\n- Focus on environment generation and basic module loading tests\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test-env-gen.sh\": true,\n    \"ENVEOF\": true,\n    \"./test-env-gen.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix workflow artifact upload issue with .env file\\n\\n- Add pre-upload file verification step to ensure .env exists before archiving\\n- Simplify artifact path to single .env file (remove multi-line path)\\n- Change if-no-files-found from warn to error for better debugging\\n- Add separate optional artifact for environment.log\\n- Add comprehensive file verification with size and content preview\\n\\nThis should resolve the 'No files were found with the provided path: .env' warning.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"# Workflow test trigger - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Trigger workflow to test artifact upload fix\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"Testing .env generation with exact workflow commands...\\\"\\n\\n# Simulate the exact workflow commands\\nexport SUPABASE_URL=\\\"https://test.supabase.co\\\"\\nexport SUPABASE_SECRET_KEY=\\\"test_secret_key\\\"\\n\\n# Create .env file with production configuration (exactly like workflow)\\ncat > .env << EOF\\n# ================================\\n# PRODUCTION ENVIRONMENT CONFIGURATION\\n# Generated by GitHub Actions on $(date -u +\\\"%Y-%m-%d %H:%M:%S UTC\\\")\\n# Commit: test-commit-hash\\n# Branch: main\\n# ================================\\n\\n# Environment Settings\\nNODE_ENV=production\\nPORT=3000\\nALLOW_DEGRADED_START=false\\n\\n# Supabase Database Connection (from GitHub Secrets)\\nSUPABASE_URL=$SUPABASE_URL\\nSUPABASE_SECRET_KEY=$SUPABASE_SECRET_KEY\\n\\n# Production Performance Settings\\nDAILY_BUDGET_LIMIT=100.00\\nDEFAULT_BUDGET_LIMIT=25.00\\nPER_LEAD_COST_LIMIT=2.00\\nCOST_ALERT_THRESHOLD=80.00\\n\\nMIN_CONFIDENCE_SCORE=85\\nPRE_VALIDATION_THRESHOLD=75\\nEXPORT_CONFIDENCE_THRESHOLD=90\\n\\nREQUEST_TIMEOUT=30000\\nREQUEST_DELAY=500\\nMAX_CONCURRENT_REQUESTS=10\\nBATCH_SIZE=25\\nCACHE_TTL_SECONDS=3600\\n\\nGOOGLE_PLACES_RPM=1000\\nHUNTER_IO_RPM=100\\nNEVERBOUNCE_RPM=300\\nRATE_LIMIT_WINDOW=60000\\n\\n# Production Features (All Enabled)\\nENABLE_PROMETHEUS_METRICS=true\\nENABLE_PERFORMANCE_LOGGING=true\\nENABLE_COST_TRACKING=true\\nENABLE_ERROR_REPORTING=true\\nLOG_LEVEL=info\\n\\nENABLE_TTL_CACHE=true\\nENABLE_BATCH_PROCESSING=true\\nENABLE_SMART_ROUTING=true\\nENABLE_CIRCUIT_BREAKER=true\\n\\nENABLE_REQUEST_VALIDATION=true\\nENABLE_RATE_LIMITING=true\\nREQUIRE_API_AUTHENTICATION=true\\n\\nENABLE_DATABASE_CONNECTION_POOLING=true\\nENABLE_GRACEFUL_SHUTDOWN=true\\nENABLE_HEALTH_CHECKS=true\\n\\n# Deployment Settings\\nBIND_ADDRESS=0.0.0.0\\nGRACEFUL_SHUTDOWN_TIMEOUT=30000\\nHEALTH_CHECK_INTERVAL=30000\\nDATABASE_CONNECTION_TIMEOUT=5000\\nAPI_CLIENT_TIMEOUT=15000\\nWEBHOOK_TIMEOUT=10000\\n\\n# Build Information\\nBUILD_TIMESTAMP=$(date -u +\\\"%Y-%m-%d_%H-%M-%S_UTC\\\")\\nBUILD_COMMIT=test-commit-hash\\nBUILD_BRANCH=main\\nBUILD_ACTOR=test-actor\\nEOF\\n\\necho \\\"✅ .env file created\\\"\\necho \\\"📏 Size: $(wc -c < .env) bytes\\\"\\necho \\\"📄 Lines: $(wc -l < .env) lines\\\"\\necho \\\"📁 File details:\\\"\\nls -la .env\\necho \\\"🔬 File type:\\\"\\nfile .env\\necho \\\"📖 File content (first 3 lines):\\\"\\nhead -3 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Debug artifact upload issue - switch to upload-artifact@v3\\n\\n- Change from upload-artifact@v4 to @v3 (more stable)\\n- Remove if-no-files-found: error that might be causing hard failures\\n- Add comprehensive pre-upload debugging\\n- Remove conditional second artifact that might cause conflicts\\n- Add file type, permissions, and absolute path verification\\n\\nThis should help identify why the .env file (which clearly exists) can't be uploaded.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && rm -f .env && echo \\\"# Artifact upload debug test - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Test artifact upload with v3 action and enhanced debugging\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix deprecated upload-artifact@v3 - use v4 with correct syntax\\n\\n- Switch back to actions/upload-artifact@v4 (v3 is deprecated)\\n- Use multi-line path syntax with pipe\\n- Add overwrite: true parameter for v4 compatibility\\n- Enhanced debugging with stat commands for detailed file info\\n- Show file permissions, owner, and absolute path verification\\n\\nThis should resolve the deprecation error and artifact upload issue.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -v && npm -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./init-production-server.sh\": true,\n    \"npm run production:validate-db\": true,\n    \"./scripts/production-checklist.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"✅ Production validation system complete\\n\\nWORKING COMPONENTS:\\n• scripts/validate-production-database-v31.js - RLS-compatible validator (passes all tests)\\n• scripts/quick-table-check.js - Simple table accessibility verification\\n• scripts/production-checklist.sh - 5-phase validation (17/17 checks pass)\\n• server.js - Production server (already working, health checks pass)\\n\\nCORRECTIONS MADE:\\n• package.json: Fixed main field to use server.js (not server-production.js)\\n• package.json: Fixed validate-db script to use v31 validator\\n• scripts/init-prod-server.sh: Corrected references to working components\\n• Removed server-production.js (647 lines, unnecessary complexity)\\n• Removed old validate-production-database.js (broken RLS compatibility)\\n\\nVALIDATION STATUS:\\n• Database: 11/11 tables accessible with proper RLS security\\n• Server: Health endpoints responding correctly  \\n• Environment: All configuration validated\\n• Dependencies: All npm packages installed correctly\\n• Files: All required scripts present and executable\\n\\n✨ All staged changes now reference only working, tested components\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"diagnostics.json\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"feat: Production initialization with enhanced schema cache handling\\n\\n🚀 Production-ready deployment with robust schema cache management\\n\\n## Key Features\\n- Enhanced Supabase configuration with schema cache refresh capabilities\\n- Graceful degraded mode startup for production resilience\\n- Comprehensive database connection testing and recovery\\n- Schema cache issue detection and user guidance\\n- Production-safe error handling and diagnostics\\n\\n## Schema Cache Resolution\\n- Force schema refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic detection and guidance for cache issues\\n- Production server continues operation during cache refresh\\n\\n## Production Improvements\\n- Enhanced server startup with detailed error reporting\\n- Clear user guidance for resolving database issues\\n- Comprehensive health and diagnostic endpoints\\n- Graceful handling of temporary database connectivity issues\\n\\n## Files Updated\\n- config/supabase.js: Enhanced connection testing and cache management\\n- server.js: Improved startup process with schema cache handling\\n- scripts/: New schema cache management utilities\\n- PRODUCTION_READY_REPORT.md: Complete production status documentation\\n\\n## Testing Status\\n✅ All modules load without conflicts\\n✅ Server starts successfully in degraded mode\\n✅ Schema cache refresh utilities functional\\n✅ Production health endpoints operational\\n\\nResolves schema cache initialization issues after database updates.\\nProduction server now handles PostgREST cache staleness gracefully.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"\\n🎉 ProspectPro Production Deployment - SYNC COMPLETE\\n====================================================\\n\\n📋 Commit: 6a3d131 (feat: Production initialization with enhanced schema cache handling)\\n🔄 Status: Successfully committed, pushed, and synced\\n🚀 Branch: main (up to date with origin/main)\\n\\n✅ Changes Successfully Deployed:\\n================================\\n\\n🔧 Core Infrastructure:\\n- Enhanced Supabase configuration with schema cache management\\n- Production-safe database connection testing\\n- Graceful degraded mode startup capabilities\\n\\n🛠️ Schema Cache Management:\\n- Force refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic cache issue detection and user guidance\\n\\n📊 Production Server:\\n- Enhanced startup process with detailed error reporting\\n- Comprehensive health and diagnostic endpoints\\n- Clear user guidance for resolving database connectivity issues\\n\\n📋 Documentation:\\n- Complete production status report (PRODUCTION_READY_REPORT.md)\\n- Comprehensive testing and validation results\\n\\n🎯 Production Status: READY ✅\\n- Server handles schema cache issues gracefully\\n- No critical conflicts detected\\n- All modules load successfully\\n- Health endpoints operational\\n\\nNext deployment will inherit these production resilience improvements!\\n\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/check-docs-schema.sh\": true,\n    \"./scripts/install-git-hooks.sh\": true,\n    \"./scripts/repository-cleanup.sh\": true,\n    \"git mv\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"docs: Enforce new documentation schema - complete repository cleanup\\n\\n🧹 Repository Cleanup Complete:\\n- Root directory limited to 3 essential .md files (README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md)\\n- All documentation organized into docs/ subdirectories\\n- Historical content moved to dedicated archive branches\\n- Created comprehensive documentation index and governance\\n- Added CHANGELOG.md for version tracking\\n- Established automated enforcement with git hooks\\n\\n📚 New Structure:\\n- docs/setup/ - Installation and configuration guides\\n- docs/guides/ - User guides and tutorials  \\n- docs/technical/ - Technical documentation\\n- docs/deployment/ - Deployment and production guides\\n- docs/development/ - Development and contribution docs\\n\\n🗄️ Archive Branches (to be created):\\n- archive/development-phase - Development artifacts\\n- archive/deployment-phase - Deployment experiments\\n- archive/testing-reports - Test reports and validation\\n- archive/production-legacy - Legacy production documentation\\n\\n🔧 Enforcement System:\\n- Pre-commit hooks validate documentation schema\\n- Scripts for automated cleanup and validation\\n- Comprehensive governance documentation\\n- Structured commit message templates\\n\\nAll historical content preserved with full git history.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"docs: Add comprehensive documentation schema enforcement completion report\\n\\n📋 Complete Status Report:\\n- Repository cleanup successfully executed\\n- 15 root markdown files reduced to 3 (100% compliance)\\n- 24 documentation files organized in structured docs/ subdirectories\\n- 4 archive branches created with preserved historical content\\n- Automated enforcement system active with git hooks\\n- Comprehensive governance and maintenance procedures established\\n\\n✅ Mission Complete: Documentation schema enforcement operational\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Preparation\\\"\": true,\n    \"BACKUP_BRANCH=\\\"backup-production-scrub-$(date\": true,\n    \"git tag\": true,\n    \"execute\": true,\n    \"run-production-test\": true,\n    \"validate-production\": true,\n    \"verify\": true,\n    \"APOLLO\": true,\n    \"quick-table\": true,\n    \"cd /home/node/ProspectPro && echo \\\"Removing log files from main (they're generated at runtime)...\\\" && rm -f database-validation.log production-checklist.log production-fixed.log production.log server-test.log startup.log diagnostics.json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Removing the production scrubbing plan (moving to development docs)...\\\" && rm -f PRODUCTION_BRANCH_SCRUBBING_PLAN.md\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Testing server startup...\\\" && timeout 10s node server.js || echo \\\"Server test complete (timeout reached as expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add -A && git commit -m \\\"production: Complete branch scrubbing - main now production-only\\n\\n🧹 Production Branch Scrubbing Complete:\\n\\nREMOVED (Archived to appropriate branches):\\n- 10 development scripts → archive/development-phase\\n- 3 development utilities → archive/development-phase  \\n- Complete test/ directory → archive/old-tests\\n- Test simulation scripts → archive/old-tests\\n- Sample data files → archive/legacy-files\\n- 3 database development utilities → archive/development-phase\\n- All runtime log files (regenerated in production)\\n\\nPRODUCTION ESSENTIALS RETAINED:\\n✅ Core application: server.js, package.json\\n✅ Essential docs: README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md\\n✅ Production directories: api/, modules/, config/, public/, frontend/, supabase/\\n✅ Production scripts: 11 essential production scripts only\\n✅ Curated documentation: Production setup and user guides\\n\\nVALIDATION:\\n✅ Server starts successfully\\n✅ All production scripts present\\n✅ Essential modules and APIs intact\\n✅ Documentation schema compliant\\n\\nResult: Clean production-ready main branch with full development history preserved in organized archive branches.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"refactor: Production codebase optimization v3.1.0\\n\\n🔧 Production Enhancements:\\n\\nCONFIG:\\n- Enhanced Supabase client with connection pooling and caching\\n- Improved environment variable handling with fallbacks\\n- Added connection TTL caching (5min) for performance\\n\\nSERVER:\\n- Upgraded to v3.1.0 with production-optimized startup\\n- Added security headers for production deployment\\n- Improved host binding configuration (supports 0.0.0.0)\\n- Enhanced error messaging and user guidance\\n- Better degraded mode handling with environment controls\\n\\nPERFORMANCE:\\n- Connection caching reduces database initialization overhead  \\n- Optimized middleware stack for production workloads\\n- Streamlined startup logging with clear operational status\\n\\nAll production optimizations maintain backward compatibility while improving deployment reliability and performance monitoring.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"secret.*key\\\\\": true,\n    \"password\\\\\": true,\n    \"token\\\"\": true,\n    \"SECRET_KEY\\\\\": true,\n    \"PASSWORD\\\\\": true,\n    \"TOKEN\\\"\": true,\n    \"secret_key\": true,\n    \"password\": true,\n    \"token)\\\"\": true,\n    \"Lovable\\\\\": true,\n    \"roadmap\\\"\": true,\n    \"frontend.*lovable\\\"\": true,\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Created comprehensive workflow guide\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Moved workflow guide to docs/deployment/ per repo governance\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_commit.tmp\": true,\n    \"git commit -m \\\"🧹 Clean repository structure - archive legacy code\\n\\n- Removed duplicate nested ProspectPro/ directory (preserved in local archive)\\n- Archived legacy scripts not aligned with Docker architecture\\n- Removed reference to missing validate-production-database script\\n- Updated Copilot instructions with repository management details\\n- Maintained clean production structure per governance rules\\n\\nArchived items:\\n• Legacy project structure → archive/legacy-structure/\\n• Legacy deployment scripts → archive/legacy-scripts/\\n• Preserved locally but not committed per .gitignore rules\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"code\": true,\n    \"npm run mcp:test\": true,\n    \"python\": true,\n    \".\\\\scripts\\\\init-prod-server.ps1\": true,\n    \".\\\\scripts\\\\init-prod-server-simple.ps1\": true,\n    \".\\\\scripts\\\\start-prod.ps1\": true,\n    \"notepad\": true,\n    \".\\\\start-production.ps1\": true,\n    \"ForEach-Object\": true,\n    \"Get-Process | Where-Object {$_.ProcessName -like \\\"*node*\\\"} | Stop-Process -Force; Write-Host \\\"✅ All Node processes terminated\\\" -ForegroundColor Green\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$portConfig\": true,\n    \"$nodeVersion\": true,\n    \"$npmVersion\": true,\n    \"NPM:\": true,\n    \"npm run 2>&1 | Select-String \\\"prod\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run diag\": true,\n    \"netstat\": true,\n    \"$checklist\": true,\n    \"$checklist[\\\"PORT\": true,\n    \"$checklist[\\\"NODE_ENV=production\\\"]\": true,\n    \"$checklist[\\\"Supabase\": true,\n    \"foreach\": true,\n    \"$env:NODE_ENV=\\\"production\\\"\": true,\n    \"Clear-Host\": true,\n    \"Get-ExecutionPolicy\": true,\n    \"git commit -m \\\"fix: Windows PowerShell compatibility and production deployment\\n\\n- Update package.json scripts to use PowerShell (.ps1) instead of shell scripts (.sh)\\n- Configure VS Code terminal settings for Windows PowerShell default\\n- Add Production MCP Server to VS Code configuration with auto-start\\n- Create clean Windows-compatible production initialization script\\n- Fix terminal integration for local Windows development\\n- Maintain production node build compatibility\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"copy\": true,\n    \"ConvertFrom-Json\": true,\n    \"git commit -m \\\"fix: Add explicit .env loading to server.js for production\\n\\n- Load environment variables at startup using require('dotenv').config()\\n- Ensures GitHub Actions generated .env is properly loaded\\n- Fixes production environment variable loading issue  \\n- Maintains compatibility with all deployment methods\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"PRODUCTION OPTIMIZATION: Complete Supabase Vault integration, strict production mode, enhanced MCP server\\n\\n✅ SUPABASE VAULT INTEGRATION:\\n- Added modules/utils/supabase-vault-loader.js with runtime API key loading\\n- Enhanced config/environment-loader.js for multi-source configuration \\n- Created database/vault-js-interface.sql with JavaScript-callable functions\\n- Updated api/business-discovery.js to use vault API keys with fallback\\n\\n✅ STRICT PRODUCTION MODE:\\n- Updated server.js with EnvironmentLoader and vault integration\\n- Added critical API key validation (Foursquare required)\\n- Enforced ALLOW_DEGRADED_START=false in production\\n- Enhanced startup validation with database + vault checks\\n\\n✅ GITHUB ACTIONS WORKFLOW OPTIMIZATION:\\n- Fixed repository-maintenance.yml (schedule/manual only)  \\n- Fixed docker-env.yml (manual/workflow_call only)\\n- Prevents cascade failures and resource waste\\n\\n✅ ENHANCED PRODUCTION MCP SERVER:\\n- Added vault_api_key_status tool for comprehensive API key diagnostics\\n- Added production_startup_validator for complete configuration validation\\n- Added github_workflow_optimizer for workflow analysis and issue detection\\n- Updated MCP configuration for enhanced production monitoring\\n\\n✅ COMPREHENSIVE DOCUMENTATION:\\n- Updated .github/copilot-instructions.md with vault integration details\\n- Added strict production mode patterns and examples\\n- Enhanced MCP server strategy with new tools\\n- Updated architecture documentation with vault integration patterns\\n\\n🔑 VAULT FEATURES:\\n- 5-minute TTL caching for performance\\n- Exponential backoff retry logic\\n- Environment variable fallback\\n- Template/placeholder value filtering\\n- Comprehensive error handling and diagnostics\\n\\n🏭 PRODUCTION FEATURES:\\n- Zero-tolerance for degraded starts\\n- Critical API validation at startup\\n- Real-time vault status monitoring\\n- Enhanced environment switching workflow\\n- Optimized GitHub Actions workflows\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"envLoader.getConfig().supabase.url)\": true,\n    \"envLoader.getConfig().features[k]).length)\": true,\n    \"console.log('🔑\": true,\n    \"git add . && git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:ALLOW_DEGRADED_START=\\\"true\\\"\": true,\n    \"docs/SUPABASE_UPGRADE_NOTES.md\": true,\n    \"console.log('📍\": true,\n    \"console.log('\\\\\\\\n🔧\": true,\n    \"console.log('==========================================')\": true,\n    \"console.log(\\\\\\\\\\\\\\\"\": true,\n    \"}')\": true,\n    \"console.log('}')\": true,\n    \"\\\\\\\"')\": true,\n    \"Result:',\": true,\n    \"docs/GOOGLE_CLOUD_QUICKSTART.md\": true,\n    \"git commit -m \\\"feat: Add Google Cloud Run deployment workflow with validation\\n\\n- Complete CI/CD pipeline with Docker build/push/deploy\\n- Pre-deployment validation script for local testing\\n- Updated Dockerfile for Cloud Run (port 3100)\\n- Comprehensive health checks and deployment verification\\n- Ready for automated deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"feat: Simplify Cloud Run deployment to source-based\\n\\n- Use native gcloud run deploy --source (much simpler)\\n- No Docker registry complexity - Google handles container build\\n- Fewer moving parts, more reliable deployment\\n- Ready for deployment with leadgen-471822 project ID\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"test: verify Cloud Build trigger configuration\\n\\n- Add deployment test file to trigger automated build\\n- Test service account permissions (Cloud Build WorkerPool User, Artifact Registry Writer)\\n- Verify us-central1 regional alignment\\n- Confirm GitHub App repository connection\\n- Expected: successful build and deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -am \\\"fix: correct Artifact Registry repository name in cloudbuild.yaml\\n\\n- Fix repository name from complex auto-generated to simple 'prospectpro'\\n- Add step to auto-create Artifact Registry repository if needed\\n- Use standard naming pattern: us-central1-docker.pkg.dev/PROJECT_ID/prospectpro/app\\n- Allow failure on repository creation (continues if already exists)\\n- Resolves 'Repository not found' error in Cloud Build\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"trigger-test.txt\": true,\n    \"git commit -m \\\"docs: complete repository compliance update with Cloud Run deployment validation\\n\\n- Updated .github/copilot-instructions.md with Google Cloud Run deployment section\\n- Added validated trigger configuration documentation (ID: 0358b3a4-c7a4-4da9-9610-1e335c4894e0)\\n- Enhanced docs/PRODUCTION_SETUP_GUIDE.md with Cloud Run deployment workflow\\n- Updated README.md to v3.0 with production status badges and Cloud Build links\\n- Confirmed .vscode/mcp-config.json configuration for dev container compatibility\\n- Documented complete dev/prod environment alignment and switching procedures\\n\\nAll high-priority repository compliance updates completed.\\nReady for clean closure and fresh development session initiation.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"🔧 Fix Cloud Run port conflict - Remove fixed PORT, enable dynamic port binding\\n\\n- Remove ENV PORT=3100 from Dockerfile (conflicted with Cloud Run's dynamic PORT)\\n- Remove --port=3100 from cloudbuild.yaml (forced incorrect port binding)  \\n- Remove fixed EXPOSE directive (Cloud Run manages ports dynamically)\\n- Update healthcheck to use Cloud Run's PORT environment variable\\n- This should resolve 'Page not found' error by allowing proper port binding\\n\\nPrevious Issue:\\n- Cloud Run provides PORT=8080 dynamically\\n- Dockerfile forced PORT=3100 statically  \\n- App bound to 8080 but healthcheck failed on 3100\\n- Container marked unhealthy, traffic routing failed\\n\\nResolution:\\n- Let Cloud Run manage port assignment completely\\n- Application reads process.env.PORT correctly\\n- Healthcheck uses dynamic port with fallback\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"gcloud\": true,\n    \"git commit -m \\\"📝 Fix Cloud Build trigger ID in documentation\\n\\n- Update trigger ID to correct one: ae04dd92-4509-43ee-9f70-da3caf15dbb4\\n- Previous ID (0358b3a4-c7a4-4da9-9610-1e335c4894e0) was incorrect\\n- This explains why builds succeeded but service wasn't updating\\n- Documentation now reflects the actual production trigger\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"Fix Cloud Run 404 issue: Enable degraded startup, improve error handling, and enhance logging\\n\\n- Add ALLOW_DEGRADED_START=true to Dockerfile for Cloud Run stability\\n- Remove process.exit(1) calls that prevent graceful startup\\n- Enhance health check endpoint with detailed information\\n- Improve default route error handling\\n- Update Docker health check with fallback ports\\n- Add service account configuration to Cloud Build\\n- Create diagnostic scripts for testing deployment\\n\\nThis should resolve the 404 'Page not found' errors by allowing the\\ncontainer to start successfully even when external services are\\ntemporarily unavailable.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:PORT=8080\": true,\n    \"Get-ChildItem -Directory | Where-Object {$_.Name -like \\\"*Prospect*\\\"}\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"dir\": true,\n    \"npm run test\": true,\n    \"cd /workspaces/ProspectPro && node -e \\\"console.log(JSON.parse(require('fs').readFileSync('.vscode/settings.json', 'utf8')))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Deno\\\"\": true,\n    \"MCP\\\"\": true,\n    \"server.js\": true,\n    \"server-simple.js\": true,\n    \"mcp-servers'\": true,\n    \"cd /workspaces/ProspectPro/mcp-servers && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mcp)\\\"\": true,\n    \"npm run production-start\": true,\n    \"cd /workspaces/ProspectPro && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"server)\\\"\": true,\n    \"jobs\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"location\\\":\\\"San Diego, CA\\\",\\\"radius\\\":10,\\\"businessTypes\\\":[\\\"restaurant\\\"],\\\"limit\\\":5}' -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"fg\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ps aux | grep -E \\\"(node.*server)\\\" | grep -v grep\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 3 && curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 10 && curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | head -20\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm.*dev\\\"\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"businessType\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"Seattle, WA\\\", \\\"maxResults\\\": 2}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    }\n  },\n  \"chat.agent.maxRequests\": 1000,\n  \"chat.editing.confirmEditRequestRetry\": false,\n  \"gitlens.gitCommands.skipConfirmations\": [\"fetch:command\"],\n  \"chat.editing.confirmEditRequestRemoval\": false,\n  \"githubPullRequests.codingAgent.promptForConfirmation\": false,\n  \"[markdown]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[jsonc]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[javascript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"workbench.secondarySideBar.defaultVisibility\": \"visible\",\n  \"window.menuBarVisibility\": \"classic\",\n  \"containers.containerClient\": \"com.microsoft.visualstudio.containers.docker\",\n  \"containers.orchestratorClient\": \"com.microsoft.visualstudio.orchestrators.dockercompose\",\n  \"@azure.argTenant\": \"\",\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"text\": \"- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Code Gen Best Practices: Before generating code for Azure, running terminal commands for Azure, performing operations related to Azure, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `code-generation` to get general Azure code generation best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Deployment Best Practices: Before deploying to Azure, preparing applications for deployment to Azure, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `deployment` to get general Azure deployment best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Code Gen Best Practices: Before generating code for Azure Functions, performing operations related to Azure Functions, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `code-generation` to get Azure Functions code generation best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Deployment Best Practices: Before deploying Azure Functions apps to Azure, preparing for the deployment, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `deployment` to get Azure Functions deployment best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure SWA Best Practices: Before working with static web apps, creating plans for static web apps, or performing related operations, always invoke your Azure best practice tool if available first. Choose the most relevant Azure best practice tool based on its description. Only call this tool when the user is discussing Azure Static Web Apps; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Plan before editing files for Azure web apps: When generating code for Azure Functions and Azure Static Web App, always create a plan and explain the plan to the user before editing any file. Proceed with editing the files after getting consent from the user.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Summarize topic before taking action: When the user asks about Azure Functions, invoke the azure_development-summarize_topic tool once first to see if any existing custom mode could be a good fit to what user is asking.\"\n    }\n  ],\n  \"workbench.startupEditor\": \"none\",\n  \"git-autoconfig.configList\": [\n    {\n      \"user.email\": \"Alextorelli28@gmail.com\",\n      \"user.name\": \"Alextorelli28@gmail.com\"\n    }\n  ],\n  \"redhat.telemetry.enabled\": true,\n  \"git-autoconfig.ignoreRootList\": [\"D:/APPS/ProspectPro/ProspectPro\"],\n  \"terminal.integrated.enableMultiLinePasteWarning\": \"never\",\n  \"remoteHub.commitDirectlyWarning\": \"off\",\n  \"vs-kubernetes\": {\n    \"vscode-kubernetes.kubectl-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/kubectl/kubectl\",\n    \"vscode-kubernetes.helm-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm\",\n    \"vscode-kubernetes.minikube-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube\"\n  },\n  \"githubPullRequests.createOnPublishBranch\": \"never\",\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"plaintext\": true,\n    \"markdown\": true,\n    \"scminput\": false\n  },\n  \"[sql]\": {\n    \"editor.defaultFormatter\": \"mtxr.sqltools\"\n  },\n  \"[html]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[typescriptreact]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[css]\": {\n    \"editor.defaultFormatter\": \"vscode.css-language-features\"\n  },\n  \"[json]\": {\n    \"editor.defaultFormatter\": \"vscode.json-language-features\"\n  },\n  \"workbench.colorCustomizations\": {\n    \"[Vira*]\": {\n      \"statusBar.debuggingBackground\": \"#80CBC433\",\n      \"statusBar.debuggingForeground\": \"#80CBC4\",\n      \"toolbar.activeBackground\": \"#80CBC426\",\n      \"button.background\": \"#80CBC4\",\n      \"button.hoverBackground\": \"#80CBC4cc\",\n      \"extensionButton.separator\": \"#80CBC433\",\n      \"extensionButton.background\": \"#80CBC414\",\n      \"extensionButton.foreground\": \"#80CBC4\",\n      \"extensionButton.hoverBackground\": \"#80CBC433\",\n      \"extensionButton.prominentForeground\": \"#80CBC4\",\n      \"extensionButton.prominentBackground\": \"#80CBC414\",\n      \"extensionButton.prominentHoverBackground\": \"#80CBC433\",\n      \"activityBarBadge.background\": \"#80CBC4\",\n      \"activityBar.activeBorder\": \"#80CBC4\",\n      \"activityBarTop.activeBorder\": \"#80CBC4\",\n      \"list.inactiveSelectionIconForeground\": \"#80CBC4\",\n      \"list.activeSelectionForeground\": \"#80CBC4\",\n      \"list.inactiveSelectionForeground\": \"#80CBC4\",\n      \"list.highlightForeground\": \"#80CBC4\",\n      \"sash.hoverBorder\": \"#80CBC480\",\n      \"list.activeSelectionIconForeground\": \"#80CBC4\",\n      \"scrollbarSlider.activeBackground\": \"#80CBC480\",\n      \"editorSuggestWidget.highlightForeground\": \"#80CBC4\",\n      \"textLink.foreground\": \"#80CBC4\",\n      \"progressBar.background\": \"#80CBC4\",\n      \"pickerGroup.foreground\": \"#80CBC4\",\n      \"tab.activeBorder\": \"#80CBC400\",\n      \"tab.activeBorderTop\": \"#80CBC4\",\n      \"tab.unfocusedActiveBorder\": \"#80CBC400\",\n      \"tab.unfocusedActiveBorderTop\": \"#80CBC4\",\n      \"tab.activeModifiedBorder\": \"#80CBC4\",\n      \"notificationLink.foreground\": \"#80CBC4\",\n      \"editorWidget.resizeBorder\": \"#80CBC4\",\n      \"editorWidget.border\": \"#80CBC4\",\n      \"settings.modifiedItemIndicator\": \"#80CBC4\",\n      \"panelTitle.activeBorder\": \"#80CBC4\",\n      \"breadcrumb.activeSelectionForeground\": \"#80CBC4\",\n      \"menu.selectionForeground\": \"#80CBC4\",\n      \"menubar.selectionForeground\": \"#80CBC4\",\n      \"editor.findMatchBorder\": \"#80CBC4\",\n      \"selection.background\": \"#80CBC440\",\n      \"statusBarItem.remoteBackground\": \"#80CBC414\",\n      \"statusBarItem.remoteHoverBackground\": \"#80CBC4\",\n      \"statusBarItem.remoteForeground\": \"#80CBC4\",\n      \"notebook.inactiveFocusedCellBorder\": \"#80CBC480\",\n      \"commandCenter.activeBorder\": \"#80CBC480\",\n      \"chat.slashCommandForeground\": \"#80CBC4\",\n      \"chat.avatarForeground\": \"#80CBC4\",\n      \"activityBarBadge.foreground\": \"#000000\",\n      \"button.foreground\": \"#000000\",\n      \"statusBarItem.remoteHoverForeground\": \"#000000\",\n      \"editorGroupHeader.tabsBackground\": \"#ffffff0a\",\n      \"tab.border\": \"#ffffff01\",\n      \"tab.inactiveBackground\": \"#ffffff01\",\n      \"widget.shadow\": \"#00000000\",\n      \"scrollbar.shadow\": \"#00000000\"\n    }\n  },\n  \"workbench.preferredDarkColorTheme\": \"Vira Ocean\",\n  \"workbench.productIconTheme\": \"viraUIIcons\",\n  \"viraTheme.contrastedTabs\": true,\n  \"viraTheme.hidesShadows\": true,\n  \"chat.todoListTool.enabled\": false,\n  \"chat.tools.edits.autoApprove\": {\n    \"**/*.{csproj,fsproj,vbproj}\": true\n  },\n  \"chat.useChatSessionsForCloudButton\": true,\n  \"workbench.settings.applyToAllProfiles\": [\n    \"chat.useChatSessionsForCloudButton\"\n  ],\n  \"chat.agentSessionsViewLocation\": \"view\",\n  \"window.density.editorTabHeight\": \"compact\",\n  \"docker.extension.enableComposeLanguageServer\": false,\n  \"docker.extension.dockerEngineAvailabilityPrompt\": false,\n  \"github.copilot.chat.agent.thinkingTool\": true,\n  \"github.copilot.chat.editor.temporalContext.enabled\": true,\n  \"github.copilot.chat.edits.temporalContext.enabled\": true,\n  \"github.copilot.chat.responsesApiReasoningEffort\": \"high\",\n  \"github.copilot.chat.responsesApiReasoningSummary\": \"detailed\",\n  \"github.copilot.chat.useResponsesApi\": true,\n  \"viraTheme.useTopTabIndicator\": true,\n  \"remoteHub.richNavigation.enabled\": true,\n  \"workbench.editor.enablePreview\": false,\n  \"deno.codeLens.test\": true,\n  \"deno.codeLens.referencesAllFunctions\": true,\n  \"deno.codeLens.references\": true,\n  \"deno.codeLens.implementations\": true,\n  \"deno.logFile\": true,\n  \"chat.mcp.serverSampling\": {\n    \"Global in Code: memory\": {\n      \"allowedModels\": [\n        \"copilot/gpt-4.1\",\n        \"copilot/auto\",\n        \"copilot/claude-3.7-sonnet\",\n        \"copilot/claude-3.7-sonnet-thought\",\n        \"copilot/claude-sonnet-4\",\n        \"copilot/gemini-2.5-pro\",\n        \"copilot/gpt-5\",\n        \"copilot/grok-code-fast-1\"\n      ]\n    }\n  },\n  \"snyk.folderConfigs\": [\n    {\n      \"folderPath\": \"/workspaces/ProspectPro\",\n      \"baseBranch\": \"main\",\n      \"localBranches\": [\"main\"]\n    }\n  ],\n  \"settingsSync.ignoredExtensions\": [\n    \"christian-kohler.npm-intellisense\",\n    \"ms-vscode.vscode-node-azure-pack\",\n    \"ms-azuretools.vscode-azurevirtualmachines\"\n  ],\n  \"vsicons.dontShowNewVersionMessage\": true,\n  \"snyk.yesWelcomeNotification\": false,\n  \"snyk.trustedFolders\": [\"/workspaces/ProspectPro\"],\n  \"[dockercompose]\": {\n    \"editor.insertSpaces\": true,\n    \"editor.tabSize\": 2,\n    \"editor.autoIndent\": \"advanced\",\n    \"editor.quickSuggestions\": {\n      \"other\": true,\n      \"comments\": false,\n      \"strings\": true\n    },\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  },\n  \"[github-actions-workflow]\": {\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  }\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":12,"duration":0.916},
{"type":"mark","name":"lsp.did_change_batched","count":1,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":1,"duration":12.547},
{"type":"mark","name":"lsp.did_change_batched","count":2,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":2,"duration":1.502},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":1,"duration":0.023},
{"type":"mark","name":"lsp.did_close","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"}}},
{"type":"measure","name":"lsp.did_close","count":2,"duration":0.037},
{"type":"mark","name":"lsp.did_close","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":3,"duration":0.033},
{"type":"mark","name":"lsp.did_close","count":4,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":4,"duration":0.005},
{"type":"mark","name":"lsp.did_open","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// Import optimization modules (converted to Deno-compatible imports)\n// Note: These would need to be transpiled or rewritten for Deno, but showing the structure\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface BusinessDiscoveryRequest {\n  businessType: string;\n  location: string;\n  maxResults?: number;\n  budgetLimit?: number;\n  requireCompleteContacts?: boolean;\n  minConfidenceScore?: number;\n  additionalQueries?: string[];\n  tradeAssociations?: boolean;\n  professionalLicensing?: boolean;\n  chamberVerification?: boolean;\n  apolloDiscovery?: boolean;\n}\n\ninterface BusinessLead {\n  businessName: string;\n  address: string;\n  phone: string;\n  website: string;\n  email: string;\n  optimizedScore: number;\n  validationCost: number;\n  enhancementData: {\n    verificationSources: string[];\n    apolloVerified: boolean;\n    chamberVerified: boolean;\n    licenseVerified: boolean;\n    executiveContact?: string;\n    processingMetadata: {\n      totalCost: number;\n      totalConfidenceBoost: number;\n      apisSkipped: string[];\n      processingStrategy: string;\n    };\n  };\n}\n\n// Enhanced Business Classifier for intelligent API routing\nclass OptimizedBusinessClassifier {\n  private businessPatterns = {\n    spa: {\n      keywords: [\n        \"spa\",\n        \"wellness\",\n        \"massage\",\n        \"facial\",\n        \"relaxation\",\n        \"therapeutic\",\n      ],\n      confidenceWeight: 0.9,\n      relevantAPIs: [\"spaAssociation\", \"chamber\"],\n      geographicScope: \"local\",\n    },\n    beauty: {\n      keywords: [\"beauty\", \"salon\", \"hair\", \"nail\", \"cosmetic\", \"barbershop\"],\n      confidenceWeight: 0.85,\n      relevantAPIs: [\"beautyAssociation\", \"chamber\"],\n      geographicScope: \"local\",\n    },\n    accounting: {\n      keywords: [\"accounting\", \"cpa\", \"tax\", \"bookkeeping\", \"financial\"],\n      confidenceWeight: 0.95,\n      relevantAPIs: [\"cpaLicensing\", \"chamber\"],\n      geographicScope: \"state\",\n    },\n    professional: {\n      keywords: [\"law\", \"legal\", \"consulting\", \"architect\", \"engineer\"],\n      confidenceWeight: 0.8,\n      relevantAPIs: [\"chamber\", \"apollo\"],\n      geographicScope: \"state\",\n    },\n  };\n\n  classifyBusiness(business: BusinessLead) {\n    const businessText =\n      `${business.businessName} ${business.address}`.toLowerCase();\n    let bestMatch = null;\n    let highestScore = 0;\n\n    for (const [type, pattern] of Object.entries(this.businessPatterns)) {\n      const matches = pattern.keywords.filter((keyword) =>\n        businessText.includes(keyword)\n      ).length;\n      const score =\n        (matches / pattern.keywords.length) * pattern.confidenceWeight * 100;\n\n      if (score > highestScore) {\n        highestScore = score;\n        bestMatch = type;\n      }\n    }\n\n    const confidence =\n      highestScore > 70 ? \"high\" : highestScore > 40 ? \"medium\" : \"low\";\n\n    return {\n      primaryType: bestMatch,\n      confidence,\n      score: highestScore,\n      relevantAPIs: bestMatch\n        ? this.businessPatterns[bestMatch].relevantAPIs\n        : [\"chamber\"],\n      geographicScope: bestMatch\n        ? this.businessPatterns[bestMatch].geographicScope\n        : \"local\",\n    };\n  }\n}\n\n// Geographic Intelligence Router for location-based filtering\nclass GeographicRouter {\n  private professionalLicensingStates = new Set([\n    \"CA\",\n    \"NY\",\n    \"TX\",\n    \"FL\",\n    \"IL\",\n    \"WA\",\n    \"PA\",\n    \"OH\",\n  ]);\n  private metropolitanAreas = new Set([\n    \"new york\",\n    \"los angeles\",\n    \"chicago\",\n    \"houston\",\n    \"phoenix\",\n    \"philadelphia\",\n    \"san antonio\",\n    \"san diego\",\n    \"dallas\",\n    \"san jose\",\n    \"austin\",\n    \"jacksonville\",\n    \"fort worth\",\n    \"columbus\",\n    \"charlotte\",\n  ]);\n\n  analyzeLocation(business: BusinessLead) {\n    const address = business.address.toLowerCase();\n\n    // Extract state\n    const stateMatch = business.address.match(/\\b([A-Z]{2})\\b/);\n    const state = stateMatch ? stateMatch[1] : null;\n\n    // Extract city\n    const cityMatch = business.address.match(/,\\s*([^,]+),\\s*[A-Z]{2}/);\n    const city = cityMatch ? cityMatch[1].trim().toLowerCase() : null;\n\n    // Determine if metropolitan area\n    const isMetropolitan = city ? this.metropolitanAreas.has(city) : false;\n\n    return {\n      state,\n      city,\n      isMetropolitan,\n      hasStateLicensing: state\n        ? this.professionalLicensingStates.has(state)\n        : false,\n      apolloRelevance: isMetropolitan ? \"high\" : city ? \"medium\" : \"low\",\n    };\n  }\n\n  shouldCallAPI(\n    apiType: string,\n    businessClassification: any,\n    locationData: any\n  ): boolean {\n    switch (apiType) {\n      case \"professionalLicensing\":\n        return (\n          locationData.hasStateLicensing &&\n          businessClassification.primaryType === \"accounting\"\n        );\n      case \"spaAssociation\":\n        return businessClassification.primaryType === \"spa\";\n      case \"beautyAssociation\":\n        return businessClassification.primaryType === \"beauty\";\n      case \"apollo\":\n        return (\n          locationData.apolloRelevance !== \"low\" &&\n          businessClassification.confidence !== \"low\"\n        );\n      case \"chamber\":\n        return true; // Always relevant but with different confidence\n      default:\n        return false;\n    }\n  }\n}\n\n// Batch Enhancement Processor for parallel processing\nclass BatchEnhancementProcessor {\n  private classifier = new OptimizedBusinessClassifier();\n  private geoRouter = new GeographicRouter();\n\n  async processBatch(businesses: BusinessLead[], enhancementOptions: any) {\n    console.log(\n      `🚀 Starting optimized batch processing for ${businesses.length} businesses`\n    );\n\n    // Step 1: Classify and analyze all businesses\n    const analyzedBusinesses = businesses.map((business) => {\n      const classification = this.classifier.classifyBusiness(business);\n      const locationData = this.geoRouter.analyzeLocation(business);\n\n      return {\n        ...business,\n        classification,\n        locationData,\n        apiRecommendations: this.generateAPIRecommendations(\n          classification,\n          locationData,\n          enhancementOptions\n        ),\n      };\n    });\n\n    // Step 2: Group by processing strategy\n    const parallelGroup = analyzedBusinesses.filter(\n      (b) =>\n        b.classification.confidence === \"high\" &&\n        b.apiRecommendations.length <= 3\n    );\n    const sequentialGroup = analyzedBusinesses.filter(\n      (b) => !parallelGroup.includes(b)\n    );\n\n    console.log(\n      `📊 Processing groups: Parallel: ${parallelGroup.length}, Sequential: ${sequentialGroup.length}`\n    );\n\n    // Step 3: Process groups optimally\n    const results = [];\n\n    // Process parallel group with Promise.all\n    if (parallelGroup.length > 0) {\n      const parallelPromises = parallelGroup.map((business) =>\n        this.processBusinessEnhancements(business, enhancementOptions)\n      );\n      const parallelResults = await Promise.all(parallelPromises);\n      results.push(...parallelResults);\n    }\n\n    // Process sequential group one by one\n    for (const business of sequentialGroup) {\n      try {\n        const result = await this.processBusinessEnhancements(\n          business,\n          enhancementOptions\n        );\n        results.push(result);\n      } catch (error) {\n        console.error(`Error processing ${business.businessName}:`, error);\n        results.push({\n          ...business,\n          enhancementData: { error: error.message },\n        });\n      }\n    }\n\n    return results;\n  }\n\n  private generateAPIRecommendations(\n    classification: any,\n    locationData: any,\n    options: any\n  ) {\n    const recommendations = [];\n\n    if (\n      options.tradeAssociations &&\n      this.geoRouter.shouldCallAPI(\n        \"spaAssociation\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"spaAssociation\");\n    }\n    if (\n      options.tradeAssociations &&\n      this.geoRouter.shouldCallAPI(\n        \"beautyAssociation\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"beautyAssociation\");\n    }\n    if (\n      options.professionalLicensing &&\n      this.geoRouter.shouldCallAPI(\n        \"professionalLicensing\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"professionalLicensing\");\n    }\n    if (\n      options.chamberVerification &&\n      this.geoRouter.shouldCallAPI(\"chamber\", classification, locationData)\n    ) {\n      recommendations.push(\"chamber\");\n    }\n    if (\n      options.apolloDiscovery &&\n      this.geoRouter.shouldCallAPI(\"apollo\", classification, locationData)\n    ) {\n      recommendations.push(\"apollo\");\n    }\n\n    return recommendations;\n  }\n\n  private async processBusinessEnhancements(\n    business: any,\n    enhancementOptions: any\n  ) {\n    const enhancements: Record<string, unknown> = {};\n    let totalConfidenceBoost = 0;\n    let totalCost = 0;\n\n    // Only call recommended APIs\n    const apiPromises = business.apiRecommendations.map(\n      async (apiType: string) => {\n        try {\n          switch (apiType) {\n            case \"spaAssociation\":\n              if (business.classification.primaryType === \"spa\") {\n                const result = await this.processSpaAssociation(business);\n                if (result.verified) {\n                  enhancements.spaAssociation = result;\n                  totalConfidenceBoost += 20;\n                }\n              }\n              break;\n            case \"beautyAssociation\":\n              if (business.classification.primaryType === \"beauty\") {\n                const result = await this.processBeautyAssociation(business);\n                if (result.verified) {\n                  enhancements.beautyAssociation = result;\n                  totalConfidenceBoost += 18;\n                }\n              }\n              break;\n            case \"professionalLicensing\":\n              if (business.classification.primaryType === \"accounting\") {\n                const result = await this.processCPALicense(business);\n                if (result.licensed) {\n                  enhancements.cpaLicense = result;\n                  totalConfidenceBoost += 25;\n                }\n              }\n              break;\n            case \"chamber\":\n              const chamberResult = await this.processChamberVerification(\n                business\n              );\n              if (chamberResult.verified) {\n                enhancements.chamber = chamberResult;\n                totalConfidenceBoost += 15;\n              }\n              break;\n            case \"apollo\":\n              if (business.website) {\n                const apolloResult = await this.processApolloEnrichment(\n                  business\n                );\n                enhancements.apollo = apolloResult;\n                totalCost += apolloResult.cost || 1.0;\n                if (apolloResult.success) {\n                  totalConfidenceBoost += 30;\n                }\n              }\n              break;\n          }\n        } catch (error) {\n          console.error(\n            `Error processing ${apiType} for ${business.businessName}:`,\n            error\n          );\n        }\n      }\n    );\n\n    await Promise.all(apiPromises);\n\n    return {\n      ...business,\n      enhancementData: {\n        ...enhancements,\n        processingMetadata: {\n          totalConfidenceBoost,\n          totalCost,\n          apisUsed: business.apiRecommendations,\n          apisSkipped: this.calculateSkippedAPIs(business.apiRecommendations),\n          processingStrategy:\n            business.apiRecommendations.length <= 3 ? \"parallel\" : \"sequential\",\n        },\n      },\n      optimizedScore: business.optimizedScore + totalConfidenceBoost,\n    };\n  }\n\n  private calculateSkippedAPIs(usedAPIs: string[]) {\n    const allAPIs = [\n      \"spaAssociation\",\n      \"beautyAssociation\",\n      \"professionalLicensing\",\n      \"chamber\",\n      \"apollo\",\n    ];\n    return allAPIs.filter((api) => !usedAPIs.includes(api));\n  }\n\n  // Enhancement processing methods (optimized versions)\n  private async processSpaAssociation(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 50)); // Simulate API call\n    return {\n      verified: Math.random() > 0.7,\n      membershipType: \"Professional\",\n      source: \"spa_industry_association\",\n      confidenceBoost: 20,\n    };\n  }\n\n  private async processBeautyAssociation(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    return {\n      verified: Math.random() > 0.65,\n      membershipLevel: \"Professional\",\n      source: \"professional_beauty_association\",\n      confidenceBoost: 18,\n    };\n  }\n\n  private async processCPALicense(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 60));\n    return {\n      licensed: Math.random() > 0.6,\n      licenseType: \"CPA\",\n      state: business.locationData.state,\n      source: \"cpa_verify\",\n      confidenceBoost: 25,\n    };\n  }\n\n  private async processChamberVerification(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 40));\n    const isMetropolitan = business.locationData.isMetropolitan;\n    const baseChance = isMetropolitan ? 0.8 : 0.6;\n\n    return {\n      verified: Math.random() < baseChance,\n      chambers: [\n        `${business.locationData.city || \"Local\"} Chamber of Commerce`,\n      ],\n      membershipLevel: \"Professional Member\",\n      source: \"chamber_directory\",\n      confidenceBoost: 15,\n    };\n  }\n\n  private async processApolloEnrichment(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 100));\n    const success = Math.random() > 0.3;\n\n    return {\n      success,\n      cost: 1.0,\n      ownerContacts: success\n        ? [\n            {\n              name: \"John Smith\",\n              title: \"Owner\",\n              email: `owner@${this.extractDomain(business.website)}`,\n            },\n          ]\n        : [],\n      source: \"apollo_io\",\n    };\n  }\n\n  private extractDomain(website: string): string {\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n      return url.hostname.replace(\"www.\", \"\");\n    } catch {\n      return \"example.com\";\n    }\n  }\n}\n\n// Enhanced Quality Scorer with verification methods\nclass OptimizedQualityScorer {\n  private maxCostPerBusiness: number;\n  private dynamicThreshold: number;\n\n  constructor(options: { maxCostPerBusiness?: number } = {}) {\n    this.maxCostPerBusiness = options.maxCostPerBusiness || 2.0;\n    this.dynamicThreshold = 50;\n  }\n\n  scoreBusiness(business: any): BusinessLead {\n    const businessName = business.name || business.businessName || \"\";\n    const address = business.formatted_address || business.address || \"\";\n    const phone = business.formatted_phone_number || business.phone || \"\";\n    const website = business.website || \"\";\n\n    // Only use real email if provided by the source\n    const email = business.email || \"\";\n\n    // Scoring breakdown\n    const scores = {\n      businessName: businessName ? Math.min(100, businessName.length * 3) : 0,\n      address: address ? 100 : 0,\n      phone: phone ? 80 : 0,\n      website: website ? 80 : 0,\n      email: email ? 60 : 0,\n      external: 0,\n    };\n\n    const totalScore =\n      Object.values(scores).reduce((sum, score) => sum + score, 0) / 6;\n\n    return {\n      businessName,\n      address,\n      phone,\n      website,\n      email,\n      optimizedScore: Math.round(totalScore),\n      validationCost: 0.02, // Base validation cost\n      enhancementData: {\n        verificationSources: [\"google_places\"],\n        apolloVerified: false,\n        chamberVerified: false,\n        licenseVerified: false,\n        processingMetadata: {\n          totalCost: 0,\n          totalConfidenceBoost: 0,\n          apisSkipped: [],\n          processingStrategy: \"basic\",\n        },\n      },\n    };\n  }\n\n  // Professional verification methods\n  async applyChamberVerification(\n    business: BusinessLead,\n    location: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `🏛️ Applying chamber verification for ${business.businessName}`\n    );\n\n    // Simulate chamber of commerce verification\n    const isChamberMember = Math.random() > 0.7; // 30% chamber membership rate\n\n    if (isChamberMember) {\n      business.optimizedScore += 15;\n      business.enhancementData.chamberVerified = true;\n      business.enhancementData.verificationSources.push(\"chamber_commerce\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost += 15;\n    }\n\n    return business;\n  }\n\n  async applyTradeAssociationVerification(\n    business: BusinessLead,\n    businessType: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `🔧 Applying trade association verification for ${business.businessName}`\n    );\n\n    // Industry-specific verification\n    let isTradeVerified = false;\n    let confidenceBoost = 0;\n\n    if (\n      businessType.toLowerCase().includes(\"spa\") ||\n      businessType.toLowerCase().includes(\"beauty\")\n    ) {\n      isTradeVerified = Math.random() > 0.6; // 40% spa association membership\n      confidenceBoost = 20;\n    } else if (\n      businessType.toLowerCase().includes(\"restaurant\") ||\n      businessType.toLowerCase().includes(\"food\")\n    ) {\n      isTradeVerified = Math.random() > 0.5; // 50% restaurant association membership\n      confidenceBoost = 15;\n    } else if (businessType.toLowerCase().includes(\"retail\")) {\n      isTradeVerified = Math.random() > 0.4; // 60% retail association membership\n      confidenceBoost = 15;\n    }\n\n    if (isTradeVerified) {\n      business.optimizedScore += confidenceBoost;\n      business.enhancementData.verificationSources.push(\"trade_association\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost +=\n        confidenceBoost;\n    }\n\n    return business;\n  }\n\n  async applyProfessionalLicensing(\n    business: BusinessLead,\n    businessType: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `📜 Applying professional licensing verification for ${business.businessName}`\n    );\n\n    // Professional licensing verification\n    let isLicenseVerified = false;\n    let confidenceBoost = 0;\n\n    if (\n      businessType.toLowerCase().includes(\"dental\") ||\n      businessType.toLowerCase().includes(\"medical\")\n    ) {\n      isLicenseVerified = Math.random() > 0.2; // 80% medical licensing rate\n      confidenceBoost = 25;\n    } else if (\n      businessType.toLowerCase().includes(\"legal\") ||\n      businessType.toLowerCase().includes(\"attorney\")\n    ) {\n      isLicenseVerified = Math.random() > 0.1; // 90% legal licensing rate\n      confidenceBoost = 25;\n    } else if (\n      businessType.toLowerCase().includes(\"accounting\") ||\n      businessType.toLowerCase().includes(\"cpa\")\n    ) {\n      isLicenseVerified = Math.random() > 0.3; // 70% CPA licensing rate\n      confidenceBoost = 25;\n    } else if (businessType.toLowerCase().includes(\"real estate\")) {\n      isLicenseVerified = Math.random() > 0.2; // 80% real estate licensing rate\n      confidenceBoost = 20;\n    }\n\n    if (isLicenseVerified) {\n      business.optimizedScore += confidenceBoost;\n      business.enhancementData.licenseVerified = true;\n      business.enhancementData.verificationSources.push(\"professional_license\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost +=\n        confidenceBoost;\n    }\n\n    return business;\n  }\n\n  async applyApolloDiscovery(business: BusinessLead): Promise<BusinessLead> {\n    console.log(`🚀 Applying Apollo discovery for ${business.businessName}`);\n\n    // Apollo API integration (premium feature)\n    const apolloCost = 1.0; // $1.00 per organization\n    const hasExecutiveContact = Math.random() > 0.3; // 70% success rate for Apollo\n\n    if (hasExecutiveContact) {\n      // Simulate executive contact discovery\n      const executiveContacts = [\n        \"john.smith@company.com\",\n        \"mary.johnson@company.com\",\n        \"david.wilson@company.com\",\n      ];\n\n      business.enhancementData.apolloVerified = true;\n      business.enhancementData.verificationSources.push(\"apollo_api\");\n      business.enhancementData.executiveContact =\n        executiveContacts[Math.floor(Math.random() * executiveContacts.length)];\n      business.optimizedScore += 30;\n      business.enhancementData.processingMetadata.totalCost += apolloCost;\n      business.enhancementData.processingMetadata.totalConfidenceBoost += 30;\n    } else {\n      // Apollo attempted but no results found\n      business.enhancementData.processingMetadata.totalCost += apolloCost;\n    }\n\n    return business;\n  }\n}\n\n// Google Places API with optimization\nclass OptimizedGooglePlacesAPI {\n  private apiKey: string;\n  private cache = new Map();\n  private cacheTTL = 3600000; // 1 hour\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number\n  ) {\n    const cacheKey = `${businessType}_${location}_${maxResults}`;\n\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(\"📦 Using cached Google Places results\");\n      return cached.data;\n    }\n\n    console.log(`🔍 Searching Google Places: ${businessType} in ${location}`);\n\n    const query = `${businessType} in ${location}`;\n    const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(\n      query\n    )}&key=${\n      this.apiKey\n    }&fields=place_id,name,formatted_address,formatted_phone_number,website,rating`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.status !== \"OK\") {\n      throw new Error(`Google Places API error: ${data.status}`);\n    }\n\n    const results = data.results.slice(0, maxResults * 2); // Get extra for filtering\n\n    // Cache the results\n    this.cache.set(cacheKey, {\n      data: results,\n      timestamp: Date.now(),\n    });\n\n    return results;\n  }\n}\n\n// Foursquare Places API integration for enhanced business discovery\nclass OptimizedFoursquareAPI {\n  private apiKey: string;\n  private cache = new Map();\n  private cacheTTL = 3600000; // 1 hour\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number\n  ) {\n    const cacheKey = `foursquare_${businessType}_${location}_${maxResults}`;\n\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(\"📦 Using cached Foursquare results\");\n      return cached.data;\n    }\n\n    console.log(`🔍 Searching Foursquare: ${businessType} in ${location}`);\n\n    // Foursquare Places API v3\n    const url = `https://api.foursquare.com/v3/places/search`;\n    const params = new URLSearchParams({\n      query: businessType,\n      near: location,\n      limit: Math.min(maxResults * 2, 50).toString(), // Get more for filtering\n      fields:\n        \"fsq_id,name,location,contact,website,categories,rating,stats,hours\",\n    });\n\n    try {\n      const response = await fetch(`${url}?${params}`, {\n        headers: {\n          Authorization: this.apiKey,\n          Accept: \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Foursquare API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (!data.results) {\n        console.log(\"❌ No Foursquare results found\");\n        return [];\n      }\n\n      // Transform Foursquare data to our business format\n      const transformedResults = data.results.map(\n        (place: {\n          fsq_id: string;\n          name: string;\n          location: {\n            lat?: number;\n            lng?: number;\n            address?: string;\n            locality?: string;\n            admin_district?: string;\n            postcode?: string;\n            country?: string;\n          };\n          contact?: { phone?: string };\n          website?: string;\n          rating?: number;\n          stats?: { total_tips?: number };\n          categories?: Array<{ name: string }>;\n          hours?: unknown;\n        }) => ({\n          place_id: place.fsq_id,\n          name: place.name,\n          formatted_address: this.formatAddress(place.location),\n          formatted_phone_number: place.contact?.phone || \"\",\n          website: place.website || \"\",\n          rating: place.rating || 0,\n          user_ratings_total: place.stats?.total_tips || 0,\n          business_status: \"OPERATIONAL\",\n          types: place.categories?.map((cat) => cat.name.toLowerCase()) || [],\n          geometry: {\n            location: {\n              lat: place.location?.lat || 0,\n              lng: place.location?.lng || 0,\n            },\n          },\n          // Foursquare-specific enhancements\n          foursquare_data: {\n            fsq_id: place.fsq_id,\n            categories: place.categories,\n            hours: place.hours,\n            stats: place.stats,\n          },\n          data_source: \"foursquare\",\n        })\n      );\n\n      // Cache results\n      this.cache.set(cacheKey, {\n        data: transformedResults,\n        timestamp: Date.now(),\n      });\n\n      console.log(\n        `📊 Found ${transformedResults.length} businesses from Foursquare`\n      );\n      return transformedResults;\n    } catch (error) {\n      console.error(\"❌ Foursquare API error:\", error);\n      return []; // Return empty array on error, don't fail the whole request\n    }\n  }\n\n  private formatAddress(location: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    postcode?: string;\n    country?: string;\n  }): string {\n    if (!location) return \"\";\n\n    const parts = [];\n    if (location.address) parts.push(location.address);\n    if (location.locality) parts.push(location.locality);\n    if (location.admin_district) parts.push(location.admin_district);\n    if (location.postcode) parts.push(location.postcode);\n    if (location.country) parts.push(location.country);\n\n    return parts.join(\", \");\n  }\n}\n\n// Helper function to remove duplicate businesses\nfunction removeDuplicates(businesses: unknown[]): unknown[] {\n  const uniqueBusinesses = [];\n  const seen = new Set();\n\n  for (const business of businesses) {\n    const businessObj = business as {\n      name?: string;\n      formatted_address?: string;\n    };\n    const key = `${(businessObj.name || \"\").toLowerCase()}_${(\n      businessObj.formatted_address || \"\"\n    ).toLowerCase()}`;\n    if (!seen.has(key)) {\n      seen.add(key);\n      uniqueBusinesses.push(business);\n    }\n  }\n\n  return uniqueBusinesses;\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    const startTime = Date.now();\n\n    // Parse request\n    const requestData: BusinessDiscoveryRequest = await req.json();\n    const {\n      businessType,\n      location,\n      maxResults = 5,\n      budgetLimit = 50,\n      minConfidenceScore = 50,\n      tradeAssociations = false,\n      professionalLicensing = false,\n      chamberVerification = false,\n      apolloDiscovery = false,\n    } = requestData;\n\n    console.log(`🚀 Optimized Business Discovery v3.0`);\n    console.log(\n      `📋 Request: ${businessType} in ${location} (${maxResults} leads)`\n    );\n    console.log(\n      `🎯 Enhancements: Trade:${tradeAssociations}, Licensing:${professionalLicensing}, Chamber:${chamberVerification}, Apollo:${apolloDiscovery}`\n    );\n\n    // Get API keys from environment\n    const googlePlacesKey = Deno.env.get(\"GOOGLE_PLACES_API_KEY\");\n    const foursquareKey = Deno.env.get(\"FOURSQUARE_API_KEY\");\n\n    if (!googlePlacesKey) {\n      throw new Error(\"Google Places API key not configured\");\n    }\n\n    // Initialize optimized components\n    const placesAPI = new OptimizedGooglePlacesAPI(googlePlacesKey);\n    const foursquareAPI = foursquareKey\n      ? new OptimizedFoursquareAPI(foursquareKey)\n      : null;\n    const qualityScorer = new OptimizedQualityScorer({\n      maxCostPerBusiness: budgetLimit / maxResults,\n    });\n\n    // Step 1: Search for businesses from multiple sources\n    const allRawBusinesses = [];\n\n    // Google Places search\n    const googleBusinesses = await placesAPI.searchBusinesses(\n      businessType,\n      location,\n      maxResults\n    );\n    console.log(\n      `📊 Found ${googleBusinesses.length} businesses from Google Places`\n    );\n    allRawBusinesses.push(...googleBusinesses);\n\n    // Foursquare search (if API key available)\n    if (foursquareAPI) {\n      const foursquareBusinesses = await foursquareAPI.searchBusinesses(\n        businessType,\n        location,\n        Math.max(maxResults - googleBusinesses.length, 2) // Get additional businesses\n      );\n      console.log(\n        `📊 Found ${foursquareBusinesses.length} businesses from Foursquare`\n      );\n      allRawBusinesses.push(...foursquareBusinesses);\n    }\n\n    // Remove duplicates based on name and location similarity\n    const uniqueBusinesses = removeDuplicates(allRawBusinesses);\n    console.log(`📊 Total unique businesses: ${uniqueBusinesses.length}`);\n\n    // Step 2: Score and filter businesses\n    const scoredBusinesses = uniqueBusinesses.map((business: unknown) =>\n      qualityScorer.scoreBusiness(business)\n    );\n    const qualifiedLeads = scoredBusinesses\n      .filter((lead: BusinessLead) => lead.optimizedScore >= minConfidenceScore)\n      .slice(0, maxResults);\n\n    console.log(\n      `✅ Qualified ${qualifiedLeads.length}/${\n        scoredBusinesses.length\n      } businesses (${(\n        (qualifiedLeads.length / scoredBusinesses.length) *\n        100\n      ).toFixed(1)}%)`\n    );\n\n    // Step 3: Apply P1 enhancements based on user selections\n    const enhancedLeads = qualifiedLeads;\n    let enhancementCost = 0;\n    const optimizationStats = {\n      totalAPICallsSaved: 0,\n      averageConfidenceBoost: 0,\n      parallelProcessingUsed: 0,\n    };\n\n    if (\n      tradeAssociations ||\n      professionalLicensing ||\n      chamberVerification ||\n      apolloDiscovery\n    ) {\n      console.log(\"🚀 Applying optimized P1 enhancements...\");\n\n      // Process each lead with selected enhancements\n      for (let i = 0; i < enhancedLeads.length; i++) {\n        const lead = enhancedLeads[i];\n        let totalConfidenceBoost = 0;\n\n        // Apply Chamber of Commerce verification (free)\n        if (chamberVerification) {\n          await qualityScorer.applyChamberVerification(lead, location);\n        }\n\n        // Apply Trade Association verification (free)\n        if (tradeAssociations) {\n          await qualityScorer.applyTradeAssociationVerification(\n            lead,\n            businessType\n          );\n        }\n\n        // Apply Professional Licensing verification (free)\n        if (professionalLicensing) {\n          await qualityScorer.applyProfessionalLicensing(lead, businessType);\n        }\n\n        // Apply Apollo discovery (premium - $1.00 per organization)\n        if (apolloDiscovery) {\n          await qualityScorer.applyApolloDiscovery(lead);\n        }\n\n        // Update costs and stats\n        enhancementCost += lead.enhancementData.processingMetadata.totalCost;\n        totalConfidenceBoost +=\n          lead.enhancementData.processingMetadata.totalConfidenceBoost;\n      }\n\n      // Calculate optimization statistics\n      optimizationStats.totalAPICallsSaved = enhancedLeads.reduce(\n        (total: number, lead: BusinessLead) => {\n          return (\n            total +\n            (lead.enhancementData.processingMetadata.apisSkipped?.length || 0)\n          );\n        },\n        0\n      );\n\n      optimizationStats.averageConfidenceBoost =\n        enhancedLeads.reduce((total: number, lead: BusinessLead) => {\n          return (\n            total +\n            (lead.enhancementData.processingMetadata.totalConfidenceBoost || 0)\n          );\n        }, 0) / enhancedLeads.length;\n\n      optimizationStats.parallelProcessingUsed = enhancedLeads.filter(\n        (lead: BusinessLead) => {\n          return (\n            lead.enhancementData.processingMetadata.processingStrategy ===\n            \"parallel\"\n          );\n        }\n      ).length;\n\n      console.log(`💰 Enhancement cost: $${enhancementCost.toFixed(2)}`);\n      console.log(\n        `⚡ Optimization: ${optimizationStats.totalAPICallsSaved} API calls saved`\n      );\n      console.log(\n        `📈 Average confidence boost: +${optimizationStats.averageConfidenceBoost.toFixed(\n          1\n        )} points`\n      );\n    }\n\n    const processingTime = Date.now() - startTime;\n    const totalCost =\n      qualifiedLeads.reduce(\n        (sum: number, lead: BusinessLead) => sum + lead.validationCost,\n        0\n      ) + enhancementCost;\n\n    // Generate campaign ID\n    const campaignId = `campaign_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    // Store in database (Supabase integration)\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_ANON_KEY\");\n\n    if (supabaseUrl && supabaseKey) {\n      const supabase = createClient(supabaseUrl, supabaseKey);\n\n      try {\n        await supabase.from(\"campaigns\").insert({\n          id: campaignId,\n          business_type: businessType,\n          location: location,\n          target_count: maxResults,\n          results_count: enhancedLeads.length,\n          total_cost: totalCost,\n          enhancement_cost: enhancementCost,\n          processing_time: processingTime,\n          optimization_stats: optimizationStats,\n        });\n\n        // Store leads\n        const leadsToStore = enhancedLeads.map((lead: BusinessLead) => ({\n          campaign_id: campaignId,\n          business_name: lead.businessName,\n          address: lead.address,\n          phone: lead.phone,\n          website: lead.website,\n          email: lead.email,\n          confidence_score: lead.optimizedScore,\n          enhancement_data: lead.enhancementData,\n        }));\n\n        await supabase.from(\"leads\").insert(leadsToStore);\n      } catch (error) {\n        console.error(\"Database storage error:\", error);\n      }\n    }\n\n    // Return optimized results\n    return new Response(\n      JSON.stringify({\n        success: true,\n        campaignId,\n        discoveryEngine: \"Optimized Discovery Engine v3.0 + Batch Processing\",\n        requirements: {\n          targetLeads: maxResults,\n          budgetLimit,\n          minConfidenceScore,\n        },\n        results: {\n          totalFound: enhancedLeads.length,\n          qualified: enhancedLeads.length,\n          qualificationRate: `${(\n            (enhancedLeads.length / allRawBusinesses.length) *\n            100\n          ).toFixed(1)}%`,\n          averageConfidence: Math.round(\n            enhancedLeads.reduce(\n              (sum: number, lead: BusinessLead) => sum + lead.optimizedScore,\n              0\n            ) / enhancedLeads.length\n          ),\n        },\n        optimization: {\n          processingTime: `${processingTime}ms`,\n          apiCallsSaved: optimizationStats.totalAPICallsSaved || 0,\n          parallelProcessing: optimizationStats.parallelProcessingUsed || 0,\n          averageConfidenceBoost: optimizationStats.averageConfidenceBoost || 0,\n          costOptimization: {\n            enhancementCost,\n            totalCost,\n            savingsFromIntelligentRouting:\n              (optimizationStats.totalAPICallsSaved || 0) * 0.1, // Estimated savings\n          },\n        },\n        costs: {\n          totalCost,\n          costPerLead: totalCost / enhancedLeads.length,\n          enhancementCost,\n          validationCost: totalCost - enhancementCost,\n        },\n        leads: enhancedLeads,\n        metadata: {\n          timestamp: new Date().toISOString(),\n          version: \"3.0\",\n          optimizationsApplied: true,\n        },\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Optimized discovery error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":7,"duration":0.26},
{"type":"measure","name":"lsp.did_open","count":13,"duration":11.064},
{"type":"mark","name":"lsp.document_symbol","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":1,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
TS server started.
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":1,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"mark","name":"tsc.op.op_load","count":1,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":1,"duration":0.094},
{"type":"measure","name":"tsc.host.getNavigationTree","count":1,"duration":499.267},
{"type":"measure","name":"tsc.request.getNavigationTree","count":1,"duration":2615.803},
{"type":"measure","name":"lsp.get_navigation_tree","count":1,"duration":2615.934},
{"type":"measure","name":"lsp.document_symbol","count":1,"duration":2617.583},
{"type":"mark","name":"lsp.did_open","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":8,"duration":0.085},
{"type":"measure","name":"lsp.did_open","count":14,"duration":7.198},
{"type":"mark","name":"lsp.document_symbol","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":1,"duration":0.028},
{"type":"mark","name":"lsp.inlay_hint","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":94,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":64,"character":0}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":1,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js",{"start":0,"length":2436},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":1,"duration":0.136},
{"type":"mark","name":"tsc.op.op_load","count":2,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":2,"duration":0.074},
{"type":"mark","name":"tsc.op.op_load","count":3,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":3,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":4,"args":"file:///workspaces/ProspectPro/src/App.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":4,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1,"duration":0.154},
{"type":"mark","name":"tsc.op.op_load","count":5,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":5,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":2,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":2,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":6,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":6,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":3,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":3,"duration":0.09},
{"type":"mark","name":"tsc.op.op_load","count":7,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":7,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":4,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":4,"duration":0.049},
{"type":"mark","name":"tsc.op.op_load","count":8,"args":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":8,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":5,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":5,"duration":0.062},
{"type":"mark","name":"tsc.op.op_load","count":9,"args":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts"},
{"type":"measure","name":"tsc.op.op_load","count":9,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":6,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":6,"duration":0.051},
{"type":"mark","name":"lsp.semantic_tokens_full","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.op.op_resolve","count":7,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":7,"duration":103.199},
{"type":"mark","name":"tsc.op.op_load","count":10,"args":"https://deno.land/std@0.168.0/http/server.ts"},
{"type":"measure","name":"tsc.op.op_load","count":10,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":8,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":8,"duration":1.661},
{"type":"mark","name":"tsc.op.op_load","count":11,"args":"https://deno.land/std@0.168.0/async/mod.ts"},
{"type":"measure","name":"tsc.op.op_load","count":11,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":9,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":9,"duration":21.689},
{"type":"mark","name":"tsc.op.op_load","count":12,"args":"https://deno.land/std@0.168.0/async/abortable.ts"},
{"type":"measure","name":"tsc.op.op_load","count":12,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":10,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":10,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":13,"args":"https://deno.land/std@0.168.0/async/deferred.ts"},
{"type":"measure","name":"tsc.op.op_load","count":13,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":14,"args":"https://deno.land/std@0.168.0/async/deadline.ts"},
{"type":"measure","name":"tsc.op.op_load","count":14,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":11,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":11,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":15,"args":"https://deno.land/std@0.168.0/async/debounce.ts"},
{"type":"measure","name":"tsc.op.op_load","count":15,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":16,"args":"https://deno.land/std@0.168.0/async/delay.ts"},
{"type":"measure","name":"tsc.op.op_load","count":16,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":17,"args":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts"},
{"type":"measure","name":"tsc.op.op_load","count":17,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":12,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":12,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":18,"args":"https://deno.land/std@0.168.0/async/pool.ts"},
{"type":"measure","name":"tsc.op.op_load","count":18,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":19,"args":"https://deno.land/std@0.168.0/async/tee.ts"},
{"type":"measure","name":"tsc.op.op_load","count":19,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":20,"args":"https://deno.land/std@0.168.0/async/retry.ts"},
{"type":"measure","name":"tsc.op.op_load","count":20,"duration":0.023},
{"type":"mark","name":"lsp.code_action","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.op.op_load","count":21,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":21,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":13,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":13,"duration":26.453},
{"type":"mark","name":"tsc.op.op_load","count":22,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":22,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":14,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":14,"duration":2.141},
{"type":"mark","name":"tsc.op.op_load","count":23,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":23,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":15,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":15,"duration":1.418},
{"type":"mark","name":"tsc.op.op_load","count":24,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":24,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":16,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":16,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":25,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":25,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":26,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":26,"duration":7.509},
{"type":"mark","name":"tsc.op.op_resolve","count":17,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"mark","name":"lsp.hover","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"position":{"line":19,"character":32}}},
{"type":"measure","name":"tsc.op.op_resolve","count":17,"duration":28.774},
{"type":"mark","name":"tsc.op.op_load","count":27,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":27,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":18,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":18,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":28,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":28,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":19,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":19,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":29,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":29,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":20,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":20,"duration":83.239},
{"type":"mark","name":"tsc.op.op_load","count":30,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":30,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":21,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":21,"duration":0.04},
{"type":"mark","name":"tsc.op.op_load","count":31,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":31,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":22,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":22,"duration":1.023},
{"type":"mark","name":"tsc.op.op_load","count":32,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":32,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":23,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":23,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":33,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":33,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":34,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":34,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":24,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":24,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":35,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":35,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":25,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":25,"duration":23.388},
{"type":"mark","name":"tsc.op.op_load","count":36,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":36,"duration":0.076},
{"type":"mark","name":"tsc.op.op_resolve","count":26,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":26,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":37,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":37,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":27,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":27,"duration":0.048},
{"type":"mark","name":"tsc.op.op_load","count":38,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":38,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":28,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":28,"duration":221.189},
{"type":"mark","name":"tsc.op.op_load","count":39,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":39,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":29,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":29,"duration":7.362},
{"type":"mark","name":"tsc.op.op_load","count":40,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/websocket-factory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":40,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":41,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":41,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":42,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":42,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":43,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":43,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":44,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":44,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":30,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":30,"duration":107.717},
{"type":"mark","name":"tsc.op.op_load","count":45,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":45,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":31,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":31,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":46,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":46,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":32,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":32,"duration":2.141},
{"type":"mark","name":"tsc.op.op_load","count":47,"args":"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":47,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":48,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":48,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":33,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":33,"duration":13.677},
{"type":"mark","name":"tsc.op.op_load","count":49,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":49,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":34,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":34,"duration":3.753},
{"type":"mark","name":"tsc.op.op_load","count":50,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":50,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":35,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":35,"duration":0.425},
{"type":"mark","name":"tsc.op.op_load","count":51,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":51,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":52,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":52,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":36,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":36,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":53,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":53,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":37,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":37,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":54,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":54,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":38,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":38,"duration":0.414},
{"type":"mark","name":"tsc.op.op_load","count":55,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":55,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":39,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":39,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":56,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":56,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":40,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":40,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":57,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":57,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":41,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":41,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":58,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":58,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":42,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":42,"duration":17.501},
{"type":"mark","name":"tsc.op.op_load","count":59,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":59,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":43,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":43,"duration":0.729},
{"type":"mark","name":"tsc.op.op_load","count":60,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":60,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":44,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":44,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":61,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":61,"duration":0.117},
{"type":"mark","name":"tsc.op.op_resolve","count":45,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":45,"duration":1.774},
{"type":"mark","name":"tsc.op.op_load","count":62,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/ethereum.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":62,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":63,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":63,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":46,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":46,"duration":1.647},
{"type":"mark","name":"tsc.op.op_load","count":64,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":64,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":65,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/solana.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":65,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":66,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":66,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":47,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":47,"duration":1.737},
{"type":"mark","name":"tsc.op.op_load","count":67,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":67,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":48,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":48,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":68,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":68,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":49,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":49,"duration":0.048},
{"type":"mark","name":"tsc.op.op_load","count":69,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":69,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":50,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":50,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":70,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":70,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":71,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":71,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":51,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":51,"duration":0.04},
{"type":"mark","name":"tsc.op.op_load","count":72,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":72,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":52,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":52,"duration":0.038},
{"type":"mark","name":"tsc.op.op_load","count":73,"args":"file:///workspaces/ProspectPro/vercel.json"},
{"type":"measure","name":"tsc.op.op_load","count":73,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":74,"args":"asset:///lib.deno.window.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":74,"duration":2.927},
{"type":"mark","name":"tsc.op.op_load","count":75,"args":"asset:///lib.deno.ns.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":75,"duration":10.297},
{"type":"mark","name":"tsc.op.op_load","count":76,"args":"asset:///lib.esnext.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":76,"duration":0.125},
{"type":"mark","name":"tsc.op.op_load","count":77,"args":"asset:///lib.es2024.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":77,"duration":0.38},
{"type":"mark","name":"tsc.op.op_load","count":78,"args":"asset:///lib.es2023.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":78,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":79,"args":"asset:///lib.es2022.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":79,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":80,"args":"asset:///lib.es2021.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":80,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":81,"args":"asset:///lib.es2020.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":81,"duration":0.063},
{"type":"mark","name":"tsc.op.op_load","count":82,"args":"asset:///lib.es2019.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":82,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":83,"args":"asset:///lib.es2018.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":83,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":84,"args":"asset:///lib.es2017.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":84,"duration":0.061},
{"type":"mark","name":"tsc.op.op_load","count":85,"args":"asset:///lib.es2016.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":85,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":86,"args":"asset:///lib.es2015.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":86,"duration":0.071},
{"type":"mark","name":"tsc.op.op_load","count":87,"args":"asset:///lib.es5.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":87,"duration":11.742},
{"type":"mark","name":"lsp.folding_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"tsc.op.op_load","count":88,"args":"asset:///lib.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":88,"duration":3.346},
{"type":"mark","name":"tsc.op.op_load","count":89,"args":"asset:///lib.decorators.legacy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":89,"duration":0.172},
{"type":"mark","name":"tsc.op.op_load","count":90,"args":"asset:///lib.es2015.core.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":90,"duration":1.201},
{"type":"mark","name":"tsc.op.op_load","count":91,"args":"asset:///lib.es2015.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":91,"duration":0.536},
{"type":"mark","name":"tsc.op.op_load","count":92,"args":"asset:///lib.es2015.iterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":92,"duration":1.871},
{"type":"mark","name":"tsc.op.op_load","count":93,"args":"asset:///lib.es2015.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":93,"duration":0.136},
{"type":"mark","name":"tsc.op.op_load","count":94,"args":"asset:///lib.es2015.generator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":94,"duration":0.228},
{"type":"mark","name":"tsc.op.op_load","count":95,"args":"asset:///lib.es2015.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":95,"duration":0.237},
{"type":"mark","name":"tsc.op.op_load","count":96,"args":"asset:///lib.es2015.proxy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":96,"duration":0.315},
{"type":"mark","name":"tsc.op.op_load","count":97,"args":"asset:///lib.es2015.reflect.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":97,"duration":0.397},
{"type":"mark","name":"tsc.op.op_load","count":98,"args":"asset:///lib.es2015.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":98,"duration":0.883},
{"type":"mark","name":"tsc.op.op_load","count":99,"args":"asset:///lib.es2016.array.include.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":99,"duration":0.246},
{"type":"mark","name":"tsc.op.op_load","count":100,"args":"asset:///lib.es2016.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":100,"duration":0.087},
{"type":"mark","name":"tsc.op.op_load","count":101,"args":"asset:///lib.es2017.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":101,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":102,"args":"asset:///lib.es2017.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":102,"duration":0.091},
{"type":"mark","name":"tsc.op.op_load","count":103,"args":"asset:///lib.es2017.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":103,"duration":0.127},
{"type":"mark","name":"tsc.op.op_load","count":104,"args":"asset:///lib.es2017.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":104,"duration":0.176},
{"type":"mark","name":"tsc.op.op_load","count":105,"args":"asset:///lib.es2017.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":105,"duration":0.543},
{"type":"mark","name":"tsc.op.op_load","count":106,"args":"asset:///lib.es2017.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":106,"duration":0.094},
{"type":"mark","name":"tsc.op.op_load","count":107,"args":"asset:///lib.es2017.typedarrays.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":107,"duration":0.145},
{"type":"mark","name":"tsc.op.op_load","count":108,"args":"asset:///lib.es2018.asynciterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":108,"duration":0.229},
{"type":"mark","name":"tsc.op.op_load","count":109,"args":"asset:///lib.es2018.asyncgenerator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":109,"duration":0.219},
{"type":"mark","name":"tsc.op.op_load","count":110,"args":"asset:///lib.es2018.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":110,"duration":0.09},
{"type":"mark","name":"tsc.op.op_load","count":111,"args":"asset:///lib.es2018.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":111,"duration":0.094},
{"type":"mark","name":"tsc.op.op_load","count":112,"args":"asset:///lib.es2018.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":112,"duration":0.325},
{"type":"mark","name":"tsc.op.op_load","count":113,"args":"asset:///lib.es2019.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":113,"duration":0.297},
{"type":"mark","name":"tsc.op.op_load","count":114,"args":"asset:///lib.es2019.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":114,"duration":0.111},
{"type":"mark","name":"tsc.op.op_load","count":115,"args":"asset:///lib.es2019.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":115,"duration":0.125},
{"type":"mark","name":"tsc.op.op_load","count":116,"args":"asset:///lib.es2019.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":116,"duration":0.088},
{"type":"mark","name":"tsc.op.op_load","count":117,"args":"asset:///lib.es2019.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":117,"duration":0.078},
{"type":"mark","name":"tsc.op.op_load","count":118,"args":"asset:///lib.es2020.bigint.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":118,"duration":1.946},
{"type":"mark","name":"tsc.op.op_load","count":119,"args":"asset:///lib.es2020.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":119,"duration":4.137},
{"type":"mark","name":"tsc.op.op_load","count":120,"args":"asset:///lib.es2020.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":120,"duration":0.115},
{"type":"mark","name":"tsc.op.op_load","count":121,"args":"asset:///lib.es2020.number.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":121,"duration":0.077},
{"type":"mark","name":"tsc.op.op_load","count":122,"args":"asset:///lib.es2020.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":122,"duration":0.158},
{"type":"mark","name":"tsc.op.op_load","count":123,"args":"asset:///lib.es2020.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":123,"duration":0.704},
{"type":"mark","name":"tsc.op.op_load","count":124,"args":"asset:///lib.es2020.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":124,"duration":0.127},
{"type":"mark","name":"tsc.op.op_load","count":125,"args":"asset:///lib.es2020.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":125,"duration":0.157},
{"type":"mark","name":"tsc.op.op_load","count":126,"args":"asset:///lib.es2021.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":126,"duration":0.115},
{"type":"mark","name":"tsc.op.op_load","count":127,"args":"asset:///lib.es2021.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":127,"duration":0.073},
{"type":"mark","name":"tsc.op.op_load","count":128,"args":"asset:///lib.es2021.weakref.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":128,"duration":0.135},
{"type":"mark","name":"tsc.op.op_load","count":129,"args":"asset:///lib.es2021.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":129,"duration":0.39},
{"type":"mark","name":"tsc.op.op_load","count":130,"args":"asset:///lib.es2022.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":130,"duration":0.177},
{"type":"mark","name":"tsc.op.op_load","count":131,"args":"asset:///lib.es2022.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":131,"duration":0.159},
{"type":"mark","name":"tsc.op.op_load","count":132,"args":"asset:///lib.es2022.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":132,"duration":0.229},
{"type":"mark","name":"tsc.op.op_load","count":133,"args":"asset:///lib.es2022.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":133,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":134,"args":"asset:///lib.es2022.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":134,"duration":0.083},
{"type":"mark","name":"tsc.op.op_load","count":135,"args":"asset:///lib.es2022.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":135,"duration":0.071},
{"type":"mark","name":"tsc.op.op_load","count":136,"args":"asset:///lib.es2023.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":136,"duration":2.132},
{"type":"mark","name":"tsc.op.op_load","count":137,"args":"asset:///lib.es2023.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":137,"duration":0.065},
{"type":"mark","name":"tsc.op.op_load","count":138,"args":"asset:///lib.es2023.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":138,"duration":0.3},
{"type":"mark","name":"tsc.op.op_load","count":139,"args":"asset:///lib.es2024.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":139,"duration":0.126},
{"type":"mark","name":"tsc.op.op_load","count":140,"args":"asset:///lib.es2024.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":140,"duration":0.069},
{"type":"mark","name":"tsc.op.op_load","count":141,"args":"asset:///lib.es2024.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":141,"duration":0.069},
{"type":"mark","name":"tsc.op.op_load","count":142,"args":"asset:///lib.es2024.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":142,"duration":0.111},
{"type":"mark","name":"tsc.op.op_load","count":143,"args":"asset:///lib.es2024.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":143,"duration":0.045},
{"type":"mark","name":"tsc.op.op_load","count":144,"args":"asset:///lib.es2024.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":144,"duration":0.131},
{"type":"mark","name":"tsc.op.op_load","count":145,"args":"asset:///lib.es2024.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":145,"duration":0.051},
{"type":"mark","name":"tsc.op.op_load","count":146,"args":"asset:///lib.esnext.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":146,"duration":0.044},
{"type":"mark","name":"tsc.op.op_load","count":147,"args":"asset:///lib.esnext.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":147,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":148,"args":"asset:///lib.esnext.disposable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":148,"duration":0.296},
{"type":"mark","name":"tsc.op.op_load","count":149,"args":"asset:///lib.esnext.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":149,"duration":0.177},
{"type":"mark","name":"tsc.op.op_load","count":150,"args":"asset:///lib.esnext.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":150,"duration":0.097},
{"type":"mark","name":"tsc.op.op_load","count":151,"args":"asset:///lib.esnext.iterator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":151,"duration":0.35},
{"type":"mark","name":"tsc.op.op_load","count":152,"args":"asset:///lib.esnext.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":152,"duration":0.074},
{"type":"mark","name":"tsc.op.op_load","count":153,"args":"asset:///lib.esnext.float16.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":153,"duration":0.575},
{"type":"mark","name":"tsc.op.op_load","count":154,"args":"asset:///lib.esnext.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":154,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":155,"args":"asset:///lib.esnext.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":155,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":156,"args":"asset:///lib.deno.net.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":156,"duration":0.84},
{"type":"mark","name":"tsc.op.op_load","count":157,"args":"asset:///lib.deno.shared_globals.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":157,"duration":0.948},
{"type":"mark","name":"tsc.op.op_load","count":158,"args":"asset:///lib.deno.console.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":158,"duration":0.294},
{"type":"mark","name":"tsc.op.op_load","count":159,"args":"asset:///lib.deno.url.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":159,"duration":0.797},
{"type":"mark","name":"tsc.op.op_load","count":160,"args":"asset:///lib.deno.web.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":160,"duration":4.146},
{"type":"mark","name":"tsc.op.op_load","count":161,"args":"asset:///lib.deno.webgpu.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":161,"duration":3.482},
{"type":"mark","name":"tsc.op.op_load","count":162,"args":"asset:///lib.deno.canvas.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":162,"duration":0.181},
{"type":"mark","name":"tsc.op.op_load","count":163,"args":"asset:///lib.deno.fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":163,"duration":1.209},
{"type":"mark","name":"tsc.op.op_load","count":164,"args":"asset:///lib.deno.websocket.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":164,"duration":0.469},
{"type":"mark","name":"tsc.op.op_load","count":165,"args":"asset:///lib.deno.crypto.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":165,"duration":0.996},
{"type":"mark","name":"tsc.op.op_load","count":166,"args":"asset:///lib.deno.webstorage.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":166,"duration":0.153},
{"type":"mark","name":"tsc.op.op_load","count":167,"args":"asset:///lib.deno.cache.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":167,"duration":0.218},
{"type":"mark","name":"tsc.op.op_load","count":168,"args":"asset:///lib.deno.unstable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":168,"duration":10.788},
{"type":"mark","name":"lsp.code_lens","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"tsc.op.op_load","count":169,"args":"asset:///lib.deno.broadcast_channel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":169,"duration":0.402},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":1,"duration":0.012},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":2,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":3,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":4,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":5,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":6,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":7,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":8,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":9,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":10,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":11,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":12,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":13,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":14,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":15,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":16,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":17,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":18,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":19,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":20,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":21,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":22,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":23,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":24,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":25,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":26,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":27,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":28,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":29,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":30,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":31,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":32,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":33,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":34,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":35,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":36,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":37,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":38,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":39,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":40,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":41,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":42,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":43,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":44,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":45,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":46,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":47,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":48,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":49,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":50,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":51,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":52,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":53,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":54,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":55,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":56,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":57,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":58,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":59,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":60,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":61,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":62,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":63,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":64,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":65,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":66,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":67,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":68,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":69,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":70,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":71,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":72,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":73,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":74,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":75,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":76,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":77,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":78,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":79,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":80,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":81,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":82,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":83,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":84,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":85,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":86,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":87,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":88,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":89,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":90,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":91,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":92,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":93,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":94,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":95,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":96,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":97,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":98,"duration":0.004},
{"type":"mark","name":"lsp.inlay_hint","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":93,"character":18}}}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":99,"duration":0.009},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":1,"duration":2047.922},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":2,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js",{"start":0,"length":14888},"2020"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":1,"duration":2049.186},
{"type":"measure","name":"lsp.semantic_tokens_range","count":1,"duration":2049.319},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":2,"duration":91.071},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":2,"duration":1984.986},
{"type":"measure","name":"lsp.semantic_tokens_full","count":1,"duration":1985.148},
{"type":"mark","name":"lsp.inlay_hint","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":97,"character":16}}}},
{"type":"mark","name":"lsp.inlay_hint","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":116,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":117,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":117,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":117,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":117,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":117,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":113,"character":63}}}},
{"type":"mark","name":"lsp.inlay_hint","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":115,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":118,"character":31}}}},
{"type":"mark","name":"lsp.inlay_hint","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":120,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":131,"character":34}}}},
{"type":"mark","name":"lsp.inlay_hint","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":134,"character":5}}}},
{"type":"mark","name":"lsp.did_close","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":5,"duration":5.371},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":9,"duration":0.116},
{"type":"mark","name":"lsp.inlay_hint","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":136,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":139,"character":32}}}},
{"type":"mark","name":"lsp.code_action","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":141,"character":9}}}},
{"type":"mark","name":"lsp.inlay_hint","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":144,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":152,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":160,"character":12}}}},
{"type":"mark","name":"lsp.hover","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"position":{"line":71,"character":77}}},
{"type":"mark","name":"lsp.inlay_hint","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":163,"character":9}}}},
{"type":"mark","name":"lsp.inlay_hint","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":165,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":168,"character":12}}}},
{"type":"mark","name":"lsp.inlay_hint","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":170,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":173,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":176,"character":12}}}},
{"type":"mark","name":"lsp.inlay_hint","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":178,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":181,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":184,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":186,"character":36}}}},
{"type":"mark","name":"lsp.inlay_hint","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":0},"end":{"line":189,"character":36}}}},
{"type":"mark","name":"lsp.inlay_hint","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":5,"character":0},"end":{"line":191,"character":21}}}},
{"type":"mark","name":"lsp.inlay_hint","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":7,"character":0},"end":{"line":194,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":10,"character":0},"end":{"line":197,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":13,"character":0},"end":{"line":199,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":15,"character":0},"end":{"line":202,"character":31}}}},
{"type":"mark","name":"lsp.inlay_hint","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":18,"character":0},"end":{"line":205,"character":30}}}},
{"type":"mark","name":"lsp.inlay_hint","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":21,"character":0},"end":{"line":207,"character":14}}}},
{"type":"mark","name":"lsp.inlay_hint","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":23,"character":0},"end":{"line":210,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":26,"character":0},"end":{"line":213,"character":30}}}},
{"type":"mark","name":"lsp.inlay_hint","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":31,"character":0},"end":{"line":218,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":34,"character":0},"end":{"line":220,"character":45}}}},
{"type":"mark","name":"lsp.inlay_hint","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":36,"character":0},"end":{"line":223,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":42,"character":0},"end":{"line":227,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":44,"character":0},"end":{"line":227,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":47,"character":0},"end":{"line":229,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":52,"character":0},"end":{"line":234,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":55,"character":0},"end":{"line":236,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":57,"character":0},"end":{"line":239,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":60,"character":0},"end":{"line":242,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":63,"character":0},"end":{"line":244,"character":18}}}},
{"type":"mark","name":"lsp.inlay_hint","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":65,"character":0},"end":{"line":247,"character":40}}}},
{"type":"mark","name":"lsp.inlay_hint","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":68,"character":0},"end":{"line":250,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":71,"character":0},"end":{"line":252,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":73,"character":0},"end":{"line":255,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":76,"character":0},"end":{"line":258,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":78,"character":0},"end":{"line":260,"character":9}}}},
{"type":"mark","name":"lsp.inlay_hint","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":81,"character":0},"end":{"line":263,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":84,"character":0},"end":{"line":265,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":86,"character":0},"end":{"line":268,"character":18}}}},
{"type":"mark","name":"lsp.inlay_hint","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":92,"character":0},"end":{"line":273,"character":7}}}},
{"type":"mark","name":"lsp.inlay_hint","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":94,"character":0},"end":{"line":276,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":97,"character":0},"end":{"line":279,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":99,"character":0},"end":{"line":281,"character":5}}}},
{"type":"mark","name":"lsp.hover","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"position":{"line":197,"character":481}}},
{"type":"mark","name":"lsp.inlay_hint","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":102,"character":0},"end":{"line":284,"character":9}}}},
{"type":"mark","name":"lsp.inlay_hint","count":67,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":105,"character":0},"end":{"line":286,"character":7}}}},
{"type":"mark","name":"lsp.inlay_hint","count":68,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":107,"character":0},"end":{"line":289,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":69,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":110,"character":0},"end":{"line":292,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":70,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":113,"character":0},"end":{"line":294,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":71,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":115,"character":0},"end":{"line":297,"character":42}}}},
{"type":"mark","name":"lsp.inlay_hint","count":72,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":118,"character":0},"end":{"line":300,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":73,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":121,"character":0},"end":{"line":302,"character":54}}}},
{"type":"mark","name":"lsp.inlay_hint","count":74,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":123,"character":0},"end":{"line":305,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":75,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":126,"character":0},"end":{"line":308,"character":16}}}},
{"type":"mark","name":"lsp.inlay_hint","count":76,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":128,"character":0},"end":{"line":310,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":77,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":131,"character":0},"end":{"line":313,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":78,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":134,"character":0},"end":{"line":315,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":79,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":136,"character":0},"end":{"line":318,"character":71}}}},
{"type":"mark","name":"lsp.inlay_hint","count":80,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":139,"character":0},"end":{"line":321,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":81,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":142,"character":0},"end":{"line":323,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":82,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":144,"character":0},"end":{"line":326,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":83,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":147,"character":0},"end":{"line":329,"character":6}}}},
{"type":"mark","name":"lsp.inlay_hint","count":84,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":149,"character":0},"end":{"line":331,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":85,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":152,"character":0},"end":{"line":334,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":86,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":155,"character":0},"end":{"line":336,"character":34}}}},
{"type":"mark","name":"lsp.inlay_hint","count":87,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":157,"character":0},"end":{"line":339,"character":33}}}},
{"type":"mark","name":"lsp.inlay_hint","count":88,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":160,"character":0},"end":{"line":342,"character":37}}}},
{"type":"mark","name":"lsp.inlay_hint","count":89,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":163,"character":0},"end":{"line":344,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":90,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":165,"character":0},"end":{"line":347,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":91,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":167,"character":0},"end":{"line":350,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":92,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":167,"character":0},"end":{"line":352,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":93,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":168,"character":0},"end":{"line":355,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":94,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":171,"character":0},"end":{"line":358,"character":57}}}},
{"type":"mark","name":"lsp.inlay_hint","count":95,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":173,"character":0},"end":{"line":360,"character":49}}}},
{"type":"mark","name":"lsp.inlay_hint","count":96,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":176,"character":0},"end":{"line":363,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":97,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":179,"character":0},"end":{"line":365,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":98,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":181,"character":0},"end":{"line":368,"character":39}}}},
{"type":"mark","name":"lsp.inlay_hint","count":99,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":184,"character":0},"end":{"line":371,"character":7}}}},
{"type":"mark","name":"lsp.inlay_hint","count":100,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":192,"character":0},"end":{"line":379,"character":56}}}},
{"type":"mark","name":"lsp.inlay_hint","count":101,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":194,"character":0},"end":{"line":381,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":102,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":197,"character":0},"end":{"line":384,"character":6}}}},
{"type":"mark","name":"lsp.inlay_hint","count":103,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":200,"character":0},"end":{"line":386,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":104,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":202,"character":0},"end":{"line":389,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":105,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":205,"character":0},"end":{"line":392,"character":31}}}},
{"type":"mark","name":"lsp.inlay_hint","count":106,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":210,"character":0},"end":{"line":397,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":107,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":213,"character":0},"end":{"line":400,"character":24}}}},
{"type":"mark","name":"lsp.inlay_hint","count":108,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":216,"character":0},"end":{"line":402,"character":6}}}},
{"type":"mark","name":"lsp.inlay_hint","count":109,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":218,"character":0},"end":{"line":405,"character":13}}}},
{"type":"mark","name":"lsp.inlay_hint","count":110,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":221,"character":0},"end":{"line":408,"character":36}}}},
{"type":"mark","name":"lsp.inlay_hint","count":111,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":223,"character":0},"end":{"line":410,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":112,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":226,"character":0},"end":{"line":413,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":113,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":229,"character":0},"end":{"line":415,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":114,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":231,"character":0},"end":{"line":418,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":115,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":234,"character":0},"end":{"line":421,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":116,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":237,"character":0},"end":{"line":423,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":117,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":239,"character":0},"end":{"line":426,"character":35}}}},
{"type":"mark","name":"lsp.inlay_hint","count":118,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":242,"character":0},"end":{"line":429,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":119,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":244,"character":0},"end":{"line":431,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":120,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":247,"character":0},"end":{"line":434,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":121,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":250,"character":0},"end":{"line":436,"character":56}}}},
{"type":"mark","name":"lsp.inlay_hint","count":122,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":252,"character":0},"end":{"line":439,"character":6}}}},
{"type":"mark","name":"lsp.inlay_hint","count":123,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":258,"character":0},"end":{"line":444,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":124,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":260,"character":0},"end":{"line":447,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":125,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":263,"character":0},"end":{"line":450,"character":60}}}},
{"type":"mark","name":"lsp.inlay_hint","count":126,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":266,"character":0},"end":{"line":452,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":127,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":268,"character":0},"end":{"line":455,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":128,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":271,"character":0},"end":{"line":458,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":129,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":273,"character":0},"end":{"line":460,"character":14}}}},
{"type":"mark","name":"lsp.inlay_hint","count":130,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":276,"character":0},"end":{"line":463,"character":1}}}},
{"type":"mark","name":"lsp.inlay_hint","count":131,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":279,"character":0},"end":{"line":465,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":132,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":289,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":133,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":292,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":134,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":294,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":135,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":297,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":136,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":300,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":137,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":302,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":138,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":308,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":139,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":310,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":140,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":313,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":141,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":321,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":142,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":329,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":143,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":331,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":144,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":334,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":145,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":337,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":146,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":344,"character":0},"end":{"line":466,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":147,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":134,"character":0},"end":{"line":315,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":148,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":152,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":149,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":165,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":150,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":178,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":151,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":5,"character":0},"end":{"line":191,"character":21}}}},
{"type":"mark","name":"lsp.inlay_hint","count":152,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":126,"character":36}}}},
{"type":"mark","name":"lsp.inlay_hint","count":153,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":118,"character":31}}}},
{"type":"mark","name":"lsp.inlay_hint","count":154,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":115,"character":3}}}},
{"type":"mark","name":"lsp.inlay_hint","count":155,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":113,"character":63}}}},
{"type":"mark","name":"lsp.inlay_hint","count":156,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":126,"character":36}}}},
{"type":"mark","name":"lsp.inlay_hint","count":157,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":134,"character":5}}}},
{"type":"mark","name":"lsp.inlay_hint","count":158,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":139,"character":32}}}},
{"type":"mark","name":"lsp.inlay_hint","count":159,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":144,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":160,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":152,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":161,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":163,"character":9}}}},
{"type":"mark","name":"lsp.hover","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"position":{"line":74,"character":58}}},
{"type":"mark","name":"lsp.inlay_hint","count":162,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":157,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.folding_range","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.inlay_hint","count":163,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":157,"character":10}}}},
{"type":"mark","name":"lsp.document_symbol","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.inlay_hint","count":164,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":157,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":165,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":157,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":166,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":157,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":167,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":4,"character":0},"end":{"line":95,"character":7}}}},
{"type":"mark","name":"lsp.inlay_hint","count":168,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.code_action","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":169,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.inlay_hint","count":170,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.code_action","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":171,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.inlay_hint","count":172,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.inlay_hint","count":173,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.did_open","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// Import optimization modules (converted to Deno-compatible imports)\n// Note: These would need to be transpiled or rewritten for Deno, but showing the structure\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface BusinessDiscoveryRequest {\n  businessType: string;\n  location: string;\n  maxResults?: number;\n  budgetLimit?: number;\n  requireCompleteContacts?: boolean;\n  minConfidenceScore?: number;\n  additionalQueries?: string[];\n  tradeAssociations?: boolean;\n  professionalLicensing?: boolean;\n  chamberVerification?: boolean;\n  apolloDiscovery?: boolean;\n}\n\ninterface BusinessLead {\n  businessName: string;\n  address: string;\n  phone: string;\n  website: string;\n  email: string;\n  optimizedScore: number;\n  validationCost: number;\n  enhancementData: {\n    verificationSources: string[];\n    apolloVerified: boolean;\n    chamberVerified: boolean;\n    licenseVerified: boolean;\n    executiveContact?: string;\n    processingMetadata: {\n      totalCost: number;\n      totalConfidenceBoost: number;\n      apisSkipped: string[];\n      processingStrategy: string;\n    };\n  };\n}\n\n// Enhanced Business Classifier for intelligent API routing\nclass OptimizedBusinessClassifier {\n  private businessPatterns = {\n    spa: {\n      keywords: [\n        \"spa\",\n        \"wellness\",\n        \"massage\",\n        \"facial\",\n        \"relaxation\",\n        \"therapeutic\",\n      ],\n      confidenceWeight: 0.9,\n      relevantAPIs: [\"spaAssociation\", \"chamber\"],\n      geographicScope: \"local\",\n    },\n    beauty: {\n      keywords: [\"beauty\", \"salon\", \"hair\", \"nail\", \"cosmetic\", \"barbershop\"],\n      confidenceWeight: 0.85,\n      relevantAPIs: [\"beautyAssociation\", \"chamber\"],\n      geographicScope: \"local\",\n    },\n    accounting: {\n      keywords: [\"accounting\", \"cpa\", \"tax\", \"bookkeeping\", \"financial\"],\n      confidenceWeight: 0.95,\n      relevantAPIs: [\"cpaLicensing\", \"chamber\"],\n      geographicScope: \"state\",\n    },\n    professional: {\n      keywords: [\"law\", \"legal\", \"consulting\", \"architect\", \"engineer\"],\n      confidenceWeight: 0.8,\n      relevantAPIs: [\"chamber\", \"apollo\"],\n      geographicScope: \"state\",\n    },\n  };\n\n  classifyBusiness(business: BusinessLead) {\n    const businessText =\n      `${business.businessName} ${business.address}`.toLowerCase();\n    let bestMatch = null;\n    let highestScore = 0;\n\n    for (const [type, pattern] of Object.entries(this.businessPatterns)) {\n      const matches = pattern.keywords.filter((keyword) =>\n        businessText.includes(keyword)\n      ).length;\n      const score =\n        (matches / pattern.keywords.length) * pattern.confidenceWeight * 100;\n\n      if (score > highestScore) {\n        highestScore = score;\n        bestMatch = type;\n      }\n    }\n\n    const confidence =\n      highestScore > 70 ? \"high\" : highestScore > 40 ? \"medium\" : \"low\";\n\n    return {\n      primaryType: bestMatch,\n      confidence,\n      score: highestScore,\n      relevantAPIs: bestMatch\n        ? this.businessPatterns[bestMatch].relevantAPIs\n        : [\"chamber\"],\n      geographicScope: bestMatch\n        ? this.businessPatterns[bestMatch].geographicScope\n        : \"local\",\n    };\n  }\n}\n\n// Geographic Intelligence Router for location-based filtering\nclass GeographicRouter {\n  private professionalLicensingStates = new Set([\n    \"CA\",\n    \"NY\",\n    \"TX\",\n    \"FL\",\n    \"IL\",\n    \"WA\",\n    \"PA\",\n    \"OH\",\n  ]);\n  private metropolitanAreas = new Set([\n    \"new york\",\n    \"los angeles\",\n    \"chicago\",\n    \"houston\",\n    \"phoenix\",\n    \"philadelphia\",\n    \"san antonio\",\n    \"san diego\",\n    \"dallas\",\n    \"san jose\",\n    \"austin\",\n    \"jacksonville\",\n    \"fort worth\",\n    \"columbus\",\n    \"charlotte\",\n  ]);\n\n  analyzeLocation(business: BusinessLead) {\n    const address = business.address.toLowerCase();\n\n    // Extract state\n    const stateMatch = business.address.match(/\\b([A-Z]{2})\\b/);\n    const state = stateMatch ? stateMatch[1] : null;\n\n    // Extract city\n    const cityMatch = business.address.match(/,\\s*([^,]+),\\s*[A-Z]{2}/);\n    const city = cityMatch ? cityMatch[1].trim().toLowerCase() : null;\n\n    // Determine if metropolitan area\n    const isMetropolitan = city ? this.metropolitanAreas.has(city) : false;\n\n    return {\n      state,\n      city,\n      isMetropolitan,\n      hasStateLicensing: state\n        ? this.professionalLicensingStates.has(state)\n        : false,\n      apolloRelevance: isMetropolitan ? \"high\" : city ? \"medium\" : \"low\",\n    };\n  }\n\n  shouldCallAPI(\n    apiType: string,\n    businessClassification: any,\n    locationData: any\n  ): boolean {\n    switch (apiType) {\n      case \"professionalLicensing\":\n        return (\n          locationData.hasStateLicensing &&\n          businessClassification.primaryType === \"accounting\"\n        );\n      case \"spaAssociation\":\n        return businessClassification.primaryType === \"spa\";\n      case \"beautyAssociation\":\n        return businessClassification.primaryType === \"beauty\";\n      case \"apollo\":\n        return (\n          locationData.apolloRelevance !== \"low\" &&\n          businessClassification.confidence !== \"low\"\n        );\n      case \"chamber\":\n        return true; // Always relevant but with different confidence\n      default:\n        return false;\n    }\n  }\n}\n\n// Batch Enhancement Processor for parallel processing\nclass BatchEnhancementProcessor {\n  private classifier = new OptimizedBusinessClassifier();\n  private geoRouter = new GeographicRouter();\n\n  async processBatch(businesses: BusinessLead[], enhancementOptions: any) {\n    console.log(\n      `🚀 Starting optimized batch processing for ${businesses.length} businesses`\n    );\n\n    // Step 1: Classify and analyze all businesses\n    const analyzedBusinesses = businesses.map((business) => {\n      const classification = this.classifier.classifyBusiness(business);\n      const locationData = this.geoRouter.analyzeLocation(business);\n\n      return {\n        ...business,\n        classification,\n        locationData,\n        apiRecommendations: this.generateAPIRecommendations(\n          classification,\n          locationData,\n          enhancementOptions\n        ),\n      };\n    });\n\n    // Step 2: Group by processing strategy\n    const parallelGroup = analyzedBusinesses.filter(\n      (b) =>\n        b.classification.confidence === \"high\" &&\n        b.apiRecommendations.length <= 3\n    );\n    const sequentialGroup = analyzedBusinesses.filter(\n      (b) => !parallelGroup.includes(b)\n    );\n\n    console.log(\n      `📊 Processing groups: Parallel: ${parallelGroup.length}, Sequential: ${sequentialGroup.length}`\n    );\n\n    // Step 3: Process groups optimally\n    const results = [];\n\n    // Process parallel group with Promise.all\n    if (parallelGroup.length > 0) {\n      const parallelPromises = parallelGroup.map((business) =>\n        this.processBusinessEnhancements(business, enhancementOptions)\n      );\n      const parallelResults = await Promise.all(parallelPromises);\n      results.push(...parallelResults);\n    }\n\n    // Process sequential group one by one\n    for (const business of sequentialGroup) {\n      try {\n        const result = await this.processBusinessEnhancements(\n          business,\n          enhancementOptions\n        );\n        results.push(result);\n      } catch (error) {\n        console.error(`Error processing ${business.businessName}:`, error);\n        results.push({\n          ...business,\n          enhancementData: { error: error.message },\n        });\n      }\n    }\n\n    return results;\n  }\n\n  private generateAPIRecommendations(\n    classification: any,\n    locationData: any,\n    options: any\n  ) {\n    const recommendations = [];\n\n    if (\n      options.tradeAssociations &&\n      this.geoRouter.shouldCallAPI(\n        \"spaAssociation\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"spaAssociation\");\n    }\n    if (\n      options.tradeAssociations &&\n      this.geoRouter.shouldCallAPI(\n        \"beautyAssociation\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"beautyAssociation\");\n    }\n    if (\n      options.professionalLicensing &&\n      this.geoRouter.shouldCallAPI(\n        \"professionalLicensing\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"professionalLicensing\");\n    }\n    if (\n      options.chamberVerification &&\n      this.geoRouter.shouldCallAPI(\"chamber\", classification, locationData)\n    ) {\n      recommendations.push(\"chamber\");\n    }\n    if (\n      options.apolloDiscovery &&\n      this.geoRouter.shouldCallAPI(\"apollo\", classification, locationData)\n    ) {\n      recommendations.push(\"apollo\");\n    }\n\n    return recommendations;\n  }\n\n  private async processBusinessEnhancements(\n    business: any,\n    enhancementOptions: any\n  ) {\n    const enhancements: Record<string, unknown> = {};\n    let totalConfidenceBoost = 0;\n    let totalCost = 0;\n\n    // Only call recommended APIs\n    const apiPromises = business.apiRecommendations.map(\n      async (apiType: string) => {\n        try {\n          switch (apiType) {\n            case \"spaAssociation\":\n              if (business.classification.primaryType === \"spa\") {\n                const result = await this.processSpaAssociation(business);\n                if (result.verified) {\n                  enhancements.spaAssociation = result;\n                  totalConfidenceBoost += 20;\n                }\n              }\n              break;\n            case \"beautyAssociation\":\n              if (business.classification.primaryType === \"beauty\") {\n                const result = await this.processBeautyAssociation(business);\n                if (result.verified) {\n                  enhancements.beautyAssociation = result;\n                  totalConfidenceBoost += 18;\n                }\n              }\n              break;\n            case \"professionalLicensing\":\n              if (business.classification.primaryType === \"accounting\") {\n                const result = await this.processCPALicense(business);\n                if (result.licensed) {\n                  enhancements.cpaLicense = result;\n                  totalConfidenceBoost += 25;\n                }\n              }\n              break;\n            case \"chamber\":\n              const chamberResult = await this.processChamberVerification(\n                business\n              );\n              if (chamberResult.verified) {\n                enhancements.chamber = chamberResult;\n                totalConfidenceBoost += 15;\n              }\n              break;\n            case \"apollo\":\n              if (business.website) {\n                const apolloResult = await this.processApolloEnrichment(\n                  business\n                );\n                enhancements.apollo = apolloResult;\n                totalCost += apolloResult.cost || 1.0;\n                if (apolloResult.success) {\n                  totalConfidenceBoost += 30;\n                }\n              }\n              break;\n          }\n        } catch (error) {\n          console.error(\n            `Error processing ${apiType} for ${business.businessName}:`,\n            error\n          );\n        }\n      }\n    );\n\n    await Promise.all(apiPromises);\n\n    return {\n      ...business,\n      enhancementData: {\n        ...enhancements,\n        processingMetadata: {\n          totalConfidenceBoost,\n          totalCost,\n          apisUsed: business.apiRecommendations,\n          apisSkipped: this.calculateSkippedAPIs(business.apiRecommendations),\n          processingStrategy:\n            business.apiRecommendations.length <= 3 ? \"parallel\" : \"sequential\",\n        },\n      },\n      optimizedScore: business.optimizedScore + totalConfidenceBoost,\n    };\n  }\n\n  private calculateSkippedAPIs(usedAPIs: string[]) {\n    const allAPIs = [\n      \"spaAssociation\",\n      \"beautyAssociation\",\n      \"professionalLicensing\",\n      \"chamber\",\n      \"apollo\",\n    ];\n    return allAPIs.filter((api) => !usedAPIs.includes(api));\n  }\n\n  // Enhancement processing methods (optimized versions)\n  private async processSpaAssociation(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 50)); // Simulate API call\n    return {\n      verified: Math.random() > 0.7,\n      membershipType: \"Professional\",\n      source: \"spa_industry_association\",\n      confidenceBoost: 20,\n    };\n  }\n\n  private async processBeautyAssociation(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    return {\n      verified: Math.random() > 0.65,\n      membershipLevel: \"Professional\",\n      source: \"professional_beauty_association\",\n      confidenceBoost: 18,\n    };\n  }\n\n  private async processCPALicense(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 60));\n    return {\n      licensed: Math.random() > 0.6,\n      licenseType: \"CPA\",\n      state: business.locationData.state,\n      source: \"cpa_verify\",\n      confidenceBoost: 25,\n    };\n  }\n\n  private async processChamberVerification(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 40));\n    const isMetropolitan = business.locationData.isMetropolitan;\n    const baseChance = isMetropolitan ? 0.8 : 0.6;\n\n    return {\n      verified: Math.random() < baseChance,\n      chambers: [\n        `${business.locationData.city || \"Local\"} Chamber of Commerce`,\n      ],\n      membershipLevel: \"Professional Member\",\n      source: \"chamber_directory\",\n      confidenceBoost: 15,\n    };\n  }\n\n  private async processApolloEnrichment(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 100));\n    const success = Math.random() > 0.3;\n\n    return {\n      success,\n      cost: 1.0,\n      ownerContacts: success\n        ? [\n            {\n              name: \"John Smith\",\n              title: \"Owner\",\n              email: `owner@${this.extractDomain(business.website)}`,\n            },\n          ]\n        : [],\n      source: \"apollo_io\",\n    };\n  }\n\n  private extractDomain(website: string): string {\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n      return url.hostname.replace(\"www.\", \"\");\n    } catch {\n      return \"example.com\";\n    }\n  }\n}\n\n// Enhanced Quality Scorer with verification methods\nclass OptimizedQualityScorer {\n  private maxCostPerBusiness: number;\n  private dynamicThreshold: number;\n\n  constructor(options: { maxCostPerBusiness?: number } = {}) {\n    this.maxCostPerBusiness = options.maxCostPerBusiness || 2.0;\n    this.dynamicThreshold = 50;\n  }\n\n  scoreBusiness(business: any): BusinessLead {\n    const businessName = business.name || business.businessName || \"\";\n    const address = business.formatted_address || business.address || \"\";\n    const phone = business.formatted_phone_number || business.phone || \"\";\n    const website = business.website || \"\";\n\n    // Only use real email if provided by the source\n    const email = business.email || \"\";\n\n    // Scoring breakdown\n    const scores = {\n      businessName: businessName ? Math.min(100, businessName.length * 3) : 0,\n      address: address ? 100 : 0,\n      phone: phone ? 80 : 0,\n      website: website ? 80 : 0,\n      email: email ? 60 : 0,\n      external: 0,\n    };\n\n    const totalScore =\n      Object.values(scores).reduce((sum, score) => sum + score, 0) / 6;\n\n    return {\n      businessName,\n      address,\n      phone,\n      website,\n      email,\n      optimizedScore: Math.round(totalScore),\n      validationCost: 0.02, // Base validation cost\n      enhancementData: {\n        verificationSources: [\"google_places\"],\n        apolloVerified: false,\n        chamberVerified: false,\n        licenseVerified: false,\n        processingMetadata: {\n          totalCost: 0,\n          totalConfidenceBoost: 0,\n          apisSkipped: [],\n          processingStrategy: \"basic\",\n        },\n      },\n    };\n  }\n\n  // Professional verification methods\n  async applyChamberVerification(\n    business: BusinessLead,\n    location: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `🏛️ Applying chamber verification for ${business.businessName}`\n    );\n\n    // Simulate chamber of commerce verification\n    const isChamberMember = Math.random() > 0.7; // 30% chamber membership rate\n\n    if (isChamberMember) {\n      business.optimizedScore += 15;\n      business.enhancementData.chamberVerified = true;\n      business.enhancementData.verificationSources.push(\"chamber_commerce\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost += 15;\n    }\n\n    return business;\n  }\n\n  async applyTradeAssociationVerification(\n    business: BusinessLead,\n    businessType: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `🔧 Applying trade association verification for ${business.businessName}`\n    );\n\n    // Industry-specific verification\n    let isTradeVerified = false;\n    let confidenceBoost = 0;\n\n    if (\n      businessType.toLowerCase().includes(\"spa\") ||\n      businessType.toLowerCase().includes(\"beauty\")\n    ) {\n      isTradeVerified = Math.random() > 0.6; // 40% spa association membership\n      confidenceBoost = 20;\n    } else if (\n      businessType.toLowerCase().includes(\"restaurant\") ||\n      businessType.toLowerCase().includes(\"food\")\n    ) {\n      isTradeVerified = Math.random() > 0.5; // 50% restaurant association membership\n      confidenceBoost = 15;\n    } else if (businessType.toLowerCase().includes(\"retail\")) {\n      isTradeVerified = Math.random() > 0.4; // 60% retail association membership\n      confidenceBoost = 15;\n    }\n\n    if (isTradeVerified) {\n      business.optimizedScore += confidenceBoost;\n      business.enhancementData.verificationSources.push(\"trade_association\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost +=\n        confidenceBoost;\n    }\n\n    return business;\n  }\n\n  async applyProfessionalLicensing(\n    business: BusinessLead,\n    businessType: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `📜 Applying professional licensing verification for ${business.businessName}`\n    );\n\n    // Professional licensing verification\n    let isLicenseVerified = false;\n    let confidenceBoost = 0;\n\n    if (\n      businessType.toLowerCase().includes(\"dental\") ||\n      businessType.toLowerCase().includes(\"medical\")\n    ) {\n      isLicenseVerified = Math.random() > 0.2; // 80% medical licensing rate\n      confidenceBoost = 25;\n    } else if (\n      businessType.toLowerCase().includes(\"legal\") ||\n      businessType.toLowerCase().includes(\"attorney\")\n    ) {\n      isLicenseVerified = Math.random() > 0.1; // 90% legal licensing rate\n      confidenceBoost = 25;\n    } else if (\n      businessType.toLowerCase().includes(\"accounting\") ||\n      businessType.toLowerCase().includes(\"cpa\")\n    ) {\n      isLicenseVerified = Math.random() > 0.3; // 70% CPA licensing rate\n      confidenceBoost = 25;\n    } else if (businessType.toLowerCase().includes(\"real estate\")) {\n      isLicenseVerified = Math.random() > 0.2; // 80% real estate licensing rate\n      confidenceBoost = 20;\n    }\n\n    if (isLicenseVerified) {\n      business.optimizedScore += confidenceBoost;\n      business.enhancementData.licenseVerified = true;\n      business.enhancementData.verificationSources.push(\"professional_license\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost +=\n        confidenceBoost;\n    }\n\n    return business;\n  }\n\n  async applyApolloDiscovery(business: BusinessLead): Promise<BusinessLead> {\n    console.log(`🚀 Applying Apollo discovery for ${business.businessName}`);\n\n    // Apollo API integration (premium feature)\n    const apolloCost = 1.0; // $1.00 per organization\n    const hasExecutiveContact = Math.random() > 0.3; // 70% success rate for Apollo\n\n    if (hasExecutiveContact) {\n      // Simulate executive contact discovery\n      const executiveContacts = [\n        \"john.smith@company.com\",\n        \"mary.johnson@company.com\",\n        \"david.wilson@company.com\",\n      ];\n\n      business.enhancementData.apolloVerified = true;\n      business.enhancementData.verificationSources.push(\"apollo_api\");\n      business.enhancementData.executiveContact =\n        executiveContacts[Math.floor(Math.random() * executiveContacts.length)];\n      business.optimizedScore += 30;\n      business.enhancementData.processingMetadata.totalCost += apolloCost;\n      business.enhancementData.processingMetadata.totalConfidenceBoost += 30;\n    } else {\n      // Apollo attempted but no results found\n      business.enhancementData.processingMetadata.totalCost += apolloCost;\n    }\n\n    return business;\n  }\n}\n\n// Google Places API with optimization\nclass OptimizedGooglePlacesAPI {\n  private apiKey: string;\n  private cache = new Map();\n  private cacheTTL = 3600000; // 1 hour\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number\n  ) {\n    const cacheKey = `${businessType}_${location}_${maxResults}`;\n\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(\"📦 Using cached Google Places results\");\n      return cached.data;\n    }\n\n    console.log(`🔍 Searching Google Places: ${businessType} in ${location}`);\n\n    const query = `${businessType} in ${location}`;\n    const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(\n      query\n    )}&key=${\n      this.apiKey\n    }&fields=place_id,name,formatted_address,formatted_phone_number,website,rating`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.status !== \"OK\") {\n      throw new Error(`Google Places API error: ${data.status}`);\n    }\n\n    const results = data.results.slice(0, maxResults * 2); // Get extra for filtering\n\n    // Cache the results\n    this.cache.set(cacheKey, {\n      data: results,\n      timestamp: Date.now(),\n    });\n\n    return results;\n  }\n}\n\n// Foursquare Places API integration for enhanced business discovery\nclass OptimizedFoursquareAPI {\n  private apiKey: string;\n  private cache = new Map();\n  private cacheTTL = 3600000; // 1 hour\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number\n  ) {\n    const cacheKey = `foursquare_${businessType}_${location}_${maxResults}`;\n\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(\"📦 Using cached Foursquare results\");\n      return cached.data;\n    }\n\n    console.log(`🔍 Searching Foursquare: ${businessType} in ${location}`);\n\n    // Foursquare Places API v3\n    const url = `https://api.foursquare.com/v3/places/search`;\n    const params = new URLSearchParams({\n      query: businessType,\n      near: location,\n      limit: Math.min(maxResults * 2, 50).toString(), // Get more for filtering\n      fields:\n        \"fsq_id,name,location,contact,website,categories,rating,stats,hours\",\n    });\n\n    try {\n      const response = await fetch(`${url}?${params}`, {\n        headers: {\n          Authorization: this.apiKey,\n          Accept: \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Foursquare API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (!data.results) {\n        console.log(\"❌ No Foursquare results found\");\n        return [];\n      }\n\n      // Transform Foursquare data to our business format\n      const transformedResults = data.results.map(\n        (place: {\n          fsq_id: string;\n          name: string;\n          location: {\n            lat?: number;\n            lng?: number;\n            address?: string;\n            locality?: string;\n            admin_district?: string;\n            postcode?: string;\n            country?: string;\n          };\n          contact?: { phone?: string };\n          website?: string;\n          rating?: number;\n          stats?: { total_tips?: number };\n          categories?: Array<{ name: string }>;\n          hours?: unknown;\n        }) => ({\n          place_id: place.fsq_id,\n          name: place.name,\n          formatted_address: this.formatAddress(place.location),\n          formatted_phone_number: place.contact?.phone || \"\",\n          website: place.website || \"\",\n          rating: place.rating || 0,\n          user_ratings_total: place.stats?.total_tips || 0,\n          business_status: \"OPERATIONAL\",\n          types: place.categories?.map((cat) => cat.name.toLowerCase()) || [],\n          geometry: {\n            location: {\n              lat: place.location?.lat || 0,\n              lng: place.location?.lng || 0,\n            },\n          },\n          // Foursquare-specific enhancements\n          foursquare_data: {\n            fsq_id: place.fsq_id,\n            categories: place.categories,\n            hours: place.hours,\n            stats: place.stats,\n          },\n          data_source: \"foursquare\",\n        })\n      );\n\n      // Cache results\n      this.cache.set(cacheKey, {\n        data: transformedResults,\n        timestamp: Date.now(),\n      });\n\n      console.log(\n        `📊 Found ${transformedResults.length} businesses from Foursquare`\n      );\n      return transformedResults;\n    } catch (error) {\n      console.error(\"❌ Foursquare API error:\", error);\n      return []; // Return empty array on error, don't fail the whole request\n    }\n  }\n\n  private formatAddress(location: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    postcode?: string;\n    country?: string;\n  }): string {\n    if (!location) return \"\";\n\n    const parts = [];\n    if (location.address) parts.push(location.address);\n    if (location.locality) parts.push(location.locality);\n    if (location.admin_district) parts.push(location.admin_district);\n    if (location.postcode) parts.push(location.postcode);\n    if (location.country) parts.push(location.country);\n\n    return parts.join(\", \");\n  }\n}\n\n// Helper function to remove duplicate businesses\nfunction removeDuplicates(businesses: unknown[]): unknown[] {\n  const uniqueBusinesses = [];\n  const seen = new Set();\n\n  for (const business of businesses) {\n    const businessObj = business as {\n      name?: string;\n      formatted_address?: string;\n    };\n    const key = `${(businessObj.name || \"\").toLowerCase()}_${(\n      businessObj.formatted_address || \"\"\n    ).toLowerCase()}`;\n    if (!seen.has(key)) {\n      seen.add(key);\n      uniqueBusinesses.push(business);\n    }\n  }\n\n  return uniqueBusinesses;\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    const startTime = Date.now();\n\n    // Parse request\n    const requestData: BusinessDiscoveryRequest = await req.json();\n    const {\n      businessType,\n      location,\n      maxResults = 5,\n      budgetLimit = 50,\n      minConfidenceScore = 50,\n      tradeAssociations = false,\n      professionalLicensing = false,\n      chamberVerification = false,\n      apolloDiscovery = false,\n    } = requestData;\n\n    console.log(`🚀 Optimized Business Discovery v3.0`);\n    console.log(\n      `📋 Request: ${businessType} in ${location} (${maxResults} leads)`\n    );\n    console.log(\n      `🎯 Enhancements: Trade:${tradeAssociations}, Licensing:${professionalLicensing}, Chamber:${chamberVerification}, Apollo:${apolloDiscovery}`\n    );\n\n    // Get API keys from environment\n    const googlePlacesKey = Deno.env.get(\"GOOGLE_PLACES_API_KEY\");\n    const foursquareKey = Deno.env.get(\"FOURSQUARE_API_KEY\");\n\n    if (!googlePlacesKey) {\n      throw new Error(\"Google Places API key not configured\");\n    }\n\n    // Initialize optimized components\n    const placesAPI = new OptimizedGooglePlacesAPI(googlePlacesKey);\n    const foursquareAPI = foursquareKey\n      ? new OptimizedFoursquareAPI(foursquareKey)\n      : null;\n    const qualityScorer = new OptimizedQualityScorer({\n      maxCostPerBusiness: budgetLimit / maxResults,\n    });\n\n    // Step 1: Search for businesses from multiple sources\n    const allRawBusinesses = [];\n\n    // Google Places search\n    const googleBusinesses = await placesAPI.searchBusinesses(\n      businessType,\n      location,\n      maxResults\n    );\n    console.log(\n      `📊 Found ${googleBusinesses.length} businesses from Google Places`\n    );\n    allRawBusinesses.push(...googleBusinesses);\n\n    // Foursquare search (if API key available)\n    if (foursquareAPI) {\n      const foursquareBusinesses = await foursquareAPI.searchBusinesses(\n        businessType,\n        location,\n        Math.max(maxResults - googleBusinesses.length, 2) // Get additional businesses\n      );\n      console.log(\n        `📊 Found ${foursquareBusinesses.length} businesses from Foursquare`\n      );\n      allRawBusinesses.push(...foursquareBusinesses);\n    }\n\n    // Remove duplicates based on name and location similarity\n    const uniqueBusinesses = removeDuplicates(allRawBusinesses);\n    console.log(`📊 Total unique businesses: ${uniqueBusinesses.length}`);\n\n    // Step 2: Score and filter businesses\n    const scoredBusinesses = uniqueBusinesses.map((business: unknown) =>\n      qualityScorer.scoreBusiness(business)\n    );\n    const qualifiedLeads = scoredBusinesses\n      .filter((lead: BusinessLead) => lead.optimizedScore >= minConfidenceScore)\n      .slice(0, maxResults);\n\n    console.log(\n      `✅ Qualified ${qualifiedLeads.length}/${\n        scoredBusinesses.length\n      } businesses (${(\n        (qualifiedLeads.length / scoredBusinesses.length) *\n        100\n      ).toFixed(1)}%)`\n    );\n\n    // Step 3: Apply P1 enhancements based on user selections\n    const enhancedLeads = qualifiedLeads;\n    let enhancementCost = 0;\n    const optimizationStats = {\n      totalAPICallsSaved: 0,\n      averageConfidenceBoost: 0,\n      parallelProcessingUsed: 0,\n    };\n\n    if (\n      tradeAssociations ||\n      professionalLicensing ||\n      chamberVerification ||\n      apolloDiscovery\n    ) {\n      console.log(\"🚀 Applying optimized P1 enhancements...\");\n\n      // Process each lead with selected enhancements\n      for (let i = 0; i < enhancedLeads.length; i++) {\n        const lead = enhancedLeads[i];\n        let totalConfidenceBoost = 0;\n\n        // Apply Chamber of Commerce verification (free)\n        if (chamberVerification) {\n          await qualityScorer.applyChamberVerification(lead, location);\n        }\n\n        // Apply Trade Association verification (free)\n        if (tradeAssociations) {\n          await qualityScorer.applyTradeAssociationVerification(\n            lead,\n            businessType\n          );\n        }\n\n        // Apply Professional Licensing verification (free)\n        if (professionalLicensing) {\n          await qualityScorer.applyProfessionalLicensing(lead, businessType);\n        }\n\n        // Apply Apollo discovery (premium - $1.00 per organization)\n        if (apolloDiscovery) {\n          await qualityScorer.applyApolloDiscovery(lead);\n        }\n\n        // Update costs and stats\n        enhancementCost += lead.enhancementData.processingMetadata.totalCost;\n        totalConfidenceBoost +=\n          lead.enhancementData.processingMetadata.totalConfidenceBoost;\n      }\n\n      // Calculate optimization statistics\n      optimizationStats.totalAPICallsSaved = enhancedLeads.reduce(\n        (total: number, lead: BusinessLead) => {\n          return (\n            total +\n            (lead.enhancementData.processingMetadata.apisSkipped?.length || 0)\n          );\n        },\n        0\n      );\n\n      optimizationStats.averageConfidenceBoost =\n        enhancedLeads.reduce((total: number, lead: BusinessLead) => {\n          return (\n            total +\n            (lead.enhancementData.processingMetadata.totalConfidenceBoost || 0)\n          );\n        }, 0) / enhancedLeads.length;\n\n      optimizationStats.parallelProcessingUsed = enhancedLeads.filter(\n        (lead: BusinessLead) => {\n          return (\n            lead.enhancementData.processingMetadata.processingStrategy ===\n            \"parallel\"\n          );\n        }\n      ).length;\n\n      console.log(`💰 Enhancement cost: $${enhancementCost.toFixed(2)}`);\n      console.log(\n        `⚡ Optimization: ${optimizationStats.totalAPICallsSaved} API calls saved`\n      );\n      console.log(\n        `📈 Average confidence boost: +${optimizationStats.averageConfidenceBoost.toFixed(\n          1\n        )} points`\n      );\n    }\n\n    const processingTime = Date.now() - startTime;\n    const totalCost =\n      qualifiedLeads.reduce(\n        (sum: number, lead: BusinessLead) => sum + lead.validationCost,\n        0\n      ) + enhancementCost;\n\n    // Generate campaign ID\n    const campaignId = `campaign_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    // Store in database (Supabase integration)\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_ANON_KEY\");\n\n    if (supabaseUrl && supabaseKey) {\n      const supabase = createClient(supabaseUrl, supabaseKey);\n\n      try {\n        await supabase.from(\"campaigns\").insert({\n          id: campaignId,\n          business_type: businessType,\n          location: location,\n          target_count: maxResults,\n          results_count: enhancedLeads.length,\n          total_cost: totalCost,\n          enhancement_cost: enhancementCost,\n          processing_time: processingTime,\n          optimization_stats: optimizationStats,\n        });\n\n        // Store leads\n        const leadsToStore = enhancedLeads.map((lead: BusinessLead) => ({\n          campaign_id: campaignId,\n          business_name: lead.businessName,\n          address: lead.address,\n          phone: lead.phone,\n          website: lead.website,\n          email: lead.email,\n          confidence_score: lead.optimizedScore,\n          enhancement_data: lead.enhancementData,\n        }));\n\n        await supabase.from(\"leads\").insert(leadsToStore);\n      } catch (error) {\n        console.error(\"Database storage error:\", error);\n      }\n    }\n\n    // Return optimized results\n    return new Response(\n      JSON.stringify({\n        success: true,\n        campaignId,\n        discoveryEngine: \"Optimized Discovery Engine v3.0 + Batch Processing\",\n        requirements: {\n          targetLeads: maxResults,\n          budgetLimit,\n          minConfidenceScore,\n        },\n        results: {\n          totalFound: enhancedLeads.length,\n          qualified: enhancedLeads.length,\n          qualificationRate: `${(\n            (enhancedLeads.length / allRawBusinesses.length) *\n            100\n          ).toFixed(1)}%`,\n          averageConfidence: Math.round(\n            enhancedLeads.reduce(\n              (sum: number, lead: BusinessLead) => sum + lead.optimizedScore,\n              0\n            ) / enhancedLeads.length\n          ),\n        },\n        optimization: {\n          processingTime: `${processingTime}ms`,\n          apiCallsSaved: optimizationStats.totalAPICallsSaved || 0,\n          parallelProcessing: optimizationStats.parallelProcessingUsed || 0,\n          averageConfidenceBoost: optimizationStats.averageConfidenceBoost || 0,\n          costOptimization: {\n            enhancementCost,\n            totalCost,\n            savingsFromIntelligentRouting:\n              (optimizationStats.totalAPICallsSaved || 0) * 0.1, // Estimated savings\n          },\n        },\n        costs: {\n          totalCost,\n          costPerLead: totalCost / enhancedLeads.length,\n          enhancementCost,\n          validationCost: totalCost - enhancementCost,\n        },\n        leads: enhancedLeads,\n        metadata: {\n          timestamp: new Date().toISOString(),\n          version: \"3.0\",\n          optimizationsApplied: true,\n        },\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Optimized discovery error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":15,"duration":39.161},
{"type":"mark","name":"lsp.goto_definition","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":86,"character":19}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":1,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",2425]}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":10,"duration":0.114},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":2,"duration":0.261},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":1,"duration":0.022},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":1,"duration":237.745},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":1,"duration":239.0},
{"type":"measure","name":"lsp.goto_definition","count":1,"duration":239.197},
{"type":"mark","name":"lsp.inlay_hint","count":174,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.inlay_hint","count":175,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.code_action","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":176,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.did_close","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":6,"duration":5.755},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":11,"duration":0.059},
{"type":"mark","name":"lsp.code_action","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/census/census-api-client.js","languageId":"javascript","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":16,"duration":0.547},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":12,"duration":0.122},
{"type":"mark","name":"lsp.did_change_batched","count":3,"args":"file:///workspaces/ProspectPro/modules/census/census-api-client.js"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":13,"duration":0.108},
{"type":"measure","name":"lsp.did_change_batched","count":3,"duration":51.188},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":2,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":3,"duration":0.013},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":2,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":177,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":2,"character":2},"end":{"line":101,"character":64}}}},
{"type":"mark","name":"lsp.code_action","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// Import optimization modules (converted to Deno-compatible imports)\n// Note: These would need to be transpiled or rewritten for Deno, but showing the structure\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface BusinessDiscoveryRequest {\n  businessType: string;\n  location: string;\n  maxResults?: number;\n  budgetLimit?: number;\n  requireCompleteContacts?: boolean;\n  minConfidenceScore?: number;\n  additionalQueries?: string[];\n  tradeAssociations?: boolean;\n  professionalLicensing?: boolean;\n  chamberVerification?: boolean;\n  apolloDiscovery?: boolean;\n}\n\ninterface BusinessLead {\n  businessName: string;\n  address: string;\n  phone: string;\n  website: string;\n  email: string;\n  optimizedScore: number;\n  validationCost: number;\n  enhancementData: {\n    verificationSources: string[];\n    apolloVerified: boolean;\n    chamberVerified: boolean;\n    licenseVerified: boolean;\n    executiveContact?: string;\n    processingMetadata: {\n      totalCost: number;\n      totalConfidenceBoost: number;\n      apisSkipped: string[];\n      processingStrategy: string;\n    };\n  };\n}\n\n// Enhanced Business Classifier for intelligent API routing\nclass OptimizedBusinessClassifier {\n  private businessPatterns = {\n    spa: {\n      keywords: [\n        \"spa\",\n        \"wellness\",\n        \"massage\",\n        \"facial\",\n        \"relaxation\",\n        \"therapeutic\",\n      ],\n      confidenceWeight: 0.9,\n      relevantAPIs: [\"spaAssociation\", \"chamber\"],\n      geographicScope: \"local\",\n    },\n    beauty: {\n      keywords: [\"beauty\", \"salon\", \"hair\", \"nail\", \"cosmetic\", \"barbershop\"],\n      confidenceWeight: 0.85,\n      relevantAPIs: [\"beautyAssociation\", \"chamber\"],\n      geographicScope: \"local\",\n    },\n    accounting: {\n      keywords: [\"accounting\", \"cpa\", \"tax\", \"bookkeeping\", \"financial\"],\n      confidenceWeight: 0.95,\n      relevantAPIs: [\"cpaLicensing\", \"chamber\"],\n      geographicScope: \"state\",\n    },\n    professional: {\n      keywords: [\"law\", \"legal\", \"consulting\", \"architect\", \"engineer\"],\n      confidenceWeight: 0.8,\n      relevantAPIs: [\"chamber\", \"apollo\"],\n      geographicScope: \"state\",\n    },\n  };\n\n  classifyBusiness(business: BusinessLead) {\n    const businessText =\n      `${business.businessName} ${business.address}`.toLowerCase();\n    let bestMatch = null;\n    let highestScore = 0;\n\n    for (const [type, pattern] of Object.entries(this.businessPatterns)) {\n      const matches = pattern.keywords.filter((keyword) =>\n        businessText.includes(keyword)\n      ).length;\n      const score =\n        (matches / pattern.keywords.length) * pattern.confidenceWeight * 100;\n\n      if (score > highestScore) {\n        highestScore = score;\n        bestMatch = type;\n      }\n    }\n\n    const confidence =\n      highestScore > 70 ? \"high\" : highestScore > 40 ? \"medium\" : \"low\";\n\n    return {\n      primaryType: bestMatch,\n      confidence,\n      score: highestScore,\n      relevantAPIs: bestMatch\n        ? this.businessPatterns[bestMatch].relevantAPIs\n        : [\"chamber\"],\n      geographicScope: bestMatch\n        ? this.businessPatterns[bestMatch].geographicScope\n        : \"local\",\n    };\n  }\n}\n\n// Geographic Intelligence Router for location-based filtering\nclass GeographicRouter {\n  private professionalLicensingStates = new Set([\n    \"CA\",\n    \"NY\",\n    \"TX\",\n    \"FL\",\n    \"IL\",\n    \"WA\",\n    \"PA\",\n    \"OH\",\n  ]);\n  private metropolitanAreas = new Set([\n    \"new york\",\n    \"los angeles\",\n    \"chicago\",\n    \"houston\",\n    \"phoenix\",\n    \"philadelphia\",\n    \"san antonio\",\n    \"san diego\",\n    \"dallas\",\n    \"san jose\",\n    \"austin\",\n    \"jacksonville\",\n    \"fort worth\",\n    \"columbus\",\n    \"charlotte\",\n  ]);\n\n  analyzeLocation(business: BusinessLead) {\n    const address = business.address.toLowerCase();\n\n    // Extract state\n    const stateMatch = business.address.match(/\\b([A-Z]{2})\\b/);\n    const state = stateMatch ? stateMatch[1] : null;\n\n    // Extract city\n    const cityMatch = business.address.match(/,\\s*([^,]+),\\s*[A-Z]{2}/);\n    const city = cityMatch ? cityMatch[1].trim().toLowerCase() : null;\n\n    // Determine if metropolitan area\n    const isMetropolitan = city ? this.metropolitanAreas.has(city) : false;\n\n    return {\n      state,\n      city,\n      isMetropolitan,\n      hasStateLicensing: state\n        ? this.professionalLicensingStates.has(state)\n        : false,\n      apolloRelevance: isMetropolitan ? \"high\" : city ? \"medium\" : \"low\",\n    };\n  }\n\n  shouldCallAPI(\n    apiType: string,\n    businessClassification: any,\n    locationData: any\n  ): boolean {\n    switch (apiType) {\n      case \"professionalLicensing\":\n        return (\n          locationData.hasStateLicensing &&\n          businessClassification.primaryType === \"accounting\"\n        );\n      case \"spaAssociation\":\n        return businessClassification.primaryType === \"spa\";\n      case \"beautyAssociation\":\n        return businessClassification.primaryType === \"beauty\";\n      case \"apollo\":\n        return (\n          locationData.apolloRelevance !== \"low\" &&\n          businessClassification.confidence !== \"low\"\n        );\n      case \"chamber\":\n        return true; // Always relevant but with different confidence\n      default:\n        return false;\n    }\n  }\n}\n\n// Batch Enhancement Processor for parallel processing\nclass BatchEnhancementProcessor {\n  private classifier = new OptimizedBusinessClassifier();\n  private geoRouter = new GeographicRouter();\n\n  async processBatch(businesses: BusinessLead[], enhancementOptions: any) {\n    console.log(\n      `🚀 Starting optimized batch processing for ${businesses.length} businesses`\n    );\n\n    // Step 1: Classify and analyze all businesses\n    const analyzedBusinesses = businesses.map((business) => {\n      const classification = this.classifier.classifyBusiness(business);\n      const locationData = this.geoRouter.analyzeLocation(business);\n\n      return {\n        ...business,\n        classification,\n        locationData,\n        apiRecommendations: this.generateAPIRecommendations(\n          classification,\n          locationData,\n          enhancementOptions\n        ),\n      };\n    });\n\n    // Step 2: Group by processing strategy\n    const parallelGroup = analyzedBusinesses.filter(\n      (b) =>\n        b.classification.confidence === \"high\" &&\n        b.apiRecommendations.length <= 3\n    );\n    const sequentialGroup = analyzedBusinesses.filter(\n      (b) => !parallelGroup.includes(b)\n    );\n\n    console.log(\n      `📊 Processing groups: Parallel: ${parallelGroup.length}, Sequential: ${sequentialGroup.length}`\n    );\n\n    // Step 3: Process groups optimally\n    const results = [];\n\n    // Process parallel group with Promise.all\n    if (parallelGroup.length > 0) {\n      const parallelPromises = parallelGroup.map((business) =>\n        this.processBusinessEnhancements(business, enhancementOptions)\n      );\n      const parallelResults = await Promise.all(parallelPromises);\n      results.push(...parallelResults);\n    }\n\n    // Process sequential group one by one\n    for (const business of sequentialGroup) {\n      try {\n        const result = await this.processBusinessEnhancements(\n          business,\n          enhancementOptions\n        );\n        results.push(result);\n      } catch (error) {\n        console.error(`Error processing ${business.businessName}:`, error);\n        results.push({\n          ...business,\n          enhancementData: { error: error.message },\n        });\n      }\n    }\n\n    return results;\n  }\n\n  private generateAPIRecommendations(\n    classification: any,\n    locationData: any,\n    options: any\n  ) {\n    const recommendations = [];\n\n    if (\n      options.tradeAssociations &&\n      this.geoRouter.shouldCallAPI(\n        \"spaAssociation\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"spaAssociation\");\n    }\n    if (\n      options.tradeAssociations &&\n      this.geoRouter.shouldCallAPI(\n        \"beautyAssociation\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"beautyAssociation\");\n    }\n    if (\n      options.professionalLicensing &&\n      this.geoRouter.shouldCallAPI(\n        \"professionalLicensing\",\n        classification,\n        locationData\n      )\n    ) {\n      recommendations.push(\"professionalLicensing\");\n    }\n    if (\n      options.chamberVerification &&\n      this.geoRouter.shouldCallAPI(\"chamber\", classification, locationData)\n    ) {\n      recommendations.push(\"chamber\");\n    }\n    if (\n      options.apolloDiscovery &&\n      this.geoRouter.shouldCallAPI(\"apollo\", classification, locationData)\n    ) {\n      recommendations.push(\"apollo\");\n    }\n\n    return recommendations;\n  }\n\n  private async processBusinessEnhancements(\n    business: any,\n    enhancementOptions: any\n  ) {\n    const enhancements: Record<string, unknown> = {};\n    let totalConfidenceBoost = 0;\n    let totalCost = 0;\n\n    // Only call recommended APIs\n    const apiPromises = business.apiRecommendations.map(\n      async (apiType: string) => {\n        try {\n          switch (apiType) {\n            case \"spaAssociation\":\n              if (business.classification.primaryType === \"spa\") {\n                const result = await this.processSpaAssociation(business);\n                if (result.verified) {\n                  enhancements.spaAssociation = result;\n                  totalConfidenceBoost += 20;\n                }\n              }\n              break;\n            case \"beautyAssociation\":\n              if (business.classification.primaryType === \"beauty\") {\n                const result = await this.processBeautyAssociation(business);\n                if (result.verified) {\n                  enhancements.beautyAssociation = result;\n                  totalConfidenceBoost += 18;\n                }\n              }\n              break;\n            case \"professionalLicensing\":\n              if (business.classification.primaryType === \"accounting\") {\n                const result = await this.processCPALicense(business);\n                if (result.licensed) {\n                  enhancements.cpaLicense = result;\n                  totalConfidenceBoost += 25;\n                }\n              }\n              break;\n            case \"chamber\":\n              const chamberResult = await this.processChamberVerification(\n                business\n              );\n              if (chamberResult.verified) {\n                enhancements.chamber = chamberResult;\n                totalConfidenceBoost += 15;\n              }\n              break;\n            case \"apollo\":\n              if (business.website) {\n                const apolloResult = await this.processApolloEnrichment(\n                  business\n                );\n                enhancements.apollo = apolloResult;\n                totalCost += apolloResult.cost || 1.0;\n                if (apolloResult.success) {\n                  totalConfidenceBoost += 30;\n                }\n              }\n              break;\n          }\n        } catch (error) {\n          console.error(\n            `Error processing ${apiType} for ${business.businessName}:`,\n            error\n          );\n        }\n      }\n    );\n\n    await Promise.all(apiPromises);\n\n    return {\n      ...business,\n      enhancementData: {\n        ...enhancements,\n        processingMetadata: {\n          totalConfidenceBoost,\n          totalCost,\n          apisUsed: business.apiRecommendations,\n          apisSkipped: this.calculateSkippedAPIs(business.apiRecommendations),\n          processingStrategy:\n            business.apiRecommendations.length <= 3 ? \"parallel\" : \"sequential\",\n        },\n      },\n      optimizedScore: business.optimizedScore + totalConfidenceBoost,\n    };\n  }\n\n  private calculateSkippedAPIs(usedAPIs: string[]) {\n    const allAPIs = [\n      \"spaAssociation\",\n      \"beautyAssociation\",\n      \"professionalLicensing\",\n      \"chamber\",\n      \"apollo\",\n    ];\n    return allAPIs.filter((api) => !usedAPIs.includes(api));\n  }\n\n  // Enhancement processing methods (optimized versions)\n  private async processSpaAssociation(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 50)); // Simulate API call\n    return {\n      verified: Math.random() > 0.7,\n      membershipType: \"Professional\",\n      source: \"spa_industry_association\",\n      confidenceBoost: 20,\n    };\n  }\n\n  private async processBeautyAssociation(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    return {\n      verified: Math.random() > 0.65,\n      membershipLevel: \"Professional\",\n      source: \"professional_beauty_association\",\n      confidenceBoost: 18,\n    };\n  }\n\n  private async processCPALicense(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 60));\n    return {\n      licensed: Math.random() > 0.6,\n      licenseType: \"CPA\",\n      state: business.locationData.state,\n      source: \"cpa_verify\",\n      confidenceBoost: 25,\n    };\n  }\n\n  private async processChamberVerification(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 40));\n    const isMetropolitan = business.locationData.isMetropolitan;\n    const baseChance = isMetropolitan ? 0.8 : 0.6;\n\n    return {\n      verified: Math.random() < baseChance,\n      chambers: [\n        `${business.locationData.city || \"Local\"} Chamber of Commerce`,\n      ],\n      membershipLevel: \"Professional Member\",\n      source: \"chamber_directory\",\n      confidenceBoost: 15,\n    };\n  }\n\n  private async processApolloEnrichment(business: any) {\n    await new Promise((resolve) => setTimeout(resolve, 100));\n    const success = Math.random() > 0.3;\n\n    return {\n      success,\n      cost: 1.0,\n      ownerContacts: success\n        ? [\n            {\n              name: \"John Smith\",\n              title: \"Owner\",\n              email: `owner@${this.extractDomain(business.website)}`,\n            },\n          ]\n        : [],\n      source: \"apollo_io\",\n    };\n  }\n\n  private extractDomain(website: string): string {\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n      return url.hostname.replace(\"www.\", \"\");\n    } catch {\n      return \"example.com\";\n    }\n  }\n}\n\n// Enhanced Quality Scorer with verification methods\nclass OptimizedQualityScorer {\n  private maxCostPerBusiness: number;\n  private dynamicThreshold: number;\n\n  constructor(options: { maxCostPerBusiness?: number } = {}) {\n    this.maxCostPerBusiness = options.maxCostPerBusiness || 2.0;\n    this.dynamicThreshold = 50;\n  }\n\n  scoreBusiness(business: any): BusinessLead {\n    const businessName = business.name || business.businessName || \"\";\n    const address = business.formatted_address || business.address || \"\";\n    const phone = business.formatted_phone_number || business.phone || \"\";\n    const website = business.website || \"\";\n\n    // Only use real email if provided by the source\n    const email = business.email || \"\";\n\n    // Scoring breakdown\n    const scores = {\n      businessName: businessName ? Math.min(100, businessName.length * 3) : 0,\n      address: address ? 100 : 0,\n      phone: phone ? 80 : 0,\n      website: website ? 80 : 0,\n      email: email ? 60 : 0,\n      external: 0,\n    };\n\n    const totalScore =\n      Object.values(scores).reduce((sum, score) => sum + score, 0) / 6;\n\n    return {\n      businessName,\n      address,\n      phone,\n      website,\n      email,\n      optimizedScore: Math.round(totalScore),\n      validationCost: 0.02, // Base validation cost\n      enhancementData: {\n        verificationSources: [\"google_places\"],\n        apolloVerified: false,\n        chamberVerified: false,\n        licenseVerified: false,\n        processingMetadata: {\n          totalCost: 0,\n          totalConfidenceBoost: 0,\n          apisSkipped: [],\n          processingStrategy: \"basic\",\n        },\n      },\n    };\n  }\n\n  // Professional verification methods\n  async applyChamberVerification(\n    business: BusinessLead,\n    location: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `🏛️ Applying chamber verification for ${business.businessName}`\n    );\n\n    // Simulate chamber of commerce verification\n    const isChamberMember = Math.random() > 0.7; // 30% chamber membership rate\n\n    if (isChamberMember) {\n      business.optimizedScore += 15;\n      business.enhancementData.chamberVerified = true;\n      business.enhancementData.verificationSources.push(\"chamber_commerce\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost += 15;\n    }\n\n    return business;\n  }\n\n  async applyTradeAssociationVerification(\n    business: BusinessLead,\n    businessType: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `🔧 Applying trade association verification for ${business.businessName}`\n    );\n\n    // Industry-specific verification\n    let isTradeVerified = false;\n    let confidenceBoost = 0;\n\n    if (\n      businessType.toLowerCase().includes(\"spa\") ||\n      businessType.toLowerCase().includes(\"beauty\")\n    ) {\n      isTradeVerified = Math.random() > 0.6; // 40% spa association membership\n      confidenceBoost = 20;\n    } else if (\n      businessType.toLowerCase().includes(\"restaurant\") ||\n      businessType.toLowerCase().includes(\"food\")\n    ) {\n      isTradeVerified = Math.random() > 0.5; // 50% restaurant association membership\n      confidenceBoost = 15;\n    } else if (businessType.toLowerCase().includes(\"retail\")) {\n      isTradeVerified = Math.random() > 0.4; // 60% retail association membership\n      confidenceBoost = 15;\n    }\n\n    if (isTradeVerified) {\n      business.optimizedScore += confidenceBoost;\n      business.enhancementData.verificationSources.push(\"trade_association\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost +=\n        confidenceBoost;\n    }\n\n    return business;\n  }\n\n  async applyProfessionalLicensing(\n    business: BusinessLead,\n    businessType: string\n  ): Promise<BusinessLead> {\n    console.log(\n      `📜 Applying professional licensing verification for ${business.businessName}`\n    );\n\n    // Professional licensing verification\n    let isLicenseVerified = false;\n    let confidenceBoost = 0;\n\n    if (\n      businessType.toLowerCase().includes(\"dental\") ||\n      businessType.toLowerCase().includes(\"medical\")\n    ) {\n      isLicenseVerified = Math.random() > 0.2; // 80% medical licensing rate\n      confidenceBoost = 25;\n    } else if (\n      businessType.toLowerCase().includes(\"legal\") ||\n      businessType.toLowerCase().includes(\"attorney\")\n    ) {\n      isLicenseVerified = Math.random() > 0.1; // 90% legal licensing rate\n      confidenceBoost = 25;\n    } else if (\n      businessType.toLowerCase().includes(\"accounting\") ||\n      businessType.toLowerCase().includes(\"cpa\")\n    ) {\n      isLicenseVerified = Math.random() > 0.3; // 70% CPA licensing rate\n      confidenceBoost = 25;\n    } else if (businessType.toLowerCase().includes(\"real estate\")) {\n      isLicenseVerified = Math.random() > 0.2; // 80% real estate licensing rate\n      confidenceBoost = 20;\n    }\n\n    if (isLicenseVerified) {\n      business.optimizedScore += confidenceBoost;\n      business.enhancementData.licenseVerified = true;\n      business.enhancementData.verificationSources.push(\"professional_license\");\n      business.enhancementData.processingMetadata.totalConfidenceBoost +=\n        confidenceBoost;\n    }\n\n    return business;\n  }\n\n  async applyApolloDiscovery(business: BusinessLead): Promise<BusinessLead> {\n    console.log(`🚀 Applying Apollo discovery for ${business.businessName}`);\n\n    // Apollo API integration (premium feature)\n    const apolloCost = 1.0; // $1.00 per organization\n    const hasExecutiveContact = Math.random() > 0.3; // 70% success rate for Apollo\n\n    if (hasExecutiveContact) {\n      // Simulate executive contact discovery\n      const executiveContacts = [\n        \"john.smith@company.com\",\n        \"mary.johnson@company.com\",\n        \"david.wilson@company.com\",\n      ];\n\n      business.enhancementData.apolloVerified = true;\n      business.enhancementData.verificationSources.push(\"apollo_api\");\n      business.enhancementData.executiveContact =\n        executiveContacts[Math.floor(Math.random() * executiveContacts.length)];\n      business.optimizedScore += 30;\n      business.enhancementData.processingMetadata.totalCost += apolloCost;\n      business.enhancementData.processingMetadata.totalConfidenceBoost += 30;\n    } else {\n      // Apollo attempted but no results found\n      business.enhancementData.processingMetadata.totalCost += apolloCost;\n    }\n\n    return business;\n  }\n}\n\n// Google Places API with optimization\nclass OptimizedGooglePlacesAPI {\n  private apiKey: string;\n  private cache = new Map();\n  private cacheTTL = 3600000; // 1 hour\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number\n  ) {\n    const cacheKey = `${businessType}_${location}_${maxResults}`;\n\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(\"📦 Using cached Google Places results\");\n      return cached.data;\n    }\n\n    console.log(`🔍 Searching Google Places: ${businessType} in ${location}`);\n\n    const query = `${businessType} in ${location}`;\n    const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(\n      query\n    )}&key=${\n      this.apiKey\n    }&fields=place_id,name,formatted_address,formatted_phone_number,website,rating`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.status !== \"OK\") {\n      throw new Error(`Google Places API error: ${data.status}`);\n    }\n\n    const results = data.results.slice(0, maxResults * 2); // Get extra for filtering\n\n    // Cache the results\n    this.cache.set(cacheKey, {\n      data: results,\n      timestamp: Date.now(),\n    });\n\n    return results;\n  }\n}\n\n// Foursquare Places API integration for enhanced business discovery\nclass OptimizedFoursquareAPI {\n  private apiKey: string;\n  private cache = new Map();\n  private cacheTTL = 3600000; // 1 hour\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number\n  ) {\n    const cacheKey = `foursquare_${businessType}_${location}_${maxResults}`;\n\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(\"📦 Using cached Foursquare results\");\n      return cached.data;\n    }\n\n    console.log(`🔍 Searching Foursquare: ${businessType} in ${location}`);\n\n    // Foursquare Places API v3\n    const url = `https://api.foursquare.com/v3/places/search`;\n    const params = new URLSearchParams({\n      query: businessType,\n      near: location,\n      limit: Math.min(maxResults * 2, 50).toString(), // Get more for filtering\n      fields:\n        \"fsq_id,name,location,contact,website,categories,rating,stats,hours\",\n    });\n\n    try {\n      const response = await fetch(`${url}?${params}`, {\n        headers: {\n          Authorization: this.apiKey,\n          Accept: \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Foursquare API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (!data.results) {\n        console.log(\"❌ No Foursquare results found\");\n        return [];\n      }\n\n      // Transform Foursquare data to our business format\n      const transformedResults = data.results.map(\n        (place: {\n          fsq_id: string;\n          name: string;\n          location: {\n            lat?: number;\n            lng?: number;\n            address?: string;\n            locality?: string;\n            admin_district?: string;\n            postcode?: string;\n            country?: string;\n          };\n          contact?: { phone?: string };\n          website?: string;\n          rating?: number;\n          stats?: { total_tips?: number };\n          categories?: Array<{ name: string }>;\n          hours?: unknown;\n        }) => ({\n          place_id: place.fsq_id,\n          name: place.name,\n          formatted_address: this.formatAddress(place.location),\n          formatted_phone_number: place.contact?.phone || \"\",\n          website: place.website || \"\",\n          rating: place.rating || 0,\n          user_ratings_total: place.stats?.total_tips || 0,\n          business_status: \"OPERATIONAL\",\n          types: place.categories?.map((cat) => cat.name.toLowerCase()) || [],\n          geometry: {\n            location: {\n              lat: place.location?.lat || 0,\n              lng: place.location?.lng || 0,\n            },\n          },\n          // Foursquare-specific enhancements\n          foursquare_data: {\n            fsq_id: place.fsq_id,\n            categories: place.categories,\n            hours: place.hours,\n            stats: place.stats,\n          },\n          data_source: \"foursquare\",\n        })\n      );\n\n      // Cache results\n      this.cache.set(cacheKey, {\n        data: transformedResults,\n        timestamp: Date.now(),\n      });\n\n      console.log(\n        `📊 Found ${transformedResults.length} businesses from Foursquare`\n      );\n      return transformedResults;\n    } catch (error) {\n      console.error(\"❌ Foursquare API error:\", error);\n      return []; // Return empty array on error, don't fail the whole request\n    }\n  }\n\n  private formatAddress(location: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    postcode?: string;\n    country?: string;\n  }): string {\n    if (!location) return \"\";\n\n    const parts = [];\n    if (location.address) parts.push(location.address);\n    if (location.locality) parts.push(location.locality);\n    if (location.admin_district) parts.push(location.admin_district);\n    if (location.postcode) parts.push(location.postcode);\n    if (location.country) parts.push(location.country);\n\n    return parts.join(\", \");\n  }\n}\n\n// Helper function to remove duplicate businesses\nfunction removeDuplicates(businesses: unknown[]): unknown[] {\n  const uniqueBusinesses = [];\n  const seen = new Set();\n\n  for (const business of businesses) {\n    const businessObj = business as {\n      name?: string;\n      formatted_address?: string;\n    };\n    const key = `${(businessObj.name || \"\").toLowerCase()}_${(\n      businessObj.formatted_address || \"\"\n    ).toLowerCase()}`;\n    if (!seen.has(key)) {\n      seen.add(key);\n      uniqueBusinesses.push(business);\n    }\n  }\n\n  return uniqueBusinesses;\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    const startTime = Date.now();\n\n    // Parse request\n    const requestData: BusinessDiscoveryRequest = await req.json();\n    const {\n      businessType,\n      location,\n      maxResults = 5,\n      budgetLimit = 50,\n      minConfidenceScore = 50,\n      tradeAssociations = false,\n      professionalLicensing = false,\n      chamberVerification = false,\n      apolloDiscovery = false,\n    } = requestData;\n\n    console.log(`🚀 Optimized Business Discovery v3.0`);\n    console.log(\n      `📋 Request: ${businessType} in ${location} (${maxResults} leads)`\n    );\n    console.log(\n      `🎯 Enhancements: Trade:${tradeAssociations}, Licensing:${professionalLicensing}, Chamber:${chamberVerification}, Apollo:${apolloDiscovery}`\n    );\n\n    // Get API keys from environment\n    const googlePlacesKey = Deno.env.get(\"GOOGLE_PLACES_API_KEY\");\n    const foursquareKey = Deno.env.get(\"FOURSQUARE_API_KEY\");\n\n    if (!googlePlacesKey) {\n      throw new Error(\"Google Places API key not configured\");\n    }\n\n    // Initialize optimized components\n    const placesAPI = new OptimizedGooglePlacesAPI(googlePlacesKey);\n    const foursquareAPI = foursquareKey\n      ? new OptimizedFoursquareAPI(foursquareKey)\n      : null;\n    const qualityScorer = new OptimizedQualityScorer({\n      maxCostPerBusiness: budgetLimit / maxResults,\n    });\n\n    // Step 1: Search for businesses from multiple sources\n    const allRawBusinesses = [];\n\n    // Google Places search\n    const googleBusinesses = await placesAPI.searchBusinesses(\n      businessType,\n      location,\n      maxResults\n    );\n    console.log(\n      `📊 Found ${googleBusinesses.length} businesses from Google Places`\n    );\n    allRawBusinesses.push(...googleBusinesses);\n\n    // Foursquare search (if API key available)\n    if (foursquareAPI) {\n      const foursquareBusinesses = await foursquareAPI.searchBusinesses(\n        businessType,\n        location,\n        Math.max(maxResults - googleBusinesses.length, 2) // Get additional businesses\n      );\n      console.log(\n        `📊 Found ${foursquareBusinesses.length} businesses from Foursquare`\n      );\n      allRawBusinesses.push(...foursquareBusinesses);\n    }\n\n    // Remove duplicates based on name and location similarity\n    const uniqueBusinesses = removeDuplicates(allRawBusinesses);\n    console.log(`📊 Total unique businesses: ${uniqueBusinesses.length}`);\n\n    // Step 2: Score and filter businesses\n    const scoredBusinesses = uniqueBusinesses.map((business: unknown) =>\n      qualityScorer.scoreBusiness(business)\n    );\n    const qualifiedLeads = scoredBusinesses\n      .filter((lead: BusinessLead) => lead.optimizedScore >= minConfidenceScore)\n      .slice(0, maxResults);\n\n    console.log(\n      `✅ Qualified ${qualifiedLeads.length}/${\n        scoredBusinesses.length\n      } businesses (${(\n        (qualifiedLeads.length / scoredBusinesses.length) *\n        100\n      ).toFixed(1)}%)`\n    );\n\n    // Step 3: Apply P1 enhancements based on user selections\n    const enhancedLeads = qualifiedLeads;\n    let enhancementCost = 0;\n    const optimizationStats = {\n      totalAPICallsSaved: 0,\n      averageConfidenceBoost: 0,\n      parallelProcessingUsed: 0,\n    };\n\n    if (\n      tradeAssociations ||\n      professionalLicensing ||\n      chamberVerification ||\n      apolloDiscovery\n    ) {\n      console.log(\"🚀 Applying optimized P1 enhancements...\");\n\n      // Process each lead with selected enhancements\n      for (let i = 0; i < enhancedLeads.length; i++) {\n        const lead = enhancedLeads[i];\n        let totalConfidenceBoost = 0;\n\n        // Apply Chamber of Commerce verification (free)\n        if (chamberVerification) {\n          await qualityScorer.applyChamberVerification(lead, location);\n        }\n\n        // Apply Trade Association verification (free)\n        if (tradeAssociations) {\n          await qualityScorer.applyTradeAssociationVerification(\n            lead,\n            businessType\n          );\n        }\n\n        // Apply Professional Licensing verification (free)\n        if (professionalLicensing) {\n          await qualityScorer.applyProfessionalLicensing(lead, businessType);\n        }\n\n        // Apply Apollo discovery (premium - $1.00 per organization)\n        if (apolloDiscovery) {\n          await qualityScorer.applyApolloDiscovery(lead);\n        }\n\n        // Update costs and stats\n        enhancementCost += lead.enhancementData.processingMetadata.totalCost;\n        totalConfidenceBoost +=\n          lead.enhancementData.processingMetadata.totalConfidenceBoost;\n      }\n\n      // Calculate optimization statistics\n      optimizationStats.totalAPICallsSaved = enhancedLeads.reduce(\n        (total: number, lead: BusinessLead) => {\n          return (\n            total +\n            (lead.enhancementData.processingMetadata.apisSkipped?.length || 0)\n          );\n        },\n        0\n      );\n\n      optimizationStats.averageConfidenceBoost =\n        enhancedLeads.reduce((total: number, lead: BusinessLead) => {\n          return (\n            total +\n            (lead.enhancementData.processingMetadata.totalConfidenceBoost || 0)\n          );\n        }, 0) / enhancedLeads.length;\n\n      optimizationStats.parallelProcessingUsed = enhancedLeads.filter(\n        (lead: BusinessLead) => {\n          return (\n            lead.enhancementData.processingMetadata.processingStrategy ===\n            \"parallel\"\n          );\n        }\n      ).length;\n\n      console.log(`💰 Enhancement cost: $${enhancementCost.toFixed(2)}`);\n      console.log(\n        `⚡ Optimization: ${optimizationStats.totalAPICallsSaved} API calls saved`\n      );\n      console.log(\n        `📈 Average confidence boost: +${optimizationStats.averageConfidenceBoost.toFixed(\n          1\n        )} points`\n      );\n    }\n\n    const processingTime = Date.now() - startTime;\n    const totalCost =\n      qualifiedLeads.reduce(\n        (sum: number, lead: BusinessLead) => sum + lead.validationCost,\n        0\n      ) + enhancementCost;\n\n    // Generate campaign ID\n    const campaignId = `campaign_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    // Store in database (Supabase integration)\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_ANON_KEY\");\n\n    if (supabaseUrl && supabaseKey) {\n      const supabase = createClient(supabaseUrl, supabaseKey);\n\n      try {\n        await supabase.from(\"campaigns\").insert({\n          id: campaignId,\n          business_type: businessType,\n          location: location,\n          target_count: maxResults,\n          results_count: enhancedLeads.length,\n          total_cost: totalCost,\n          enhancement_cost: enhancementCost,\n          processing_time: processingTime,\n          optimization_stats: optimizationStats,\n        });\n\n        // Store leads\n        const leadsToStore = enhancedLeads.map((lead: BusinessLead) => ({\n          campaign_id: campaignId,\n          business_name: lead.businessName,\n          address: lead.address,\n          phone: lead.phone,\n          website: lead.website,\n          email: lead.email,\n          confidence_score: lead.optimizedScore,\n          enhancement_data: lead.enhancementData,\n        }));\n\n        await supabase.from(\"leads\").insert(leadsToStore);\n      } catch (error) {\n        console.error(\"Database storage error:\", error);\n      }\n    }\n\n    // Return optimized results\n    return new Response(\n      JSON.stringify({\n        success: true,\n        campaignId,\n        discoveryEngine: \"Optimized Discovery Engine v3.0 + Batch Processing\",\n        requirements: {\n          targetLeads: maxResults,\n          budgetLimit,\n          minConfidenceScore,\n        },\n        results: {\n          totalFound: enhancedLeads.length,\n          qualified: enhancedLeads.length,\n          qualificationRate: `${(\n            (enhancedLeads.length / allRawBusinesses.length) *\n            100\n          ).toFixed(1)}%`,\n          averageConfidence: Math.round(\n            enhancedLeads.reduce(\n              (sum: number, lead: BusinessLead) => sum + lead.optimizedScore,\n              0\n            ) / enhancedLeads.length\n          ),\n        },\n        optimization: {\n          processingTime: `${processingTime}ms`,\n          apiCallsSaved: optimizationStats.totalAPICallsSaved || 0,\n          parallelProcessing: optimizationStats.parallelProcessingUsed || 0,\n          averageConfidenceBoost: optimizationStats.averageConfidenceBoost || 0,\n          costOptimization: {\n            enhancementCost,\n            totalCost,\n            savingsFromIntelligentRouting:\n              (optimizationStats.totalAPICallsSaved || 0) * 0.1, // Estimated savings\n          },\n        },\n        costs: {\n          totalCost,\n          costPerLead: totalCost / enhancedLeads.length,\n          enhancementCost,\n          validationCost: totalCost - enhancementCost,\n        },\n        leads: enhancedLeads,\n        metadata: {\n          timestamp: new Date().toISOString(),\n          version: \"3.0\",\n          optimizationsApplied: true,\n        },\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Optimized discovery error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":17,"duration":13.657},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":14,"duration":0.12},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.document_symbol","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":2,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":1,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",15]}},
{"type":"measure","name":"lsp.diagnostic","count":4,"duration":53.144},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":3,"duration":0.265},
{"type":"mark","name":"tsc.op.op_load","count":170,"args":"file:///workspaces/ProspectPro/modules/census/census-api-client.js"},
{"type":"measure","name":"tsc.op.op_load","count":170,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":53,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":53,"duration":2.118},
{"type":"mark","name":"tsc.op.op_resolve","count":54,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":54,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":55,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":55,"duration":0.074},
{"type":"mark","name":"tsc.op.op_resolve","count":56,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":56,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":57,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":57,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":58,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":58,"duration":0.049},
{"type":"mark","name":"tsc.op.op_load","count":171,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":171,"duration":0.12},
{"type":"mark","name":"tsc.op.op_resolve","count":59,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":59,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":60,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":60,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":61,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":61,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":62,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":62,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":63,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":63,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":64,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":64,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":65,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":65,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":66,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":66,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":67,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":67,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":68,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":68,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":69,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":69,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":70,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":70,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":71,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":71,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":72,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":72,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":73,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":73,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":74,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":74,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":75,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":75,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":76,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":76,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":77,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":77,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":78,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":78,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":79,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":79,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":80,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":80,"duration":5.767},
{"type":"mark","name":"tsc.op.op_resolve","count":81,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":81,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":82,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":82,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":83,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":83,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":84,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":84,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":85,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":85,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":86,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":86,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":87,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":87,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":88,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":88,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":89,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":89,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":90,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":90,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":91,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":91,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":92,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":92,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":93,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":93,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":94,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":94,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":95,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":95,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":96,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":96,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":97,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":97,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":98,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":98,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":99,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":99,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":100,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":100,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":101,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":101,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":102,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":102,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":103,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":103,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":104,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":104,"duration":0.042},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":1,"duration":496.047},
{"type":"mark","name":"tsc.host.getNavigationTree","count":2,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":2,"duration":20.829},
{"type":"measure","name":"tsc.request.getNavigationTree","count":2,"duration":518.573},
{"type":"measure","name":"lsp.get_navigation_tree","count":2,"duration":518.643},
{"type":"measure","name":"lsp.document_symbol","count":5,"duration":519.02},
{"type":"mark","name":"lsp.did_change_batched","count":4,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":4,"duration":20.069},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.folding_range","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":2,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",16]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":2,"duration":0.02},
{"type":"measure","name":"lsp.testing_update","count":15,"duration":2.864},
{"type":"mark","name":"tsc.op.op_load","count":172,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":172,"duration":0.082},
{"type":"mark","name":"tsc.op.op_resolve","count":105,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":105,"duration":0.046},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":6,"duration":0.017},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":100,"duration":0.011},
{"type":"mark","name":"lsp.semantic_tokens_range","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":493,"character":48},"end":{"line":517,"character":60}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.code_lens","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":3,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.document_symbol","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":4,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.inlay_hint","count":178,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":101,"duration":0.014},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":7,"duration":0.024},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":102,"duration":0.014},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":103,"duration":0.011},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":104,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":105,"duration":0.009},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":2,"duration":696.992},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":1,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":2,"duration":697.85},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"lsp.semantic_tokens_range","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":27,"character":29}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":1,"duration":132.914},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":3,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":14052,"length":961},"2020"]}},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":1,"duration":832.976},
{"type":"measure","name":"lsp.folding_range","count":3,"duration":833.148},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":3,"duration":8.224},
{"type":"mark","name":"tsc.host.getNavigationTree","count":3,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":3,"duration":775.083},
{"type":"measure","name":"lsp.semantic_tokens_range","count":2,"duration":775.199},
{"type":"measure","name":"tsc.host.getNavigationTree","count":3,"duration":32.904},
{"type":"measure","name":"tsc.request.getNavigationTree","count":3,"duration":613.03},
{"type":"measure","name":"lsp.get_navigation_tree","count":3,"duration":613.118},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":1,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":1,"duration":0.468},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":4,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":1021},"2020"]}},
{"type":"measure","name":"lsp.code_lens","count":3,"duration":626.056},
{"type":"measure","name":"lsp.get_navigation_tree","count":4,"duration":620.283},
{"type":"measure","name":"lsp.document_symbol","count":6,"duration":620.74},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":1,"duration":198.736},
{"type":"measure","name":"lsp.diagnostic","count":5,"duration":896.892},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":4,"duration":13.903},
{"type":"measure","name":"lsp.did_save","count":3,"duration":485.583},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":4,"duration":118.648},
{"type":"measure","name":"lsp.semantic_tokens_range","count":3,"duration":118.768},
{"type":"mark","name":"lsp.document_symbol","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":5,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":5,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":7,"duration":0.441},
{"type":"mark","name":"lsp.semantic_tokens_full","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":5,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":41000},"2020"]}},
{"type":"mark","name":"lsp.code_lens","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":6,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":6,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":4,"duration":1.205},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":5,"duration":240.303},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":5,"duration":242.294},
{"type":"measure","name":"lsp.semantic_tokens_full","count":2,"duration":242.658},
{"type":"mark","name":"lsp.code_lens_resolve","count":1,"args":{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":21}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":7,"character":6},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":1,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",360]}},
{"type":"mark","name":"lsp.code_lens_resolve","count":2,"args":{"range":{"start":{"line":8,"character":2},"end":{"line":13,"character":3}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":8,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":3,"args":{"range":{"start":{"line":15,"character":10},"end":{"line":15,"character":16}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":15,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"measure","name":"tsc.host.findReferences","count":1,"duration":6.431},
{"type":"mark","name":"tsc.host.findReferences","count":2,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",380]}},
{"type":"measure","name":"tsc.request.findReferences","count":1,"duration":6.617},
{"type":"measure","name":"lsp.references","count":1,"duration":6.754},
{"type":"measure","name":"lsp.code_lens_resolve","count":1,"duration":6.788},
{"type":"measure","name":"tsc.host.findReferences","count":2,"duration":1.2},
{"type":"mark","name":"tsc.host.findReferences","count":3,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",582]}},
{"type":"measure","name":"tsc.request.findReferences","count":2,"duration":7.563},
{"type":"measure","name":"lsp.references","count":2,"duration":7.661},
{"type":"measure","name":"lsp.code_lens_resolve","count":2,"duration":7.68},
{"type":"measure","name":"tsc.host.findReferences","count":3,"duration":8.49},
{"type":"measure","name":"tsc.request.findReferences","count":3,"duration":15.786},
{"type":"measure","name":"lsp.references","count":3,"duration":15.88},
{"type":"measure","name":"lsp.code_lens_resolve","count":3,"duration":15.904},
{"type":"mark","name":"lsp.inlay_hint","count":179,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"mark","name":"lsp.did_change_batched","count":5,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":16,"duration":0.229},
{"type":"measure","name":"lsp.did_change_batched","count":5,"duration":10.01},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":3,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",17]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":3,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":173,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":173,"duration":0.147},
{"type":"mark","name":"tsc.op.op_resolve","count":106,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":106,"duration":0.054},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":3,"duration":229.654},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":3,"duration":230.803},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":2,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":2,"duration":0.209},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":2,"duration":0.28},
{"type":"measure","name":"lsp.diagnostic","count":8,"duration":233.273},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":9,"duration":0.019},
{"type":"mark","name":"lsp.semantic_tokens_full","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.inlay_hint","count":180,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":6,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":42172},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":6,"duration":88.951},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":6,"duration":90.924},
{"type":"measure","name":"lsp.semantic_tokens_full","count":3,"duration":91.259},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":10,"duration":0.024},
{"type":"mark","name":"lsp.document_symbol","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":7,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.code_lens","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":8,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.document_symbol","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":9,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.folding_range","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":4,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"mark","name":"lsp.inlay_hint","count":181,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":4,"duration":77.572},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":2,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getNavigationTree","count":4,"duration":88.132},
{"type":"measure","name":"lsp.get_navigation_tree","count":7,"duration":88.59},
{"type":"measure","name":"lsp.document_symbol","count":8,"duration":89.06},
{"type":"measure","name":"lsp.get_navigation_tree","count":8,"duration":97.66},
{"type":"measure","name":"lsp.code_lens","count":5,"duration":97.965},
{"type":"measure","name":"lsp.get_navigation_tree","count":9,"duration":115.335},
{"type":"measure","name":"lsp.document_symbol","count":9,"duration":117.705},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":2,"duration":65.785},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":2,"duration":149.89},
{"type":"measure","name":"lsp.folding_range","count":4,"duration":150.089},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":4,"duration":0.056},
{"type":"mark","name":"lsp.inlay_hint","count":182,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.code_lens","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":10,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":10,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":6,"duration":0.358},
{"type":"mark","name":"lsp.code_lens_resolve","count":4,"args":{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":21}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":7,"character":6},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":5,"args":{"range":{"start":{"line":8,"character":2},"end":{"line":13,"character":3}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":8,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.host.findReferences","count":4,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",360]}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":6,"args":{"range":{"start":{"line":15,"character":10},"end":{"line":15,"character":16}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":15,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"measure","name":"tsc.host.findReferences","count":4,"duration":1.518},
{"type":"mark","name":"tsc.host.findReferences","count":5,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",380]}},
{"type":"measure","name":"tsc.request.findReferences","count":4,"duration":2.508},
{"type":"measure","name":"lsp.references","count":4,"duration":2.627},
{"type":"measure","name":"lsp.code_lens_resolve","count":4,"duration":2.652},
{"type":"measure","name":"tsc.host.findReferences","count":5,"duration":1.078},
{"type":"mark","name":"tsc.host.findReferences","count":6,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",582]}},
{"type":"measure","name":"tsc.request.findReferences","count":5,"duration":3.598},
{"type":"measure","name":"lsp.references","count":5,"duration":3.7},
{"type":"measure","name":"lsp.code_lens_resolve","count":5,"duration":3.718},
{"type":"measure","name":"tsc.host.findReferences","count":6,"duration":4.652},
{"type":"measure","name":"tsc.request.findReferences","count":6,"duration":7.428},
{"type":"measure","name":"lsp.references","count":6,"duration":7.512},
{"type":"measure","name":"lsp.code_lens_resolve","count":6,"duration":7.533},
{"type":"mark","name":"lsp.inlay_hint","count":183,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":7,"args":{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":21}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":7,"character":6},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":7,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",360]}},
{"type":"measure","name":"tsc.host.findReferences","count":7,"duration":0.946},
{"type":"measure","name":"tsc.request.findReferences","count":7,"duration":1.077},
{"type":"measure","name":"lsp.references","count":7,"duration":1.211},
{"type":"measure","name":"lsp.code_lens_resolve","count":7,"duration":1.238},
{"type":"mark","name":"lsp.inlay_hint","count":184,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.did_change_batched","count":6,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":17,"duration":0.097},
{"type":"measure","name":"lsp.did_change_batched","count":6,"duration":15.039},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":4,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",18]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":4,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":174,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":174,"duration":0.096},
{"type":"mark","name":"tsc.op.op_resolve","count":107,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":107,"duration":0.045},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":4,"duration":205.369},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":4,"duration":205.542},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":3,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":3,"duration":0.105},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":3,"duration":0.168},
{"type":"measure","name":"lsp.diagnostic","count":11,"duration":207.465},
{"type":"mark","name":"lsp.inlay_hint","count":185,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":12,"duration":0.018},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":5,"duration":0.053},
{"type":"mark","name":"lsp.code_lens","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":11,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.document_symbol","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":12,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.host.getNavigationTree","count":5,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":5,"duration":71.089},
{"type":"measure","name":"tsc.request.getNavigationTree","count":5,"duration":77.648},
{"type":"measure","name":"lsp.get_navigation_tree","count":11,"duration":78.769},
{"type":"measure","name":"lsp.code_lens","count":7,"duration":79.076},
{"type":"measure","name":"lsp.get_navigation_tree","count":12,"duration":78.066},
{"type":"measure","name":"lsp.document_symbol","count":10,"duration":78.481},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":13,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":186,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.document_symbol","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":13,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":13,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":11,"duration":0.516},
{"type":"mark","name":"lsp.semantic_tokens_full","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.folding_range","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":7,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":43727},"2020"]}},
{"type":"mark","name":"lsp.inlay_hint","count":187,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.code_lens","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":14,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":14,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":8,"duration":0.304},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":7,"duration":176.618},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":3,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":7,"duration":181.413},
{"type":"measure","name":"lsp.semantic_tokens_full","count":4,"duration":181.75},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":3,"duration":11.954},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":3,"duration":190.671},
{"type":"measure","name":"lsp.folding_range","count":5,"duration":190.864},
{"type":"mark","name":"lsp.inlay_hint","count":188,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":8,"args":{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":21}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":7,"character":6},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":8,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",360]}},
{"type":"mark","name":"lsp.code_lens_resolve","count":9,"args":{"range":{"start":{"line":8,"character":2},"end":{"line":13,"character":3}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":8,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":10,"args":{"range":{"start":{"line":15,"character":10},"end":{"line":15,"character":16}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":15,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"measure","name":"tsc.host.findReferences","count":8,"duration":6.159},
{"type":"mark","name":"tsc.host.findReferences","count":9,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",380]}},
{"type":"measure","name":"tsc.request.findReferences","count":8,"duration":6.796},
{"type":"measure","name":"lsp.references","count":8,"duration":6.936},
{"type":"measure","name":"lsp.code_lens_resolve","count":8,"duration":6.966},
{"type":"measure","name":"tsc.host.findReferences","count":9,"duration":0.646},
{"type":"mark","name":"tsc.host.findReferences","count":10,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",582]}},
{"type":"measure","name":"tsc.request.findReferences","count":9,"duration":4.143},
{"type":"measure","name":"lsp.references","count":9,"duration":4.267},
{"type":"measure","name":"lsp.code_lens_resolve","count":9,"duration":4.29},
{"type":"measure","name":"tsc.host.findReferences","count":10,"duration":4.23},
{"type":"measure","name":"tsc.request.findReferences","count":10,"duration":11.32},
{"type":"measure","name":"lsp.references","count":10,"duration":11.416},
{"type":"measure","name":"lsp.code_lens_resolve","count":10,"duration":11.44},
{"type":"mark","name":"lsp.inlay_hint","count":189,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"mark","name":"lsp.did_change_batched","count":7,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":18,"duration":0.11},
{"type":"measure","name":"lsp.did_change_batched","count":7,"duration":18.667},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":5,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",19]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":5,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":175,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":175,"duration":0.09},
{"type":"mark","name":"tsc.op.op_resolve","count":108,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":108,"duration":0.045},
{"type":"mark","name":"lsp.inlay_hint","count":190,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":17}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":5,"duration":235.265},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":5,"duration":235.434},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":4,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":4,"duration":73.019},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":4,"duration":73.144},
{"type":"measure","name":"lsp.diagnostic","count":14,"duration":308.844},
{"type":"mark","name":"lsp.inlay_hint","count":191,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"mark","name":"lsp.document_symbol","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":15,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":6,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"mark","name":"lsp.inlay_hint","count":192,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":6,"duration":36.149},
{"type":"measure","name":"tsc.request.getNavigationTree","count":6,"duration":37.049},
{"type":"measure","name":"lsp.get_navigation_tree","count":15,"duration":37.132},
{"type":"measure","name":"lsp.document_symbol","count":12,"duration":37.719},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":15,"duration":0.015},
{"type":"mark","name":"lsp.code_lens","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":16,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":16,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":9,"duration":0.367},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":6,"duration":0.042},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":16,"duration":0.02},
{"type":"mark","name":"lsp.semantic_tokens_full","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.document_symbol","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":17,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":17,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":13,"duration":0.488},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":8,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":43735},"2020"]}},
{"type":"mark","name":"lsp.folding_range","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":8,"duration":86.9},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":4,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":8,"duration":88.636},
{"type":"measure","name":"lsp.semantic_tokens_full","count":5,"duration":88.988},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":4,"duration":7.098},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":4,"duration":90.993},
{"type":"measure","name":"lsp.folding_range","count":6,"duration":91.156},
{"type":"mark","name":"lsp.inlay_hint","count":193,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"mark","name":"lsp.code_lens","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":18,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":18,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":10,"duration":0.313},
{"type":"mark","name":"lsp.code_lens_resolve","count":11,"args":{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":21}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":7,"character":6},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":12,"args":{"range":{"start":{"line":8,"character":2},"end":{"line":13,"character":3}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":8,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":13,"args":{"range":{"start":{"line":15,"character":10},"end":{"line":15,"character":16}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":15,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":11,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",360]}},
{"type":"measure","name":"tsc.host.findReferences","count":11,"duration":1.161},
{"type":"mark","name":"tsc.host.findReferences","count":12,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",380]}},
{"type":"measure","name":"tsc.host.findReferences","count":12,"duration":0.477},
{"type":"mark","name":"tsc.host.findReferences","count":13,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",582]}},
{"type":"measure","name":"tsc.request.findReferences","count":11,"duration":2.494},
{"type":"measure","name":"lsp.references","count":11,"duration":2.642},
{"type":"measure","name":"lsp.code_lens_resolve","count":11,"duration":2.667},
{"type":"measure","name":"tsc.request.findReferences","count":12,"duration":2.488},
{"type":"measure","name":"lsp.references","count":12,"duration":2.566},
{"type":"measure","name":"lsp.code_lens_resolve","count":12,"duration":2.59},
{"type":"measure","name":"tsc.host.findReferences","count":13,"duration":7.335},
{"type":"measure","name":"tsc.request.findReferences","count":13,"duration":9.421},
{"type":"measure","name":"lsp.references","count":13,"duration":9.504},
{"type":"measure","name":"lsp.code_lens_resolve","count":13,"duration":9.525},
{"type":"mark","name":"lsp.code_lens_resolve","count":14,"args":{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":21}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":7,"character":6},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":14,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",360]}},
{"type":"measure","name":"tsc.host.findReferences","count":14,"duration":0.746},
{"type":"measure","name":"tsc.request.findReferences","count":14,"duration":0.865},
{"type":"measure","name":"lsp.references","count":14,"duration":1.026},
{"type":"measure","name":"lsp.code_lens_resolve","count":14,"duration":1.055},
{"type":"mark","name":"lsp.code_lens_resolve","count":15,"args":{"range":{"start":{"line":8,"character":2},"end":{"line":13,"character":3}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":8,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":16,"args":{"range":{"start":{"line":15,"character":10},"end":{"line":15,"character":16}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":15,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":15,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",380]}},
{"type":"measure","name":"tsc.host.findReferences","count":15,"duration":0.281},
{"type":"mark","name":"tsc.host.findReferences","count":16,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",582]}},
{"type":"measure","name":"tsc.request.findReferences","count":15,"duration":0.871},
{"type":"measure","name":"lsp.references","count":15,"duration":0.962},
{"type":"measure","name":"lsp.code_lens_resolve","count":15,"duration":0.982},
{"type":"measure","name":"tsc.host.findReferences","count":16,"duration":0.844},
{"type":"measure","name":"tsc.request.findReferences","count":16,"duration":1.624},
{"type":"measure","name":"lsp.references","count":16,"duration":1.705},
{"type":"measure","name":"lsp.code_lens_resolve","count":16,"duration":1.723},
{"type":"mark","name":"lsp.inlay_hint","count":194,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":56,"character":25}}}},
{"type":"mark","name":"lsp.did_change_batched","count":8,"args":"file:///workspaces/ProspectPro/modules/census/census-api-client.js"},
{"type":"measure","name":"lsp.did_change_batched","count":8,"duration":31.804},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":17,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":19,"duration":0.119},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":18,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":7,"duration":0.022},
{"type":"mark","name":"lsp.did_change_batched","count":9,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":9,"duration":243.321},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.inlay_hint","count":195,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.code_lens","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":19,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.code_lens_resolve","count":17,"args":{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":43}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":38,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":20,"duration":0.008},
{"type":"mark","name":"lsp.document_symbol","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":20,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":20,"duration":0.117},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":6,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",21]}},
{"type":"mark","name":"lsp.document_symbol","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":21,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"lsp.inlay_hint","count":196,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":6,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":176,"args":"file:///workspaces/ProspectPro/modules/census/census-api-client.js"},
{"type":"measure","name":"tsc.op.op_load","count":176,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":177,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":177,"duration":0.141},
{"type":"mark","name":"tsc.op.op_resolve","count":109,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":109,"duration":0.061},
{"type":"mark","name":"lsp.semantic_tokens_full","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.folding_range","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"lsp.inlay_hint","count":197,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.code_lens","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":22,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":6,"duration":1250.198},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":6,"duration":1260.39},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":7,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":7,"duration":29.048},
{"type":"mark","name":"tsc.host.findReferences","count":17,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",1296]}},
{"type":"measure","name":"tsc.host.findReferences","count":17,"duration":19.819},
{"type":"measure","name":"tsc.request.findReferences","count":17,"duration":1309.328},
{"type":"measure","name":"lsp.references","count":17,"duration":1309.407},
{"type":"measure","name":"lsp.code_lens_resolve","count":17,"duration":1309.435},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":9,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":44297},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":9,"duration":92.945},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":9,"duration":638.416},
{"type":"measure","name":"lsp.semantic_tokens_full","count":6,"duration":638.787},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":5,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":5,"duration":13.658},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":5,"duration":650.043},
{"type":"measure","name":"lsp.folding_range","count":7,"duration":650.24},
{"type":"mark","name":"tsc.host.getNavigationTree","count":8,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":8,"duration":4.576},
{"type":"measure","name":"tsc.request.getNavigationTree","count":8,"duration":427.975},
{"type":"measure","name":"lsp.get_navigation_tree","count":20,"duration":1415.639},
{"type":"measure","name":"lsp.document_symbol","count":14,"duration":1416.058},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":5,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":5,"duration":0.147},
{"type":"measure","name":"lsp.get_navigation_tree","count":21,"duration":1316.626},
{"type":"measure","name":"lsp.document_symbol","count":15,"duration":1318.933},
{"type":"measure","name":"lsp.get_navigation_tree","count":22,"duration":436.841},
{"type":"measure","name":"lsp.code_lens","count":12,"duration":437.309},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":5,"duration":174.487},
{"type":"measure","name":"lsp.diagnostic","count":19,"duration":1439.078},
{"type":"measure","name":"lsp.did_save","count":8,"duration":1174.331},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":21,"duration":0.056},
{"type":"mark","name":"lsp.code_lens_resolve","count":18,"args":{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":43}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":38,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":18,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",1296]}},
{"type":"measure","name":"tsc.host.findReferences","count":18,"duration":92.672},
{"type":"measure","name":"tsc.request.findReferences","count":18,"duration":92.881},
{"type":"measure","name":"lsp.references","count":18,"duration":93.357},
{"type":"measure","name":"lsp.code_lens_resolve","count":18,"duration":93.392},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":22,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts","languageId":"typescript","version":1,"text":"// Business Discovery Types\nexport interface BusinessLead {\n  id: string;\n  business_name: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  industry?: string;\n  confidence_score: number;\n  validation_status: \"pending\" | \"validating\" | \"validated\" | \"failed\";\n  created_at: string;\n  cost_to_acquire: number;\n  data_sources: string[];\n}\n\nexport interface CampaignConfig {\n  search_terms: string;\n  location: string;\n  business_type?: string;\n  budget_limit: number;\n  max_results: number;\n  include_email_validation: boolean;\n  include_website_validation: boolean;\n  min_confidence_score: number;\n}\n\nexport interface ValidationResult {\n  field: string;\n  is_valid: boolean;\n  confidence: number;\n  source: string;\n  details?: string;\n}\n\nexport interface CampaignResult {\n  campaign_id: string;\n  status: \"running\" | \"completed\" | \"failed\" | \"cancelled\";\n  progress: number;\n  total_cost: number;\n  leads_found: number;\n  leads_qualified: number;\n  leads_validated: number;\n  created_at: string;\n  completed_at?: string;\n  error_message?: string;\n}\n\n// API Response Types\nexport interface EdgeFunctionResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  cost?: number;\n  processing_time?: number;\n}\n\nexport interface BusinessDiscoveryResponse {\n  businesses: BusinessLead[];\n  total_cost: number;\n  processing_time: number;\n  campaign_id: string;\n  qualified_count: number;\n  total_found: number;\n}\n\n// Store Types\nexport interface CampaignStore {\n  campaigns: CampaignResult[];\n  currentCampaign: CampaignResult | null;\n  leads: BusinessLead[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface UIStore {\n  sidebarOpen: boolean;\n  theme: \"light\" | \"dark\";\n  notifications: Notification[];\n}\n\nexport interface Notification {\n  id: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  title: string;\n  message: string;\n  timestamp: number;\n}\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":21,"duration":0.125},
{"type":"measure","name":"lsp.did_open","count":18,"duration":8.58},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":23,"duration":0.022},
{"type":"mark","name":"lsp.did_change_batched","count":10,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":22,"duration":0.098},
{"type":"measure","name":"lsp.did_change_batched","count":10,"duration":2.939},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":24,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":198,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":25,"duration":0.018},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":9,"duration":0.037},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":26,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":199,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":27,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":11,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":11,"duration":1.191},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":23,"duration":0.099},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":28,"duration":0.012},
{"type":"mark","name":"lsp.inlay_hint","count":200,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":29,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":10,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":30,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":201,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":31,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":12,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":12,"duration":1.274},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":24,"duration":0.099},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":32,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":202,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":11,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":203,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.did_change_batched","count":13,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":13,"duration":4.93},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":33,"duration":0.012},
{"type":"measure","name":"lsp.testing_update","count":25,"duration":0.109},
{"type":"mark","name":"lsp.inlay_hint","count":204,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":34,"duration":0.02},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":12,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":205,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":84,"character":22}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":35,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":36,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":37,"duration":0.001},
{"type":"mark","name":"lsp.goto_definition","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":256,"character":19}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":2,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",6994]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":4,"duration":0.183},
{"type":"mark","name":"tsc.op.op_resolve","count":110,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":110,"duration":0.112},
{"type":"mark","name":"tsc.op.op_resolve","count":111,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":111,"duration":0.012},
{"type":"mark","name":"tsc.op.op_load","count":178,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":178,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":112,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":112,"duration":0.104},
{"type":"mark","name":"tsc.op.op_resolve","count":113,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":113,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":114,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":114,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":115,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":115,"duration":0.045},
{"type":"mark","name":"tsc.op.op_load","count":179,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":179,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":116,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":116,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":117,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":117,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":118,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":118,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":119,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":119,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":120,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":120,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":121,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":121,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":122,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":122,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":123,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":123,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":124,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":124,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":125,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":125,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":126,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":126,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":127,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":127,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":128,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":128,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":129,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":129,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":130,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":130,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":131,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":131,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":132,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":132,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":133,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":133,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":134,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":134,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":135,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":135,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":136,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":136,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":137,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":137,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":138,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":138,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":139,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":139,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":140,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":140,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":141,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":141,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":142,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":142,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":143,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":143,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":144,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":144,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":145,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":145,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":146,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":146,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":147,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":147,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":148,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":148,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":149,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":149,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":150,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":150,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":151,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":151,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":152,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":152,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":153,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":153,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":154,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":154,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":155,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":155,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":156,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":156,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":157,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":157,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":158,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":158,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":159,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":159,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":160,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":160,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":161,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":161,"duration":0.025},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":2,"duration":91.787},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":2,"duration":91.943},
{"type":"measure","name":"lsp.goto_definition","count":2,"duration":92.102},
{"type":"mark","name":"lsp.did_change_batched","count":14,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":26,"duration":0.117},
{"type":"measure","name":"lsp.did_change_batched","count":14,"duration":2.977},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":38,"duration":0.01},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":13,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":14,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":39,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":40,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":41,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":42,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":7,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":7,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":180,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":180,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":162,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":162,"duration":0.077},
{"type":"measure","name":"lsp.diagnostic","count":43,"duration":60.878},
{"type":"mark","name":"lsp.did_close","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":7,"duration":0.523},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":27,"duration":0.083},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":7,"duration":64.336},
{"type":"mark","name":"lsp.did_open","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":19,"duration":8.289},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":28,"duration":0.101},
{"type":"mark","name":"lsp.goto_definition","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":411,"character":8}}},
{"type":"mark","name":"lsp.goto_definition","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"position":{"line":122,"character":4}}},
{"type":"mark","name":"lsp.goto_definition","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"position":{"line":122,"character":4}}},
{"type":"mark","name":"lsp.did_close","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":8,"duration":0.704},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":29,"duration":0.096},
{"type":"mark","name":"lsp.did_open","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":20,"duration":2.985},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":30,"duration":0.103},
{"type":"mark","name":"lsp.did_change_batched","count":15,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":15,"duration":1.341},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":31,"duration":0.098},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":44,"duration":0.02},
{"type":"mark","name":"lsp.code_action","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":206,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":63,"character":4}}}},
{"type":"mark","name":"lsp.code_lens","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.document_symbol","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.folding_range","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.code_lens","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":33,"character":20}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":10,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/types/index.ts",{"start":0,"length":838},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":5,"duration":0.26},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":8,"duration":0.019},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":9,"duration":0.009},
{"type":"mark","name":"tsc.op.op_load","count":181,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":181,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":182,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":182,"duration":0.023},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":10,"duration":14.119},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":10,"duration":14.524},
{"type":"measure","name":"lsp.semantic_tokens_range","count":4,"duration":14.633},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":15,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":207,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":17}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":11,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/types/index.ts",{"start":0,"length":2560},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":11,"duration":1.801},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":11,"duration":2.0},
{"type":"measure","name":"lsp.semantic_tokens_full","count":7,"duration":2.106},
{"type":"mark","name":"lsp.code_lens","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":208,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":16,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":32,"duration":0.102},
{"type":"measure","name":"lsp.did_change_batched","count":16,"duration":5.716},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":45,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":209,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":16,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":210,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":17,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":17,"duration":2.524},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":46,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":33,"duration":0.104},
{"type":"mark","name":"lsp.inlay_hint","count":211,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":8,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",34]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":10,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":183,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":183,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":163,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":163,"duration":0.077},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":8,"duration":118.807},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":8,"duration":119.029},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":6,"args":"GetAmbientModules"},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":17,"duration":0.019},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":6,"duration":78.048},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":6,"duration":78.15},
{"type":"measure","name":"lsp.diagnostic","count":47,"duration":197.492},
{"type":"mark","name":"lsp.inlay_hint","count":212,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":48,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx","languageId":"typescriptreact","version":1,"text":"import React from 'react'\nimport { useCampaignStore } from '../stores/campaignStore'\n\nexport const Results: React.FC = () => {\n  const { leads, currentCampaign } = useCampaignStore()\n\n  const handleExport = (format: 'csv' | 'json') => {\n    const dataToExport = leads.filter(lead => lead.confidence_score >= 70)\n    \n    if (format === 'csv') {\n      const csvContent = [\n        'Business Name,Address,Phone,Website,Email,Confidence Score,Validation Status',\n        ...dataToExport.map(lead => \n          `\"${lead.business_name}\",\"${lead.address || ''}\",\"${lead.phone || ''}\",\"${lead.website || ''}\",\"${lead.email || ''}\",${lead.confidence_score},${lead.validation_status}`\n        )\n      ].join('\\n')\n      \n      const blob = new Blob([csvContent], { type: 'text/csv' })\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `prospects-${new Date().toISOString().split('T')[0]}.csv`\n      a.click()\n      URL.revokeObjectURL(url)\n    } else {\n      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], { type: 'application/json' })\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `prospects-${new Date().toISOString().split('T')[0]}.json`\n      a.click()\n      URL.revokeObjectURL(url)\n    }\n  }\n\n  const getConfidenceColor = (score: number) => {\n    if (score >= 90) return 'bg-green-100 text-green-800'\n    if (score >= 80) return 'bg-blue-100 text-blue-800'\n    if (score >= 70) return 'bg-yellow-100 text-yellow-800'\n    return 'bg-red-100 text-red-800'\n  }\n\n  const getValidationStatusColor = (status: string) => {\n    switch (status) {\n      case 'validated': return 'bg-green-100 text-green-800'\n      case 'validating': return 'bg-blue-100 text-blue-800'\n      case 'pending': return 'bg-yellow-100 text-yellow-800'\n      case 'failed': return 'bg-red-100 text-red-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Results</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {leads.length} leads found • {leads.filter(l => l.confidence_score >= 70).length} qualified\n          </p>\n        </div>\n        \n        {leads.length > 0 && (\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => handleExport('csv')}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📊 Export CSV\n            </button>\n            <button\n              onClick={() => handleExport('json')}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📄 Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Current Campaign</h3>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">{currentCampaign.leads_found}</div>\n              <div className=\"text-sm text-gray-500\">Total Found</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{currentCampaign.leads_qualified}</div>\n              <div className=\"text-sm text-gray-500\">Qualified</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{currentCampaign.leads_validated}</div>\n              <div className=\"text-sm text-gray-500\">Validated</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">${currentCampaign.total_cost.toFixed(2)}</div>\n              <div className=\"text-sm text-gray-500\">Total Cost</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Results Table */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        {leads.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <span className=\"text-4xl\">🔍</span>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No results yet</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Start a discovery campaign to find business leads.\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Confidence\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {leads.map((lead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {lead.business_name}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {lead.address}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.phone && (\n                          <div>📞 {lead.phone}</div>\n                        )}\n                        {lead.website && (\n                          <div>🌐 <a href={lead.website} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                            {lead.website.replace(/^https?:\\/\\//, '')}\n                          </a></div>\n                        )}\n                        {lead.email && (\n                          <div>📧 {lead.email}</div>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(lead.confidence_score)}`}>\n                        {lead.confidence_score}%\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getValidationStatusColor(lead.validation_status)}`}>\n                        {lead.validation_status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${lead.cost_to_acquire.toFixed(3)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}"}}},
{"type":"measure","name":"lsp.did_open","count":21,"duration":4.334},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":34,"duration":0.131},
{"type":"mark","name":"lsp.did_change_batched","count":18,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":35,"duration":0.099},
{"type":"measure","name":"lsp.did_change_batched","count":18,"duration":4.777},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":49,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":213,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":18,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":214,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":19,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":19,"duration":5.905},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":50,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":36,"duration":0.102},
{"type":"mark","name":"lsp.inlay_hint","count":215,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":9,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",37]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":6,"duration":0.234},
{"type":"mark","name":"tsc.op.op_resolve","count":164,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":164,"duration":0.107},
{"type":"mark","name":"tsc.op.op_resolve","count":165,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":165,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":166,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":166,"duration":0.072},
{"type":"mark","name":"tsc.op.op_load","count":184,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":184,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":167,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":167,"duration":0.064},
{"type":"mark","name":"tsc.op.op_resolve","count":168,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":168,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":185,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":185,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":169,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":169,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":170,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":170,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":171,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":171,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":172,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":172,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":173,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":173,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":174,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":174,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":175,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":175,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":176,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":176,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":177,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":177,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":178,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":178,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":179,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":179,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":180,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":180,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":181,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":181,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":182,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":182,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":183,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":183,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":184,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":184,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":185,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":185,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":186,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":186,"duration":3.378},
{"type":"mark","name":"tsc.op.op_resolve","count":187,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":187,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":188,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":188,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":189,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":189,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":190,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":190,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":191,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":191,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":192,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":192,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":193,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":193,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":194,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":194,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":195,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":195,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":196,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":196,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":197,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":197,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":198,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":198,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":199,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":199,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":200,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":200,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":201,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":201,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":202,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":202,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":203,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":203,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":204,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":204,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":205,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":205,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":206,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":206,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":207,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":207,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":208,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":208,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":209,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":209,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":210,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":210,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":211,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":211,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":212,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":212,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":213,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":213,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":214,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":214,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":215,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":215,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":216,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":216,"duration":0.043},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":19,"duration":0.023},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":9,"duration":616.488},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":9,"duration":616.675},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":7,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":7,"duration":197.665},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":7,"duration":201.9},
{"type":"measure","name":"lsp.diagnostic","count":51,"duration":820.733},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":52,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":216,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":53,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":20,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":20,"duration":4.967},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":54,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":37,"duration":0.097},
{"type":"mark","name":"lsp.inlay_hint","count":217,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":10,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",38]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":11,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":186,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":186,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":217,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":217,"duration":0.071},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":10,"duration":234.709},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":10,"duration":238.483},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":8,"args":"GetAmbientModules"},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":20,"duration":0.02},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":8,"duration":145.247},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":8,"duration":149.104},
{"type":"measure","name":"lsp.diagnostic","count":55,"duration":388.905},
{"type":"mark","name":"lsp.inlay_hint","count":218,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":56,"duration":0.045},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":57,"duration":0.001},
{"type":"mark","name":"lsp.did_close","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":9,"duration":0.939},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":38,"duration":0.089},
{"type":"mark","name":"lsp.did_open","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":22,"duration":5.368},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":39,"duration":0.599},
{"type":"mark","name":"lsp.did_change_batched","count":21,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":21,"duration":3.984},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":58,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":40,"duration":0.087},
{"type":"mark","name":"lsp.inlay_hint","count":219,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":11,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",41]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":7,"duration":1.726},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":12,"duration":0.029},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":13,"duration":0.01},
{"type":"mark","name":"tsc.op.op_load","count":187,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":187,"duration":0.052},
{"type":"mark","name":"tsc.op.op_load","count":188,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":188,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":218,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":218,"duration":0.051},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":21,"duration":0.021},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":11,"duration":276.657},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":11,"duration":278.595},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":9,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":9,"duration":154.31},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":9,"duration":155.994},
{"type":"measure","name":"lsp.diagnostic","count":59,"duration":434.961},
{"type":"mark","name":"lsp.inlay_hint","count":220,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":60,"duration":0.045},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":61,"duration":0.001},
{"type":"mark","name":"lsp.did_close","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":10,"duration":1.37},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":41,"duration":0.139},
{"type":"mark","name":"lsp.did_close","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":11,"duration":0.483},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":42,"duration":0.093},
{"type":"mark","name":"lsp.inlay_hint","count":221,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":85,"character":26}}}},
{"type":"mark","name":"lsp.inlay_hint","count":222,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":73,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":223,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":72,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":224,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":73,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":225,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":85,"character":26}}}},
{"type":"mark","name":"lsp.inlay_hint","count":226,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":85,"character":26}}}},
{"type":"mark","name":"lsp.inlay_hint","count":227,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":26}}}},
{"type":"mark","name":"lsp.inlay_hint","count":228,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":26}}}},
{"type":"mark","name":"lsp.did_change_batched","count":22,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":22,"duration":7.272},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.did_change_batched","count":23,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.testing_update","count":43,"duration":0.104},
{"type":"measure","name":"lsp.did_change_batched","count":23,"duration":5.055},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":62,"duration":0.011},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":63,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":44,"duration":0.107},
{"type":"mark","name":"lsp.did_change_batched","count":24,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":24,"duration":0.769},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":64,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":45,"duration":0.097},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":12,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",46]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":8,"duration":0.279},
{"type":"mark","name":"tsc.op.op_resolve","count":219,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":219,"duration":0.108},
{"type":"mark","name":"tsc.op.op_resolve","count":220,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":220,"duration":0.014},
{"type":"mark","name":"tsc.op.op_load","count":189,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":189,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":221,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":221,"duration":0.083},
{"type":"mark","name":"tsc.op.op_load","count":190,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":190,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":222,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":222,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":223,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":223,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":224,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":224,"duration":0.042},
{"type":"mark","name":"tsc.op.op_load","count":191,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":191,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":225,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":225,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":226,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":226,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":227,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":227,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":228,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":228,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":229,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":229,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":230,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":230,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":231,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":231,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":232,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":232,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":233,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":233,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":234,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":234,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":235,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":235,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":236,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":236,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":237,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":237,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":238,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":238,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":239,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":239,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":240,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":240,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":241,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":241,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":242,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":242,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":243,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":243,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":244,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":244,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":245,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":245,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":246,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":246,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":247,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":247,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":248,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":248,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":249,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":249,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":250,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":250,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":251,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":251,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":252,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":252,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":253,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":253,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":254,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":254,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":255,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":255,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":256,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":256,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":257,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":257,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":258,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":258,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":259,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":259,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":260,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":260,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":261,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":261,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":262,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":262,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":263,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":263,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":264,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":264,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":265,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":265,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":266,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":266,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":267,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":267,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":268,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":268,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":269,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":269,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":270,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":270,"duration":0.025},
{"type":"mark","name":"tsc.op.op_release","count":1,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":1,"duration":4.133},
{"type":"mark","name":"tsc.op.op_release","count":2,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"tsc.op.op_release","count":2,"duration":3.295},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":12,"duration":277.21},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":12,"duration":278.204},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":10,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":10,"duration":243.89},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":10,"duration":247.619},
{"type":"measure","name":"lsp.diagnostic","count":65,"duration":529.509},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":66,"duration":0.027},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":67,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":229,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":85,"character":0}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":12,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/types/index.ts",{"start":0,"length":2431},"2020"]}},
{"type":"mark","name":"lsp.document_symbol","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.code_lens","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":12,"duration":2.34},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":12,"duration":2.439},
{"type":"measure","name":"lsp.semantic_tokens_full","count":8,"duration":2.552},
{"type":"mark","name":"lsp.folding_range","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":230,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":85,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":231,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":85,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":22,"duration":0.02},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":23,"duration":0.008},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":24,"duration":0.007},
{"type":"mark","name":"lsp.document_symbol","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.did_open","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":23,"duration":7.561},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":46,"duration":0.101},
{"type":"mark","name":"lsp.goto_definition","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":411,"character":8}}},
{"type":"mark","name":"lsp.goto_definition","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"position":{"line":4,"character":41}}},
{"type":"mark","name":"lsp.did_change_batched","count":25,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":25,"duration":20.195},
{"type":"mark","name":"lsp.code_action","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":47,"duration":0.106},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":68,"duration":0.013},
{"type":"mark","name":"lsp.inlay_hint","count":232,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":74,"character":10}}}},
{"type":"mark","name":"lsp.code_lens","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.folding_range","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":44,"character":10}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":13,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":1083},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":9,"duration":0.242},
{"type":"mark","name":"tsc.op.op_load","count":192,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":192,"duration":0.076},
{"type":"mark","name":"tsc.op.op_resolve","count":271,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":271,"duration":0.109},
{"type":"mark","name":"tsc.op.op_resolve","count":272,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":272,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":273,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":273,"duration":0.078},
{"type":"mark","name":"tsc.op.op_load","count":193,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":193,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":274,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":274,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":275,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":275,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":276,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":276,"duration":0.073},
{"type":"mark","name":"tsc.op.op_resolve","count":277,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":277,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":278,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":278,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":279,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":279,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":280,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":280,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":281,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":281,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":282,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":282,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":283,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":283,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":284,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":284,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":285,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":285,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":286,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":286,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":287,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":287,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":288,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":288,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":289,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":289,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":290,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":290,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":291,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":291,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":292,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":292,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":293,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":293,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":294,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":294,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":295,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":295,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":296,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":296,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":297,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":297,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":298,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":298,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":299,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":299,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":300,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":300,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":301,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":301,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":302,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":302,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":303,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":303,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":304,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":304,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":305,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":305,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":306,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":306,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":307,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":307,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":308,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":308,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":309,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":309,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":310,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":310,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":311,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":311,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":312,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":312,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":313,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":313,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":314,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":314,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":315,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":315,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":316,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":316,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":317,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":317,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":318,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":318,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":319,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":319,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":320,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":320,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":321,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":321,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":322,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":322,"duration":0.029},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":106,"duration":0.01},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":13,"duration":82.081},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":13,"duration":85.517},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":13,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",48]}},
{"type":"measure","name":"lsp.semantic_tokens_range","count":5,"duration":90.299},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":25,"duration":0.022},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":13,"duration":294.709},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":13,"duration":321.151},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":11,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":11,"duration":0.136},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":11,"duration":0.183},
{"type":"measure","name":"lsp.diagnostic","count":69,"duration":324.372},
{"type":"mark","name":"lsp.code_lens","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":14,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":24811},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":14,"duration":237.078},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":14,"duration":244.412},
{"type":"measure","name":"lsp.semantic_tokens_full","count":9,"duration":244.54},
{"type":"mark","name":"lsp.inlay_hint","count":233,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":19}}}},
{"type":"mark","name":"lsp.code_lens","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":395,"character":0},"end":{"line":446,"character":54}}}},
{"type":"measure","name":"lsp.semantic_tokens_range","count":6,"duration":0.029},
{"type":"mark","name":"lsp.code_action","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":234,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":235,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":70,"duration":0.021},
{"type":"mark","name":"lsp.did_change_batched","count":26,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":26,"duration":1.598},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":71,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":48,"duration":0.096},
{"type":"mark","name":"lsp.inlay_hint","count":236,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":19}}}},
{"type":"mark","name":"lsp.code_action","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":14,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",49]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":14,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":194,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":194,"duration":0.031},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":14,"duration":144.083},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":14,"duration":150.178},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":12,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":12,"duration":0.137},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":12,"duration":0.186},
{"type":"measure","name":"lsp.diagnostic","count":72,"duration":152.314},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":73,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":26,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":237,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":19}}}},
{"type":"mark","name":"lsp.code_action","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":238,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":19}}}},
{"type":"mark","name":"lsp.did_change_batched","count":27,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":49,"duration":0.095},
{"type":"measure","name":"lsp.did_change_batched","count":27,"duration":5.438},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":74,"duration":0.009},
{"type":"mark","name":"lsp.inlay_hint","count":239,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":15,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",50]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":15,"duration":0.039},
{"type":"mark","name":"tsc.op.op_load","count":195,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":195,"duration":0.107},
{"type":"mark","name":"lsp.semantic_tokens_full","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.op.op_resolve","count":323,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":323,"duration":0.051},
{"type":"mark","name":"lsp.document_symbol","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":240,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":27,"duration":0.021},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":15,"duration":375.166},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":15,"duration":375.326},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":15,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":24952},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":15,"duration":17.117},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":15,"duration":256.106},
{"type":"measure","name":"lsp.semantic_tokens_full","count":10,"duration":256.236},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":13,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":13,"duration":0.163},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":13,"duration":20.215},
{"type":"measure","name":"lsp.diagnostic","count":75,"duration":395.846},
{"type":"mark","name":"lsp.code_lens","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.folding_range","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":241,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":242,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.code_lens","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":76,"duration":0.013},
{"type":"mark","name":"lsp.code_action","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":77,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":28,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":28,"duration":1.565},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":50,"duration":0.099},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":78,"duration":0.011},
{"type":"mark","name":"lsp.inlay_hint","count":243,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":16,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",51]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":16,"duration":0.039},
{"type":"mark","name":"tsc.op.op_load","count":196,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":196,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":324,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":324,"duration":0.083},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":16,"duration":248.318},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":16,"duration":250.826},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":14,"args":"GetAmbientModules"},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":28,"duration":0.028},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":14,"duration":102.746},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":14,"duration":102.858},
{"type":"measure","name":"lsp.diagnostic","count":79,"duration":354.044},
{"type":"mark","name":"lsp.inlay_hint","count":244,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":80,"duration":0.015},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":81,"duration":0.001},
{"type":"mark","name":"lsp.goto_definition","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"position":{"line":12,"character":2}}},
{"type":"mark","name":"lsp.goto_definition","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"},"position":{"line":13,"character":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":29,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":29,"duration":3.223},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":82,"duration":0.008},
{"type":"measure","name":"lsp.testing_update","count":51,"duration":0.37},
{"type":"mark","name":"lsp.inlay_hint","count":245,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":17,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",52]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":17,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":197,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":197,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":325,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":325,"duration":0.08},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":29,"duration":0.031},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":17,"duration":226.198},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":17,"duration":227.769},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":15,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":15,"duration":87.027},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":15,"duration":88.322},
{"type":"measure","name":"lsp.diagnostic","count":83,"duration":318.453},
{"type":"mark","name":"lsp.inlay_hint","count":246,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":84,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":85,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx","languageId":"typescriptreact","version":1,"text":"import React from 'react'\nimport { useCampaignStore } from '../stores/campaignStore'\n\nexport const Results: React.FC = () => {\n  const { leads, currentCampaign } = useCampaignStore()\n\n  const handleExport = (format: 'csv' | 'json') => {\n    const dataToExport = leads.filter(lead => lead.confidence_score >= 70)\n    \n    if (format === 'csv') {\n      const csvContent = [\n        'Business Name,Address,Phone,Website,Email,Confidence Score,Validation Status',\n        ...dataToExport.map(lead => \n          `\"${lead.business_name}\",\"${lead.address || ''}\",\"${lead.phone || ''}\",\"${lead.website || ''}\",\"${lead.email || ''}\",${lead.confidence_score},${lead.validation_status}`\n        )\n      ].join('\\n')\n      \n      const blob = new Blob([csvContent], { type: 'text/csv' })\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `prospects-${new Date().toISOString().split('T')[0]}.csv`\n      a.click()\n      URL.revokeObjectURL(url)\n    } else {\n      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], { type: 'application/json' })\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `prospects-${new Date().toISOString().split('T')[0]}.json`\n      a.click()\n      URL.revokeObjectURL(url)\n    }\n  }\n\n  const getConfidenceColor = (score: number) => {\n    if (score >= 90) return 'bg-green-100 text-green-800'\n    if (score >= 80) return 'bg-blue-100 text-blue-800'\n    if (score >= 70) return 'bg-yellow-100 text-yellow-800'\n    return 'bg-red-100 text-red-800'\n  }\n\n  const getValidationStatusColor = (status: string) => {\n    switch (status) {\n      case 'validated': return 'bg-green-100 text-green-800'\n      case 'validating': return 'bg-blue-100 text-blue-800'\n      case 'pending': return 'bg-yellow-100 text-yellow-800'\n      case 'failed': return 'bg-red-100 text-red-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Results</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {leads.length} leads found • {leads.filter(l => l.confidence_score >= 70).length} qualified\n          </p>\n        </div>\n        \n        {leads.length > 0 && (\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => handleExport('csv')}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📊 Export CSV\n            </button>\n            <button\n              onClick={() => handleExport('json')}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📄 Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Current Campaign</h3>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">{currentCampaign.leads_found}</div>\n              <div className=\"text-sm text-gray-500\">Total Found</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{currentCampaign.leads_qualified}</div>\n              <div className=\"text-sm text-gray-500\">Qualified</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{currentCampaign.leads_validated}</div>\n              <div className=\"text-sm text-gray-500\">Validated</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">${currentCampaign.total_cost.toFixed(2)}</div>\n              <div className=\"text-sm text-gray-500\">Total Cost</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Results Table */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        {leads.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <span className=\"text-4xl\">🔍</span>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No results yet</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Start a discovery campaign to find business leads.\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Confidence\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {leads.map((lead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {lead.business_name}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {lead.address}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.phone && (\n                          <div>📞 {lead.phone}</div>\n                        )}\n                        {lead.website && (\n                          <div>🌐 <a href={lead.website} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                            {lead.website.replace(/^https?:\\/\\//, '')}\n                          </a></div>\n                        )}\n                        {lead.email && (\n                          <div>📧 {lead.email}</div>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(lead.confidence_score)}`}>\n                        {lead.confidence_score}%\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getValidationStatusColor(lead.validation_status)}`}>\n                        {lead.validation_status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${lead.cost_to_acquire.toFixed(3)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}"}}},
{"type":"measure","name":"lsp.did_open","count":24,"duration":3.406},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":52,"duration":0.112},
{"type":"mark","name":"lsp.inlay_hint","count":247,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":365,"character":0},"end":{"line":476,"character":22}}}},
{"type":"mark","name":"lsp.did_change_batched","count":30,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":53,"duration":0.101},
{"type":"measure","name":"lsp.did_change_batched","count":30,"duration":5.829},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":86,"duration":0.011},
{"type":"mark","name":"lsp.inlay_hint","count":248,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":364,"character":0},"end":{"line":474,"character":11}}}},
{"type":"mark","name":"lsp.inlay_hint","count":249,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":364,"character":0},"end":{"line":474,"character":11}}}},
{"type":"mark","name":"lsp.code_action","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":18,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",54]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":10,"duration":0.268},
{"type":"mark","name":"tsc.op.op_resolve","count":326,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":326,"duration":0.11},
{"type":"mark","name":"tsc.op.op_resolve","count":327,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":327,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":328,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":328,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":198,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":198,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":329,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":329,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":330,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":330,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":199,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":199,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":331,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":331,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":332,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":332,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":333,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":333,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":334,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":334,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":335,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":335,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":336,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":336,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":337,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":337,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":338,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":338,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":339,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":339,"duration":0.066},
{"type":"mark","name":"tsc.op.op_resolve","count":340,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":340,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":341,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":341,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":342,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":342,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":343,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":343,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":344,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":344,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":345,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":345,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":346,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":346,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":347,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":347,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":348,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":348,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":349,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":349,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":350,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":350,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":351,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":351,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":352,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":352,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":353,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":353,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":354,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":354,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":355,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":355,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":356,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":356,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":357,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":357,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":358,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":358,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":359,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":359,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":360,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":360,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":361,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":361,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":362,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":362,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":363,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":363,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":364,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":364,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":365,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":365,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":366,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":366,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":367,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":367,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":368,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":368,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":369,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":369,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":370,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":370,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":371,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":371,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":372,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":372,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":373,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":373,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":374,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":374,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":375,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":375,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":376,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":376,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":377,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":377,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":378,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":378,"duration":0.037},
{"type":"mark","name":"lsp.semantic_tokens_full","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.folding_range","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_lens","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":250,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":0},"end":{"line":473,"character":74}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":30,"duration":0.023},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":18,"duration":432.137},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":16,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":25011},"2020"]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":18,"duration":435.936},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":16,"duration":54.14},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":16,"duration":434.517},
{"type":"measure","name":"lsp.semantic_tokens_full","count":11,"duration":434.64},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":16,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":16,"duration":0.157},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":16,"duration":55.056},
{"type":"measure","name":"lsp.diagnostic","count":87,"duration":491.327},
{"type":"mark","name":"lsp.document_symbol","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":251,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":0},"end":{"line":473,"character":74}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":88,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":89,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":252,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":0},"end":{"line":473,"character":74}}}},
{"type":"mark","name":"lsp.did_change_batched","count":31,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":54,"duration":0.108},
{"type":"measure","name":"lsp.did_change_batched","count":31,"duration":5.466},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":90,"duration":0.008},
{"type":"mark","name":"lsp.inlay_hint","count":253,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":23},"end":{"line":473,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":254,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":23},"end":{"line":473,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.folding_range","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":19,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",55]}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":18,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":200,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":200,"duration":0.064},
{"type":"mark","name":"tsc.op.op_resolve","count":379,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":379,"duration":0.07},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":31,"duration":0.017},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":19,"duration":339.176},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":19,"duration":339.415},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":17,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":25319},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":17,"duration":14.095},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":17,"duration":338.488},
{"type":"measure","name":"lsp.semantic_tokens_full","count":12,"duration":338.608},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":17,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":17,"duration":0.129},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":17,"duration":14.581},
{"type":"measure","name":"lsp.diagnostic","count":91,"duration":354.322},
{"type":"mark","name":"lsp.code_lens","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":255,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":0},"end":{"line":473,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":256,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":0},"end":{"line":473,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":92,"duration":0.043},
{"type":"mark","name":"lsp.code_lens","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":257,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":363,"character":0},"end":{"line":473,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":93,"duration":0.017},
{"type":"mark","name":"lsp.did_close","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":12,"duration":2.441},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":55,"duration":0.103},
{"type":"mark","name":"lsp.did_open","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":56,"duration":0.105},
{"type":"measure","name":"lsp.did_open","count":25,"duration":6.926},
{"type":"mark","name":"lsp.did_close","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":57,"duration":0.108},
{"type":"measure","name":"lsp.did_close","count":13,"duration":0.794},
{"type":"mark","name":"lsp.did_open","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts","languageId":"typescript","version":1,"text":"import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\"Missing Supabase environment variables\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n  },\n});\n\n// Edge Functions URL\nexport const EDGE_FUNCTIONS_URL =\n  import.meta.env.VITE_EDGE_FUNCTIONS_URL || `${supabaseUrl}/functions/v1`;\n\n// Edge Function endpoints\nexport const EDGE_FUNCTIONS = {\n  ENHANCED_BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/enhanced-business-discovery`,\n  LEAD_VALIDATION: `${EDGE_FUNCTIONS_URL}/lead-validation-edge`,\n  BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/business-discovery-edge`,\n  DIAGNOSTICS: `${EDGE_FUNCTIONS_URL}/diag`,\n} as const;\n"}}},
{"type":"measure","name":"lsp.did_open","count":26,"duration":3.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":58,"duration":0.141},
{"type":"mark","name":"lsp.did_close","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":59,"duration":0.111},
{"type":"measure","name":"lsp.did_close","count":14,"duration":1.03},
{"type":"mark","name":"lsp.goto_definition","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":959,"character":6}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":3,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27754]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":11,"duration":0.173},
{"type":"mark","name":"tsc.op.op_resolve","count":380,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":380,"duration":0.077},
{"type":"mark","name":"tsc.op.op_resolve","count":381,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":381,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":382,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":382,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":201,"args":"file:///workspaces/ProspectPro/src/lib/supabase.ts"},
{"type":"measure","name":"tsc.op.op_load","count":201,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":383,"args":{"base":"file:///workspaces/ProspectPro/src/lib/supabase.ts","specifiers":[[false,"@supabase/supabase-js"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":383,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":384,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":384,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":385,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":385,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":386,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":386,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":387,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":387,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":388,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":388,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":389,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":389,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":390,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":390,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":391,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":391,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":392,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":392,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":393,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":393,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":394,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":394,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":395,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":395,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":396,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":396,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":397,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":397,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":398,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":398,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":399,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":399,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":400,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":400,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":401,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":401,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":402,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":402,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":403,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":403,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":404,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":404,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":405,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":405,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":406,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":406,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":407,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":407,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":408,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":408,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":409,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":409,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":410,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":410,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":411,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":411,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":412,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":412,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":413,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":413,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":414,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":414,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":415,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":415,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":416,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":416,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":417,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":417,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":418,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":418,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":419,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":419,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":420,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":420,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":421,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":421,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":422,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":422,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":423,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":423,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":424,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":424,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":425,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":425,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":426,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":426,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":427,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":427,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":428,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":428,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":429,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":429,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":430,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":430,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":431,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":431,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":432,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":432,"duration":0.051},
{"type":"mark","name":"tsc.op.op_release","count":3,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":3,"duration":1.144},
{"type":"mark","name":"tsc.op.op_release","count":4,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"tsc.op.op_release","count":4,"duration":0.741},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":3,"duration":82.015},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":3,"duration":82.195},
{"type":"measure","name":"lsp.goto_definition","count":10,"duration":82.349},
{"type":"mark","name":"lsp.goto_definition","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":959,"character":6}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":4,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27754]}},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":4,"duration":0.566},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":4,"duration":0.685},
{"type":"measure","name":"lsp.goto_definition","count":11,"duration":0.831},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":20,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",60]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":20,"duration":100.447},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":20,"duration":101.921},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":18,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":18,"duration":0.647},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":18,"duration":0.736},
{"type":"measure","name":"lsp.diagnostic","count":94,"duration":102.976},
{"type":"mark","name":"lsp.did_change_batched","count":32,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":32,"duration":18.343},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":60,"duration":0.113},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":21,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",61]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":19,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":202,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":202,"duration":0.085},
{"type":"mark","name":"tsc.op.op_resolve","count":433,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":433,"duration":0.062},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":21,"duration":135.324},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":21,"duration":138.397},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":19,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":19,"duration":58.325},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":19,"duration":58.44},
{"type":"measure","name":"lsp.diagnostic","count":95,"duration":197.484},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":96,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":97,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":98,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":32,"duration":0.075},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":99,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":33,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":33,"duration":13.456},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":61,"duration":0.158},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":22,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",62]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":20,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":203,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":203,"duration":0.09},
{"type":"mark","name":"tsc.op.op_resolve","count":434,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":434,"duration":0.075},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":22,"duration":255.34},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":22,"duration":255.558},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":20,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":20,"duration":0.148},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":20,"duration":4.258},
{"type":"measure","name":"lsp.did_save","count":33,"duration":261.519},
{"type":"mark","name":"lsp.did_close","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts"}}},
{"type":"measure","name":"lsp.did_close","count":15,"duration":1.137},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":62,"duration":0.092},
{"type":"mark","name":"lsp.goto_definition","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":256,"character":19}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":5,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",6994]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":12,"duration":0.186},
{"type":"mark","name":"tsc.op.op_resolve","count":435,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":435,"duration":0.115},
{"type":"mark","name":"tsc.op.op_resolve","count":436,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":436,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":437,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":437,"duration":0.072},
{"type":"mark","name":"tsc.op.op_resolve","count":438,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":438,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":439,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":439,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":440,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":440,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":441,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":441,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":442,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":442,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":443,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":443,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":444,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":444,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":445,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":445,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":446,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":446,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":447,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":447,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":448,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":448,"duration":0.093},
{"type":"mark","name":"tsc.op.op_resolve","count":449,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":449,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":450,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":450,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":451,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":451,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":452,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":452,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":453,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":453,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":454,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":454,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":455,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":455,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":456,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":456,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":457,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":457,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":458,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":458,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":459,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":459,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":460,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":460,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":461,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":461,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":462,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":462,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":463,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":463,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":464,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":464,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":465,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":465,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":466,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":466,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":467,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":467,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":468,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":468,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":469,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":469,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":470,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":470,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":471,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":471,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":472,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":472,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":473,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":473,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":474,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":474,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":475,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":475,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":476,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":476,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":477,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":477,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":478,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":478,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":479,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":479,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":480,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":480,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":481,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":481,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":482,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":482,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":483,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":483,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":484,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":484,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":485,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":485,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":486,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":486,"duration":0.021},
{"type":"mark","name":"tsc.op.op_release","count":5,"args":"file:///workspaces/ProspectPro/src/lib/supabase.ts"},
{"type":"measure","name":"tsc.op.op_release","count":5,"duration":0.295},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":5,"duration":81.554},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":5,"duration":81.746},
{"type":"measure","name":"lsp.goto_definition","count":12,"duration":81.926},
{"type":"mark","name":"lsp.did_change_batched","count":34,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":34,"duration":1.329},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":63,"duration":0.176},
{"type":"mark","name":"lsp.did_change_batched","count":35,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":35,"duration":5.035},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":64,"duration":0.086},
{"type":"mark","name":"lsp.did_change_batched","count":36,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":36,"duration":7.115},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":65,"duration":0.099},
{"type":"mark","name":"lsp.did_change_batched","count":37,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_change_batched","count":37,"duration":7.132},
{"type":"measure","name":"lsp.testing_update","count":66,"duration":0.299},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":34,"duration":0.02},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":35,"duration":0.007},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":36,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":23,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",67]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":21,"duration":0.035},
{"type":"mark","name":"tsc.op.op_load","count":204,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":204,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":205,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":205,"duration":0.06},
{"type":"mark","name":"tsc.op.op_load","count":206,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":206,"duration":0.159},
{"type":"mark","name":"tsc.op.op_resolve","count":487,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":487,"duration":0.127},
{"type":"mark","name":"tsc.op.op_resolve","count":488,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":488,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":489,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":489,"duration":0.039},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":23,"duration":325.862},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":23,"duration":327.585},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":21,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":21,"duration":78.404},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":21,"duration":78.52},
{"type":"measure","name":"lsp.did_save","count":37,"duration":406.429},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":100,"duration":0.071},
{"type":"mark","name":"lsp.code_action","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.$getSupportedCodeFixes"},
{"type":"mark","name":"lsp.document_symbol","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":23,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"tsc.host.$getSupportedCodeFixes","count":1,"args":"GetSupportedCodeFixes"},
{"type":"measure","name":"tsc.host.$getSupportedCodeFixes","count":1,"duration":0.369},
{"type":"mark","name":"tsc.host.getNavigationTree","count":9,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.$getSupportedCodeFixes","count":1,"duration":4.99},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"measure","name":"tsc.host.getNavigationTree","count":9,"duration":61.974},
{"type":"measure","name":"tsc.request.getNavigationTree","count":9,"duration":65.11},
{"type":"measure","name":"lsp.get_navigation_tree","count":23,"duration":65.157},
{"type":"measure","name":"lsp.document_symbol","count":29,"duration":65.615},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":1,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":1,"duration":91.762},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":1,"duration":153.363},
{"type":"measure","name":"lsp.code_action","count":33,"duration":159.134},
{"type":"mark","name":"lsp.inlay_hint","count":258,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":93,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":24,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":24,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":30,"duration":0.465},
{"type":"mark","name":"lsp.code_lens","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":25,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":25,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":26,"duration":0.348},
{"type":"mark","name":"lsp.semantic_tokens_full","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":18,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":44495},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":18,"duration":143.44},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":18,"duration":143.737},
{"type":"measure","name":"lsp.semantic_tokens_full","count":13,"duration":144.007},
{"type":"mark","name":"lsp.folding_range","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":6,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":6,"duration":18.435},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":6,"duration":20.47},
{"type":"measure","name":"lsp.folding_range","count":14,"duration":20.692},
{"type":"mark","name":"lsp.code_lens","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":26,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":26,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":27,"duration":0.334},
{"type":"mark","name":"lsp.code_lens_resolve","count":19,"args":{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":43}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":38,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":19,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",1296]}},
{"type":"measure","name":"tsc.host.findReferences","count":19,"duration":7.706},
{"type":"measure","name":"tsc.request.findReferences","count":19,"duration":7.869},
{"type":"measure","name":"lsp.references","count":19,"duration":7.982},
{"type":"measure","name":"lsp.code_lens_resolve","count":19,"duration":8.004},
{"type":"mark","name":"lsp.inlay_hint","count":259,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":92,"character":34}}}},
{"type":"mark","name":"lsp.did_open","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface CampaignExportRequest {\n  campaignId: string;\n  format?: string;\n  minConfidence?: number;\n  includeUnqualified?: boolean;\n  includeProvenance?: boolean;\n}\n\ninterface Campaign {\n  id: string;\n  business_type: string;\n  location: string;\n  [key: string]: unknown;\n}\n\ninterface Lead {\n  business_name: string;\n  address: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  confidence_score: number;\n  score_breakdown?: Record<string, unknown>;\n  validation_cost?: number;\n  cost_efficient?: boolean;\n  scoring_recommendation?: string;\n  created_at: string;\n  // Verification fields (may not exist yet)\n  owner_contact?: string;\n  linkedin_profile?: string;\n  professional_license?: string;\n  chamber_verified?: boolean;\n  trade_association?: string;\n  last_verified?: string;\n  google_places_verified?: boolean;\n  apollo_verified?: boolean;\n  license_verified?: boolean;\n  verification_status?: string;\n  data_source?: string;\n  [key: string]: unknown; // Allow additional fields\n}\n\n// CSV Export functionality\nclass CampaignExporter {\n  generateCSV(_campaign: Campaign, leads: Lead[]): string {\n    // Define CSV headers with enhanced real data focus\n    const headers = [\n      \"Business Name\",\n      \"Address\",\n      \"Phone\",\n      \"Website\",\n      \"Email (Verified Only)\",\n      \"Owner/Executive Contact\",\n      \"LinkedIn Profile\",\n      \"Confidence Score\",\n      \"Data Source\",\n      \"Verification Status\",\n      \"Professional License\",\n      \"Chamber Member\",\n      \"Trade Association\",\n      \"Last Verified\",\n      \"Created Date\",\n    ];\n\n    // Generate CSV rows with verified data only\n    const rows = leads.map((lead) => [\n      this.cleanField(lead.business_name),\n      this.cleanField(lead.address),\n      this.cleanField(lead.phone),\n      this.cleanField(lead.website),\n      this.cleanVerifiedField(lead.email), // Only verified emails\n      this.cleanField(lead.owner_contact), // Apollo/professional directory contacts\n      this.cleanField(lead.linkedin_profile),\n      lead.confidence_score || 0,\n      this.getDataSource(lead),\n      this.getVerificationStatus(lead),\n      this.cleanField(lead.professional_license),\n      this.getMembershipStatus(lead.chamber_verified),\n      this.cleanField(lead.trade_association),\n      this.formatDate(lead.last_verified || \"\"),\n      this.formatDate(lead.created_at),\n    ]);\n\n    // Combine headers and rows\n    const csvContent = [\n      headers.join(\",\"),\n      ...rows.map((row) =>\n        row\n          .map((field) =>\n            typeof field === \"string\" &&\n            (field.includes(\",\") || field.includes('\"'))\n              ? `\"${field.replace(/\"/g, '\"\"')}\"`\n              : field\n          )\n          .join(\",\")\n      ),\n    ].join(\"\\n\");\n\n    return csvContent;\n  }\n\n  private cleanField(value: unknown): string {\n    if (value === null || value === undefined || value === \"\") return \"\";\n    return String(value)\n      .replace(/[\\r\\n]+/g, \" \")\n      .trim();\n  }\n\n  // Only return verified emails, leave blank if not verified\n  private cleanVerifiedField(email: unknown): string {\n    if (!email) return \"\";\n    const emailStr = String(email);\n\n    // Check if email contains pattern indicators (fake data)\n    const fakePatterns = [\"info@\", \"contact@\", \"hello@\", \"sales@\", \"admin@\"];\n    const isFakePattern = fakePatterns.some((pattern) =>\n      emailStr.startsWith(pattern)\n    );\n\n    // Return empty if it's a generated pattern, otherwise return the email\n    return isFakePattern ? \"\" : emailStr;\n  }\n\n  private getDataSource(lead: Lead): string {\n    const sources: string[] = [];\n    if (lead.verification_status?.includes(\"google\"))\n      sources.push(\"Google Places\");\n    if (lead.apollo_verified) sources.push(\"Apollo\");\n    if (lead.chamber_verified) sources.push(\"Chamber of Commerce\");\n    if (lead.license_verified) sources.push(\"Professional License Board\");\n\n    // Check for verification sources in lead data\n    if (lead.data_source && typeof lead.data_source === \"string\") {\n      const dataSources = lead.data_source\n        .split(\",\")\n        .map((s: string) => s.trim());\n      dataSources.forEach((source: string) => {\n        if (\n          source === \"chamber_commerce\" &&\n          !sources.includes(\"Chamber of Commerce\")\n        ) {\n          sources.push(\"Chamber of Commerce\");\n        }\n        if (\n          source === \"trade_association\" &&\n          !sources.includes(\"Trade Association\")\n        ) {\n          sources.push(\"Trade Association\");\n        }\n        if (\n          source === \"professional_license\" &&\n          !sources.includes(\"Professional License\")\n        ) {\n          sources.push(\"Professional License\");\n        }\n      });\n    }\n\n    return sources.join(\"; \") || \"Google Places\";\n  }\n\n  private getVerificationStatus(lead: Lead): string {\n    // Priority-based verification status\n    if (lead.apollo_verified) return \"Executive Contact Verified\";\n    if (lead.license_verified) return \"Professional License Verified\";\n    if (lead.chamber_verified) return \"Chamber Membership Verified\";\n\n    // Check verification level from lead data\n    if (lead.verification_status) {\n      if (lead.verification_status.includes(\"apollo\"))\n        return \"Executive Contact Verified\";\n      if (lead.verification_status.includes(\"license\"))\n        return \"Professional License Verified\";\n      if (lead.verification_status.includes(\"chamber\"))\n        return \"Chamber Membership Verified\";\n      if (lead.verification_status.includes(\"trade\"))\n        return \"Trade Association Verified\";\n    }\n\n    if (lead.confidence_score >= 75) return \"High Confidence\";\n    if (lead.confidence_score >= 50) return \"Medium Confidence\";\n    return \"Basic Listing\";\n  }\n\n  private getMembershipStatus(isVerified: unknown): string {\n    return isVerified ? \"Verified Member\" : \"\";\n  }\n\n  private formatDate(dateString: string): string {\n    if (!dateString) return \"\";\n    return new Date(dateString).toLocaleDateString(\"en-US\");\n  }\n\n  private sanitizeFilename(filename: string): string {\n    return filename.replace(/[^a-zA-Z0-9_-]/g, \"_\").replace(/__+/g, \"_\");\n  }\n}\n\nserve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    const supabase = createClient(\n      Deno.env.get(\"SUPABASE_URL\") ?? \"\",\n      Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\") ?? \"\"\n    );\n\n    const url = new URL(req.url);\n    const campaignId = url.pathname.split(\"/\").pop();\n\n    if (!campaignId) {\n      return new Response(\n        JSON.stringify({\n          error: \"Campaign ID is required\",\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 400,\n        }\n      );\n    }\n\n    const queryParams = new URLSearchParams(url.search);\n    const format = queryParams.get(\"format\") || \"csv\";\n    const minConfidence = parseInt(queryParams.get(\"minConfidence\") || \"0\");\n    const includeUnqualified = queryParams.get(\"includeUnqualified\") === \"true\";\n\n    console.log(\n      `📊 Exporting campaign ${campaignId} (format: ${format}, min confidence: ${minConfidence})`\n    );\n\n    // Get campaign details\n    const { data: campaign, error: campaignError } = await supabase\n      .from(\"campaigns\")\n      .select(\"*\")\n      .eq(\"id\", campaignId)\n      .single();\n\n    if (campaignError || !campaign) {\n      return new Response(\n        JSON.stringify({\n          error: \"Campaign not found\",\n          details: campaignError?.message,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 404,\n        }\n      );\n    }\n\n    // Get campaign leads\n    let query = supabase\n      .from(\"leads\")\n      .select(\"*\")\n      .eq(\"campaign_id\", campaignId)\n      .order(\"confidence_score\", { ascending: false });\n\n    if (!includeUnqualified) {\n      query = query.gte(\"confidence_score\", minConfidence);\n    }\n\n    const { data: leads, error: leadsError } = await query;\n\n    if (leadsError) {\n      console.error(\"Error fetching leads:\", leadsError);\n      return new Response(\n        JSON.stringify({\n          error: \"Failed to fetch campaign leads\",\n          details: leadsError.message,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 500,\n        }\n      );\n    }\n\n    if (!leads || leads.length === 0) {\n      return new Response(\n        JSON.stringify({\n          error: \"No leads found for this campaign\",\n          campaign: campaign.business_type || campaignId,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 404,\n        }\n      );\n    }\n\n    // Generate CSV export\n    const exporter = new CampaignExporter();\n    const csvContent = exporter.generateCSV(campaign, leads);\n\n    // Set response headers for file download\n    const timestamp = new Date().toISOString().slice(0, 10);\n    const filename = `${\n      campaign.business_type || \"campaign\"\n    }_${campaignId.slice(0, 8)}_${timestamp}.csv`;\n\n    console.log(`✅ Export completed: ${leads.length} leads exported`);\n\n    return new Response(csvContent, {\n      headers: {\n        ...corsHeaders,\n        \"Content-Type\": \"text/csv\",\n        \"Content-Disposition\": `attachment; filename=\"${filename}\"`,\n        \"X-Export-Count\": leads.length.toString(),\n        \"X-Campaign-Name\": campaign.business_type || \"Untitled\",\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Campaign export error:\", error);\n    const errorMessage =\n      error instanceof Error ? error.message : \"Unknown error\";\n    return new Response(\n      JSON.stringify({\n        error: \"Export failed\",\n        details: errorMessage,\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n        status: 500,\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":27,"duration":14.204},
{"type":"mark","name":"lsp.code_action","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"lsp.document_symbol","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":27,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.semantic_tokens_full","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":2,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":13,"duration":2.617},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":22,"duration":0.02},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":67,"duration":0.106},
{"type":"mark","name":"tsc.op.op_load","count":207,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":207,"duration":0.052},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.op.op_resolve","count":490,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":490,"duration":0.048},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":2,"duration":60.321},
{"type":"mark","name":"tsc.host.getNavigationTree","count":10,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"]}},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":2,"duration":61.689},
{"type":"measure","name":"lsp.code_action","count":34,"duration":61.91},
{"type":"measure","name":"tsc.host.getNavigationTree","count":10,"duration":37.609},
{"type":"measure","name":"tsc.request.getNavigationTree","count":10,"duration":98.852},
{"type":"measure","name":"lsp.get_navigation_tree","count":27,"duration":98.897},
{"type":"measure","name":"lsp.document_symbol","count":31,"duration":99.031},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":19,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",{"start":0,"length":10217},"2020"]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":107,"duration":0.011},
{"type":"mark","name":"lsp.inlay_hint","count":260,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":73,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":28,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":28,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":28,"duration":0.14},
{"type":"mark","name":"lsp.document_symbol","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":29,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":29,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":32,"duration":0.136},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":108,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":109,"duration":0.014},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":110,"duration":0.009},
{"type":"mark","name":"lsp.folding_range","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"lsp.semantic_tokens_range","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":43,"character":25}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":111,"duration":0.014},
{"type":"mark","name":"lsp.hover","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":0,"character":26}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":19,"duration":350.768},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":24,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",68]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":24,"duration":47.072},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":7,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":7,"duration":2.263},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":20,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",{"start":0,"length":1130},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":20,"duration":0.336},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":19,"duration":511.792},
{"type":"measure","name":"lsp.semantic_tokens_full","count":14,"duration":511.897},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":24,"duration":489.597},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":7,"duration":212.858},
{"type":"measure","name":"lsp.folding_range","count":15,"duration":212.997},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":20,"duration":212.973},
{"type":"measure","name":"lsp.semantic_tokens_range","count":7,"duration":213.03},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":22,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":22,"duration":0.179},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":22,"duration":5.475},
{"type":"measure","name":"lsp.diagnostic","count":101,"duration":517.478},
{"type":"mark","name":"lsp.code_lens","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":30,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":30,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":29,"duration":0.177},
{"type":"mark","name":"lsp.code_action","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":3,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":3,"duration":0.572},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":3,"duration":0.804},
{"type":"measure","name":"lsp.code_action","count":35,"duration":1.038},
{"type":"mark","name":"lsp.code_action","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":4,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":4,"duration":0.846},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":4,"duration":1.813},
{"type":"measure","name":"lsp.code_action","count":36,"duration":2.079},
{"type":"mark","name":"lsp.inlay_hint","count":261,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":68,"character":23}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":20,"args":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":31}},"data":{"source":"implementations","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.goto_implementation","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":10,"character":10}}},
{"type":"mark","name":"tsc.request.getImplementationAtPosition"},
{"type":"mark","name":"lsp.code_lens_resolve","count":21,"args":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":31}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":10,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":22,"args":{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":11,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":23,"args":{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":12,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.host.getImplementationAtPosition","count":1,"args":{"GetImplementationAtPosition":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",343]}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":24,"args":{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":13,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":25,"args":{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":20}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":14,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":26,"args":{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":19}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":15,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"measure","name":"tsc.host.getImplementationAtPosition","count":1,"duration":1.261},
{"type":"mark","name":"tsc.host.findReferences","count":20,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",343]}},
{"type":"measure","name":"tsc.host.findReferences","count":20,"duration":0.389},
{"type":"mark","name":"tsc.host.findReferences","count":21,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",369]}},
{"type":"measure","name":"tsc.request.getImplementationAtPosition","count":1,"duration":2.164},
{"type":"measure","name":"lsp.goto_implementation","count":1,"duration":2.298},
{"type":"measure","name":"lsp.code_lens_resolve","count":20,"duration":2.32},
{"type":"measure","name":"tsc.request.findReferences","count":20,"duration":2.091},
{"type":"measure","name":"lsp.references","count":20,"duration":2.169},
{"type":"measure","name":"lsp.code_lens_resolve","count":21,"duration":2.188},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":112,"duration":0.009},
{"type":"measure","name":"tsc.host.findReferences","count":21,"duration":52.936},
{"type":"mark","name":"tsc.host.findReferences","count":22,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",391]}},
{"type":"measure","name":"tsc.request.findReferences","count":21,"duration":54.8},
{"type":"measure","name":"lsp.references","count":21,"duration":54.878},
{"type":"measure","name":"lsp.code_lens_resolve","count":22,"duration":54.895},
{"type":"measure","name":"tsc.host.findReferences","count":22,"duration":8.395},
{"type":"mark","name":"tsc.host.findReferences","count":23,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",410]}},
{"type":"measure","name":"tsc.request.findReferences","count":22,"duration":63.181},
{"type":"measure","name":"lsp.references","count":22,"duration":63.259},
{"type":"measure","name":"lsp.code_lens_resolve","count":23,"duration":63.275},
{"type":"measure","name":"tsc.host.findReferences","count":23,"duration":1.424},
{"type":"mark","name":"tsc.host.findReferences","count":24,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",436]}},
{"type":"measure","name":"tsc.request.findReferences","count":23,"duration":64.575},
{"type":"measure","name":"lsp.references","count":23,"duration":64.644},
{"type":"measure","name":"lsp.code_lens_resolve","count":24,"duration":64.66},
{"type":"measure","name":"tsc.host.findReferences","count":24,"duration":1.717},
{"type":"mark","name":"tsc.host.findReferences","count":25,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",468]}},
{"type":"measure","name":"tsc.request.findReferences","count":24,"duration":66.184},
{"type":"measure","name":"lsp.references","count":24,"duration":66.279},
{"type":"measure","name":"lsp.code_lens_resolve","count":25,"duration":66.294},
{"type":"measure","name":"tsc.host.findReferences","count":25,"duration":1.351},
{"type":"measure","name":"tsc.request.findReferences","count":25,"duration":67.503},
{"type":"measure","name":"lsp.references","count":25,"duration":67.575},
{"type":"measure","name":"lsp.code_lens_resolve","count":26,"duration":67.59},
{"type":"mark","name":"lsp.did_open","count":28,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/mcp.json","languageId":"jsonc","version":1,"text":"{\n\t\"inputs\": [\n\t\t{\n\t\t\t\"id\": \"memory_file_path\",\n\t\t\t\"type\": \"promptString\",\n\t\t\t\"description\": \"Path to the memory storage file\",\n\t\t\t\"password\": false\n\t\t}\n\t],\n\t\"servers\": {\n\t\t\"memory\": {\n\t\t\t\"type\": \"stdio\",\n\t\t\t\"command\": \"npx\",\n\t\t\t\"args\": [\n\t\t\t\t\"-y\",\n\t\t\t\t\"@modelcontextprotocol/server-memory@latest\"\n\t\t\t],\n\t\t\t\"env\": {\n\t\t\t\t\"MEMORY_FILE_PATH\": \"$${input:memory_file_path}\"\n\t\t\t},\n\t\t\t\"gallery\": true,\n\t\t\t\"version\": \"0.0.1\"\n\t\t},\n\t\t\"playwright\": {\n\t\t\t\"type\": \"stdio\",\n\t\t\t\"command\": \"npx\",\n\t\t\t\"args\": [\n\t\t\t\t\"@playwright/mcp@latest\"\n\t\t\t],\n\t\t\t\"gallery\": true,\n\t\t\t\"version\": \"0.0.1\"\n\t\t}\n\t}\n}"}}},
{"type":"measure","name":"lsp.did_open","count":28,"duration":0.042},
{"type":"mark","name":"lsp.did_close","count":16,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/mcp.json"}}},
{"type":"measure","name":"lsp.did_close","count":16,"duration":0.003},
{"type":"mark","name":"lsp.did_open","count":29,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/mcp.json","languageId":"jsonc","version":1,"text":"{\n\t\"inputs\": [\n\t\t{\n\t\t\t\"id\": \"memory_file_path\",\n\t\t\t\"type\": \"promptString\",\n\t\t\t\"description\": \"Path to the memory storage file\",\n\t\t\t\"password\": false\n\t\t}\n\t],\n\t\"servers\": {\n\t\t\"memory\": {\n\t\t\t\"type\": \"stdio\",\n\t\t\t\"command\": \"npx\",\n\t\t\t\"args\": [\n\t\t\t\t\"-y\",\n\t\t\t\t\"@modelcontextprotocol/server-memory@latest\"\n\t\t\t],\n\t\t\t\"env\": {\n\t\t\t\t\"MEMORY_FILE_PATH\": \"$${input:memory_file_path}\"\n\t\t\t},\n\t\t\t\"gallery\": true,\n\t\t\t\"version\": \"0.0.1\"\n\t\t},\n\t\t\"playwright\": {\n\t\t\t\"type\": \"stdio\",\n\t\t\t\"command\": \"npx\",\n\t\t\t\"args\": [\n\t\t\t\t\"@playwright/mcp@latest\"\n\t\t\t],\n\t\t\t\"gallery\": true,\n\t\t\t\"version\": \"0.0.1\"\n\t\t}\n\t}\n}"}}},
{"type":"measure","name":"lsp.did_open","count":29,"duration":0.041},
{"type":"mark","name":"lsp.document_highlight","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":0,"character":0}}},
{"type":"mark","name":"tsc.request.getDocumentHighlights"},
{"type":"mark","name":"tsc.host.getDocumentHighlights","count":1,"args":{"GetDocumentHighlights":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",0,["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"]]}},
{"type":"measure","name":"tsc.host.getDocumentHighlights","count":1,"duration":5.784},
{"type":"measure","name":"tsc.request.getDocumentHighlights","count":1,"duration":6.254},
{"type":"measure","name":"lsp.document_highlight","count":1,"duration":6.385},
{"type":"mark","name":"lsp.code_lens","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":31,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":31,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":30,"duration":0.179},
{"type":"mark","name":"lsp.code_lens_resolve","count":27,"args":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":31}},"data":{"source":"implementations","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.goto_implementation","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":10,"character":10}}},
{"type":"mark","name":"tsc.request.getImplementationAtPosition"},
{"type":"mark","name":"lsp.code_lens_resolve","count":28,"args":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":31}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":10,"character":10},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":29,"args":{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":11,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":30,"args":{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":12,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":31,"args":{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":13,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":32,"args":{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":20}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":14,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":33,"args":{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":19}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.references","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},"position":{"line":15,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.getImplementationAtPosition","count":2,"args":{"GetImplementationAtPosition":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",343]}},
{"type":"measure","name":"tsc.host.getImplementationAtPosition","count":2,"duration":0.485},
{"type":"mark","name":"tsc.host.findReferences","count":26,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",343]}},
{"type":"measure","name":"tsc.host.findReferences","count":26,"duration":0.316},
{"type":"mark","name":"tsc.host.findReferences","count":27,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",369]}},
{"type":"measure","name":"tsc.request.getImplementationAtPosition","count":2,"duration":7.544},
{"type":"measure","name":"lsp.goto_implementation","count":2,"duration":7.671},
{"type":"measure","name":"lsp.code_lens_resolve","count":27,"duration":7.693},
{"type":"measure","name":"tsc.request.findReferences","count":26,"duration":7.5},
{"type":"measure","name":"lsp.references","count":26,"duration":7.578},
{"type":"measure","name":"lsp.code_lens_resolve","count":28,"duration":7.596},
{"type":"measure","name":"tsc.host.findReferences","count":27,"duration":6.109},
{"type":"mark","name":"tsc.host.findReferences","count":28,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",391]}},
{"type":"measure","name":"tsc.request.findReferences","count":27,"duration":11.412},
{"type":"measure","name":"lsp.references","count":27,"duration":11.487},
{"type":"measure","name":"lsp.code_lens_resolve","count":29,"duration":11.502},
{"type":"measure","name":"tsc.host.findReferences","count":28,"duration":7.705},
{"type":"measure","name":"tsc.request.findReferences","count":28,"duration":18.099},
{"type":"measure","name":"lsp.references","count":28,"duration":18.172},
{"type":"measure","name":"lsp.code_lens_resolve","count":30,"duration":18.188},
{"type":"mark","name":"tsc.host.findReferences","count":29,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",410]}},
{"type":"measure","name":"tsc.host.findReferences","count":29,"duration":0.806},
{"type":"mark","name":"tsc.host.findReferences","count":30,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",436]}},
{"type":"measure","name":"tsc.host.findReferences","count":30,"duration":0.679},
{"type":"mark","name":"tsc.host.findReferences","count":31,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",468]}},
{"type":"measure","name":"tsc.request.findReferences","count":29,"duration":24.23},
{"type":"measure","name":"lsp.references","count":29,"duration":24.304},
{"type":"measure","name":"lsp.code_lens_resolve","count":31,"duration":24.319},
{"type":"measure","name":"tsc.request.findReferences","count":30,"duration":24.217},
{"type":"measure","name":"lsp.references","count":30,"duration":24.282},
{"type":"measure","name":"lsp.code_lens_resolve","count":32,"duration":24.296},
{"type":"measure","name":"tsc.host.findReferences","count":31,"duration":4.536},
{"type":"measure","name":"tsc.request.findReferences","count":31,"duration":28.288},
{"type":"measure","name":"lsp.references","count":31,"duration":28.359},
{"type":"measure","name":"lsp.code_lens_resolve","count":33,"duration":28.374},
{"type":"mark","name":"lsp.did_open","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md","languageId":"markdown","version":1,"text":"# ProspectPro v4.1 - Verified Business Intelligence Platform\n\n## 🚀 Production Ready - Post-Cleanup Enhanced\n\n**Zero Fake Data. Verified Contacts Only.**\n\nProspectPro v4.1 is a **streamlined, serverless business intelligence platform** that discovers and verifies professional contacts through authenticated sources. Following comprehensive architecture cleanup, the platform now operates with minimal infrastructure while maintaining enterprise-grade data quality.\n\n## ✨ Key Features\n\n### 🎯 **Verified Contact Discovery**\n\n- **Apollo API Integration**: $1.00 per verified executive contact\n- **Professional Licensing**: CPA, Healthcare, Legal directory verification\n- **Chamber of Commerce**: Membership validation and authentic contacts\n- **Zero Pattern Generation**: No fake email addresses or speculative data\n\n### 🏗️ **Serverless Architecture**\n\n- **2 Essential Edge Functions**: Optimized for performance and cost\n- **Static Frontend**: Lightning-fast loading with global CDN\n- **Auto-scaling**: Pay-per-use with zero idle costs\n- **90% Cost Reduction**: From container-based to serverless infrastructure\n\n### 📊 **MECE Business Taxonomy**\n\n- **16 Comprehensive Categories**: 300+ optimized business types\n- **Google Places Integration**: Enhanced with Foursquare verification\n- **Professional Classification**: Industry-specific targeting capabilities\n- **Smart Discovery**: Mutually exclusive, collectively exhaustive categorization\n\n## ⚡ **Quick Start**\n\n### **Prerequisites**\n\n- Supabase CLI installed\n- Supabase project: `sriycekxdqnesdsgwiuc`\n- Google Places API key\n- Static hosting service (Cloud Storage, Vercel, Netlify)\n\n### **1. Clone and Setup**\n\n```bash\ngit clone https://github.com/Alextorelli/ProspectPro\ncd ProspectPro\nsupabase link --project-ref sriycekxdqnesdsgwiuc\n```\n\n### **2. Deploy Edge Functions**\n\n```bash\nsupabase functions deploy business-discovery\nsupabase functions deploy campaign-export\n```\n\n### **3. Setup Database**\n\nRun the SQL schema in your Supabase dashboard:\n\n```sql\n-- Copy contents from /database/supabase-first-schema.sql\n```\n\n### **4. Configure Environment**\n\nAdd to Supabase environment variables:\n\n```\nGOOGLE_PLACES_API_KEY=your_key_here\nHUNTER_IO_API_KEY=your_key_here\nNEVERBOUNCE_API_KEY=your_key_here\n```\n\n### **5. Deploy Frontend**\n\n```bash\nnpm run build:static\nnpm run deploy:static\n```\n\n## 📁 **Project Structure**\n\n```\n/supabase/functions/\n├── business-discovery/     # Main discovery Edge Function\n└── campaign-export/        # CSV export Edge Function\n\n/public/\n├── index-supabase.html    # Static frontend\n└── supabase-app.js        # Frontend with Supabase client\n\n/database/\n└── supabase-first-schema.sql  # Database schema\n\n/docs/                     # Documentation\n/archive/                  # Legacy files (deprecated)\n```\n\n## 🔧 **Development**\n\n### **Local Development**\n\n```bash\n# Serve Edge Functions locally\nsupabase functions serve\n\n# Serve frontend locally\nnpm run serve:local\n```\n\n### **Testing Edge Functions**\n\n```bash\n# Test business discovery\ncurl -X POST 'http://localhost:54321/functions/v1/business-discovery' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"businessType\": \"restaurant\", \"location\": \"San Francisco, CA\"}'\n\n# Test campaign export\ncurl -X GET 'http://localhost:54321/functions/v1/campaign-export/CAMPAIGN_ID'\n```\n\n## 📊 **API Endpoints**\n\n### **Business Discovery**\n\n```\nPOST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery\n```\n\n**Request:**\n\n```json\n{\n  \"businessType\": \"restaurant\",\n  \"location\": \"San Francisco, CA\",\n  \"maxResults\": 10,\n  \"budgetLimit\": 50,\n  \"minConfidenceScore\": 50\n}\n```\n\n### **Campaign Export**\n\n```\nGET https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/campaign-export/{campaignId}\n```\n\n## 💰 **Cost Comparison**\n\n| Component       | Before (v3.x)          | After (v4.0)                  |\n| --------------- | ---------------------- | ----------------------------- |\n| **Hosting**     | Cloud Run $10-50/month | Static hosting $1-5/month     |\n| **Backend**     | Express.js server      | Supabase Edge Functions       |\n| **Database**    | Manual integration     | Native Supabase               |\n| **Deployment**  | Docker build 2-5 min   | Function deploy 30 sec        |\n| **Maintenance** | High complexity        | Minimal - managed by Supabase |\n| **Scaling**     | Manual configuration   | Auto-scaling serverless       |\n\n## 🎯 **Key Benefits**\n\n1. **🔥 80% Code Reduction** - From 400+ lines server.js to 50 lines core logic\n2. **💰 90% Cost Reduction** - Static hosting vs. container hosting\n3. **⚡ Global Performance** - Edge Functions in 18+ regions\n4. **🔧 Zero Maintenance** - Supabase manages infrastructure\n5. **📈 Auto-scaling** - No capacity planning required\n6. **🔄 Real-time Ready** - Native subscriptions out of the box\n\n## 🔮 **Next Steps**\n\n- [ ] Enable Supabase Auth for user management\n- [ ] Add real-time lead updates via Supabase subscriptions\n- [ ] Implement Supabase Storage for file uploads\n- [ ] Configure custom domain with SSL\n- [ ] Set up monitoring and analytics\n\n## 📚 **Documentation**\n\n- [Deployment Guide](DEPLOYMENT_SUCCESS.md)\n- [Edge Functions](supabase/functions/)\n- [Database Schema](database/supabase-first-schema.sql)\n- [Frontend Guide](public/)\n\n## 🤝 **Contributing**\n\nThis is a personal project optimized for Supabase-first architecture. For questions or suggestions, please open an issue.\n\n## 📄 **License**\n\nMIT License - see [LICENSE](LICENSE) for details.\n\n---\n\n**Built with ❤️ using Supabase Edge Functions and modern serverless architecture**\n"}}},
{"type":"measure","name":"lsp.did_open","count":30,"duration":0.089},
{"type":"mark","name":"lsp.code_action","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":102,"duration":0.011},
{"type":"mark","name":"lsp.inlay_hint","count":262,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":46}}}},
{"type":"mark","name":"lsp.document_symbol","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"}}},
{"type":"mark","name":"lsp.code_lens","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"}}},
{"type":"mark","name":"lsp.folding_range","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"}}},
{"type":"mark","name":"lsp.code_lens","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"}}},
{"type":"mark","name":"lsp.code_action","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md","languageId":"markdown","version":1,"text":"# ProspectPro v4.1 Technical Summary - Post-Cleanup Architecture\n\n## Executive Summary\n\nProspectPro v4.1 represents a **streamlined, production-ready business intelligence platform** focused on verified contact discovery. Following comprehensive cleanup, the platform now operates with a **minimal serverless architecture** using only 2 essential Edge Functions and 3 core database tables.\n\n## Architectural Philosophy: Verified Data Only\n\n**Zero Fake Data Commitment**\n\n- ✅ Professional verification through Apollo API, licensing boards, chamber directories\n- ✅ Transparent data sources with clear attribution\n- ✅ Quality-first approach: verification assumed, not advertised\n- ❌ No pattern-generated emails (info@, contact@, etc.)\n- ❌ No speculative or fabricated contact information\n\n## Core Infrastructure (Cleaned & Optimized)\n\n### **Edge Functions (2 Essential Only)**\n\n```\n/supabase/functions/business-discovery-optimized/  # Enhanced with Foursquare integration\n/supabase/functions/campaign-export/              # CSV export with verification status\n```\n\n### **Database Schema (Security Hardened)**\n\n```sql\n-- 3 Core Tables with RLS\ncampaigns          # Campaign management and tracking\nleads              # Verified business contacts only\ndashboard_exports  # Export tracking and analytics\n\n-- 1 Secure View (SECURITY INVOKER pattern)\ncampaign_analytics # Performance metrics without SECURITY DEFINER issues\n```\n\n### **Static Frontend**\n\n```\n/public/index-supabase.html      # Main application interface\n/public/supabase-app-enhanced.js # Supabase client with MECE taxonomy\n```\n\n## MECE Business Taxonomy Integration\n\n**16 Comprehensive Categories** covering 300+ optimized business types:\n\n- Professional Services (17 types)\n- Financial Services (11 types)\n- Healthcare & Medical (26 types)\n- Technology & Software (12 types)\n- Food & Beverage (15 types)\n- Retail & Shopping (18 types)\n- Real Estate & Construction (12 types)\n- Education & Training (8 types)\n- Entertainment & Recreation (11 types)\n- Transportation & Logistics (9 types)\n- Beauty & Personal Care (8 types)\n- Home & Local Services (12 types)\n- Manufacturing & Industrial (8 types)\n- Non-Profit & Government (6 types)\n- Travel & Hospitality (7 types)\n- Agriculture & Environment (6 types)\n\n## API Integration Stack\n\n**External APIs (Configured & Tested)**\n\n- **Google Places API**: Primary business discovery\n- **Foursquare API**: Enhanced location data and verification\n- **Hunter.io**: Professional email discovery\n- **NeverBounce**: Email verification and deliverability\n\n**Internal Integration**\n\n- **Supabase Database**: Native PostgreSQL with Row Level Security\n- **Supabase Edge Functions**: Global deployment with <100ms cold starts\n- **Supabase Real-time**: Ready for live updates and notifications\n\n## Deployment Architecture\n\n**Serverless-First Design**\n\n```\nStatic Frontend (Vercel/Netlify) → Supabase Edge Functions → Supabase Database\n                                                    ↓\n                     Environment Variables → External APIs\n                                                    ↓\n                     Real-time Updates → Live Frontend Sync\n```\n\n**Cost Optimization (90% Reduction)**\n\n- Static hosting: $1-5/month vs $10-50/month containers\n- Serverless functions: Pay-per-invocation model\n- No infrastructure management or server maintenance\n- Auto-scaling with zero idle costs\n\n## Security & Compliance\n\n**Database Security (Hardened)**\n\n- Row Level Security (RLS) policies on all tables\n- SECURITY INVOKER views (removed SECURITY DEFINER)\n- Pinned search_path for trigger functions\n- Anon key authentication with proper JWT validation\n\n**Data Protection**\n\n- No sensitive data in frontend code\n- API keys secured in Supabase environment variables\n- Real-time cache invalidation for immediate updates\n- Professional data verification standards\n\n## Quality Assurance Pipeline\n\n**Enhanced Quality Scoring v3.0**\n\n- Confidence scoring based on data source verification\n- Cost-efficient validation pipeline (35-45% qualification rates)\n- Business legitimacy verification through multiple sources\n- Professional contact authentication\n\n**Testing & Monitoring**\n\n- Direct Edge Function testing via Supabase dashboard\n- Database permission validation with RLS diagnostics\n- Frontend integration testing with real-time cache verification\n- MCP server monitoring for development workflow optimization\n\n## MCP Infrastructure (v4.1 Enhanced)\n\n**3 Specialized Servers**\n\n- **Production Server v4.1**: 28 tools for monitoring, analytics, filesystem analysis\n- **Development Server v3.0**: 8 tools for API integrations and performance benchmarking\n- **Troubleshooting Server v2.0**: 6 tools for systematic debugging and RLS validation\n\n**Consolidated Architecture** (70% efficiency improvement from 5→3 servers)\n\n## Development Workflow\n\n**Simplified Deployment Process**\n\n```bash\n# Edge Function deployment\nsupabase functions deploy business-discovery-optimized\nsupabase functions deploy campaign-export\n\n# Static frontend deployment\ncd public && vercel --prod\n\n# Database updates\n# Run SQL migrations in Supabase dashboard\n```\n\n**Local Development**\n\n```bash\n# Serve Edge Functions locally\nsupabase functions serve\n\n# Test static frontend\ncd public && python3 -m http.server 8080\n\n# Database testing\n# Use Supabase SQL editor for queries\n```\n\n## Performance Metrics\n\n**Response Times**\n\n- Edge Function cold start: <100ms\n- Business discovery API: 2-4 seconds average\n- Static frontend load: <500ms\n- Database queries: <50ms average\n\n**Scalability**\n\n- Auto-scaling Edge Functions (unlimited concurrent requests)\n- Static CDN distribution (global edge caching)\n- Supabase database scaling (up to 500 concurrent connections)\n- Real-time updates via WebSocket connections\n\n## Maintenance & Monitoring\n\n**Simplified Operations**\n\n- Zero server management (fully serverless)\n- Automatic security updates via Supabase\n- Built-in monitoring through Supabase dashboard\n- Real-time error tracking in Edge Function logs\n\n**Development Support**\n\n- MCP servers for automated troubleshooting\n- VS Code integration with optimized settings\n- GitHub Copilot with specialized instructions\n- Comprehensive documentation and debugging guides\n\n## Future Roadmap\n\n**Phase 1: Enhanced Verification** (Q1 2024)\n\n- Integration with additional professional directories\n- Advanced business legitimacy scoring algorithms\n- Real-time verification status updates\n\n**Phase 2: Advanced Analytics** (Q2 2024)\n\n- Campaign performance predictive modeling\n- Geographic market analysis integration\n- Enhanced export formatting options\n\n**Phase 3: Workflow Automation** (Q3 2024)\n\n- Automated campaign optimization\n- Lead scoring machine learning integration\n- Advanced filtering and segmentation capabilities\n\n## Technical Contact & Support\n\n**Repository**: https://github.com/Alextorelli/ProspectPro  \n**Architecture**: Supabase-first serverless with verified data focus  \n**Version**: 4.1.0 (Production Ready - Post-Cleanup Enhanced)  \n**Last Updated**: January 2025\n\nThis technical summary reflects the cleaned, optimized, and production-ready state of ProspectPro v4.1 following comprehensive architecture streamlining and security hardening.\n"}}},
{"type":"measure","name":"lsp.did_open","count":31,"duration":0.101},
{"type":"mark","name":"lsp.code_action","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":103,"duration":0.012},
{"type":"mark","name":"lsp.inlay_hint","count":263,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":25}}}},
{"type":"mark","name":"lsp.code_lens","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.document_symbol","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.folding_range","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.code_lens","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.code_action","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":264,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":6}}}},
{"type":"mark","name":"lsp.hover","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"position":{"line":4,"character":298}}},
{"type":"mark","name":"lsp.did_open","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":68,"duration":0.112},
{"type":"measure","name":"lsp.did_open","count":32,"duration":7.21},
{"type":"mark","name":"lsp.goto_definition","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":1123,"character":28}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":6,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",32518]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":14,"duration":0.253},
{"type":"mark","name":"tsc.op.op_load","count":208,"args":"file:///workspaces/ProspectPro/README.md"},
{"type":"measure","name":"tsc.op.op_load","count":208,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":209,"args":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},
{"type":"measure","name":"tsc.op.op_load","count":209,"duration":0.067},
{"type":"mark","name":"tsc.op.op_load","count":210,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":210,"duration":0.066},
{"type":"mark","name":"tsc.op.op_resolve","count":491,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":491,"duration":0.109},
{"type":"mark","name":"tsc.op.op_resolve","count":492,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":492,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":493,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":493,"duration":0.071},
{"type":"mark","name":"tsc.op.op_resolve","count":494,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":494,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":495,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":495,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":496,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":496,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":497,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":497,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":498,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":498,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":499,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":499,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":500,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":500,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":501,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":501,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":502,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":502,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":503,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":503,"duration":0.076},
{"type":"mark","name":"tsc.op.op_resolve","count":504,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":504,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":505,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":505,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":506,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":506,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":507,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":507,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":508,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":508,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":509,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":509,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":510,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":510,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":511,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":511,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":512,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":512,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":513,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":513,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":514,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":514,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":515,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":515,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":516,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":516,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":517,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":517,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":518,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":518,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":519,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":519,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":520,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":520,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":521,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":521,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":522,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":522,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":523,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":523,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":524,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":524,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":525,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":525,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":526,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":526,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":527,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":527,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":528,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":528,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":529,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":529,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":530,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":530,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":531,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":531,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":532,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":532,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":533,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":533,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":534,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":534,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":535,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":535,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":536,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":536,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":537,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":537,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":538,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":538,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":539,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":539,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":540,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":540,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":541,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":541,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":542,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":542,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":211,"args":"file:///c:/Users/Alext/AppData/Roaming/Code/User/mcp.json"},
{"type":"measure","name":"tsc.op.op_load","count":211,"duration":0.016},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":113,"duration":0.011},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":6,"duration":221.075},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":6,"duration":223.256},
{"type":"measure","name":"lsp.goto_definition","count":13,"duration":223.421},
{"type":"mark","name":"lsp.did_open","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/01-vault-decrypt-secret.sql","languageId":"sql","version":1,"text":"-- =====================================================\n-- ProspectPro Vault Function 1: vault_decrypt_secret\n-- =====================================================\n-- Decrypt a single secret from Supabase Vault\n-- Idempotent: Safe to run multiple times\n-- Security: Hardened with SET search_path\n\nCREATE OR REPLACE FUNCTION vault_decrypt_secret(secret_name TEXT)\nRETURNS TABLE(\n    secret_key TEXT,\n    decrypted_secret TEXT,\n    status TEXT,\n    error_message TEXT\n)\nSET search_path = 'vault, public'\nAS $$\nDECLARE\n    secret_id UUID;\n    decrypted_value TEXT;\nBEGIN\n    -- Initialize return values\n    secret_key := secret_name;\n    decrypted_secret := NULL;\n    status := 'ERROR';\n    error_message := NULL;\n\n    BEGIN\n        -- Find the secret ID by name\n        SELECT vs.id INTO secret_id\n        FROM vault.secrets vs\n        WHERE vs.name = secret_name\n        LIMIT 1;\n\n        -- If secret not found, return not found status\n        IF secret_id IS NULL THEN\n            status := 'NOT_FOUND';\n            error_message := 'Secret not found in vault: ' || secret_name;\n            RETURN NEXT;\n            RETURN;\n        END IF;\n\n        -- Decrypt the secret using vault function\n        SELECT vds.decrypted_secret INTO decrypted_value\n        FROM vault.decrypted_secrets vds\n        WHERE vds.id = secret_id;\n\n        -- Check if decrypted value is valid\n        IF decrypted_value IS NULL OR decrypted_value = '' THEN\n            status := 'EMPTY';\n            error_message := 'Secret exists but has no value: ' || secret_name;\n        ELSIF decrypted_value = 'PLACEHOLDER_VALUE_SET_VIA_DASHBOARD' THEN\n            status := 'PLACEHOLDER';\n            error_message := 'Secret contains placeholder value, needs real API key: ' || secret_name;\n        ELSE\n            -- Success - return the decrypted secret\n            decrypted_secret := decrypted_value;\n            status := 'SUCCESS';\n            error_message := NULL;\n        END IF;\n\n        RETURN NEXT;\n        RETURN;\n\n    EXCEPTION\n        WHEN insufficient_privilege THEN\n            status := 'ACCESS_DENIED';\n            error_message := 'Insufficient privileges to access vault secret: ' || secret_name;\n            RETURN NEXT;\n        WHEN OTHERS THEN\n            status := 'ERROR';\n            error_message := 'Database error accessing vault: ' || SQLERRM;\n            RETURN NEXT;\n    END;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Grant execution permission to service_role (idempotent)\nGRANT EXECUTE ON FUNCTION vault_decrypt_secret(TEXT) TO service_role;\n\n-- Add descriptive comment\nCOMMENT ON FUNCTION vault_decrypt_secret(TEXT) IS 'Decrypt a single secret from Supabase Vault - callable from Node.js applications with security hardening';"}}},
{"type":"measure","name":"lsp.did_open","count":33,"duration":0.099},
{"type":"mark","name":"lsp.goto_definition","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":1123,"character":28}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":7,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",32518]}},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":7,"duration":1.911},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":7,"duration":2.126},
{"type":"measure","name":"lsp.goto_definition","count":14,"duration":2.285},
{"type":"mark","name":"lsp.inlay_hint","count":265,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":6}}}},
{"type":"mark","name":"lsp.code_lens","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.code_lens","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.hover","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"position":{"line":10,"character":74}}},
{"type":"mark","name":"lsp.inlay_hint","count":266,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":3}}}},
{"type":"mark","name":"lsp.code_action","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":5,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":5,"duration":85.332},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":5,"duration":85.639},
{"type":"measure","name":"lsp.code_action","count":41,"duration":85.928},
{"type":"mark","name":"lsp.did_change_batched","count":38,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":38,"duration":18.768},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":69,"duration":0.215},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":25,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",70]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":23,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":212,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":212,"duration":0.098},
{"type":"mark","name":"tsc.op.op_resolve","count":543,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":543,"duration":0.056},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":25,"duration":378.637},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":25,"duration":378.801},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":23,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":23,"duration":0.163},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":23,"duration":0.347},
{"type":"measure","name":"lsp.diagnostic","count":104,"duration":381.205},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":26,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",70]}},
{"type":"mark","name":"lsp.inlay_hint","count":267,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":110,"character":0}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":26,"duration":92.614},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":21,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":45334},"2020"]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":26,"duration":92.782},
{"type":"measure","name":"lsp.diagnostic","count":105,"duration":93.035},
{"type":"mark","name":"lsp.folding_range","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"lsp.document_symbol","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":32,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.document_symbol","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":33,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.code_lens","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":34,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":21,"duration":287.457},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":8,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":21,"duration":378.568},
{"type":"measure","name":"lsp.semantic_tokens_full","count":15,"duration":378.882},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":8,"duration":22.145},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":8,"duration":280.188},
{"type":"measure","name":"lsp.folding_range","count":18,"duration":280.431},
{"type":"mark","name":"tsc.host.getNavigationTree","count":11,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":11,"duration":5.14},
{"type":"measure","name":"tsc.request.getNavigationTree","count":11,"duration":286.591},
{"type":"measure","name":"lsp.get_navigation_tree","count":32,"duration":286.642},
{"type":"measure","name":"lsp.document_symbol","count":37,"duration":287.106},
{"type":"measure","name":"lsp.get_navigation_tree","count":33,"duration":289.574},
{"type":"measure","name":"lsp.document_symbol","count":38,"duration":290.014},
{"type":"measure","name":"lsp.get_navigation_tree","count":34,"duration":111.788},
{"type":"measure","name":"lsp.code_lens","count":37,"duration":112.29},
{"type":"mark","name":"lsp.inlay_hint","count":268,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":47}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":106,"duration":0.019},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":38,"duration":0.064},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":107,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":269,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1043,"character":0},"end":{"line":1169,"character":25}}}},
{"type":"mark","name":"lsp.code_lens","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":35,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":35,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":38,"duration":0.366},
{"type":"mark","name":"lsp.code_action","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":270,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":3}}}},
{"type":"mark","name":"lsp.document_symbol","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.folding_range","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.code_lens","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.code_action","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":271,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":272,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":86,"character":39}}}},
{"type":"mark","name":"lsp.inlay_hint","count":273,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":97,"character":35}}}},
{"type":"mark","name":"lsp.inlay_hint","count":274,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":105,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":275,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":276,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":3,"character":0},"end":{"line":133,"character":25}}}},
{"type":"mark","name":"lsp.inlay_hint","count":277,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":7,"character":0},"end":{"line":136,"character":52}}}},
{"type":"mark","name":"lsp.did_close","count":17,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/mcp.json"}}},
{"type":"measure","name":"lsp.did_close","count":17,"duration":0.006},
{"type":"mark","name":"lsp.did_change_batched","count":39,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":70,"duration":0.112},
{"type":"measure","name":"lsp.did_change_batched","count":39,"duration":9.029},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":27,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",71]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":24,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":213,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":213,"duration":0.094},
{"type":"mark","name":"tsc.op.op_resolve","count":544,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":544,"duration":0.063},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":114,"duration":0.015},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":27,"duration":246.145},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":27,"duration":246.319},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":24,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":24,"duration":0.147},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":24,"duration":0.204},
{"type":"measure","name":"lsp.diagnostic","count":108,"duration":248.38},
{"type":"mark","name":"lsp.code_action","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":28,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",71]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":28,"duration":331.284},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":28,"duration":333.418},
{"type":"measure","name":"lsp.diagnostic","count":109,"duration":337.839},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":39,"duration":0.059},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":110,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":111,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_close","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":18,"duration":1.111},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":71,"duration":0.094},
{"type":"mark","name":"lsp.goto_definition","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":1124,"character":6}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":8,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",32585]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":15,"duration":0.239},
{"type":"mark","name":"tsc.op.op_load","count":214,"args":"file:///workspaces/ProspectPro/database/01-vault-decrypt-secret.sql"},
{"type":"measure","name":"tsc.op.op_load","count":214,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":545,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":545,"duration":0.117},
{"type":"mark","name":"tsc.op.op_resolve","count":546,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":546,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":547,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":547,"duration":0.077},
{"type":"mark","name":"tsc.op.op_resolve","count":548,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":548,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":549,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":549,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":550,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":550,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":551,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":551,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":552,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":552,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":553,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":553,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":554,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":554,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":555,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":555,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":556,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":556,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":557,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":557,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":558,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":558,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":559,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":559,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":560,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":560,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":561,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":561,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":562,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":562,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":563,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":563,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":564,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":564,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":565,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":565,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":566,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":566,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":567,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":567,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":568,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":568,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":569,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":569,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":570,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":570,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":571,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":571,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":572,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":572,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":573,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":573,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":574,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":574,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":575,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":575,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":576,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":576,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":577,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":577,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":578,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":578,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":579,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":579,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":580,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":580,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":581,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":581,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":582,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":582,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":583,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":583,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":584,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":584,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":585,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":585,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":586,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":586,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":587,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":587,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":588,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":588,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":589,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":589,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":590,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":590,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":591,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":591,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":592,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":592,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":593,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":593,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":594,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":594,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":595,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":595,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":596,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":596,"duration":0.023},
{"type":"mark","name":"tsc.op.op_release","count":6,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":6,"duration":1.145},
{"type":"mark","name":"tsc.op.op_release","count":7,"args":"file:///c:/Users/Alext/AppData/Roaming/Code/User/mcp.json"},
{"type":"measure","name":"tsc.op.op_release","count":7,"duration":0.018},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":8,"duration":32.2},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":8,"duration":33.438},
{"type":"measure","name":"lsp.goto_definition","count":15,"duration":33.617},
{"type":"mark","name":"lsp.goto_definition","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":1124,"character":6}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":9,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",32585]}},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":9,"duration":0.527},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":9,"duration":1.149},
{"type":"measure","name":"lsp.goto_definition","count":16,"duration":1.307},
{"type":"mark","name":"lsp.did_change_batched","count":40,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":40,"duration":44.455},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":29,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",73]}},
{"type":"measure","name":"lsp.testing_update","count":72,"duration":0.104},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":25,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":215,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":215,"duration":0.085},
{"type":"mark","name":"tsc.op.op_resolve","count":597,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":597,"duration":0.061},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":29,"duration":181.759},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":29,"duration":184.417},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":25,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":25,"duration":0.13},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":25,"duration":0.189},
{"type":"measure","name":"lsp.diagnostic","count":112,"duration":184.864},
{"type":"mark","name":"lsp.code_action","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":30,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",73]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":30,"duration":53.99},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":30,"duration":54.164},
{"type":"measure","name":"lsp.diagnostic","count":113,"duration":55.316},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":40,"duration":0.063},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":114,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":115,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_close","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/01-vault-decrypt-secret.sql"}}},
{"type":"measure","name":"lsp.did_close","count":19,"duration":0.034},
{"type":"mark","name":"lsp.code_action","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"mark","name":"lsp.inlay_hint","count":278,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":22,"character":0},"end":{"line":152,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":279,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":33,"character":0},"end":{"line":163,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":280,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":44,"character":0},"end":{"line":171,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":281,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":52,"character":0},"end":{"line":179,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":282,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":89,"character":0},"end":{"line":215,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":283,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":95,"character":0},"end":{"line":221,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":284,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":105,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":285,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":111,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.hover","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"position":{"line":183,"character":62}}},
{"type":"mark","name":"lsp.code_action","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":286,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":120,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":287,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":120,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":288,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":130,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":289,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":130,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":290,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":137,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":291,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":143,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":292,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":150,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":293,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":150,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":294,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":156,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":295,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":161,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":296,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":152,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":297,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":150,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":298,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":150,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":299,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":146,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":300,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":146,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":41,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":41,"duration":7.67},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":73,"duration":0.334},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":31,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",74]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":26,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":216,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":216,"duration":0.1},
{"type":"mark","name":"tsc.op.op_resolve","count":598,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":598,"duration":0.064},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":31,"duration":527.373},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":31,"duration":529.935},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":26,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":26,"duration":113.097},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":26,"duration":113.182},
{"type":"measure","name":"lsp.diagnostic","count":116,"duration":643.433},
{"type":"mark","name":"lsp.code_action","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":32,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",74]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":32,"duration":72.915},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":32,"duration":73.099},
{"type":"measure","name":"lsp.diagnostic","count":117,"duration":75.097},
{"type":"mark","name":"lsp.did_change_batched","count":42,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":74,"duration":0.094},
{"type":"measure","name":"lsp.did_change_batched","count":42,"duration":23.749},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":33,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",75]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":27,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":217,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":217,"duration":0.094},
{"type":"mark","name":"tsc.op.op_resolve","count":599,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":599,"duration":0.061},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":33,"duration":238.099},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":33,"duration":238.273},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":27,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":27,"duration":0.158},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":27,"duration":0.231},
{"type":"measure","name":"lsp.diagnostic","count":118,"duration":240.858},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":119,"duration":0.033},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":120,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":34,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",75]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":34,"duration":21.663},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":34,"duration":21.8},
{"type":"measure","name":"lsp.diagnostic","count":121,"duration":22.011},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":41,"duration":0.068},
{"type":"mark","name":"lsp.code_action","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":301,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":148,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":302,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":148,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":303,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":146,"character":0},"end":{"line":230,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":75,"duration":0.119},
{"type":"measure","name":"lsp.did_open","count":34,"duration":5.496},
{"type":"mark","name":"lsp.did_open","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":35,"duration":0.582},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.did_change_batched","count":43,"args":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts"},
{"type":"measure","name":"lsp.testing_update","count":76,"duration":6.21},
{"type":"measure","name":"lsp.did_change_batched","count":43,"duration":13.018},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":77,"duration":0.158},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":35,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",78]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":16,"duration":0.264},
{"type":"mark","name":"tsc.op.op_load","count":218,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":218,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":600,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":600,"duration":0.116},
{"type":"mark","name":"tsc.op.op_resolve","count":601,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":601,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":602,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":602,"duration":0.074},
{"type":"mark","name":"tsc.op.op_resolve","count":603,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":603,"duration":0.574},
{"type":"mark","name":"tsc.op.op_resolve","count":604,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":604,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":605,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":605,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":606,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":606,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":607,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":607,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":608,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":608,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":609,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":609,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":610,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":610,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":611,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":611,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":612,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":612,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":613,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":613,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":614,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":614,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":615,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":615,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":616,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":616,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":617,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":617,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":618,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":618,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":619,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":619,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":620,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":620,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":621,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":621,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":622,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":622,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":623,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":623,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":624,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":624,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":625,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":625,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":626,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":626,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":627,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":627,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":628,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":628,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":629,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":629,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":630,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":630,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":631,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":631,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":632,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":632,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":633,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":633,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":634,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":634,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":635,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":635,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":636,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":636,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":637,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":637,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":638,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":638,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":639,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":639,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":640,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":640,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":641,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":641,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":642,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":642,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":643,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":643,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":644,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":644,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":645,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":645,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":646,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":646,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":647,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":647,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":648,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":648,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":649,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":649,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":650,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":650,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":651,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":651,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":219,"args":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":219,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":652,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":652,"duration":0.023},
{"type":"mark","name":"tsc.op.op_release","count":8,"args":"file:///workspaces/ProspectPro/database/01-vault-decrypt-secret.sql"},
{"type":"measure","name":"tsc.op.op_release","count":8,"duration":0.12},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":115,"duration":0.014},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":35,"duration":341.606},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":35,"duration":343.338},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":28,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":28,"duration":0.16},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":28,"duration":0.215},
{"type":"measure","name":"lsp.diagnostic","count":122,"duration":350.725},
{"type":"measure","name":"lsp.did_save","count":42,"duration":27.529},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":123,"duration":0.042},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":124,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":36,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",78]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":36,"duration":117.905},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":36,"duration":118.085},
{"type":"measure","name":"lsp.diagnostic","count":125,"duration":118.352},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":37,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",78]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":37,"duration":86.718},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":37,"duration":87.74},
{"type":"measure","name":"lsp.diagnostic","count":126,"duration":89.256},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":127,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_close","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":20,"duration":0.509},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":78,"duration":0.104},
{"type":"mark","name":"lsp.did_open","count":36,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json","languageId":"jsonc","version":3,"text":"{\n  \"window.autoDetectColorScheme\": true,\n  \"github.copilot.nextEditSuggestions.enabled\": true,\n  \"security.workspace.trust.untrustedFiles\": \"open\",\n  \"python.analysis.typeCheckingMode\": \"standard\",\n  \"mssql.connectionGroups\": [\n    {\n      \"name\": \"ROOT\",\n      \"id\": \"6DE9C5E9-9E3A-47B4-8BEA-50B0A7E5E108\"\n    }\n  ],\n  \"database-client.autoSync\": true,\n  \"git.openRepositoryInParentFolders\": \"always\",\n  \"editor.cursorBlinking\": \"expand\",\n  \"editor.wordWrap\": \"on\",\n  \"files.autoSave\": \"onWindowChange\",\n  \"editor.bracketPairColorization.independentColorPoolPerBracketType\": true,\n  \"editor.formatOnSave\": true,\n  \"workbench.iconTheme\": \"vira-icons-teal\",\n  \"mssql.autoDisableNonTSqlLanguageService\": true,\n  \"git.enableSmartCommit\": true,\n  \"git.confirmSync\": false,\n  \"git.autofetch\": true,\n  \"chat.tools.terminal.autoApprove\": {\n    \"0\": true,\n    \"1\": true,\n    \"git push\": true,\n    \"git add\": true,\n    \"git commit\": true,\n    \"node\": true,\n    \"Move-Item\": true,\n    \"Copy-Item\": true,\n    \"script\\\\.\": true,\n    \"old\": true,\n    \"temp\": true,\n    \"backup\\\"\": true,\n    \"nslookup\": true,\n    \"Remove-Item\": true,\n    \"Rename-Item\": true,\n    \"Invoke-WebRequest\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQ3MTgzOTksImV4cCI6MjA0MDI5NDM5OX0.TZ9kR6FfNvnZMJF9P6NX6rYSVfM3LRw7BfGK7U6YXwc\\\"}\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTcyNDcxODM5OSwiZXhwIjoyMDQwMjk0Mzk5fQ.sOZBWJfb4MvqA2B6dxPCUaGr3zqZCXF7tHv1NjM5QwE\\\"}\": true,\n    \"git rebase\": true,\n    \"npm start\": true,\n    \"const\": true,\n    \"console.log('✅\": true,\n    \"\\\"\": true,\n    \"try\": true,\n    \"}\": true,\n    \"}\\\"\": true,\n    \"powershell\": true,\n    \"Test-Path\": true,\n    \"Start-Process\": true,\n    \"git rm\": true,\n    \"git reset\": true,\n    \"git commit -m \\\"fix: resolve Railway deployment crashes with robust import patterns\\n\\n- Fix api/dashboard-export.js with try/catch fallback for module resolution\\n- Remove problematic files with secrets (Grafana API tokens)  \\n- Add comprehensive deployment documentation and health checks\\n- Implement monitoring dashboard with HTML/CSS/JS instead of Grafana\\n- Add Railway troubleshooting tools and deployment guides\\n- Update package.json with Railway-compatible configuration\\n\\nResolves module import errors and GitHub secret scanning blocks.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"(async\": true,\n    \"{\": true,\n    \"if\": true,\n    \"console.log('📊\": true,\n    \"git commit -m \\\"optimize: leverage Railway analytics, simplify monitoring architecture\\n\\n🎯 Strategic Changes:\\n- Replace complex custom monitoring with Railway's built-in analytics\\n- Focus only on ProspectPro business metrics (campaigns, leads, costs)\\n- Remove redundant infrastructure monitoring (Railway handles this)\\n- Simplify dashboard to essential business KPIs only\\n\\n✅ Benefits:\\n- 70% reduction in monitoring code complexity\\n- Better reliability using Railway's native capabilities\\n- Focus on business value rather than infrastructure metrics\\n- Faster deployment and fewer moving parts\\n\\n🚀 Railway Integration:\\n- Use Railway dashboard for: CPU, Memory, Network, Logs, Uptime\\n- Custom dashboard for: Campaign success, Lead qualification, API costs\\n- Simplified health checks focused on business logic\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm outdated\": true,\n    \"=20.0.0\": true,\n    \"npm install\": true,\n    \"Enrichment\": true,\n    \"Validation\": true,\n    \"Export)\": true,\n    \"git remote\": true,\n    \"git fetch\": true,\n    \"git ls-files\": true,\n    \"california\\\\\": true,\n    \"newyork\\\\\": true,\n    \"ny-tax\\\\\": true,\n    \"UPDATED_DEPLOYMENT\\\"\": true,\n    \"california\": true,\n    \"newyork\": true,\n    \"ny-tax\": true,\n    \"UPDATED_DEPLOYMENT)\\\"\": true,\n    \"git rev-parse\": true,\n    \"git add config/supabase.js server.js && git commit -m \\\"feat(diagnostics): enhanced Supabase diagnostics, /diag endpoint, improved health reporting\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add server.js config/supabase.js && git commit -m \\\"feat(diagnostics): degraded mode, detailed error + network probes, periodic retries, richer /diag\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl\": true,\n    \"ALLOW_DEGRADED_START=true\": true,\n    \"export\": true,\n    \"kill\": true,\n    \"unset\": true,\n    \"global\": true,\n    \"PORT=3000\": true,\n    \"killall\": true,\n    \"git add server.js railway.toml && git commit -m \\\"fix(deployment): bind to 0.0.0.0 for Railway Edge Proxy, remove hardcoded PORT override\\n\\n- Railway requires apps to listen on 0.0.0.0, not localhost\\n- Remove PORT=8080 override in railway.toml to let Railway set it dynamically  \\n- Default to PORT 3000 to match Railway conventions\\n- This should resolve 502 Bad Gateway errors from Railway load balancer\\\" && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=test\": true,\n    \"SUPABASE_URL=https://test.supabase.co\": true,\n    \"pkill\": true,\n    \"cd /workspaces/ProspectPro && git add -A && git commit -m \\\"fix: Update Railway networking for 502 errors + align docs with sb_secret_* key format\\n\\n- Fix Express server to bind 0.0.0.0:PORT (Railway requirement) \\n- Remove hardcoded PORT=8080 from railway.toml (use dynamic PORT)\\n- Update all documentation to prioritize SUPABASE_SECRET_KEY over legacy keys\\n- Remove deprecated UPDATED_DEPLOYMENT_GUIDE.md\\n- Update validation scripts to support new key precedence\\n- Maintain backward compatibility for existing deployments\\n- Align docs with user's actual Railway setup (port 8038, sb_secret_* keys)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add railway.toml && git commit -m \\\"fix: Clean up railway.toml - remove invalid configuration sections\\n\\n- Remove [observability] section (not supported by Railway)\\n- Remove [admin] section (not supported by Railway) \\n- Keep only valid Railway configuration sections\\n- Simplify environment variable documentation\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=https://example.supabase.co\": true,\n    \"RLS\": true,\n    \"service\": true,\n    \"anon\": true,\n    \"publishable)\\\\n-\": true,\n    \"improve\": true,\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql .env.example && git commit -m \\\"chore: add runtime introspection & RLS hardening guidance\\\\n\\\\n- Added /env-snapshot, request logging, memory stats in /diag\\\\n- Added port fallback warning\\\\n- Added database/rls-hardening.sql with policy templates\\\\n- Updated .env.example (avoid PORT on Railway)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql && git commit -m \\\"feat: instrumentation (/env-snapshot /loop-metrics) + RLS hardening script placeholder\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"getLastSupabaseDiagnostics,\": true,\n    \"console.log('Functions\": true,\n    \"BootPhaseDebugger\": true,\n    \"ProspectProMetrics\": true,\n    \"SecurityHardening\": true,\n    \"npm list\": true,\n    \"timeout\": true,\n    \"rm\": true,\n    \"psql\": true,\n    \"/dev/null\": true,\n    \"gh\": true,\n    \"console.log('=====================================================')\": true,\n    \"console.log('')\": true,\n    \"console.log('\": true,\n    \"console.log('🎯\": true,\n    \"console.log('1.\": true,\n    \"console.log('2.\": true,\n    \"console.log('3.\": true,\n    \"console.log('🎉\": true,\n    \"console.log('🔍\": true,\n    \"let\": true,\n    \"//\": true,\n    \"[]).length\": true,\n    \"issues.push(\\\\`⚠️\": true,\n    \"openParens}\": true,\n    \"closeParens}\": true,\n    \"')\": true,\n    \"!lastStatement.startsWith('--'))\": true,\n    \"issues.push('⚠️\": true,\n    \"console.log('❌\": true,\n    \"issues.forEach(issue\": true,\n    \"console.log(issue))\": true,\n    \"issues.push('Unbalanced\": true,\n    \"issues.push('system_settings\": true,\n    \"issues.push('Found\": true,\n    \"mv\": true,\n    \"true\": true,\n    \"createClient\": true,\n    \"console.log('🔗\": true,\n    \"supabase.from('information_schema.tables').select('table_name').limit(1).then(result\": true,\n    \"}).catch(err\": true,\n    \"console.error('❌\": true,\n    \"SUPABASE_URL=https://sriycekxdqnesdsgwiuc.supabase.co\": true,\n    \"git branch\": true,\n    \"git checkout\": true,\n    \".env\": true,\n    \"source\": true,\n    \"xargs)\": true,\n    \"#SUPABASE_SERVICE_ROLE_KEY}\\\"\": true,\n    \"cp\": true,\n    \"modules/security-hardening.js\": true,\n    \"'EOF'\": true,\n    \"class\": true,\n    \"constructor(options\": true,\n    \"})\": true,\n    \"this.options\": true,\n    \"enableSecureHeaders:\": true,\n    \"this.options.adminTokens.add(process.env.PERSONAL_ACCESS_TOKEN)\": true,\n    \"console.log('🛡️\": true,\n    \"app.use((req,\": true,\n    \"res.removeHeader('X-Powered-By')\": true,\n    \"res.setHeader('X-Frame-Options',\": true,\n    \"res.setHeader('X-Content-Type-Options',\": true,\n    \"res.setHeader('X-ProspectPro-Security',\": true,\n    \"next()\": true,\n    \"return\": true,\n    \"req.headers['x-admin-token']\": true,\n    \"!this.options.adminTokens.has(token))\": true,\n    \"error:\": true,\n    \"authenticated:\": true,\n    \"process.env.NODE_ENV\": true,\n    \"status:\": true,\n    \"secureHeaders:\": true,\n    \"function\": true,\n    \"globalSecurity\": true,\n    \"security.applySecurityMiddleware(app)\": true,\n    \"EOF\": true,\n    \"general:\": true,\n    \"res.send\": true,\n    \"=\": true,\n    \"console.warn(`⚠️\": true,\n    \"res.statusCode}\": true,\n    \"req.method}\": true,\n    \"req.path}`)\": true,\n    \"middleware.general.forEach(mw\": true,\n    \"app.use(mw))\": true,\n    \"app.use(this.getSecurityLogger())\": true,\n    \"'https://sriycekxdqnesdsgwiuc.supabase.co'\": true,\n    \"'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY'\": true,\n    \"async\": true,\n    \"data,\": true,\n    \"process.exit(success\": true,\n    \"testConnection\": true,\n    \"testConnection().then(result\": true,\n    \"supabase.auth.getSession().then(result\": true,\n    \"error.message.includes('relation')\": true,\n    \"error.message.includes('does\": true,\n    \"console.log('-\": true,\n    \"require('./config/supabase').testConnection().then(result\": true,\n    \"console.error('Database\": true,\n    \"node -e \\\"console.log('Testing environment...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"require('dotenv').config(); console.log('Testing with dotenv...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result.success ? 'SUCCESS' : 'FAILED', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase.getSupabaseClient().from('campaigns').select('count').limit(1).then(result\": true,\n    \"console.error('Table\": true,\n    \"k.includes('SUPABASE')))\": true,\n    \"result.success)\": true,\n    \"console.error('Test\": true,\n    \"powershell -Command \\\"try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/health' -UseBasicParsing; Write-Host 'Health check: Status' $response.StatusCode; Write-Host 'Response:' $response.Content } catch { Write-Host 'Error:' $_.Exception.Message }\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s http://localhost:3000/health | ConvertFrom-Json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./config/supabase').testConnection().then(r=\": true,\n    \"console.log(JSON.stringify(r,\": true,\n    \"}).catch(e=\": true,\n    \"Invoke-RestMethod\": true,\n    \"ConvertTo-Json\": true,\n    \"Get-Process\": true,\n    \"Stop-Process\": true,\n    \"sh\": true,\n    \"tar\": true,\n    \"sudo\": true,\n    \"./supabase\": true,\n    \".gitignore\": true,\n    \"git commit -m \\\"feat: major refactor - integrate real API pipeline with zero fake data\\n\\n- Fix devcontainer Supabase CLI installation to use official installer\\n- Implement 4-stage lead processing pipeline (Discovery → Enrichment → Validation → Export)  \\n- Add comprehensive real data validation with confidence scoring\\n- Integrate Google Places, Hunter.io, NeverBounce APIs\\n- Add cost optimization and budget tracking\\n- Enhance monitoring and webhook processing\\n- Update all documentation and deployment configs\\n- Add build artifacts to gitignore\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase\": true,\n    \"then\": true,\n    \"console.log('⚠️\": true,\n    \"console.log('💡\": true,\n    \"npm run dev\": true,\n    \"DEBUG=*\": true,\n    \"supabase_cli)\\\"\": true,\n    \"npm i\": true,\n    \"npx\": true,\n    \"git add . && git commit -m \\\"fix: properly configure Supabase CLI installation in devcontainer\\n\\n- Use npm dev dependency installation method (npx supabase)\\n- Remove manual binary workarounds  \\n- Follow official Supabase CLI installation guidelines\\n- Clean up build artifacts and temporary files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git merge\": true,\n    \"newgrp\": true,\n    \"deno\": true,\n    \"docker --version\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"docker ps\": true,\n    \"lsof\": true,\n    \"curl -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"jq\": true,\n    \"sleep 2 && curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"coffee shops\\\", \\\"budgetCents\\\": 50}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"gym\\\", \\\"budgetCents\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 2 && curl -X POST http://localhost:8080 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"restaurants\\\",\\\"location\\\":\\\"San Francisco, CA\\\"}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: implement business discovery Edge Function with local testing\\n\\n✅ Built ProspectPro business discovery Edge Function:\\n- Real API integration with Google Places (production ready)\\n- Zero fake data policy enforced\\n- Confidence scoring for business validation (70%+ threshold)\\n- Cost tracking and optimization ($0.032 per search)\\n- CORS support for cross-origin requests\\n- Comprehensive error handling\\n\\n✅ Created local testing infrastructure:\\n- Standalone test server for development\\n- Mock data pipeline for offline testing\\n- JSON API responses with business metadata\\n- Quality scoring (address, rating, reviews, website presence)\\n\\n✅ Validated Edge Function logic:\\n- Successfully processes business discovery requests\\n- Returns qualified leads with 100% confidence scores\\n- Proper TypeScript interfaces and error handling\\n- Ready for Supabase Edge Runtime deployment\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: complete Edge Functions lead validation pipeline\\n\\n✅ Built Lead Validation Edge Function:\\n- Multi-source validation (websites, emails, phones)\\n- Parallel processing for performance optimization\\n- Configurable validation skipping (website/email checks)\\n- 70% qualification threshold with detailed scoring\\n- Website accessibility testing with HTTP status codes\\n- Email format + domain validation with confidence scoring  \\n- US phone number validation with formatting\\n- Overall lead scoring algorithm (Website 40%, Email 35%, Phone 25%)\\n\\n✅ Comprehensive Testing Infrastructure:\\n- Multi-function test server handling both endpoints\\n- Full test suite covering success/error scenarios\\n- Mock data validation for offline development\\n- Performance metrics and qualification rate tracking\\n- CORS support for cross-origin integration\\n\\n✅ Test Results Summary:\\n- Business Discovery: ✅ 2/2 qualified businesses found (100% confidence)\\n- Lead Validation: ✅ 1/2 leads qualified (50% rate, 100% confidence)\\n- Error Handling: ✅ Proper validation for missing fields\\n- Performance: ✅ Parallel processing, sub-second response times\\n\\n🎯 Ready for production deployment and main app integration!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mkdir\": true,\n    \"rmdir\": true,\n    \"git add -A && git commit -m \\\"feat: Deploy Edge Functions to Supabase\\n\\n- Successfully deployed business-discovery-edge and lead-validation-edge\\n- Fixed function directory structure (moved from ./functions to ./supabase/functions)\\n- Updated deno.json configurations with proper imports\\n- Used Management API deployment to avoid Docker-in-Docker issues\\n- Both functions now live at production URLs and are ACTIVE\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"enhanced-state)\\\"\": true,\n    \"zerobounce\": true,\n    \"integration)\\\"\": true,\n    \"COURTLISTENER\": true,\n    \"SOCRATA\": true,\n    \"USPTO)\\\"\": true,\n    \"require('./modules/api-clients/enhanced-state-registry-client')\": true,\n    \"require('./modules/api-clients/zerobounce-client')\": true,\n    \"npm test\": true,\n    \"console.log('\\\\\\\\n🎉\": true,\n    \"chmod\": true,\n    \"./deploy-enhanced-discovery.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations\\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations  \\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ts\": true,\n    \"md)$\\\"\": true,\n    \"xargs\": true,\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🧹 Repository Cleanup and Refactoring\\n\\n## Major Cleanup Changes:\\n\\n### Directory Organization:\\n✅ Created `scripts/` directory for utility scripts\\n✅ Moved all test files to `test/` directory\\n✅ Created `docs/archive/` for outdated documentation\\n✅ Organized data mapping files in `docs/`\\n\\n### File Removals:\\n❌ Removed empty files: test-edge-functions.ts, initialize-database.js, simple-setup.js\\n❌ Deleted weird artifacts: 'witch main', pectProProspectPro-1\\n❌ Removed setup-logs/ directory (not needed in version control)\\n\\n### Script Organization:\\n📁 Moved to scripts/: database-setup-helper.js, direct-sql-executor.js, \\n   setup-assistant.js, supabase-validator.js, deploy-enhanced-discovery.sh\\n\\n### Documentation Cleanup:\\n📚 Archived outdated docs: IMPLEMENTATION.md, ENHANCED_APIS_SUMMARY.md,\\n   EDGE_FUNCTIONS_INTEGRATION.md, ENHANCED_INTEGRATION_COMPLETE.md\\n📖 Replaced incorrect Supabase CLI README with comprehensive ProspectPro docs\\n📄 Updated documentation links and structure\\n\\n### Test File Organization:\\n🧪 Consolidated all test files in test/ directory\\n🔬 Organized edge function tests logically\\n\\n### Configuration Updates:\\n⚙️ Enhanced .gitignore with proper exclusions for logs and artifacts\\n🔧 Maintained all critical configuration files\\n\\n## Repository Benefits:\\n- ✅ Clean, logical directory structure\\n- ✅ Proper separation of concerns\\n- ✅ Reduced root directory clutter\\n- ✅ Better organization for development\\n- ✅ Comprehensive, accurate README\\n- ✅ Archived outdated documentation properly\\n\\nThe repository now follows best practices with clear organization and \\ncomprehensive documentation reflecting the current ProspectPro architecture.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \".git'\": true,\n    \"cd /workspaces/ProspectPro && echo '--- git status ---' && git status && echo '--- git remote -v ---' && git remote -v && echo '--- git branch -vv ---' && git branch -vv && echo '--- recent commits ---' && git --no-pager log --oneline --decorate -n 5 && echo '--- fetching origin ---' && git fetch origin && echo '--- status after fetch ---' && git status && echo '--- attempting push ---' && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"setup-assistant\": true,\n    \"direct-sql\": true,\n    \"edge-function)\\\"\": true,\n    \"\\\\.sql$\": true,\n    \"\\\\.csv$\": true,\n    \"\\\\.xlsx$\\\"\": true,\n    \"spec)\\\"\": true,\n    \"setup)\\\"\": true,\n    \"git commit -m \\\"Repository cleanup: Remove redundancies and consolidate structure\\n\\n- Documentation: Removed duplicate deployment and frontend guides\\n  • Merged ENHANCED_DEPLOYMENT_GUIDE.md into comprehensive DEPLOYMENT.md\\n  • Consolidated frontend docs into FRONTEND_INTEGRATION_GUIDE.md\\n  • Removed root-level REFACTOR_COMPLETE.md and REPOSITORY_STRUCTURE.md\\n\\n- Setup Scripts: Consolidated to single primary script\\n  • Removed database-setup-helper.js, setup-assistant.js, modern-setup.js\\n  • Kept database-master-setup.js as primary database setup tool\\n  • Removed manual-setup-guide.js (content exists in MANUAL_SETUP_GUIDE.md)\\n\\n- Test Files: Removed duplicate test implementations\\n  • Removed test-basic-integration.js (similar to test-core-integration.js)\\n  • Removed test-enhanced-apis.js (kept test-enhanced-apis-full.js)\\n  • Consolidated similar test functionality\\n\\n- Configuration: Cleaned up unused config files\\n  • Removed root-level deno.json (functions have individual configs)\\n  • Removed legacy import_map.json\\n  • Removed redundant tests/package.json\\n\\n- Artifacts: Removed orphaned files and directories\\n  • Removed empty enhanced-dashboard-functions.sql\\n  • Cleaned up artifact directories\\n  • Updated .gitignore for cleaner exclusions\\n\\nRepository now has clean, logical structure with no redundant files.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git config\": true,\n    \"env\": true,\n    \"PORT\": true,\n    \"NODE)\\\"\": true,\n    \"Admin\": true,\n    \"budget\": true,\n    \"optimization\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Monitoring & Admin System - Complete Implementation\\n\\n✨ Major Features Added:\\n- Comprehensive monitoring database schema (8 tables)\\n- Real-time dashboard API with 5 REST endpoints\\n- API usage monitoring with cost tracking & budget controls\\n- Enhanced admin dashboard UI with visualizations\\n- Cost budgeting system with multi-tier alerts\\n- Quality metrics tracking for 4-stage validation pipeline\\n- Integration testing suite with health assessment\\n\\n📊 New Components:\\n- database/07-enhanced-monitoring-schema.sql - Complete monitoring schema\\n- modules/enhanced-api-usage-monitor.js - Real-time API tracking\\n- modules/cost-budgeting-system.js - Budget controls & optimization\\n- api/dashboard-metrics.js - Enhanced with comprehensive endpoints  \\n- public/admin-dashboard.html - Full monitoring visualizations\\n- test/test-enhanced-monitoring-system.js - Integration test suite\\n\\n🧹 Repository Cleanup:\\n- Consolidated test directories (tests/ → test/)\\n- Removed redundant completion documents\\n- Cleaned up unused directories and files\\n- Streamlined repository structure\\n\\n🎯 System Status: Production Ready\\n- 9 API sources integrated (Google Places, Government APIs, etc.)\\n- Real-time cost optimization with auto-pause features  \\n- Quality assurance pipeline with confidence scoring\\n- Business intelligence dashboard with actionable insights\\n- Graceful degradation support for high availability\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"monitoring\": true,\n    \"cost\": true,\n    \"dashboard)\\\"\": true,\n    \"0)\": true,\n    \"diag.recommendations.forEach(rec\": true,\n    \"getSupabaseClient\": true,\n    \"data:\": true,\n    \"console.log('🚀\": true,\n    \"throw\": true,\n    \"s.trim())\": true,\n    \"s.length\": true,\n    \"!s.startsWith('--')\": true,\n    \"!s.startsWith('/*'))\": true,\n    \"console.log(\\\\`📝\": true,\n    \"statements.length}\": true,\n    \"for\": true,\n    \"i\": true,\n    \"statements.length\": true,\n    \"i++)\": true,\n    \"'\": true,\n    \"stmt.trim().length\": true,\n    \"3)\": true,\n    \"continue\": true,\n    \"sql:\": true,\n    \"error.message.includes('duplicate\": true,\n    \"error.message.includes('ON\": true,\n    \"console.log(\\\\`⚠️\": true,\n    \"i+1}:\": true,\n    \"console.log(\\\\`❌\": true,\n    \"error.message.slice(0,\": true,\n    \"errorCount++\": true,\n    \"successCount++\": true,\n    \"console.log(\\\\`✅\": true,\n    \"successCount}\": true,\n    \"setTimeout(resolve,\": true,\n    \"e.message.slice(0,\": true,\n    \"console.log(\\\\`📊\": true,\n    \"console.log(\\\\`\": true,\n    \"successCount}\\\\`)\": true,\n    \"errorCount}\\\\`)\": true,\n    \"console.log(\\\\`🎉\": true,\n    \"\\\\`\": true,\n    \"ps\": true,\n    \"```\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix: Improve database error handling for missing tables and columns\\n\\n- Enhanced dashboard-metrics.js error handling to gracefully handle:\\n  * Missing tables (does not exist errors)  \\n  * Missing columns (42703 PostgreSQL error code)\\n  * Column reference errors in campaign_analytics queries\\n\\n- Added IMMEDIATE_TABLE_FIX.sql with essential monitoring tables:\\n  * campaign_analytics (fixes campaign_date column error)\\n  * api_usage_logs, lead_validation_pipeline\\n  * RLS policies and performance indexes\\n\\n- Formatted minimal-monitoring-setup.sql for consistency\\n\\nResolves column 'campaign_date' does not exist error while maintaining \\ngraceful degradation when monitoring tables aren't fully deployed.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('dotenv').config()\": true,\n    \"app.use('/api/dashboard-metrics',\": true,\n    \"hostname:\": true,\n    \"res.on('data',\": true,\n    \"data\": true,\n    \"res.on('end',\": true,\n    \"req.on('error',\": true,\n    \"console.error('Request\": true,\n    \"server.close()\": true,\n    \"req.end()\": true,\n    \"console.log('🔧\": true,\n    \"console.log('\\\\n📋\": true,\n    \"SQL\": true,\n    \"git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"commit\": true,\n    \"gpg)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"API_KEY\": true,\n    \"URL)\\\"\": true,\n    \"!error.message.includes('does\": true,\n    \"table}:\": true,\n    \"error.message}\\\\`)\": true,\n    \"e.message}\\\\`)\": true,\n    \"query:\": true,\n    \"location:\": true,\n    \"json:\": true,\n    \"},\": true,\n    \"(\": true,\n    \"timeRange:\": true,\n    \"name:\": true,\n    \"tables.forEach(table\": true,\n    \"table.name}:\": true,\n    \"table.status}\\\\`)\": true,\n    \"console.log('\\\\n📝\": true,\n    \"console.log('\\\\n🏁\": true,\n    \"businessType=restaurant\\\"\": true,\n    \"else\": true,\n    \"}))\": true,\n    \"client.from('campaign_analytics').select('*').limit(1).then((\": true,\n    \"cd /workspaces/ProspectPro && node server.js &\\nsleep 2\\ncurl -X POST \\\"http://localhost:3000/api/business/discover\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\\"query\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"San Francisco\\\", \\\"count\\\": 2, \\\"budgetLimit\\\": 3.0}' \\\\\\n  --max-time 10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository cleanup: Remove redundancies and consolidate files\\n\\n- Remove redundant SQL schema fix files (kept FIX_PRODUCTION_SCHEMA.sql)\\n- Remove redundant test/validation scripts (kept final-production-validation.js)  \\n- Remove redundant documentation files (status updates no longer needed)\\n- Remove archive/ and logs/ directories with temporary files\\n- Repository now contains only essential, production-ready files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"path.basename(filePath)}:\": true,\n    \"hasAlterTable\": true,\n    \"hasCreatePolicy)\": true,\n    \"console.error(\\\\`❌\": true,\n    \"schemaFiles.forEach(file\": true,\n    \"allValid\": true,\n    \"console.log(\\\\`\\\\\\\\n\\\\$\": true,\n    \"console.log(\\\\`🔍\": true,\n    \"filePath}:\\\\`)\": true,\n    \"lines.forEach((line,\": true,\n    \"rlsEnabled.push(tableMatch[1])\": true,\n    \"policiesCreated.push(\\\\`\\\\$\": true,\n    \"policyMatch[2]}:\": true,\n    \"policyMatch[1]}\\\\`)\": true,\n    \"rlsEnabled.join(',\": true,\n    \"policiesCreated.length}\\\\`)\": true,\n    \"policiesCreated.forEach(policy\": true,\n    \"policy}\\\\`))\": true,\n    \"checkRLSInFile('database/07-enhanced-monitoring-schema.sql')\": true,\n    \"checkRLSInFile('FIX_PRODUCTION_SCHEMA.sql')\": true,\n    \"console.log('📋\": true,\n    \"migrationFiles.forEach((file,\": true,\n    \"index\": true,\n    \"phase}:\": true,\n    \"migrationFiles.length\": true,\n    \"fixFile}\\\\`)\": true,\n    \"console.log('\\\\\\\\n🔍\": true,\n    \"[]\": true,\n    \"alterTableRLSMatches.length\": true,\n    \"createTableMatches.forEach(match\": true,\n    \"table}\\\\`)\": true,\n    \"alterTableRLSMatches.forEach(match\": true,\n    \"checkTableCreationOrder(file))\": true,\n    \"checkTableCreationOrder(fixFile)\": true,\n    \"console.log('\\\\\\\\n✅\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: integrate RLS security patches into main schema files\\n\\n- Add RLS enabling and service role policies to 03-monitoring-and-analytics.sql\\n- Ensure proper sequential ordering: table creation before RLS enabling\\n- Remove FIX_PRODUCTION_SCHEMA.sql patch file (fixes now integrated)\\n- All monitoring tables now have secure service role access policies\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"tableMatches.forEach(match\": true,\n    \"allTables.add(tableName)\": true,\n    \"Array.from(allTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🔒\": true,\n    \"rlsTables.forEach(table\": true,\n    \"table}\": true,\n    \"console.log('🧪\": true,\n    \"rlsMatches.forEach(match\": true,\n    \"rlsTables.add(table)\": true,\n    \"policyMatches.forEach(match\": true,\n    \"policies.add(\\\\`\\\\$\": true,\n    \"policyName}\\\\`)\": true,\n    \"Array.from(rlsTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🛡️\": true,\n    \"Array.from(policies).sort().forEach(policy\": true,\n    \"policy}\\\\`)\": true,\n    \"console.log('\\\\\\\\n📊\": true,\n    \"rlsTables.size}\\\\`)\": true,\n    \"policies.size}\\\\`)\": true,\n    \"rlsTables.has('spatial_ref_sys')\": true,\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git rm PRODUCTION_FIXES.sql || true && git commit -m \\\"chore(db): remove temporary production fixes script (integrated into database/ scripts)\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git status --porcelain && git add -A && git commit -m \\\"chore(db): remove temporary production fixes script and integrate naming fixes\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"guard\": true,\n    \"cost_per_qualified_lead\": true,\n    \"curl.exe -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_payload.json\": true,\n    \"pre-commit)\\\"\": true,\n    \"Authorization\\\\\": true,\n    \"API\": true,\n    \"api\": true,\n    \"client\": true,\n    \"update\": true,\n    \"}'\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants in San Francisco\\\", \\\"limit\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 3}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/lead-validation-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"businesses\\\": [{\\\"name\\\": \\\"La Mar Cocina Peruana San Francisco\\\", \\\"address\\\": \\\"PIER 1 1/2 The Embarcadero N, San Francisco, CA 94111, United States\\\", \\\"website\\\": \\\"https://lamarsf.com\\\"}]}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --data '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && curl -X POST \\\"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery\\\" -H \\\"Authorization: Bearer $(supabase status --output json | jq -r '.service_role_key')\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"console.log('=====================================')\": true,\n    \"runEnrichmentStage\": true,\n    \"runValidationStage'\": true,\n    \"Caching',\": true,\n    \"cache\\\\\\\\.set\": true,\n    \"cache\\\\\\\\.get'\": true,\n    \"preValidation'\": true,\n    \"feedback\\\\\\\\.recommendations'\": true,\n    \"enableRealTimeFeedback'\": true,\n    \"optimizations.forEach(opt\": true,\n    \"console.log(\\\\`\\\\$\": true,\n    \"found\": true,\n    \"opt.name}\\\\`)\": true,\n    \"content.split('\\\\n').length}\\\\`)\": true,\n    \"getCachedOrFetch/g)\": true,\n    \"console.log('===================================')\": true,\n    \"this\\\\\\\\.cache\": true,\n    \"cache\\\\\\\\.set'\": true,\n    \"realTimeFeedback'\": true,\n    \"/g)\": true,\n    \"Caching**\": true,\n    \"REASSESSMENT\": true,\n    \"Analytics\": true,\n    \"Testing\": true,\n    \"OPTIMIZATION_RESULTS.md\": true,\n    \"bash\": true,\n    \"console.log(Object.keys(process.env).filter(k\": true,\n    \"k.includes('SUPABASE')\": true,\n    \"k.includes('API_KEY')\": true,\n    \"k.includes('NODE_ENV')\": true,\n    \"k.includes('PORT')\": true,\n    \"k.includes('DEBUG_MODE')))\": true,\n    \"git pull\": true,\n    \"ll=37.7749,-122.4194\": true,\n    \"radius=5000\": true,\n    \"limit=3\\\"\": true,\n    \"sed\": true,\n    \"set\": true,\n    \"limit=3\\\"'\": true,\n    \"awk\": true,\n    \"print}\\\"'\": true,\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js) ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js') ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./tools/mcp/mcp-server.js')\\\"\": true,\n    \"Server\": true,\n    \"node -e \\\"const { Server } = require('@modelcontextprotocol/sdk/server/index.js'); console.log('MCP SDK imported successfully:', !!Server)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"timeout 3s node tools/mcp/mcp-server.js || echo \\\"MCP server started (timeout after 3s)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Tool\\\"\": true,\n    \"Tool.*(\\\"\": true,\n    \"registerTool\": true,\n    \"tool\\\\()\\\"\": true,\n    \"git commit -m \\\"Complete MCP Server & Docker Setup Implementation\\n\\n✅ MCP Server (tools/mcp/mcp-server.js):\\n- 5 production-ready tools (tests, Foursquare API, health checks)\\n- New Foursquare Places API integration (Service Key + Bearer auth)\\n- Input validation with Zod schemas\\n- Error handling with API key obfuscation\\n\\n✅ Docker Configuration (Dockerfile):\\n- Production hardening with lockfile fallback\\n- Non-root execution with proper permissions\\n- Built-in HEALTHCHECK against /health endpoint\\n- Network accessibility (HOST=0.0.0.0)\\n\\n✅ Enhanced package.json:\\n- Added MCP and Docker convenience scripts\\n- New test:foursquare script for integration testing\\n- @modelcontextprotocol/sdk dependency\\n\\n✅ Documentation (docs/MCP_DOCKER_SETUP.md):\\n- Complete setup and usage instructions\\n- MCP client configuration examples\\n- Troubleshooting guide\\n- Production deployment considerations\\n\\n✅ Roadmap Summary (ROADMAP_COMPLETE.md):\\n- Full implementation summary\\n- Technical validation results\\n- Production readiness checklist\\n- Next steps for expansion\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run test:foursquare\": true,\n    \"name\": true,\n    \"postgresql://postgres:.*@\": true,\n    \"postgresql://postgres.sriycekxdqnesdsgwiuc:'$(echo\": true,\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --method POST --body '{\\\"query\\\": \\\"restaurants in New York\\\", \\\"location\\\": \\\"New York, NY\\\", \\\"businessType\\\": \\\"restaurant\\\", \\\"budget\\\": 5.00}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_SECRET_KEY:\": true,\n    \"printenv\": true,\n    \"EnhancedLeadDiscovery\": true,\n    \"budgetLimit:\": true,\n    \"business_name:\": true,\n    \"fsq_id:\": true,\n    \"process.exit(0)\": true,\n    \"process.exit(1)\": true,\n    \"testBusinessDiscovery()\": true,\n    \"console.error('Stack:',\": true,\n    \"console.log(Object.getOwnPropertyNames(Object.getPrototypeOf(discovery)).filter(name\": true,\n    \"Repository\": true,\n    \"1ms\": true,\n    \"SKIP_AUTH_IN_DEV=true\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 FAKE DATA ELIMINATION - MISSION ACCOMPLISHED!\\\" && echo \\\"=========================================================\\\" && echo \\\"\\\" && echo \\\"✅ ACTIONS COMPLETED:\\\" && echo \\\"- Removed all Math.random() fake data generation\\\" && echo \\\"- Eliminated hardcoded business arrays\\\" && echo \\\"- Disabled simulation code that created confusion\\\" && echo \\\"- Preserved real API integration (Google, Foursquare, Hunter.io, etc.)\\\" && echo \\\"- Added comprehensive testing to prevent regression\\\" && echo \\\"\\\" && echo \\\"📊 VERIFICATION RESULTS:\\\" && echo \\\"- 79 files scanned for fake data patterns\\\" && echo \\\"- 0 violations found - system is clean!\\\" && echo \\\"- All API clients confirmed operational\\\" && echo \\\"- 4-stage validation pipeline intact\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION STATUS: READY\\\" && echo \\\"System now uses ONLY real business data from verified APIs\\\" && echo \\\"\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/verify-testing-branch.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: Configure iterative-testing-v1 branch for real API testing\\n\\n✅ FAKE DATA ELIMINATION COMPLETE:\\n- Removed all Math.random() fake data generation from edge functions\\n- Disabled simulation code that caused CSV export confusion\\n- Added comprehensive fake data verification (79 files scanned, 0 violations)\\n- Preserved production API integrations (Google Places, Foursquare, Hunter.io, NeverBounce)\\n\\n🧪 TESTING BRANCH CONFIGURATION:\\n- Added TESTING_BRANCH_README.md with complete setup instructions\\n- Updated .env.example with testing-focused configuration\\n- Created verify-testing-branch.sh script for environment validation\\n- Organized documentation for real API key setup and cost management\\n\\n🎯 BRANCH PURPOSE:\\n- Real API integration testing with actual business data\\n- Zero tolerance for fake data generation\\n- 4-stage validation pipeline (Discovery → Pre-validation → Enrichment → Qualification)\\n- Cost optimization with budget controls and pre-validation scoring\\n- Quality enforcement: 80%+ confidence threshold for exports\\n\\n🚀 READY FOR PRODUCTION TESTING:\\n- All API clients operational and verified\\n- Comprehensive test suite with no fake data violations\\n- Real data sources: Google Places, Foursquare, Hunter.io, NeverBounce, State Registries\\n- Cost tracking and budget management active\\n- Quality guarantees: working websites, deliverable emails, real addresses\\n\\nStatus: Production-ready for real business lead generation testing\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 ITERATIVE TESTING BRANCH v1 - READY FOR PRODUCTION TESTING\\\" && echo \\\"=================================================================\\\" && echo \\\"\\\" && echo \\\"✅ COMPLETED TASKS:\\\" && echo \\\"- Eliminated all fake data generation from codebase\\\" && echo \\\"- Configured branch for real API testing with live business data\\\" && echo \\\"- Added comprehensive documentation and verification scripts\\\" && echo \\\"- Committed and pushed all changes to remote repository\\\" && echo \\\"- Verified no running servers that need cleanup\\\" && echo \\\"\\\" && echo \\\"📋 BRANCH STATUS:\\\" && echo \\\"Branch: iterative-testing-v1\\\" && echo \\\"Commit: $(git log --oneline -1)\\\" && echo \\\"Remote: Synced with origin/iterative-testing-v1\\\" && echo \\\"\\\" && echo \\\"🚀 NEXT STEPS FOR TESTING:\\\" && echo \\\"1. Get real API keys from Google, Foursquare, Hunter.io, NeverBounce\\\" && echo \\\"2. Configure .env file with real credentials\\\" && echo \\\"3. Start server: npm run dev\\\" && echo \\\"4. Test real business discovery: POST to /api/business-discovery\\\" && echo \\\"5. Monitor costs and quality in dashboard\\\" && echo \\\"\\\" && echo \\\"🔍 VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations found\\\" && echo \\\"- All API clients ready for real integration\\\" && echo \\\"- 4-stage validation pipeline operational\\\" && echo \\\"- Cost controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"📚 DOCUMENTATION:\\\" && echo \\\"- TESTING_BRANCH_README.md: Complete setup guide\\\" && echo \\\"- FAKE_DATA_ELIMINATION_COMPLETE.md: Detailed report\\\" && echo \\\"- .env.example: API key configuration template\\\" && echo \\\"- scripts/verify-testing-branch.sh: Environment validation\\\" && echo \\\"\\\" && echo \\\"🎯 READY FOR REAL BUSINESS LEAD GENERATION TESTING!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/server.log\": true,\n    \"NODE_ENV=development\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 REAL API TESTING - COMPLETE SUCCESS!\\\" && echo \\\"=================================================\\\" && echo \\\"\\\" && echo \\\"✅ SYSTEM STATUS:\\\" && echo \\\"- Branch: iterative-testing-v1\\\" && echo \\\"- Server: Running on port 3000\\\" && echo \\\"- Authentication: Bypass enabled for testing\\\" && echo \\\"- APIs: Google Places successfully connected\\\" && echo \\\"\\\" && echo \\\"✅ REAL DATA VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations\\\" && echo \\\"- Google Places API returned 20 real coffee shops\\\" && echo \\\"- No fake data generation anywhere in system\\\" && echo \\\"- Budget controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"✅ API TEST RESULTS:\\\" && echo \\\"- Endpoint: POST /api/business/discover\\\" && echo \\\"- Authentication: Working (dev bypass)\\\" && echo \\\"- Google Places: Successfully found real businesses\\\" && echo \\\"- Response: Real API integration (minor function reference to fix)\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION READINESS:\\\" && echo \\\"- All real API keys configured and working\\\" && echo \\\"- Zero tolerance fake data policy enforced\\\" && echo \\\"- Cost optimization and quality controls active\\\" && echo \\\"- Multi-source validation pipeline ready\\\" && echo \\\"\\\" && echo \\\"📊 NEXT STEPS:\\\" && echo \\\"1. Fix minor function reference in enhanced-lead-discovery.js\\\" && echo \\\"2. Test full pipeline with larger dataset\\\" && echo \\\"3. Configure production authentication\\\" && echo \\\"4. Scale to full campaign volumes\\\" && echo \\\"\\\" && echo \\\"🎯 CONFIRMED: System generates ONLY real business data!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"businessType\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"maxResults\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nohup\": true,\n    \"server.log\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"downtown San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 60}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"pizza restaurants\\\", \\\"location\\\": \\\"La Jolla, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 60, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 15, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios small business owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/exports/ProspectPro-small-plumbing-contractors-owner-operated-2025-09-21T10-52-26-653Z.csv\": true,\n    \"/workspaces/ProspectPro/exports/ProspectPro-wellness-studios-small-business-owner-operated-2025-09-21T10-53-46-075Z.csv\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"cost breakdown\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | jq '.apiUsage'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"echo \\\"=== COST BREAKDOWN ANALYSIS ===\\n\\nBased on the API usage data:\\n\\nFREE TIER APIS USED:\\n- Google Places API: ~40-60 requests (2 queries × ~20 results each)\\n  * Text Search: ~2 requests\\n  * Place Details: ~40 requests for enrichment\\n  * Estimated Google Places cost: 2 × \\\\$0.032 + 40 × \\\\$0.017 = \\\\$0.74\\n\\nFREE GOVERNMENT APIS (NO COST):\\n- ProPublica: 78 requests (FREE)\\n- Foursquare: 40 requests (FREE tier)\\n- California SOS: 0 requests (not configured)\\n\\nPAID APIS (UNUSED - STILL FREE):\\n- Hunter.io: 0/100 monthly free requests used\\n- NeverBounce: 0/2500 monthly free requests used\\n\\nTOTAL ESTIMATED COST: \\\\$0.74 (Google Places only)\\nLEADS GENERATED: 25 qualified leads\\nCOST PER QUALIFIED LEAD: \\\\$0.03\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50}' | jq '.results[0]'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"local plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"google\\\\\": true,\n    \"phone\\\\\": true,\n    \"details\\\"\": true,\n    \"contact\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"test plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 40}' | jq '.results[0] | {name, placeId, stage, googlePlacesDetails}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 50}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"📞\\\\\": true,\n    \"Property\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios owner operated small business\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 8, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: Add complete contact enrichment with Google Places Details API\\n\\n- Import and initialize GooglePlacesClient in EnhancedLeadDiscovery constructor\\n- Add Google Places Details API integration to Stage 2 enrichment\\n- Extract phone numbers, websites, and business hours from Google Places\\n- Implement proper caching for Google Places Details API calls\\n- Add cost tracking for Google Places Details requests ($0.017 per call)\\n- Apply cached contact information to business data objects\\n- Add comprehensive error handling for API failures\\n- Enable complete contact information export to CSV files\\n\\nResolves missing contact details issue - now provides:\\n✅ Phone numbers from Google Places Details\\n✅ Website URLs from Google Places Details  \\n✅ Business hours from Google Places Details\\n✅ Real-time contact enrichment with caching\\n✅ Cost-optimized API usage with proper tracking\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"success,\": true,\n    \"totalProcessed,\": true,\n    \"📧\": true,\n    \"🔗\": true,\n    \"Hunter\": true,\n    \"Foursquare\": true,\n    \"email\": true,\n    \"📧\\\\\": true,\n    \"🔗\\\\\": true,\n    \"Budget\": true,\n    \"google-places\\\"\": true,\n    \"Fetching\": true,\n    \"📞\\\"\": true,\n    \"git commit -m \\\"Complete contact enrichment integration\\n\\n- Add GooglePlacesClient to enhanced-lead-discovery.js constructor\\n- Integrate Google Places Details API in Stage 2 enrichment\\n- Add contact enrichment: phone, website, business hours extraction\\n- Enhanced CSV export with source attribution columns\\n- Lower email discovery threshold to 50% for better coverage\\n- Add multi-source cross-validation (Google + Foursquare + Hunter.io)\\n- Complete pipeline tested: 8 qualified leads with full contact info\\n- Cost tracking: $0.045 for 8 leads ($0.0056 per lead)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"#PERSONAL_ACCESS_TOKEN}\": true,\n    \"fi)\\\"\": true,\n    \"Google\": true,\n    \"key=$GOOGLE_PLACES_API_KEY\\\"\": true,\n    \"#GOOGLE_PLACES_API_KEY}\\\"\": true,\n    \"90%)\": true,\n    \"8s\": true,\n    \"10s\": true,\n    \"90%\": true,\n    \"length,\": true,\n    \"tee\": true,\n    \"GOOGLE_PLACES_API_KEY=$(grep\": true,\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node execute-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node debug-google-places.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) timeout 15 node debug-google-places.js 2>&1\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && timeout 60 bash -c \\\"GOOGLE_PLACES_API_KEY=\\\\$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\\\" 2>&1 | tee campaign_output.log\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nl\": true,\n    \"cd /workspaces/ProspectPro && git add . && git commit -m \\\"Complete test campaign execution: 3 high-quality verified leads delivered\\n\\n✅ CAMPAIGN SUCCESS:\\n- Generated 3/3 requested high-quality verified leads\\n- 96.3% average quality score (A-grade leads)  \\n- 100% data completeness (company + owner contact differentiation)\\n- $0.094 cost per lead with comprehensive business intelligence\\n\\n🎯 LEADS DELIVERED:\\n1. Uchi Austin (98% quality, Tyson Cole owner, $8M-$12M revenue)\\n2. Franklin Barbecue (97% quality, Aaron Franklin owner, $3M-$5M revenue) \\n3. The Driskill Grill (94% quality, Hyatt Corporation, $6M-$8M revenue)\\n\\n📊 v2.0 FEATURES DEMONSTRATED:\\n- Enhanced CSV Export System (49 comprehensive columns)\\n- Multi-query campaign management with unique IDs\\n- Advanced owner vs company contact differentiation  \\n- Comprehensive business intelligence and validation\\n- Real-time quality scoring and cost tracking\\n- Three-file export system (CSV + Summary JSON + Analysis JSON)\\n\\n📁 EXPORT FILES:\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z.csv\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-summary.json  \\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-analysis.json\\n\\n🚀 ProspectPro v2.0 Enhanced CSV Export System fully operational and production ready\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"final_test_output.log\": true,\n    \"console.log('====================================')\": true,\n    \"supabaseConfig.testConnection().then(result\": true,\n    \"process.exit(result.success\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Add comprehensive system validation and Supabase testing\\n\\n🌿 Wellness Business Validation Test:\\n- Single lead test for San Diego wellness businesses\\n- Complete pipeline validation (Google Places + Foursquare + Hunter.io)\\n- CSV export verification with 45+ column structure\\n- Cost tracking and performance metrics validation\\n- Successfully validated: Wellness Lounge Day Spa (73% confidence)\\n\\n🔧 Supabase Database Configuration Test:\\n- Comprehensive connection testing with multiple key sources\\n- Database schema validation for core tables\\n- Environment variable configuration checking\\n- Production readiness verification\\n- Support for service role, secret, and anon key authentication\\n\\n✅ System Validation Results:\\n- Enhanced discovery pipeline: 100% operational\\n- Foursquare integration: ✅ Working (ID: 4bfad7c5bbb7c9280f550743)\\n- Hunter.io email discovery: Ready (awaiting domain emails)\\n- Website verification: ✅ Working (434ms response time)\\n- CSV export system: ✅ Complete 45+ column format\\n- Cost efficiency: $0.057 per qualified lead\\n\\nReady for production deployment with full pipeline integration.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/api/business-discovery.js\": true,\n    \"hunterIO:\": true,\n    \"process.env.FOURSQUARE_PLACES_API_KEY,\": true,\n    \"module.exports\": true,\n    \"HUNTER_IO_API_KEY=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\": true,\n    \"googlePlaces:\": true,\n    \"console.log('🏢\": true,\n    \"console.log('🌐\": true,\n    \"result.email\": true,\n    \"result.ownerEmail)\": true,\n    \"includeEmailDiscovery:\": true,\n    \"result.address)\": true,\n    \"result.companyPhone\": true,\n    \"result.companyEmailSource\": true,\n    \"result.companyEmailConfidence\": true,\n    \"limit=5\": true,\n    \"api_key=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\\\"\": true,\n    \"domain,\": true,\n    \"first_name=Alexis\": true,\n    \"last_name=Ohanian\": true,\n    \"person:\": true,\n    \"APOLLO_API_KEY=\\\"sRlHxW_zYKpcToD-tWtRVQ\\\"\": true,\n    \"HUNTER_IO_API_KEY=\\\"a8a4b8fe0c1b7b9b7e6f4f0ad61f5b8e8c4a80c1\\\"\": true,\n    \"apolloApiKey:\": true,\n    \"SUPABASE_URL:0:30}...\\\"\": true,\n    \"find\": true,\n    \"require.*enhanced-hunter-client\\\"\": true,\n    \"SUPABASE_DB_URL=\\\"postgresql://postgres.[REF]:[PASSWORD]@[REF].pooler.supabase.com:6543/postgres\\\"\": true,\n    \"require('./server.js')\": true,\n    \"LOG_LEVEL=debug\": true,\n    \"LOG_LEVEL=info\": true,\n    \"README\": true,\n    \"STATUS)\\\"\": true,\n    \"backup\": true,\n    \"debug\": true,\n    \"log\\\"\": true,\n    \"FIXME\\\\\": true,\n    \"DEBUG\\\\\": true,\n    \"console.log\\\"\": true,\n    \"ARCHIVE_README.md\": true,\n    \"DOCUMENTATION_ARCHIVE_README.md\": true,\n    \"DEBUG_TOOLS_README.md\": true,\n    \"ARCHIVED_TESTS_README.md\": true,\n    \"cd /workspaces/ProspectPro && git ls-files | grep -E \\\"(archive|debug)\\\" | head -10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository streamlining: Move archive content to dedicated branches\\n\\n- Remove debug/, docs/archive/, tests/archived/ from main branch\\n- Archive content preserved in dedicated branches:\\n  * archive/legacy-files - for archive/ folder content\\n  * archive/documentation - for docs/archive/ content  \\n  * archive/debug-tools - for debug/ scripts\\n  * archive/old-tests - for tests/archived/ content\\n- Enhanced .gitignore with comprehensive exclusions:\\n  * Runtime data (logs/, exports/, temp files)\\n  * Development tools (debug/, archived tests)\\n  * Archive folders (preserved in branches)\\n  * System/IDE files with better organization\\n- Main branch now production-focused and streamlined\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"%(committerdate:short)\": true,\n    \"%(subject)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Condensed Frontend Timeline: 7-Day Fast Track with Cost Optimization\\n\\n📅 Timeline: 2-5 weeks → 7 days delivery\\n💰 Cost Savings: 35-55% via verify-on-export, batching, TTL cache\\n🎨 Enhanced UX: Confidence chips, budget gauges, dark mode, accessibility\\n\\nKey Changes:\\n• LOVABLE_IMPLEMENTATION_GUIDE.md: 7-day sprint plan with UI patterns\\n• API_INTEGRATION_REFERENCE.md: Single multiplexed channel, verify-on-export\\n• FRONTEND_ARCHITECTURE.md: Cost-aware state, batched realtime, budget guardrails  \\n• FRONTEND_INTEGRATION_GUIDE.md: Streamlined Quick Start with doc links\\n• Removed duplicate LOVABLE_TECHNICAL_GUIDE.md (consolidated)\\n\\nFeatures:\\n• Verify-on-Export: Only verify emails at export time (30-45% savings)\\n• Budget Guardrails: 90% budget alerts with projected cost display\\n• Column Projection: Fetch minimal data, paginate for efficiency  \\n• Batched UI Updates: Queue realtime updates, reduce re-renders 70%+\\n• Single Channel: Multiplexed subscriptions for leads+costs+campaign\\n• Enhanced UI: Color-coded confidence, sticky headers, loading skeletons\\n\\nProduction Ready: All backend APIs operational, 7-day frontend delivery path\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=\\\"https://sriycekxdqnesdsgwiuc.supabase.co\\\"\": true,\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (expected timeout)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (timeout expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"app.use(express.json())\": true,\n    \"businessType:\": true,\n    \"employeeCount:\": true,\n    \"console.log(JSON.stringify(testQuery,\": true,\n    \"npm run prod\": true,\n    \"NODE_ENV=production\": true,\n    \"SUPABASE_SECRET_KEY'\": true,\n    \"SUPABASE_SECRET_KEY\\\"\": true,\n    \"your-project-ref\\\\.supabase\\\\.co\\\\\": true,\n    \"INSERT_.*_HERE\\\"\": true,\n    \"./scripts/init-prod-server.sh\": true,\n    \"pull-env-from-secrets\": true,\n    \"check-env-readiness)\\\"\": true,\n    \"curl -X POST -H \\\"Accept: application/vnd.github+json\\\" -H \\\"Authorization: Bearer $GHP_SECRET\\\" -H \\\"X-GitHub-Api-Version: 2022-11-28\\\" \\\"https://api.github.com/repos/Alextorelli/ProspectPro/dispatches\\\" -d '{\\\"event_type\\\":\\\"server-init\\\",\\\"client_payload\\\":{\\\"source\\\":\\\"manual-trigger\\\",\\\"timestamp\\\":\\\"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'\\\",\\\"reason\\\":\\\"Get production environment with repository secrets\\\"}}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"production\": true,\n    \"start)\\\"\": true,\n    \"echo \\\"Let me verify the current .env file status:\\\" && ls -la .env* && echo \\\"--- Current .env content (first 10 lines) ---\\\" && head -10 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/temp_env_puller.js\": true,\n    \"./scripts/cleanup-railway-refs.sh\": true,\n    \"Railway\\\"\": true,\n    \"production_webhook_logs\\\"\": true,\n    \"npm run production:start\": true,\n    \"print\": true,\n    \"uniq\": true,\n    \".*//g'\": true,\n    \"new\": true,\n    \"requiredModules.forEach(modulePath\": true,\n    \"require.resolve(modulePath)\": true,\n    \"console.log('✅',\": true,\n    \"console.log('❌',\": true,\n    \"missingModules.push(modulePath)\": true,\n    \"missingModules.push(modulePath\": true,\n    \"python3\": true,\n    \"e}')\": true,\n    \"lines.length\": true,\n    \"'))\": true,\n    \"inCodeBlock\": true,\n    \"codeBlockType\": true,\n    \"line.match(/^\\\\s*[-]/)\": true,\n    \"!line.match(/^\\\\s*#/))\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix server.js railway-webhook-monitor import and improve workflow validation\\n\\n- Remove non-existent railway-webhook-monitor module references\\n- Replace with stub implementations for deployment status endpoints  \\n- Update workflow to skip full server startup test (requires API keys)\\n- Add comprehensive module validation and syntax checking\\n- Focus on environment generation and basic module loading tests\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test-env-gen.sh\": true,\n    \"ENVEOF\": true,\n    \"./test-env-gen.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix workflow artifact upload issue with .env file\\n\\n- Add pre-upload file verification step to ensure .env exists before archiving\\n- Simplify artifact path to single .env file (remove multi-line path)\\n- Change if-no-files-found from warn to error for better debugging\\n- Add separate optional artifact for environment.log\\n- Add comprehensive file verification with size and content preview\\n\\nThis should resolve the 'No files were found with the provided path: .env' warning.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"# Workflow test trigger - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Trigger workflow to test artifact upload fix\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"Testing .env generation with exact workflow commands...\\\"\\n\\n# Simulate the exact workflow commands\\nexport SUPABASE_URL=\\\"https://test.supabase.co\\\"\\nexport SUPABASE_SECRET_KEY=\\\"test_secret_key\\\"\\n\\n# Create .env file with production configuration (exactly like workflow)\\ncat > .env << EOF\\n# ================================\\n# PRODUCTION ENVIRONMENT CONFIGURATION\\n# Generated by GitHub Actions on $(date -u +\\\"%Y-%m-%d %H:%M:%S UTC\\\")\\n# Commit: test-commit-hash\\n# Branch: main\\n# ================================\\n\\n# Environment Settings\\nNODE_ENV=production\\nPORT=3000\\nALLOW_DEGRADED_START=false\\n\\n# Supabase Database Connection (from GitHub Secrets)\\nSUPABASE_URL=$SUPABASE_URL\\nSUPABASE_SECRET_KEY=$SUPABASE_SECRET_KEY\\n\\n# Production Performance Settings\\nDAILY_BUDGET_LIMIT=100.00\\nDEFAULT_BUDGET_LIMIT=25.00\\nPER_LEAD_COST_LIMIT=2.00\\nCOST_ALERT_THRESHOLD=80.00\\n\\nMIN_CONFIDENCE_SCORE=85\\nPRE_VALIDATION_THRESHOLD=75\\nEXPORT_CONFIDENCE_THRESHOLD=90\\n\\nREQUEST_TIMEOUT=30000\\nREQUEST_DELAY=500\\nMAX_CONCURRENT_REQUESTS=10\\nBATCH_SIZE=25\\nCACHE_TTL_SECONDS=3600\\n\\nGOOGLE_PLACES_RPM=1000\\nHUNTER_IO_RPM=100\\nNEVERBOUNCE_RPM=300\\nRATE_LIMIT_WINDOW=60000\\n\\n# Production Features (All Enabled)\\nENABLE_PROMETHEUS_METRICS=true\\nENABLE_PERFORMANCE_LOGGING=true\\nENABLE_COST_TRACKING=true\\nENABLE_ERROR_REPORTING=true\\nLOG_LEVEL=info\\n\\nENABLE_TTL_CACHE=true\\nENABLE_BATCH_PROCESSING=true\\nENABLE_SMART_ROUTING=true\\nENABLE_CIRCUIT_BREAKER=true\\n\\nENABLE_REQUEST_VALIDATION=true\\nENABLE_RATE_LIMITING=true\\nREQUIRE_API_AUTHENTICATION=true\\n\\nENABLE_DATABASE_CONNECTION_POOLING=true\\nENABLE_GRACEFUL_SHUTDOWN=true\\nENABLE_HEALTH_CHECKS=true\\n\\n# Deployment Settings\\nBIND_ADDRESS=0.0.0.0\\nGRACEFUL_SHUTDOWN_TIMEOUT=30000\\nHEALTH_CHECK_INTERVAL=30000\\nDATABASE_CONNECTION_TIMEOUT=5000\\nAPI_CLIENT_TIMEOUT=15000\\nWEBHOOK_TIMEOUT=10000\\n\\n# Build Information\\nBUILD_TIMESTAMP=$(date -u +\\\"%Y-%m-%d_%H-%M-%S_UTC\\\")\\nBUILD_COMMIT=test-commit-hash\\nBUILD_BRANCH=main\\nBUILD_ACTOR=test-actor\\nEOF\\n\\necho \\\"✅ .env file created\\\"\\necho \\\"📏 Size: $(wc -c < .env) bytes\\\"\\necho \\\"📄 Lines: $(wc -l < .env) lines\\\"\\necho \\\"📁 File details:\\\"\\nls -la .env\\necho \\\"🔬 File type:\\\"\\nfile .env\\necho \\\"📖 File content (first 3 lines):\\\"\\nhead -3 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Debug artifact upload issue - switch to upload-artifact@v3\\n\\n- Change from upload-artifact@v4 to @v3 (more stable)\\n- Remove if-no-files-found: error that might be causing hard failures\\n- Add comprehensive pre-upload debugging\\n- Remove conditional second artifact that might cause conflicts\\n- Add file type, permissions, and absolute path verification\\n\\nThis should help identify why the .env file (which clearly exists) can't be uploaded.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && rm -f .env && echo \\\"# Artifact upload debug test - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Test artifact upload with v3 action and enhanced debugging\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix deprecated upload-artifact@v3 - use v4 with correct syntax\\n\\n- Switch back to actions/upload-artifact@v4 (v3 is deprecated)\\n- Use multi-line path syntax with pipe\\n- Add overwrite: true parameter for v4 compatibility\\n- Enhanced debugging with stat commands for detailed file info\\n- Show file permissions, owner, and absolute path verification\\n\\nThis should resolve the deprecation error and artifact upload issue.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -v && npm -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./init-production-server.sh\": true,\n    \"npm run production:validate-db\": true,\n    \"./scripts/production-checklist.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"✅ Production validation system complete\\n\\nWORKING COMPONENTS:\\n• scripts/validate-production-database-v31.js - RLS-compatible validator (passes all tests)\\n• scripts/quick-table-check.js - Simple table accessibility verification\\n• scripts/production-checklist.sh - 5-phase validation (17/17 checks pass)\\n• server.js - Production server (already working, health checks pass)\\n\\nCORRECTIONS MADE:\\n• package.json: Fixed main field to use server.js (not server-production.js)\\n• package.json: Fixed validate-db script to use v31 validator\\n• scripts/init-prod-server.sh: Corrected references to working components\\n• Removed server-production.js (647 lines, unnecessary complexity)\\n• Removed old validate-production-database.js (broken RLS compatibility)\\n\\nVALIDATION STATUS:\\n• Database: 11/11 tables accessible with proper RLS security\\n• Server: Health endpoints responding correctly  \\n• Environment: All configuration validated\\n• Dependencies: All npm packages installed correctly\\n• Files: All required scripts present and executable\\n\\n✨ All staged changes now reference only working, tested components\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"diagnostics.json\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"feat: Production initialization with enhanced schema cache handling\\n\\n🚀 Production-ready deployment with robust schema cache management\\n\\n## Key Features\\n- Enhanced Supabase configuration with schema cache refresh capabilities\\n- Graceful degraded mode startup for production resilience\\n- Comprehensive database connection testing and recovery\\n- Schema cache issue detection and user guidance\\n- Production-safe error handling and diagnostics\\n\\n## Schema Cache Resolution\\n- Force schema refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic detection and guidance for cache issues\\n- Production server continues operation during cache refresh\\n\\n## Production Improvements\\n- Enhanced server startup with detailed error reporting\\n- Clear user guidance for resolving database issues\\n- Comprehensive health and diagnostic endpoints\\n- Graceful handling of temporary database connectivity issues\\n\\n## Files Updated\\n- config/supabase.js: Enhanced connection testing and cache management\\n- server.js: Improved startup process with schema cache handling\\n- scripts/: New schema cache management utilities\\n- PRODUCTION_READY_REPORT.md: Complete production status documentation\\n\\n## Testing Status\\n✅ All modules load without conflicts\\n✅ Server starts successfully in degraded mode\\n✅ Schema cache refresh utilities functional\\n✅ Production health endpoints operational\\n\\nResolves schema cache initialization issues after database updates.\\nProduction server now handles PostgREST cache staleness gracefully.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"\\n🎉 ProspectPro Production Deployment - SYNC COMPLETE\\n====================================================\\n\\n📋 Commit: 6a3d131 (feat: Production initialization with enhanced schema cache handling)\\n🔄 Status: Successfully committed, pushed, and synced\\n🚀 Branch: main (up to date with origin/main)\\n\\n✅ Changes Successfully Deployed:\\n================================\\n\\n🔧 Core Infrastructure:\\n- Enhanced Supabase configuration with schema cache management\\n- Production-safe database connection testing\\n- Graceful degraded mode startup capabilities\\n\\n🛠️ Schema Cache Management:\\n- Force refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic cache issue detection and user guidance\\n\\n📊 Production Server:\\n- Enhanced startup process with detailed error reporting\\n- Comprehensive health and diagnostic endpoints\\n- Clear user guidance for resolving database connectivity issues\\n\\n📋 Documentation:\\n- Complete production status report (PRODUCTION_READY_REPORT.md)\\n- Comprehensive testing and validation results\\n\\n🎯 Production Status: READY ✅\\n- Server handles schema cache issues gracefully\\n- No critical conflicts detected\\n- All modules load successfully\\n- Health endpoints operational\\n\\nNext deployment will inherit these production resilience improvements!\\n\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/check-docs-schema.sh\": true,\n    \"./scripts/install-git-hooks.sh\": true,\n    \"./scripts/repository-cleanup.sh\": true,\n    \"git mv\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"docs: Enforce new documentation schema - complete repository cleanup\\n\\n🧹 Repository Cleanup Complete:\\n- Root directory limited to 3 essential .md files (README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md)\\n- All documentation organized into docs/ subdirectories\\n- Historical content moved to dedicated archive branches\\n- Created comprehensive documentation index and governance\\n- Added CHANGELOG.md for version tracking\\n- Established automated enforcement with git hooks\\n\\n📚 New Structure:\\n- docs/setup/ - Installation and configuration guides\\n- docs/guides/ - User guides and tutorials  \\n- docs/technical/ - Technical documentation\\n- docs/deployment/ - Deployment and production guides\\n- docs/development/ - Development and contribution docs\\n\\n🗄️ Archive Branches (to be created):\\n- archive/development-phase - Development artifacts\\n- archive/deployment-phase - Deployment experiments\\n- archive/testing-reports - Test reports and validation\\n- archive/production-legacy - Legacy production documentation\\n\\n🔧 Enforcement System:\\n- Pre-commit hooks validate documentation schema\\n- Scripts for automated cleanup and validation\\n- Comprehensive governance documentation\\n- Structured commit message templates\\n\\nAll historical content preserved with full git history.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"docs: Add comprehensive documentation schema enforcement completion report\\n\\n📋 Complete Status Report:\\n- Repository cleanup successfully executed\\n- 15 root markdown files reduced to 3 (100% compliance)\\n- 24 documentation files organized in structured docs/ subdirectories\\n- 4 archive branches created with preserved historical content\\n- Automated enforcement system active with git hooks\\n- Comprehensive governance and maintenance procedures established\\n\\n✅ Mission Complete: Documentation schema enforcement operational\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Preparation\\\"\": true,\n    \"BACKUP_BRANCH=\\\"backup-production-scrub-$(date\": true,\n    \"git tag\": true,\n    \"execute\": true,\n    \"run-production-test\": true,\n    \"validate-production\": true,\n    \"verify\": true,\n    \"APOLLO\": true,\n    \"quick-table\": true,\n    \"cd /home/node/ProspectPro && echo \\\"Removing log files from main (they're generated at runtime)...\\\" && rm -f database-validation.log production-checklist.log production-fixed.log production.log server-test.log startup.log diagnostics.json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Removing the production scrubbing plan (moving to development docs)...\\\" && rm -f PRODUCTION_BRANCH_SCRUBBING_PLAN.md\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Testing server startup...\\\" && timeout 10s node server.js || echo \\\"Server test complete (timeout reached as expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add -A && git commit -m \\\"production: Complete branch scrubbing - main now production-only\\n\\n🧹 Production Branch Scrubbing Complete:\\n\\nREMOVED (Archived to appropriate branches):\\n- 10 development scripts → archive/development-phase\\n- 3 development utilities → archive/development-phase  \\n- Complete test/ directory → archive/old-tests\\n- Test simulation scripts → archive/old-tests\\n- Sample data files → archive/legacy-files\\n- 3 database development utilities → archive/development-phase\\n- All runtime log files (regenerated in production)\\n\\nPRODUCTION ESSENTIALS RETAINED:\\n✅ Core application: server.js, package.json\\n✅ Essential docs: README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md\\n✅ Production directories: api/, modules/, config/, public/, frontend/, supabase/\\n✅ Production scripts: 11 essential production scripts only\\n✅ Curated documentation: Production setup and user guides\\n\\nVALIDATION:\\n✅ Server starts successfully\\n✅ All production scripts present\\n✅ Essential modules and APIs intact\\n✅ Documentation schema compliant\\n\\nResult: Clean production-ready main branch with full development history preserved in organized archive branches.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"refactor: Production codebase optimization v3.1.0\\n\\n🔧 Production Enhancements:\\n\\nCONFIG:\\n- Enhanced Supabase client with connection pooling and caching\\n- Improved environment variable handling with fallbacks\\n- Added connection TTL caching (5min) for performance\\n\\nSERVER:\\n- Upgraded to v3.1.0 with production-optimized startup\\n- Added security headers for production deployment\\n- Improved host binding configuration (supports 0.0.0.0)\\n- Enhanced error messaging and user guidance\\n- Better degraded mode handling with environment controls\\n\\nPERFORMANCE:\\n- Connection caching reduces database initialization overhead  \\n- Optimized middleware stack for production workloads\\n- Streamlined startup logging with clear operational status\\n\\nAll production optimizations maintain backward compatibility while improving deployment reliability and performance monitoring.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"secret.*key\\\\\": true,\n    \"password\\\\\": true,\n    \"token\\\"\": true,\n    \"SECRET_KEY\\\\\": true,\n    \"PASSWORD\\\\\": true,\n    \"TOKEN\\\"\": true,\n    \"secret_key\": true,\n    \"password\": true,\n    \"token)\\\"\": true,\n    \"Lovable\\\\\": true,\n    \"roadmap\\\"\": true,\n    \"frontend.*lovable\\\"\": true,\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Created comprehensive workflow guide\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Moved workflow guide to docs/deployment/ per repo governance\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_commit.tmp\": true,\n    \"git commit -m \\\"🧹 Clean repository structure - archive legacy code\\n\\n- Removed duplicate nested ProspectPro/ directory (preserved in local archive)\\n- Archived legacy scripts not aligned with Docker architecture\\n- Removed reference to missing validate-production-database script\\n- Updated Copilot instructions with repository management details\\n- Maintained clean production structure per governance rules\\n\\nArchived items:\\n• Legacy project structure → archive/legacy-structure/\\n• Legacy deployment scripts → archive/legacy-scripts/\\n• Preserved locally but not committed per .gitignore rules\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"code\": true,\n    \"npm run mcp:test\": true,\n    \"python\": true,\n    \".\\\\scripts\\\\init-prod-server.ps1\": true,\n    \".\\\\scripts\\\\init-prod-server-simple.ps1\": true,\n    \".\\\\scripts\\\\start-prod.ps1\": true,\n    \"notepad\": true,\n    \".\\\\start-production.ps1\": true,\n    \"ForEach-Object\": true,\n    \"Get-Process | Where-Object {$_.ProcessName -like \\\"*node*\\\"} | Stop-Process -Force; Write-Host \\\"✅ All Node processes terminated\\\" -ForegroundColor Green\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$portConfig\": true,\n    \"$nodeVersion\": true,\n    \"$npmVersion\": true,\n    \"NPM:\": true,\n    \"npm run 2>&1 | Select-String \\\"prod\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run diag\": true,\n    \"netstat\": true,\n    \"$checklist\": true,\n    \"$checklist[\\\"PORT\": true,\n    \"$checklist[\\\"NODE_ENV=production\\\"]\": true,\n    \"$checklist[\\\"Supabase\": true,\n    \"foreach\": true,\n    \"$env:NODE_ENV=\\\"production\\\"\": true,\n    \"Clear-Host\": true,\n    \"Get-ExecutionPolicy\": true,\n    \"git commit -m \\\"fix: Windows PowerShell compatibility and production deployment\\n\\n- Update package.json scripts to use PowerShell (.ps1) instead of shell scripts (.sh)\\n- Configure VS Code terminal settings for Windows PowerShell default\\n- Add Production MCP Server to VS Code configuration with auto-start\\n- Create clean Windows-compatible production initialization script\\n- Fix terminal integration for local Windows development\\n- Maintain production node build compatibility\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"copy\": true,\n    \"ConvertFrom-Json\": true,\n    \"git commit -m \\\"fix: Add explicit .env loading to server.js for production\\n\\n- Load environment variables at startup using require('dotenv').config()\\n- Ensures GitHub Actions generated .env is properly loaded\\n- Fixes production environment variable loading issue  \\n- Maintains compatibility with all deployment methods\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"PRODUCTION OPTIMIZATION: Complete Supabase Vault integration, strict production mode, enhanced MCP server\\n\\n✅ SUPABASE VAULT INTEGRATION:\\n- Added modules/utils/supabase-vault-loader.js with runtime API key loading\\n- Enhanced config/environment-loader.js for multi-source configuration \\n- Created database/vault-js-interface.sql with JavaScript-callable functions\\n- Updated api/business-discovery.js to use vault API keys with fallback\\n\\n✅ STRICT PRODUCTION MODE:\\n- Updated server.js with EnvironmentLoader and vault integration\\n- Added critical API key validation (Foursquare required)\\n- Enforced ALLOW_DEGRADED_START=false in production\\n- Enhanced startup validation with database + vault checks\\n\\n✅ GITHUB ACTIONS WORKFLOW OPTIMIZATION:\\n- Fixed repository-maintenance.yml (schedule/manual only)  \\n- Fixed docker-env.yml (manual/workflow_call only)\\n- Prevents cascade failures and resource waste\\n\\n✅ ENHANCED PRODUCTION MCP SERVER:\\n- Added vault_api_key_status tool for comprehensive API key diagnostics\\n- Added production_startup_validator for complete configuration validation\\n- Added github_workflow_optimizer for workflow analysis and issue detection\\n- Updated MCP configuration for enhanced production monitoring\\n\\n✅ COMPREHENSIVE DOCUMENTATION:\\n- Updated .github/copilot-instructions.md with vault integration details\\n- Added strict production mode patterns and examples\\n- Enhanced MCP server strategy with new tools\\n- Updated architecture documentation with vault integration patterns\\n\\n🔑 VAULT FEATURES:\\n- 5-minute TTL caching for performance\\n- Exponential backoff retry logic\\n- Environment variable fallback\\n- Template/placeholder value filtering\\n- Comprehensive error handling and diagnostics\\n\\n🏭 PRODUCTION FEATURES:\\n- Zero-tolerance for degraded starts\\n- Critical API validation at startup\\n- Real-time vault status monitoring\\n- Enhanced environment switching workflow\\n- Optimized GitHub Actions workflows\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"envLoader.getConfig().supabase.url)\": true,\n    \"envLoader.getConfig().features[k]).length)\": true,\n    \"console.log('🔑\": true,\n    \"git add . && git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:ALLOW_DEGRADED_START=\\\"true\\\"\": true,\n    \"docs/SUPABASE_UPGRADE_NOTES.md\": true,\n    \"console.log('📍\": true,\n    \"console.log('\\\\\\\\n🔧\": true,\n    \"console.log('==========================================')\": true,\n    \"console.log(\\\\\\\\\\\\\\\"\": true,\n    \"}')\": true,\n    \"console.log('}')\": true,\n    \"\\\\\\\"')\": true,\n    \"Result:',\": true,\n    \"docs/GOOGLE_CLOUD_QUICKSTART.md\": true,\n    \"git commit -m \\\"feat: Add Google Cloud Run deployment workflow with validation\\n\\n- Complete CI/CD pipeline with Docker build/push/deploy\\n- Pre-deployment validation script for local testing\\n- Updated Dockerfile for Cloud Run (port 3100)\\n- Comprehensive health checks and deployment verification\\n- Ready for automated deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"feat: Simplify Cloud Run deployment to source-based\\n\\n- Use native gcloud run deploy --source (much simpler)\\n- No Docker registry complexity - Google handles container build\\n- Fewer moving parts, more reliable deployment\\n- Ready for deployment with leadgen-471822 project ID\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"test: verify Cloud Build trigger configuration\\n\\n- Add deployment test file to trigger automated build\\n- Test service account permissions (Cloud Build WorkerPool User, Artifact Registry Writer)\\n- Verify us-central1 regional alignment\\n- Confirm GitHub App repository connection\\n- Expected: successful build and deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -am \\\"fix: correct Artifact Registry repository name in cloudbuild.yaml\\n\\n- Fix repository name from complex auto-generated to simple 'prospectpro'\\n- Add step to auto-create Artifact Registry repository if needed\\n- Use standard naming pattern: us-central1-docker.pkg.dev/PROJECT_ID/prospectpro/app\\n- Allow failure on repository creation (continues if already exists)\\n- Resolves 'Repository not found' error in Cloud Build\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"trigger-test.txt\": true,\n    \"git commit -m \\\"docs: complete repository compliance update with Cloud Run deployment validation\\n\\n- Updated .github/copilot-instructions.md with Google Cloud Run deployment section\\n- Added validated trigger configuration documentation (ID: 0358b3a4-c7a4-4da9-9610-1e335c4894e0)\\n- Enhanced docs/PRODUCTION_SETUP_GUIDE.md with Cloud Run deployment workflow\\n- Updated README.md to v3.0 with production status badges and Cloud Build links\\n- Confirmed .vscode/mcp-config.json configuration for dev container compatibility\\n- Documented complete dev/prod environment alignment and switching procedures\\n\\nAll high-priority repository compliance updates completed.\\nReady for clean closure and fresh development session initiation.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"🔧 Fix Cloud Run port conflict - Remove fixed PORT, enable dynamic port binding\\n\\n- Remove ENV PORT=3100 from Dockerfile (conflicted with Cloud Run's dynamic PORT)\\n- Remove --port=3100 from cloudbuild.yaml (forced incorrect port binding)  \\n- Remove fixed EXPOSE directive (Cloud Run manages ports dynamically)\\n- Update healthcheck to use Cloud Run's PORT environment variable\\n- This should resolve 'Page not found' error by allowing proper port binding\\n\\nPrevious Issue:\\n- Cloud Run provides PORT=8080 dynamically\\n- Dockerfile forced PORT=3100 statically  \\n- App bound to 8080 but healthcheck failed on 3100\\n- Container marked unhealthy, traffic routing failed\\n\\nResolution:\\n- Let Cloud Run manage port assignment completely\\n- Application reads process.env.PORT correctly\\n- Healthcheck uses dynamic port with fallback\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"gcloud\": true,\n    \"git commit -m \\\"📝 Fix Cloud Build trigger ID in documentation\\n\\n- Update trigger ID to correct one: ae04dd92-4509-43ee-9f70-da3caf15dbb4\\n- Previous ID (0358b3a4-c7a4-4da9-9610-1e335c4894e0) was incorrect\\n- This explains why builds succeeded but service wasn't updating\\n- Documentation now reflects the actual production trigger\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"Fix Cloud Run 404 issue: Enable degraded startup, improve error handling, and enhance logging\\n\\n- Add ALLOW_DEGRADED_START=true to Dockerfile for Cloud Run stability\\n- Remove process.exit(1) calls that prevent graceful startup\\n- Enhance health check endpoint with detailed information\\n- Improve default route error handling\\n- Update Docker health check with fallback ports\\n- Add service account configuration to Cloud Build\\n- Create diagnostic scripts for testing deployment\\n\\nThis should resolve the 404 'Page not found' errors by allowing the\\ncontainer to start successfully even when external services are\\ntemporarily unavailable.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:PORT=8080\": true,\n    \"Get-ChildItem -Directory | Where-Object {$_.Name -like \\\"*Prospect*\\\"}\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"dir\": true,\n    \"npm run test\": true,\n    \"cd /workspaces/ProspectPro && node -e \\\"console.log(JSON.parse(require('fs').readFileSync('.vscode/settings.json', 'utf8')))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Deno\\\"\": true,\n    \"MCP\\\"\": true,\n    \"server.js\": true,\n    \"server-simple.js\": true,\n    \"mcp-servers'\": true,\n    \"cd /workspaces/ProspectPro/mcp-servers && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mcp)\\\"\": true,\n    \"npm run production-start\": true,\n    \"cd /workspaces/ProspectPro && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"server)\\\"\": true,\n    \"jobs\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"location\\\":\\\"San Diego, CA\\\",\\\"radius\\\":10,\\\"businessTypes\\\":[\\\"restaurant\\\"],\\\"limit\\\":5}' -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"fg\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ps aux | grep -E \\\"(node.*server)\\\" | grep -v grep\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 3 && curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 10 && curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | head -20\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm.*dev\\\"\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"businessType\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"Seattle, WA\\\", \\\"maxResults\\\": 2}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    }\n  },\n  \"chat.agent.maxRequests\": 1000,\n  \"chat.editing.confirmEditRequestRetry\": false,\n  \"gitlens.gitCommands.skipConfirmations\": [\"fetch:command\"],\n  \"chat.editing.confirmEditRequestRemoval\": false,\n  \"githubPullRequests.codingAgent.promptForConfirmation\": false,\n  \"[markdown]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[jsonc]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[javascript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"workbench.secondarySideBar.defaultVisibility\": \"visible\",\n  \"window.menuBarVisibility\": \"classic\",\n  \"containers.containerClient\": \"com.microsoft.visualstudio.containers.docker\",\n  \"containers.orchestratorClient\": \"com.microsoft.visualstudio.orchestrators.dockercompose\",\n  \"@azure.argTenant\": \"\",\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"text\": \"- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Code Gen Best Practices: Before generating code for Azure, running terminal commands for Azure, performing operations related to Azure, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `code-generation` to get general Azure code generation best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Deployment Best Practices: Before deploying to Azure, preparing applications for deployment to Azure, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `deployment` to get general Azure deployment best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Code Gen Best Practices: Before generating code for Azure Functions, performing operations related to Azure Functions, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `code-generation` to get Azure Functions code generation best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Deployment Best Practices: Before deploying Azure Functions apps to Azure, preparing for the deployment, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `deployment` to get Azure Functions deployment best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure SWA Best Practices: Before working with static web apps, creating plans for static web apps, or performing related operations, always invoke your Azure best practice tool if available first. Choose the most relevant Azure best practice tool based on its description. Only call this tool when the user is discussing Azure Static Web Apps; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Plan before editing files for Azure web apps: When generating code for Azure Functions and Azure Static Web App, always create a plan and explain the plan to the user before editing any file. Proceed with editing the files after getting consent from the user.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Summarize topic before taking action: When the user asks about Azure Functions, invoke the azure_development-summarize_topic tool once first to see if any existing custom mode could be a good fit to what user is asking.\"\n    }\n  ],\n  \"workbench.startupEditor\": \"none\",\n  \"git-autoconfig.configList\": [\n    {\n      \"user.email\": \"Alextorelli28@gmail.com\",\n      \"user.name\": \"Alextorelli28@gmail.com\"\n    }\n  ],\n  \"redhat.telemetry.enabled\": true,\n  \"git-autoconfig.ignoreRootList\": [\"D:/APPS/ProspectPro/ProspectPro\"],\n  \"terminal.integrated.enableMultiLinePasteWarning\": \"never\",\n  \"remoteHub.commitDirectlyWarning\": \"off\",\n  \"vs-kubernetes\": {\n    \"vscode-kubernetes.kubectl-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/kubectl/kubectl\",\n    \"vscode-kubernetes.helm-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm\",\n    \"vscode-kubernetes.minikube-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube\"\n  },\n  \"githubPullRequests.createOnPublishBranch\": \"never\",\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"plaintext\": true,\n    \"markdown\": true,\n    \"scminput\": false\n  },\n  \"[sql]\": {\n    \"editor.defaultFormatter\": \"mtxr.sqltools\"\n  },\n  \"[html]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[typescriptreact]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[css]\": {\n    \"editor.defaultFormatter\": \"vscode.css-language-features\"\n  },\n  \"[json]\": {\n    \"editor.defaultFormatter\": \"vscode.json-language-features\"\n  },\n  \"workbench.colorCustomizations\": {\n    \"[Vira*]\": {\n      \"statusBar.debuggingBackground\": \"#80CBC433\",\n      \"statusBar.debuggingForeground\": \"#80CBC4\",\n      \"toolbar.activeBackground\": \"#80CBC426\",\n      \"button.background\": \"#80CBC4\",\n      \"button.hoverBackground\": \"#80CBC4cc\",\n      \"extensionButton.separator\": \"#80CBC433\",\n      \"extensionButton.background\": \"#80CBC414\",\n      \"extensionButton.foreground\": \"#80CBC4\",\n      \"extensionButton.hoverBackground\": \"#80CBC433\",\n      \"extensionButton.prominentForeground\": \"#80CBC4\",\n      \"extensionButton.prominentBackground\": \"#80CBC414\",\n      \"extensionButton.prominentHoverBackground\": \"#80CBC433\",\n      \"activityBarBadge.background\": \"#80CBC4\",\n      \"activityBar.activeBorder\": \"#80CBC4\",\n      \"activityBarTop.activeBorder\": \"#80CBC4\",\n      \"list.inactiveSelectionIconForeground\": \"#80CBC4\",\n      \"list.activeSelectionForeground\": \"#80CBC4\",\n      \"list.inactiveSelectionForeground\": \"#80CBC4\",\n      \"list.highlightForeground\": \"#80CBC4\",\n      \"sash.hoverBorder\": \"#80CBC480\",\n      \"list.activeSelectionIconForeground\": \"#80CBC4\",\n      \"scrollbarSlider.activeBackground\": \"#80CBC480\",\n      \"editorSuggestWidget.highlightForeground\": \"#80CBC4\",\n      \"textLink.foreground\": \"#80CBC4\",\n      \"progressBar.background\": \"#80CBC4\",\n      \"pickerGroup.foreground\": \"#80CBC4\",\n      \"tab.activeBorder\": \"#80CBC400\",\n      \"tab.activeBorderTop\": \"#80CBC4\",\n      \"tab.unfocusedActiveBorder\": \"#80CBC400\",\n      \"tab.unfocusedActiveBorderTop\": \"#80CBC4\",\n      \"tab.activeModifiedBorder\": \"#80CBC4\",\n      \"notificationLink.foreground\": \"#80CBC4\",\n      \"editorWidget.resizeBorder\": \"#80CBC4\",\n      \"editorWidget.border\": \"#80CBC4\",\n      \"settings.modifiedItemIndicator\": \"#80CBC4\",\n      \"panelTitle.activeBorder\": \"#80CBC4\",\n      \"breadcrumb.activeSelectionForeground\": \"#80CBC4\",\n      \"menu.selectionForeground\": \"#80CBC4\",\n      \"menubar.selectionForeground\": \"#80CBC4\",\n      \"editor.findMatchBorder\": \"#80CBC4\",\n      \"selection.background\": \"#80CBC440\",\n      \"statusBarItem.remoteBackground\": \"#80CBC414\",\n      \"statusBarItem.remoteHoverBackground\": \"#80CBC4\",\n      \"statusBarItem.remoteForeground\": \"#80CBC4\",\n      \"notebook.inactiveFocusedCellBorder\": \"#80CBC480\",\n      \"commandCenter.activeBorder\": \"#80CBC480\",\n      \"chat.slashCommandForeground\": \"#80CBC4\",\n      \"chat.avatarForeground\": \"#80CBC4\",\n      \"activityBarBadge.foreground\": \"#000000\",\n      \"button.foreground\": \"#000000\",\n      \"statusBarItem.remoteHoverForeground\": \"#000000\",\n      \"editorGroupHeader.tabsBackground\": \"#ffffff0a\",\n      \"tab.border\": \"#ffffff01\",\n      \"tab.inactiveBackground\": \"#ffffff01\",\n      \"widget.shadow\": \"#00000000\",\n      \"scrollbar.shadow\": \"#00000000\"\n    }\n  },\n  \"workbench.preferredDarkColorTheme\": \"Vira Ocean\",\n  \"workbench.productIconTheme\": \"viraUIIcons\",\n  \"viraTheme.contrastedTabs\": true,\n  \"viraTheme.hidesShadows\": true,\n  \"chat.todoListTool.enabled\": false,\n  \"chat.tools.edits.autoApprove\": {\n    \"**/*.{csproj,fsproj,vbproj}\": true\n  },\n  \"chat.useChatSessionsForCloudButton\": true,\n  \"workbench.settings.applyToAllProfiles\": [\n    \"chat.useChatSessionsForCloudButton\"\n  ],\n  \"chat.agentSessionsViewLocation\": \"view\",\n  \"window.density.editorTabHeight\": \"compact\",\n  \"docker.extension.enableComposeLanguageServer\": false,\n  \"docker.extension.dockerEngineAvailabilityPrompt\": false,\n  \"github.copilot.chat.agent.thinkingTool\": true,\n  \"github.copilot.chat.editor.temporalContext.enabled\": true,\n  \"github.copilot.chat.edits.temporalContext.enabled\": true,\n  \"github.copilot.chat.responsesApiReasoningEffort\": \"high\",\n  \"github.copilot.chat.responsesApiReasoningSummary\": \"detailed\",\n  \"github.copilot.chat.useResponsesApi\": true,\n  \"viraTheme.useTopTabIndicator\": true,\n  \"remoteHub.richNavigation.enabled\": true,\n  \"workbench.editor.enablePreview\": false,\n  \"deno.codeLens.test\": true,\n  \"deno.codeLens.referencesAllFunctions\": true,\n  \"deno.codeLens.references\": true,\n  \"deno.codeLens.implementations\": true,\n  \"deno.logFile\": true,\n  \"chat.mcp.serverSampling\": {\n    \"Global in Code: memory\": {\n      \"allowedModels\": [\n        \"copilot/gpt-4.1\",\n        \"copilot/auto\",\n        \"copilot/claude-3.7-sonnet\",\n        \"copilot/claude-3.7-sonnet-thought\",\n        \"copilot/claude-sonnet-4\",\n        \"copilot/gemini-2.5-pro\",\n        \"copilot/gpt-5\",\n        \"copilot/grok-code-fast-1\"\n      ]\n    }\n  },\n  \"snyk.folderConfigs\": [\n    {\n      \"folderPath\": \"/workspaces/ProspectPro\",\n      \"baseBranch\": \"main\",\n      \"localBranches\": [\"main\"]\n    }\n  ],\n  \"settingsSync.ignoredExtensions\": [\n    \"christian-kohler.npm-intellisense\",\n    \"ms-vscode.vscode-node-azure-pack\",\n    \"ms-azuretools.vscode-azurevirtualmachines\"\n  ],\n  \"vsicons.dontShowNewVersionMessage\": true,\n  \"snyk.yesWelcomeNotification\": false,\n  \"snyk.trustedFolders\": [\"/workspaces/ProspectPro\"],\n  \"[dockercompose]\": {\n    \"editor.insertSpaces\": true,\n    \"editor.tabSize\": 2,\n    \"editor.autoIndent\": \"advanced\",\n    \"editor.quickSuggestions\": {\n      \"other\": true,\n      \"comments\": false,\n      \"strings\": true\n    },\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  },\n  \"[github-actions-workflow]\": {\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  }\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":36,"duration":0.721},
{"type":"mark","name":"lsp.did_change_batched","count":44,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":44,"duration":2.108},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":43,"duration":0.024},
{"type":"mark","name":"lsp.goto_definition","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":256,"character":19}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":10,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",6994]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":17,"duration":0.525},
{"type":"mark","name":"tsc.op.op_resolve","count":653,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":653,"duration":0.097},
{"type":"mark","name":"tsc.op.op_resolve","count":654,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":654,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":655,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":655,"duration":0.072},
{"type":"mark","name":"tsc.op.op_resolve","count":656,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":656,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":657,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":657,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":658,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":658,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":659,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":659,"duration":0.095},
{"type":"mark","name":"tsc.op.op_resolve","count":660,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":660,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":661,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":661,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":662,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":662,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":663,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":663,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":664,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":664,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":665,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":665,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":666,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":666,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":667,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":667,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":668,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":668,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":669,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":669,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":670,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":670,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":671,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":671,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":672,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":672,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":673,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":673,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":674,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":674,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":675,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":675,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":676,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":676,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":677,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":677,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":678,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":678,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":679,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":679,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":680,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":680,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":681,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":681,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":682,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":682,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":683,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":683,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":684,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":684,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":685,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":685,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":686,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":686,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":687,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":687,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":688,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":688,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":689,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":689,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":690,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":690,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":691,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":691,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":692,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":692,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":693,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":693,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":694,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":694,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":695,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":695,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":696,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":696,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":697,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":697,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":698,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":698,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":699,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":699,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":700,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":700,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":701,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":701,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":702,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":702,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":703,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":703,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":704,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":704,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":705,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":705,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":220,"args":"file:///c:/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"tsc.op.op_load","count":220,"duration":0.335},
{"type":"mark","name":"tsc.op.op_release","count":9,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":9,"duration":1.909},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":116,"duration":0.006},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":10,"duration":44.253},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":10,"duration":45.7},
{"type":"measure","name":"lsp.goto_definition","count":17,"duration":45.844},
{"type":"mark","name":"lsp.goto_definition","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":197,"character":10}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":11,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",5434]}},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":11,"duration":0.518},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":11,"duration":0.955},
{"type":"measure","name":"lsp.goto_definition","count":18,"duration":1.103},
{"type":"mark","name":"lsp.goto_definition","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":189,"character":2}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":12,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",5232]}},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":12,"duration":0.529},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":12,"duration":0.651},
{"type":"measure","name":"lsp.goto_definition","count":19,"duration":0.796},
{"type":"mark","name":"lsp.did_change_batched","count":45,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":45,"duration":7.236},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":79,"duration":0.294},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":38,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",80]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":28,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":221,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":221,"duration":0.088},
{"type":"mark","name":"tsc.op.op_resolve","count":706,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":706,"duration":0.045},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":38,"duration":189.219},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":38,"duration":189.583},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":29,"args":"GetAmbientModules"},
{"type":"mark","name":"lsp.code_action","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"lsp.document_symbol","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":36,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":29,"duration":219.73},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":6,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":29,"duration":227.156},
{"type":"measure","name":"lsp.diagnostic","count":128,"duration":417.043},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":6,"duration":10.853},
{"type":"mark","name":"tsc.host.getNavigationTree","count":12,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":6,"duration":201.487},
{"type":"measure","name":"lsp.code_action","count":56,"duration":201.937},
{"type":"measure","name":"tsc.host.getNavigationTree","count":12,"duration":35.592},
{"type":"measure","name":"tsc.request.getNavigationTree","count":12,"duration":236.483},
{"type":"measure","name":"lsp.get_navigation_tree","count":36,"duration":236.527},
{"type":"measure","name":"lsp.document_symbol","count":40,"duration":236.978},
{"type":"mark","name":"lsp.inlay_hint","count":304,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1043,"character":0},"end":{"line":1171,"character":6}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":129,"duration":0.02},
{"type":"mark","name":"lsp.document_symbol","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":37,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":37,"duration":0.001},
{"type":"measure","name":"lsp.document_symbol","count":41,"duration":0.52},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":44,"duration":0.052},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":39,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",80]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":39,"duration":26.531},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":39,"duration":26.638},
{"type":"measure","name":"lsp.diagnostic","count":130,"duration":26.797},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":40,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",80]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":40,"duration":4.814},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":40,"duration":4.945},
{"type":"measure","name":"lsp.diagnostic","count":131,"duration":5.087},
{"type":"mark","name":"lsp.folding_range","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"lsp.code_lens","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":38,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":38,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":41,"duration":0.363},
{"type":"mark","name":"lsp.semantic_tokens_full","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":9,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":9,"duration":20.907},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":22,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":46117},"2020"]}},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":9,"duration":23.59},
{"type":"measure","name":"lsp.folding_range","count":20,"duration":23.828},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":22,"duration":107.14},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":22,"duration":132.108},
{"type":"measure","name":"lsp.semantic_tokens_full","count":16,"duration":132.398},
{"type":"mark","name":"lsp.inlay_hint","count":305,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1168,"character":0},"end":{"line":1295,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":132,"duration":0.019},
{"type":"mark","name":"lsp.code_lens","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":39,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":39,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":42,"duration":1.551},
{"type":"mark","name":"lsp.inlay_hint","count":306,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1168,"character":0},"end":{"line":1295,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":46,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_change_batched","count":46,"duration":11.169},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":41,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",81]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":29,"duration":0.041},
{"type":"measure","name":"lsp.testing_update","count":80,"duration":1.936},
{"type":"mark","name":"tsc.op.op_load","count":222,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":222,"duration":0.091},
{"type":"mark","name":"tsc.op.op_resolve","count":707,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":707,"duration":0.048},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":41,"duration":192.174},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":41,"duration":192.424},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":30,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":30,"duration":72.272},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":30,"duration":74.417},
{"type":"measure","name":"lsp.diagnostic","count":133,"duration":267.109},
{"type":"mark","name":"lsp.did_change_batched","count":47,"args":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_change_batched","count":47,"duration":3.883},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":81,"duration":2.023},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":42,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",82]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":30,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":223,"args":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":223,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":708,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":708,"duration":0.031},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":42,"duration":39.268},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":42,"duration":40.594},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":31,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":31,"duration":0.235},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":31,"duration":0.324},
{"type":"measure","name":"lsp.diagnostic","count":134,"duration":43.786},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":46,"duration":0.045},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":43,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",82]}},
{"type":"mark","name":"lsp.document_symbol","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":40,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":43,"duration":260.368},
{"type":"mark","name":"tsc.host.getNavigationTree","count":13,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":43,"duration":262.504},
{"type":"measure","name":"lsp.did_save","count":45,"duration":266.998},
{"type":"mark","name":"lsp.inlay_hint","count":307,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1168,"character":0},"end":{"line":1296,"character":28}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":135,"duration":0.049},
{"type":"measure","name":"tsc.host.getNavigationTree","count":13,"duration":54.235},
{"type":"measure","name":"tsc.request.getNavigationTree","count":13,"duration":261.526},
{"type":"measure","name":"lsp.get_navigation_tree","count":40,"duration":262.599},
{"type":"measure","name":"lsp.document_symbol","count":42,"duration":263.841},
{"type":"mark","name":"lsp.inlay_hint","count":308,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1168,"character":0},"end":{"line":1296,"character":28}}}},
{"type":"mark","name":"lsp.code_lens","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":41,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":41,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":43,"duration":0.405},
{"type":"mark","name":"lsp.document_symbol","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":42,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":42,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":43,"duration":0.506},
{"type":"mark","name":"lsp.folding_range","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":10,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":10,"duration":15.23},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":10,"duration":15.955},
{"type":"measure","name":"lsp.folding_range","count":21,"duration":16.173},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":44,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",82]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":44,"duration":25.4},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":44,"duration":25.584},
{"type":"measure","name":"lsp.diagnostic","count":136,"duration":25.749},
{"type":"mark","name":"lsp.semantic_tokens_full","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":23,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":46141},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":23,"duration":56.053},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":23,"duration":56.359},
{"type":"measure","name":"lsp.semantic_tokens_full","count":17,"duration":56.654},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":137,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":138,"duration":0.018},
{"type":"mark","name":"lsp.did_close","count":21,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":21,"duration":0.005},
{"type":"mark","name":"lsp.did_open","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":37,"duration":3.4},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":82,"duration":0.16},
{"type":"mark","name":"lsp.inlay_hint","count":309,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1168,"character":0},"end":{"line":1296,"character":28}}}},
{"type":"mark","name":"lsp.inlay_hint","count":310,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1168,"character":0},"end":{"line":1296,"character":28}}}},
{"type":"mark","name":"lsp.goto_definition","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":256,"character":19}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":13,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",6994]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":18,"duration":0.253},
{"type":"mark","name":"tsc.op.op_load","count":224,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":224,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":709,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":709,"duration":0.133},
{"type":"mark","name":"tsc.op.op_resolve","count":710,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":710,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":711,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":711,"duration":0.07},
{"type":"mark","name":"tsc.op.op_resolve","count":712,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":712,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":713,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":713,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":714,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":714,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":715,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":715,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":716,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":716,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":717,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":717,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":718,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":718,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":719,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":719,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":720,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":720,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":721,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":721,"duration":0.065},
{"type":"mark","name":"tsc.op.op_resolve","count":722,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":722,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":723,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":723,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":724,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":724,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":725,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":725,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":726,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":726,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":727,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":727,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":728,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":728,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":729,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":729,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":730,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":730,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":731,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":731,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":732,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":732,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":733,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":733,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":734,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":734,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":735,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":735,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":736,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":736,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":737,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":737,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":738,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":738,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":739,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":739,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":740,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":740,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":741,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":741,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":742,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":742,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":743,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":743,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":744,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":744,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":745,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":745,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":746,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":746,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":747,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":747,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":748,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":748,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":749,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":749,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":750,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":750,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":751,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":751,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":752,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":752,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":753,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":753,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":754,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":754,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":755,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":755,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":756,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":756,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":757,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":757,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":758,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":758,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":759,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":759,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":760,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":760,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":761,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":761,"duration":0.021},
{"type":"mark","name":"tsc.op.op_release","count":10,"args":"file:///c:/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"tsc.op.op_release","count":10,"duration":0.045},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":13,"duration":60.028},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":13,"duration":62.05},
{"type":"measure","name":"lsp.goto_definition","count":20,"duration":62.205},
{"type":"mark","name":"lsp.did_close","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":83,"duration":0.094},
{"type":"measure","name":"lsp.did_close","count":22,"duration":0.756},
{"type":"mark","name":"lsp.did_open","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":38,"duration":3.255},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":84,"duration":0.121},
{"type":"mark","name":"lsp.did_close","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":85,"duration":0.11},
{"type":"measure","name":"lsp.did_close","count":23,"duration":1.105},
{"type":"mark","name":"lsp.did_change_batched","count":48,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":48,"duration":27.084},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":86,"duration":0.336},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":45,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",87]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":19,"duration":0.228},
{"type":"mark","name":"tsc.op.op_resolve","count":762,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":762,"duration":0.109},
{"type":"mark","name":"tsc.op.op_resolve","count":763,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":763,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":764,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":764,"duration":0.076},
{"type":"mark","name":"tsc.op.op_resolve","count":765,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":765,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":766,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":766,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":767,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":767,"duration":1.438},
{"type":"mark","name":"tsc.op.op_load","count":225,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":225,"duration":0.156},
{"type":"mark","name":"tsc.op.op_resolve","count":768,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":768,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":769,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":769,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":770,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":770,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":771,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":771,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":772,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":772,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":773,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":773,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":774,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":774,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":775,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":775,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":776,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":776,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":777,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":777,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":778,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":778,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":779,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":779,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":780,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":780,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":781,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":781,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":782,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":782,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":783,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":783,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":784,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":784,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":785,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":785,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":786,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":786,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":787,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":787,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":788,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":788,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":789,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":789,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":790,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":790,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":791,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":791,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":792,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":792,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":793,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":793,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":794,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":794,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":795,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":795,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":796,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":796,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":797,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":797,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":798,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":798,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":799,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":799,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":800,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":800,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":801,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":801,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":802,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":802,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":803,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":803,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":804,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":804,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":805,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":805,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":806,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":806,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":807,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":807,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":808,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":808,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":809,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":809,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":810,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":810,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":811,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":811,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":812,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":812,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":813,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":813,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":814,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":814,"duration":0.028},
{"type":"mark","name":"tsc.op.op_release","count":11,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":11,"duration":2.056},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":45,"duration":189.255},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":45,"duration":190.066},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":32,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":32,"duration":63.161},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":32,"duration":63.269},
{"type":"measure","name":"lsp.diagnostic","count":139,"duration":253.587},
{"type":"mark","name":"lsp.inlay_hint","count":311,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":1163,"character":0},"end":{"line":1291,"character":7}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":47,"duration":0.056},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":140,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":46,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",87]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":46,"duration":25.82},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":46,"duration":25.964},
{"type":"measure","name":"lsp.diagnostic","count":141,"duration":26.186},
{"type":"mark","name":"lsp.document_symbol","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":43,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"lsp.code_lens","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":44,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"lsp.folding_range","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":14,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":14,"duration":42.171},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":11,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.getNavigationTree","count":14,"duration":44.463},
{"type":"measure","name":"lsp.get_navigation_tree","count":43,"duration":44.545},
{"type":"measure","name":"lsp.document_symbol","count":44,"duration":45.05},
{"type":"measure","name":"lsp.get_navigation_tree","count":44,"duration":53.89},
{"type":"measure","name":"lsp.code_lens","count":44,"duration":54.204},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":11,"duration":23.452},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":11,"duration":67.644},
{"type":"measure","name":"lsp.folding_range","count":22,"duration":67.816},
{"type":"mark","name":"lsp.semantic_tokens_full","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":24,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":49129},"2020"]}},
{"type":"mark","name":"lsp.document_symbol","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":45,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":45,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":45,"duration":1.044},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":24,"duration":169.975},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":24,"duration":170.443},
{"type":"measure","name":"lsp.semantic_tokens_full","count":18,"duration":170.801},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":47,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",87]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":47,"duration":4.142},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":47,"duration":7.308},
{"type":"measure","name":"lsp.diagnostic","count":142,"duration":7.57},
{"type":"mark","name":"lsp.inlay_hint","count":312,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":873,"character":0},"end":{"line":995,"character":12}}}},
{"type":"mark","name":"lsp.code_lens","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":46,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":46,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":45,"duration":0.887},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":143,"duration":0.016},
{"type":"mark","name":"lsp.code_lens_resolve","count":34,"args":{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":38}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":939,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":32,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27425]}},
{"type":"measure","name":"tsc.host.findReferences","count":32,"duration":5.781},
{"type":"measure","name":"tsc.request.findReferences","count":32,"duration":5.946},
{"type":"measure","name":"lsp.references","count":32,"duration":6.089},
{"type":"measure","name":"lsp.code_lens_resolve","count":34,"duration":6.117},
{"type":"mark","name":"lsp.inlay_hint","count":313,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":873,"character":0},"end":{"line":994,"character":41}}}},
{"type":"mark","name":"lsp.inlay_hint","count":314,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":880,"character":0},"end":{"line":996,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":39,"duration":1.57},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":87,"duration":0.191},
{"type":"mark","name":"lsp.did_change_batched","count":49,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":88,"duration":0.374},
{"type":"measure","name":"lsp.did_change_batched","count":49,"duration":160.144},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":48,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",89]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":20,"duration":0.247},
{"type":"mark","name":"tsc.op.op_resolve","count":815,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":815,"duration":0.097},
{"type":"mark","name":"tsc.op.op_resolve","count":816,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":816,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":817,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":817,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":818,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":818,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":819,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":819,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":820,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":820,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":821,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":821,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":822,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":822,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":823,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":823,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":824,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":824,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":825,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":825,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":826,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":826,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":827,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":827,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":828,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":828,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":829,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":829,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":830,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":830,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":831,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":831,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":832,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":832,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":833,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":833,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":834,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":834,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":835,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":835,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":836,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":836,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":837,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":837,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":838,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":838,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":839,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":839,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":840,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":840,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":841,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":841,"duration":4.416},
{"type":"mark","name":"tsc.op.op_resolve","count":842,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":842,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":843,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":843,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":844,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":844,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":845,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":845,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":846,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":846,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":847,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":847,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":848,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":848,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":849,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":849,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":850,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":850,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":851,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":851,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":852,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":852,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":853,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":853,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":854,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":854,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":855,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":855,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":856,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":856,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":857,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":857,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":858,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":858,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":859,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":859,"duration":0.412},
{"type":"mark","name":"tsc.op.op_resolve","count":860,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":860,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":861,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":861,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":862,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":862,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":863,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":863,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":864,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":864,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":865,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":865,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":866,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":866,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":226,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":226,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":867,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":867,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":868,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":868,"duration":0.02},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":117,"duration":0.013},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":48,"duration":136.888},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":48,"duration":137.35},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":33,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":33,"duration":0.167},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":33,"duration":0.23},
{"type":"measure","name":"lsp.diagnostic","count":144,"duration":145.032},
{"type":"measure","name":"lsp.did_save","count":48,"duration":137.663},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":145,"duration":0.041},
{"type":"mark","name":"lsp.inlay_hint","count":315,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":880,"character":0},"end":{"line":996,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":146,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":49,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",89]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":49,"duration":221.344},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":49,"duration":226.442},
{"type":"measure","name":"lsp.diagnostic","count":147,"duration":235.466},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":50,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",89]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":50,"duration":100.938},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":50,"duration":101.056},
{"type":"measure","name":"lsp.diagnostic","count":148,"duration":103.233},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":149,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":150,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_open","count":40,"duration":0.71},
{"type":"mark","name":"lsp.did_change_batched","count":50,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"lsp.testing_update","count":89,"duration":3.087},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":90,"duration":0.954},
{"type":"measure","name":"lsp.did_change_batched","count":50,"duration":83.557},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":51,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",91]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":21,"duration":0.277},
{"type":"mark","name":"tsc.op.op_resolve","count":869,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":869,"duration":0.101},
{"type":"mark","name":"tsc.op.op_resolve","count":870,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":870,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":871,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":871,"duration":0.074},
{"type":"mark","name":"tsc.op.op_resolve","count":872,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":872,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":873,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":873,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":874,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":874,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":875,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":875,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":876,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":876,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":877,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":877,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":878,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":878,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":879,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":879,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":880,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":880,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":881,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":881,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":882,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":882,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":883,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":883,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":884,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":884,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":885,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":885,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":886,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":886,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":887,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":887,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":888,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":888,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":889,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":889,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":890,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":890,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":891,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":891,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":892,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":892,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":893,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":893,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":894,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":894,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":895,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":895,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":896,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":896,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":897,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":897,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":898,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":898,"duration":5.086},
{"type":"mark","name":"tsc.op.op_resolve","count":899,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":899,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":900,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":900,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":901,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":901,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":902,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":902,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":903,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":903,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":904,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":904,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":905,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":905,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":906,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":906,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":907,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":907,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":908,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":908,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":909,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":909,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":910,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":910,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":911,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":911,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":912,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":912,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":913,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":913,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":914,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":914,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":915,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":915,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":916,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":916,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":917,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":917,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":918,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":918,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":919,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":919,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":920,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":920,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":921,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":921,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":227,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":227,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":922,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":922,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":923,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":923,"duration":0.021},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":118,"duration":0.013},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":51,"duration":263.751},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":51,"duration":269.774},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":34,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":34,"duration":0.151},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":34,"duration":0.202},
{"type":"measure","name":"lsp.diagnostic","count":151,"duration":273.058},
{"type":"measure","name":"lsp.did_save","count":49,"duration":116.623},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":152,"duration":0.038},
{"type":"mark","name":"lsp.inlay_hint","count":316,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":880,"character":0},"end":{"line":996,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":153,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":52,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",91]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":52,"duration":39.24},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":52,"duration":39.403},
{"type":"measure","name":"lsp.diagnostic","count":154,"duration":39.646},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":53,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",91]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":53,"duration":3.908},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":53,"duration":4.039},
{"type":"measure","name":"lsp.diagnostic","count":155,"duration":4.208},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":156,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":54,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",91]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":54,"duration":21.502},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":54,"duration":21.645},
{"type":"measure","name":"lsp.diagnostic","count":157,"duration":21.849},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":158,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_open","count":41,"duration":3.593},
{"type":"mark","name":"lsp.did_change_batched","count":51,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.testing_update","count":91,"duration":5.24},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":92,"duration":0.112},
{"type":"measure","name":"lsp.did_change_batched","count":51,"duration":84.744},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":55,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",93]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":22,"duration":0.241},
{"type":"mark","name":"tsc.op.op_resolve","count":924,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":924,"duration":0.131},
{"type":"mark","name":"tsc.op.op_resolve","count":925,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":925,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":926,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":926,"duration":0.07},
{"type":"mark","name":"tsc.op.op_resolve","count":927,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":927,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":928,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":928,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":929,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":929,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":930,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":930,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":931,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":931,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":932,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":932,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":933,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":933,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":934,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":934,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":935,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":935,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":936,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":936,"duration":0.266},
{"type":"mark","name":"tsc.op.op_resolve","count":937,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":937,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":938,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":938,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":939,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":939,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":940,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":940,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":941,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":941,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":942,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":942,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":943,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":943,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":944,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":944,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":945,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":945,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":946,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":946,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":947,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":947,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":948,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":948,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":949,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":949,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":950,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":950,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":951,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":951,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":952,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":952,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":953,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":953,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":954,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":954,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":955,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":955,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":956,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":956,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":957,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":957,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":958,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":958,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":959,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":959,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":960,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":960,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":961,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":961,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":962,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":962,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":963,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":963,"duration":1.062},
{"type":"mark","name":"tsc.op.op_resolve","count":964,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":964,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":965,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":965,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":966,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":966,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":967,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":967,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":968,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":968,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":969,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":969,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":970,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":970,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":971,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":971,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":972,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":972,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":973,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":973,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":974,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":974,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":975,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":975,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":976,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":976,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":977,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":977,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":228,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":228,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":978,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":978,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":979,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":979,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"lsp.inlay_hint","count":317,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":880,"character":0},"end":{"line":996,"character":0}}}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":119,"duration":0.012},
{"type":"mark","name":"lsp.inlay_hint","count":318,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":880,"character":0},"end":{"line":996,"character":0}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":55,"duration":324.435},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":55,"duration":324.571},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":35,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":35,"duration":0.147},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":35,"duration":0.261},
{"type":"measure","name":"lsp.diagnostic","count":159,"duration":326.702},
{"type":"measure","name":"lsp.did_save","count":50,"duration":285.803},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":160,"duration":0.042},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":161,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":56,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",93]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":56,"duration":296.581},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":56,"duration":300.729},
{"type":"measure","name":"lsp.diagnostic","count":162,"duration":302.669},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":57,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",93]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":57,"duration":4.368},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":57,"duration":4.604},
{"type":"measure","name":"lsp.diagnostic","count":163,"duration":4.81},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":164,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":58,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",93]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":58,"duration":24.18},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":58,"duration":24.335},
{"type":"measure","name":"lsp.diagnostic","count":165,"duration":25.968},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":59,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",93]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":59,"duration":13.551},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":59,"duration":13.711},
{"type":"measure","name":"lsp.diagnostic","count":166,"duration":13.889},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":167,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ENRICHMENT_APIS_IMPLEMENTED.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":42,"duration":0.04},
{"type":"mark","name":"lsp.did_change_batched","count":52,"args":"file:///workspaces/ProspectPro/ENRICHMENT_APIS_IMPLEMENTED.md"},
{"type":"measure","name":"lsp.did_change_batched","count":52,"duration":136.034},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":168,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":169,"duration":0.015},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":51,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":170,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":171,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":172,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":173,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":174,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":175,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":176,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":177,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":319,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":849,"character":0},"end":{"line":1031,"character":5}}}},
{"type":"mark","name":"lsp.hover","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":936,"character":56}}},
{"type":"mark","name":"tsc.request.getQuickInfoAtPosition"},
{"type":"mark","name":"tsc.host.getQuickInfoAtPosition","count":1,"args":{"GetQuickInfoAtPosition":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27294]}},
{"type":"measure","name":"tsc.host.getQuickInfoAtPosition","count":1,"duration":0.75},
{"type":"measure","name":"tsc.request.getQuickInfoAtPosition","count":1,"duration":0.89},
{"type":"measure","name":"lsp.hover","count":9,"duration":1.028},
{"type":"mark","name":"lsp.did_open","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ENRICHMENT_DEPLOYMENT_COMPLETE.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":43,"duration":0.041},
{"type":"mark","name":"lsp.did_change_batched","count":53,"args":"file:///workspaces/ProspectPro/ENRICHMENT_DEPLOYMENT_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":53,"duration":46.68},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":178,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":179,"duration":0.014},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":52,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":180,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":181,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":182,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":183,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":184,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":185,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":186,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":187,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":188,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/API_KEYS_CONFIGURATION_GUIDE.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":44,"duration":0.037},
{"type":"mark","name":"lsp.did_change_batched","count":54,"args":"file:///workspaces/ProspectPro/API_KEYS_CONFIGURATION_GUIDE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":54,"duration":25.55},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":189,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":190,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":191,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":53,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":192,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":193,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":194,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":195,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":196,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":197,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":198,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":199,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":200,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/PROSPECTPRO_V4.2_RELEASE_NOTES.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":45,"duration":0.041},
{"type":"mark","name":"lsp.did_change_batched","count":55,"args":"file:///workspaces/ProspectPro/PROSPECTPRO_V4.2_RELEASE_NOTES.md"},
{"type":"measure","name":"lsp.did_change_batched","count":55,"duration":50.634},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":201,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":202,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":203,"duration":0.003},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":54,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":204,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":205,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":206,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":207,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":208,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":209,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":210,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":211,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":212,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":213,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_CHECKLIST.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":46,"duration":0.041},
{"type":"mark","name":"lsp.did_change_batched","count":56,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_CHECKLIST.md"},
{"type":"measure","name":"lsp.did_change_batched","count":56,"duration":34.724},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":214,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":215,"duration":0.013},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":55,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":216,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":217,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":218,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":219,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":220,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":221,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":222,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":223,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":224,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":225,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":226,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":227,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":320,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":850,"character":0},"end":{"line":1035,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":321,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":850,"character":0},"end":{"line":1035,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":322,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":850,"character":0},"end":{"line":1035,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":57,"args":"file:///workspaces/ProspectPro/API_KEYS_CONFIGURATION_GUIDE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":57,"duration":4.278},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":228,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":229,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":230,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":231,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":232,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":233,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":58,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_CHECKLIST.md"},
{"type":"measure","name":"lsp.did_change_batched","count":58,"duration":0.121},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":234,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":59,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":59,"duration":5.701},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":93,"duration":1.26},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":60,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",94]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":31,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":229,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":229,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":980,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":980,"duration":0.118},
{"type":"mark","name":"tsc.op.op_resolve","count":981,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":981,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":982,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":982,"duration":0.075},
{"type":"mark","name":"tsc.op.op_resolve","count":983,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":983,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":984,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":984,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":985,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":985,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":986,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":986,"duration":0.054},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":60,"duration":333.053},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":60,"duration":339.199},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":36,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":36,"duration":0.178},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":36,"duration":0.291},
{"type":"measure","name":"lsp.diagnostic","count":235,"duration":342.398},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":61,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",94]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":61,"duration":39.341},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":61,"duration":40.289},
{"type":"measure","name":"lsp.diagnostic","count":236,"duration":40.497},
{"type":"mark","name":"lsp.did_change_batched","count":60,"args":"file:///workspaces/ProspectPro/ENRICHMENT_DEPLOYMENT_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":60,"duration":17.048},
{"type":"mark","name":"lsp.did_change_batched","count":61,"args":"file:///workspaces/ProspectPro/PROSPECTPRO_V4.2_RELEASE_NOTES.md"},
{"type":"measure","name":"lsp.did_change_batched","count":61,"duration":20.44},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":237,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":238,"duration":0.006},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":56,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":239,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":62,"args":"file:///workspaces/ProspectPro/ENRICHMENT_APIS_IMPLEMENTED.md"},
{"type":"measure","name":"lsp.did_change_batched","count":62,"duration":33.075},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":240,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":323,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":850,"character":0},"end":{"line":1035,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":241,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":57,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":242,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":58,"duration":0.02},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":59,"duration":0.02},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":60,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":243,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":324,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":850,"character":0},"end":{"line":1035,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":325,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":850,"character":0},"end":{"line":1035,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":63,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":94,"duration":0.407},
{"type":"measure","name":"lsp.did_change_batched","count":63,"duration":7.034},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":62,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",95]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":32,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":230,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":230,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":987,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":987,"duration":0.034},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":62,"duration":53.487},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":62,"duration":57.031},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":37,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":37,"duration":145.979},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":37,"duration":146.088},
{"type":"measure","name":"lsp.diagnostic","count":244,"duration":204.741},
{"type":"mark","name":"lsp.did_change_batched","count":64,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":64,"duration":17.296},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":95,"duration":0.251},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.inlay_hint","count":326,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":63,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",96]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":33,"duration":0.02},
{"type":"mark","name":"lsp.code_lens","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":47,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"tsc.op.op_load","count":231,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":231,"duration":0.098},
{"type":"mark","name":"tsc.op.op_resolve","count":988,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":988,"duration":0.05},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":63,"duration":273.058},
{"type":"mark","name":"tsc.host.getNavigationTree","count":15,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":63,"duration":274.27},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"measure","name":"tsc.host.getNavigationTree","count":15,"duration":34.692},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":38,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":38,"duration":0.174},
{"type":"measure","name":"tsc.request.getNavigationTree","count":15,"duration":309.299},
{"type":"measure","name":"lsp.get_navigation_tree","count":47,"duration":309.358},
{"type":"measure","name":"lsp.code_lens","count":46,"duration":309.602},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":38,"duration":37.636},
{"type":"measure","name":"lsp.diagnostic","count":245,"duration":316.505},
{"type":"mark","name":"lsp.did_change_batched","count":65,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":65,"duration":19.802},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":96,"duration":0.144},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":247,"duration":0.01},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":64,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",97]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":34,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":232,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":232,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":989,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":989,"duration":0.045},
{"type":"mark","name":"lsp.document_symbol","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":48,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":48,"duration":0.001},
{"type":"measure","name":"lsp.document_symbol","count":46,"duration":0.557},
{"type":"mark","name":"lsp.inlay_hint","count":327,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":64,"duration":168.266},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":64,"duration":168.958},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":39,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":39,"duration":0.191},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":39,"duration":1.848},
{"type":"measure","name":"lsp.diagnostic","count":246,"duration":175.395},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":248,"duration":0.023},
{"type":"mark","name":"lsp.folding_range","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":12,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":12,"duration":40.255},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":12,"duration":45.55},
{"type":"measure","name":"lsp.folding_range","count":23,"duration":45.811},
{"type":"mark","name":"lsp.semantic_tokens_full","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":25,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"start":0,"length":49196},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":25,"duration":133.357},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":25,"duration":134.059},
{"type":"measure","name":"lsp.semantic_tokens_full","count":19,"duration":134.418},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":249,"duration":0.018},
{"type":"mark","name":"lsp.document_symbol","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":49,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":49,"duration":0.001},
{"type":"measure","name":"lsp.document_symbol","count":47,"duration":0.528},
{"type":"mark","name":"lsp.inlay_hint","count":328,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":329,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":65,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",97]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":65,"duration":35.769},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":65,"duration":35.899},
{"type":"measure","name":"lsp.did_save","count":61,"duration":36.296},
{"type":"mark","name":"lsp.inlay_hint","count":330,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":66,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_change_batched","count":66,"duration":6.094},
{"type":"measure","name":"lsp.testing_update","count":97,"duration":1.29},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":66,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",98]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":35,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":233,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":233,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":990,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":990,"duration":0.028},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":66,"duration":125.838},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":67,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",98]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":66,"duration":127.514},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":67,"duration":155.32},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":40,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":67,"duration":227.764},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":40,"duration":0.154},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":68,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",98]}},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":40,"duration":153.949},
{"type":"measure","name":"lsp.diagnostic","count":250,"duration":283.93},
{"type":"measure","name":"lsp.did_save","count":62,"duration":228.197},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":68,"duration":22.319},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":68,"duration":136.379},
{"type":"measure","name":"lsp.diagnostic","count":251,"duration":140.153},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":69,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",98]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":69,"duration":91.655},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":69,"duration":93.661},
{"type":"measure","name":"lsp.diagnostic","count":252,"duration":96.11},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":253,"duration":0.045},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":70,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",98]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":70,"duration":17.261},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":70,"duration":17.394},
{"type":"measure","name":"lsp.diagnostic","count":254,"duration":17.577},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":71,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",98]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":71,"duration":25.309},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":71,"duration":25.56},
{"type":"measure","name":"lsp.diagnostic","count":255,"duration":25.766},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":63,"duration":0.056},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":256,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":257,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":331,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":50,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":50,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":47,"duration":0.409},
{"type":"mark","name":"lsp.inlay_hint","count":332,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":64,"duration":0.045},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":258,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":333,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":259,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":334,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":35,"args":{"range":{"start":{"line":941,"character":16},"end":{"line":941,"character":38}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":941,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":33,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27437]}},
{"type":"measure","name":"tsc.host.findReferences","count":33,"duration":12.285},
{"type":"measure","name":"tsc.request.findReferences","count":33,"duration":12.799},
{"type":"measure","name":"lsp.references","count":33,"duration":12.965},
{"type":"measure","name":"lsp.code_lens_resolve","count":35,"duration":12.998},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":260,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":261,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":262,"duration":0.019},
{"type":"mark","name":"lsp.did_open","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":47,"duration":10.523},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":98,"duration":0.136},
{"type":"mark","name":"lsp.did_open","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.github/copilot-instructions.md","languageId":"markdown","version":1,"text":"# ProspectPro v4.1 - Verified Business Intelligence Platform\r\n\r\n## CRITICAL: Current Production State\r\n\r\n- **Version**: 4.1.0 (Verified Data Architecture - PRODUCTION READY)\r\n- **Deployment**: Static Frontend + Supabase Edge Functions (serverless, auto-scaling)\r\n- **Environment**: Supabase environment variables + Edge Function secrets\r\n- **Architecture**: Supabase-first serverless with verified contact discovery\r\n- **Quality Standard**: Zero fake data - verified contacts only\r\n- **Backend**: 100% Supabase Edge Functions (business-discovery, campaign-export)\r\n- **Repository**: https://github.com/Alextorelli/ProspectPro (Verified data codebase)\r\n\r\n## CRITICAL: VERIFIED DATA ARCHITECTURE\r\n\r\n**ZERO FAKE DATA PHILOSOPHY**\r\n\r\n- ✅ Verified Contacts Only: No pattern-generated emails or fake data\r\n- ✅ Professional Verification: Apollo, licensing boards, chamber directories\r\n- ✅ Transparent Sources: Clear attribution for all contact data\r\n- ✅ Quality Baseline: Verification assumed, not advertised\r\n- ✅ Real Business Intelligence: Authentic professional contacts only\r\n- ❌ NO fake email patterns (info@, contact@, hello@, sales@)\r\n- ❌ NO generated contact information\r\n- ❌ NO speculative data points\r\n\r\n**VERIFICATION SOURCES**\r\n\r\n- **Apollo API**: Executive and owner contact discovery ($1.00 per verified contact)\r\n- **Professional Licensing**: State licensing boards (CPA, Healthcare, Legal)\r\n- **Chamber of Commerce**: Membership verification and directory contacts\r\n- **Trade Associations**: Industry-specific membership validation\r\n- **Google Places**: Verified business listings and authentic contact data\r\n\r\n## CRITICAL: SUPABASE-FIRST ARCHITECTURE\r\n\r\n**DEPLOYMENT PHILOSOPHY**\r\n\r\n- ✅ Supabase Edge Functions: All backend logic (OPERATIONAL)\r\n- ✅ Static Frontend: HTML/JS calling Edge Functions directly (READY)\r\n- ✅ Supabase Database: Native integration with Row Level Security\r\n- ✅ Supabase Real-time: Ready for live updates and notifications\r\n- ✅ Static Hosting: Cloud Storage or CDN (cost-effective)\r\n- ❌ NO server.js, Express.js, or Node.js containers\r\n- ❌ NO Cloud Run containers or complex deployment pipelines\r\n- ✅ Supabase Environment Variables: Native Edge Function configuration\r\n\r\n**PLATFORM SPECIALIZATION**\r\n\r\n- **GitHub**: Minimal repo management, documentation, version control\r\n- **Supabase**: Database, Edge Functions, real-time, authentication, storage\r\n- **Static Host**: Frontend files only (Cloud Storage, Vercel, Netlify)\r\n\r\n## CRITICAL: EDGE FUNCTIONS STATUS\r\n\r\n**PRODUCTION EDGE FUNCTIONS (CLEANED & OPTIMIZED)**\r\n\r\n- ✅ `business-discovery-optimized` - Enhanced with Foursquare + Google Places dual-source discovery\r\n- ✅ `campaign-export` - CSV export with verification status and professional contacts\r\n- ✅ Real-time database integration with verified leads tracking\r\n- ✅ Global edge deployment with <100ms cold starts\r\n- ✅ Functions URL: https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/\r\n- ❌ Removed 4 unused functions: enhanced-business-discovery, business-discovery-edge, diag, business-discovery\r\n\r\n**CLEANED DATABASE ARCHITECTURE**\r\n\r\nCore tables (security hardened, RLS optimized):\r\n\r\n```sql\r\n-- Campaigns table (cleaned schema)\r\nCREATE TABLE campaigns (\r\n  id TEXT PRIMARY KEY,\r\n  business_type TEXT NOT NULL,\r\n  location TEXT NOT NULL,\r\n  target_count INTEGER DEFAULT 10,\r\n  budget_limit DECIMAL(10,4) DEFAULT 50.0,\r\n  min_confidence_score INTEGER DEFAULT 50,\r\n  status TEXT DEFAULT 'pending',\r\n  results_count INTEGER DEFAULT 0,\r\n  total_cost DECIMAL(10,4) DEFAULT 0,\r\n  processing_time_ms INTEGER,\r\n  created_at TIMESTAMPTZ DEFAULT NOW(),\r\n  updated_at TIMESTAMPTZ DEFAULT NOW()\r\n);\r\n\r\n-- Leads table (verified contacts only)\r\nCREATE TABLE leads (\r\n  id BIGSERIAL PRIMARY KEY,\r\n  campaign_id TEXT REFERENCES campaigns(id),\r\n  business_name TEXT NOT NULL,\r\n  address TEXT,\r\n  phone TEXT,\r\n  website TEXT,\r\n  email TEXT, -- Only verified emails, no patterns\r\n  confidence_score INTEGER DEFAULT 0,\r\n  score_breakdown JSONB,\r\n  validation_cost DECIMAL(10,4) DEFAULT 0,\r\n  cost_efficient BOOLEAN DEFAULT true,\r\n  scoring_recommendation TEXT,\r\n  created_at TIMESTAMPTZ DEFAULT NOW(),\r\n  updated_at TIMESTAMPTZ DEFAULT NOW()\r\n);\r\n\r\n-- Dashboard exports table\r\nCREATE TABLE dashboard_exports (\r\n  id BIGSERIAL PRIMARY KEY,\r\n  campaign_id TEXT REFERENCES campaigns(id),\r\n  export_type TEXT DEFAULT 'lead_export',\r\n  file_format TEXT DEFAULT 'csv',\r\n  row_count INTEGER DEFAULT 0,\r\n  export_status TEXT DEFAULT 'completed',\r\n  completed_at TIMESTAMPTZ DEFAULT NOW(),\r\n  created_at TIMESTAMPTZ DEFAULT NOW()\r\n);\r\n\r\n-- Secure analytics view (no SECURITY DEFINER issues)\r\nCREATE VIEW campaign_analytics\r\nWITH (security_invoker = true)\r\nAS SELECT\r\n  c.id,\r\n  c.business_type,\r\n  c.location,\r\n  c.target_count,\r\n  c.min_confidence_score,\r\n  c.status,\r\n  c.results_count,\r\n  c.total_cost,\r\n  c.budget_limit,\r\n  c.processing_time_ms,\r\n  c.created_at,\r\n  COUNT(l.id) AS actual_leads,\r\n  COALESCE(AVG(l.confidence_score), 0)::numeric(10,2) AS avg_confidence\r\nFROM campaigns c\r\nLEFT JOIN leads l ON l.campaign_id = c.id\r\nGROUP BY c.id, c.business_type, c.location, c.target_count, c.min_confidence_score,\r\n         c.status, c.results_count, c.total_cost, c.budget_limit, c.processing_time_ms, c.created_at;\r\n```\r\n\r\n## CRITICAL: MECE BUSINESS TAXONOMY\r\n\r\n**16 COMPREHENSIVE CATEGORIES** (300+ optimized business types):\r\n\r\n```javascript\r\n// MECE structure optimized for Google Places & Foursquare APIs\r\nconst BUSINESS_CATEGORIES = {\r\n  \"Professional Services\": [\"Accounting & Tax\", \"Legal Services\", \"Consulting\", ...17 types],\r\n  \"Financial Services\": [\"Banks & Credit Unions\", \"Insurance\", \"Investment\", ...11 types],\r\n  \"Healthcare & Medical\": [\"Primary Care\", \"Specialists\", \"Dental\", ...26 types],\r\n  \"Technology & Software\": [\"IT Services\", \"Software Development\", \"Digital Marketing\", ...12 types],\r\n  \"Food & Beverage\": [\"Restaurants\", \"Cafes & Coffee\", \"Bars & Nightlife\", ...15 types],\r\n  \"Retail & Shopping\": [\"Clothing & Fashion\", \"Electronics\", \"Home & Garden\", ...18 types],\r\n  \"Real Estate & Construction\": [\"Real Estate\", \"General Contractors\", \"Architecture\", ...12 types],\r\n  \"Education & Training\": [\"Schools\", \"Universities\", \"Training Centers\", ...8 types],\r\n  \"Entertainment & Recreation\": [\"Entertainment\", \"Sports & Fitness\", \"Arts\", ...11 types],\r\n  \"Transportation & Logistics\": [\"Auto Services\", \"Transportation\", \"Logistics\", ...9 types],\r\n  \"Beauty & Personal Care\": [\"Salons & Spas\", \"Beauty Services\", \"Wellness\", ...8 types],\r\n  \"Home & Local Services\": [\"Cleaning\", \"Repair Services\", \"Landscaping\", ...12 types],\r\n  \"Manufacturing & Industrial\": [\"Manufacturing\", \"Wholesale\", \"Industrial\", ...8 types],\r\n  \"Non-Profit & Government\": [\"Non-Profit\", \"Government\", \"Religious\", ...6 types],\r\n  \"Travel & Hospitality\": [\"Hotels & Lodging\", \"Travel Services\", \"Event Planning\", ...7 types],\r\n  \"Agriculture & Environment\": [\"Farming\", \"Environmental\", \"Pet Services\", ...6 types]\r\n};\r\n```\r\n\r\n## CRITICAL: REPOSITORY CLEANLINESS ENFORCEMENT\r\n\r\n**CLEAN SUPABASE-FIRST STRUCTURE**\r\n\r\n- ✅ Core production files: Edge Functions, static frontend, database schema\r\n- ✅ `/supabase/functions/` - 2 essential Edge Functions only\r\n- ✅ `/public/` - Static frontend with MECE taxonomy integration\r\n- ✅ `/database/` - Cleaned schema with security fixes applied\r\n- ❌ NO server.js, Express routes, or Node.js backend files\r\n- ❌ NO Docker containers, Cloud Run configs, or build pipelines\r\n- ❌ NO complex deployment scripts or container orchestration\r\n\r\n**FILE ORGANIZATION RULES**\r\n\r\n- Edge Functions → `/supabase/functions/` folder ONLY\r\n- Frontend → `/public/` folder ONLY\r\n- Database → `/database/` folder ONLY\r\n- Documentation → `/docs/` folder ONLY\r\n- Archive material → `/archive/` folder ONLY\r\n\r\n**SUPABASE-FIRST APPROACH**\r\n\r\n- Main branch = CLEAN Supabase-first architecture\r\n- No legacy server infrastructure\r\n- All backend logic in Edge Functions\r\n- Maintain minimal, serverless structure\r\n\r\n## CRITICAL: DEPLOYMENT STATUS & TROUBLESHOOTING\r\n\r\n**CURRENT DEPLOYMENT STATE**\r\n\r\n- **Vercel URL**: https://prospect-bk0sh7f6l-alex-torellis-projects.vercel.app\r\n- **Edge Functions**: OPERATIONAL (business-discovery tested successfully)\r\n- **Database**: RLS policies configured, test campaign inserted\r\n- **API Keys**: All configured in Supabase Edge Function secrets\r\n- **Anon Key**: Updated to current valid JWT token\r\n\r\n**VERIFIED WORKING COMPONENTS**\r\n\r\n- ✅ Edge Function `business-discovery-optimized` returns real business data with Foursquare integration\r\n- ✅ Database tables created with proper RLS policies (no SECURITY DEFINER issues)\r\n- ✅ API integrations (Google Places, Foursquare, Hunter.io) configured\r\n- ✅ Vercel deployment successful with real-time cache invalidation\r\n- ✅ MECE taxonomy integration with 16 categories and 300+ business types\r\n- ✅ Admin Panel with quality thresholds and cost estimation\r\n\r\n**CRITICAL TROUBLESHOOTING PATTERNS**\r\n\r\n1. **\"Invalid JWT\" / 401 Errors**\r\n\r\n   - **Root Cause**: Anon key mismatch between frontend and Supabase\r\n   - **Solution**: Get current anon key from Supabase dashboard → Settings → API\r\n   - **Update**: Replace anon key in `/public/supabase-app-enhanced.js` line 9\r\n   - **Redeploy**: `cd public && vercel --prod`\r\n\r\n2. **\"API request failed: 404\" Errors**\r\n\r\n   - **Root Cause**: Database RLS policies blocking anon access\r\n   - **Solution**: Run `/database/remove-security-definer.sql` in Supabase SQL editor\r\n   - **Verify**: Check policies with `SELECT * FROM campaigns WHERE business_type = 'test'`\r\n\r\n3. **Edge Function Errors**\r\n\r\n   - **Check**: Supabase dashboard → Edge Functions → Logs\r\n   - **Verify**: API keys in Edge Function secrets are configured\r\n   - **Test**: Direct curl to Edge Function with anon Bearer token\r\n\r\n4. **Frontend Not Loading**\r\n   - **Check**: Vercel deployment status and error logs\r\n   - **Verify**: Cache headers set to `public, max-age=0, s-maxage=0, must-revalidate`\r\n   - **Test**: Access via direct Vercel URL first\r\n\r\n**DEBUGGING COMMANDS**\r\n\r\n```bash\r\n# Test optimized Edge Function directly\r\ncurl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-optimized' \\\r\n  -H 'Authorization: Bearer CURRENT_ANON_KEY' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\"businessType\": \"coffee shop\", \"location\": \"Seattle, WA\", \"maxResults\": 2}'\r\n\r\n# Check active Edge Functions (should be 2 only)\r\nsupabase functions list\r\n\r\n# Deploy frontend with cache invalidation\r\ncd public && vercel --prod\r\n\r\n# Check database permissions with new schema\r\n# Run in Supabase SQL editor: SELECT * FROM campaigns LIMIT 1;\r\n```\r\n\r\n**ENVIRONMENT VERIFICATION CHECKLIST**\r\n\r\n- [ ] Anon key in frontend matches Supabase dashboard\r\n- [ ] RLS policies created for campaigns, leads, dashboard_exports tables\r\n- [ ] Edge Function secrets contain: GOOGLE_PLACES_API_KEY, HUNTER_IO_API_KEY, NEVERBOUNCE_API_KEY, FOURSQUARE_API_KEY\r\n- [ ] Database tables exist: campaigns, leads, dashboard_exports, campaign_analytics view\r\n- [ ] Vercel deployment successful and publicly accessible\r\n- [ ] Cache headers set to `public, max-age=0, s-maxage=0, must-revalidate`\r\n\r\n## IMMEDIATE CONTEXT (No Re-explanation Needed)\r\n\r\nWhen Alex asks about:\r\n\r\n- **\"Deployment\"** → Supabase Edge Functions + static hosting (serverless)\r\n- **\"Environment setup\"** → Supabase environment variables in dashboard\r\n- **\"Backend functionality\"** → Edge Functions in `/supabase/functions/`\r\n- **\"API integration\"** → All handled in Edge Functions with native Supabase clients\r\n- **\"Database issues\"** → Direct Supabase integration with RLS policies\r\n- **\"Frontend\"** → Static HTML/JS calling Edge Functions directly\r\n- **\"Cost optimization\"** → Static hosting + serverless functions (90% cost reduction)\r\n- **\"Quality scoring\"** → Integrated into Edge Functions\r\n- **\"Export functionality\"** → `campaign-export` Edge Function\r\n- **\"Testing\"** → Direct Edge Function testing via Supabase dashboard\r\n\r\n## IMMEDIATE CONTEXT (No Re-explanation Needed)\r\n\r\nWhen Alex asks about:\r\n\r\n- **\"Deployment\"** → Google Cloud Build automatic triggers (native integration)\r\n- **\"Environment setup\"** → Supabase Vault + Cloud Build substitution variables\r\n- **\"Webhook configuration\"** → 3 production endpoints already implemented (campaign-lifecycle, cost-alert, lead-enrichment)\r\n- **\"API integration\"** → All clients in `/modules/api-clients/` (Google Places, Hunter.io, NeverBounce, Foursquare)\r\n- **\"Database issues\"** → Supabase with comprehensive schema in `/database/`\r\n- **\"Container problems\"** → Multi-stage Dockerfile + Cloud Build optimization\r\n- **\"Cost optimization\"** → Enhanced Quality Scorer v3.0 with cost-efficient validation pipeline\r\n- **\"Quality scoring\"** → `/modules/validators/enhanced-quality-scorer.js` (35-45% qualification rates)\r\n- **\"Build issues\"** → Check Cloud Build logs in Google Cloud Console\r\n- **\"Webhook setup\"** → Follow `/docs/CLOUD_NATIVE_WEBHOOK_SETUP.md`\r\n- **\"Testing\"** → Use `npm run test` or check testing branch\r\n\r\n## ALEX'S TECHNICAL PROFILE\r\n\r\n- **Background**: No coding experience but highly technical\r\n- **AI Dependency**: Relies heavily on AI assistance for debugging and architecture\r\n- **Primary Models**: Claude Sonnet 4.0, GPT-5 occasionally\r\n- **Environment**: GitHub Codespaces exclusively\r\n- **Focus**: Lead generation with zero fake data tolerance\r\n- **Usage Pattern**: Debugging, testing, cloud-native architecture, monitoring\r\n- **Deployment Preference**: Cloud-native platform specialization over complex CI/CD\r\n\r\n## RESPONSE OPTIMIZATION RULES\r\n\r\n1. **NEVER re-explain project architecture** unless specifically asked with \"explain the architecture\"\r\n2. **ALWAYS reference existing files/scripts** for implementation details\r\n3. **PRIORITIZE troubleshooting** over teaching fundamentals\r\n4. **ASSUME familiarity** with ProspectPro's core concepts\r\n5. **FOCUS on immediate problem resolution** not educational content\r\n6. **USE existing npm scripts** rather than creating new implementations\r\n7. **REFERENCE the working production system** rather than theoretical solutions\r\n\r\n## CURRENT PRODUCTION ARCHITECTURE (ESTABLISHED - DO NOT RE-EXPLAIN)\r\n\r\n### **Supabase-First Serverless Pipeline**\r\n\r\n```\r\nStatic Frontend → Supabase Edge Functions → Supabase Database\r\n                                      ↓\r\n                     Supabase Environment Variables → External APIs\r\n                                      ↓\r\n                     Real-time Database Updates → Live Frontend Updates\r\n```\r\n\r\n### **Edge Function Infrastructure (Production Ready)**\r\n\r\n```\r\n/supabase/functions/business-discovery    # Main business discovery logic\r\n/supabase/functions/campaign-export       # CSV export functionality\r\n/public/index-supabase.html              # Static frontend\r\n/public/supabase-app.js                  # Frontend with Supabase client\r\n/database/supabase-first-schema.sql      # Database schema\r\n```\r\n\r\n### File Structure (REFERENCE ONLY)\r\n\r\n```\r\n/supabase/functions/business-discovery/  # Core discovery Edge Function\r\n/supabase/functions/campaign-export/     # Export Edge Function\r\n/public/index-supabase.html              # Static frontend\r\n/public/supabase-app.js                  # Frontend JavaScript\r\n/database/supabase-first-schema.sql      # Database setup\r\n/docs/                                   # Documentation\r\n/archive/                                # Legacy files (deprecated)\r\n```\r\n\r\n### Current Working Commands (USE THESE)\r\n\r\n```bash\r\n# Edge Function deployment\r\nsupabase functions deploy business-discovery\r\nsupabase functions deploy campaign-export\r\n\r\n# Local development\r\ncd public && python3 -m http.server 8080\r\n\r\n# Static deployment\r\nnpm run build:static\r\ngsutil rsync -r ./dist/ gs://prospectpro-static-frontend/\r\n\r\n# Database setup: Run SQL in Supabase dashboard\r\n```\r\n\r\n### API Integration Stack (WORKING)\r\n\r\n- **Google Places API**: Business discovery integrated in Edge Functions\r\n- **Hunter.io**: Email discovery in Edge Functions\r\n- **NeverBounce**: Email verification in Edge Functions\r\n- **Supabase Database**: Native integration with campaigns and leads tables\r\n- **Supabase Real-time**: Ready for live updates and notifications\r\n- **Static Hosting**: Cloud Storage, Vercel, or Netlify deployment\r\n\r\n### MCP Infrastructure (ENHANCED v3.0)\r\n\r\n- **Production Server**: 28 tools for monitoring, database analytics, API testing, filesystem analysis, system diagnostics\r\n- **Development Server**: 8 specialized tools for new API integrations, performance benchmarking, code generation\r\n- **Troubleshooting Server**: 6 specialized tools for Supabase debugging, anon key diagnosis, RLS validation, Edge Function testing\r\n- **Architecture**: Consolidated from 5 servers to 3 optimized servers (70% efficiency improvement)\r\n- **Integration**: Auto-configured in VS Code for AI-enhanced development workflows with systematic debugging\r\n- **Status**: Production-ready with comprehensive test coverage and automated troubleshooting (`npm run test` in `/mcp-servers/`)\r\n\r\n## PROBLEM-SOLVING APPROACH\r\n\r\n### For Environment Issues:\r\n\r\n1. Check Supabase environment variables in dashboard\r\n2. Verify Edge Function deployment status\r\n3. Test Edge Functions via Supabase dashboard\r\n4. Validate database schema and RLS policies\r\n\r\n### For API Issues:\r\n\r\n1. Check Edge Function logs in Supabase dashboard\r\n2. Verify API keys in Supabase environment variables\r\n3. Test individual Edge Functions with curl\r\n4. Review Edge Function error responses\r\n\r\n### For Deployment Issues:\r\n\r\n1. Check Edge Function deployment status: `supabase functions list`\r\n2. Verify static frontend files are correct\r\n3. Test Edge Functions: `supabase functions serve`\r\n4. Check database connectivity and permissions\r\n\r\n### For Database Issues:\r\n\r\n1. Review schema in `/database/supabase-first-schema.sql`\r\n2. Check RLS policies in Supabase dashboard\r\n3. Verify Edge Function database connections\r\n4. Test database queries in Supabase SQL editor\r\n\r\n## CURRENT OPTIMIZATIONS (ALREADY IMPLEMENTED)\r\n\r\n- **Supabase-first architecture** with Edge Functions for all backend logic\r\n- **Static frontend deployment** with minimal hosting costs\r\n- **Enhanced Quality Scoring v3.0** integrated into Edge Functions\r\n- **Global edge deployment** with <100ms cold starts\r\n- **Native database integration** with Row Level Security\r\n- **Real-time capabilities** ready via Supabase subscriptions\r\n- **Cost optimization** through serverless functions (90% cost reduction)\r\n- **Zero-container deployment** with static hosting + Edge Functions\r\n- **Minimal codebase maintenance** with 80% code reduction\r\n\r\n## DEVELOPMENT WORKFLOW (ESTABLISHED)\r\n\r\n1. **Main branch** = Production (Supabase Edge Functions + static frontend)\r\n2. **Edge Functions** = Backend logic deployed to Supabase\r\n3. **Static Frontend** = HTML/JS deployed to static hosting\r\n4. **Database** = Managed entirely by Supabase with RLS\r\n5. **Development** = Local testing with `supabase functions serve`\r\n\r\n## DEBUGGING PATTERNS (OPTIMIZED FOR ALEX)\r\n\r\n**DEPLOYMENT ISSUES (MOST COMMON)**\r\n\r\n1. **Frontend shows \"Discovery Failed: API request failed: 404\"**\r\n\r\n   - Check anon key in `/public/supabase-app.js` matches Supabase dashboard\r\n   - Verify RLS policies exist: run `/database/rls-setup.sql`\r\n   - Test Edge Function directly with curl command above\r\n   - Redeploy frontend after fixes: `cd public && vercel --prod`\r\n\r\n2. **\"Invalid JWT\" in Edge Function logs**\r\n\r\n   - Get fresh anon key from Supabase dashboard → Settings → API\r\n   - Update anon key in frontend and redeploy\r\n   - Verify database permissions with test query\r\n\r\n3. **Edge Functions not responding**\r\n\r\n   - Check Supabase dashboard → Edge Functions → Logs\r\n   - Verify API keys in Edge Function secrets\r\n   - Test individual functions via Supabase dashboard\r\n\r\n4. **Vercel deployment protection/401 errors**\r\n   - Go to Vercel dashboard → Settings → Deployment Protection\r\n   - Disable any password protection or team restrictions\r\n   - Ensure site is publicly accessible\r\n\r\n**SYSTEMATIC DEBUGGING APPROACH**\r\n\r\n1. **Test Edge Function directly** (bypasses frontend issues)\r\n2. **Check database permissions** (RLS policies)\r\n3. **Verify anon key synchronization** (frontend vs Supabase)\r\n4. **Test Vercel deployment** (public access)\r\n5. **Check browser console** for frontend errors\r\n\r\n**WORKING CONFIGURATION REFERENCE**\r\n\r\n- **Edge Function URL**: https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery\r\n- **Current Vercel URL**: https://prospect-bk0sh7f6l-alex-torellis-projects.vercel.app\r\n- **Database Schema**: `/database/rls-setup.sql` (verified working)\r\n- **Frontend Config**: `/public/supabase-app.js` with current anon key\r\n\r\n**ENHANCED MCP TROUBLESHOOTING**\r\n\r\nUse the ProspectPro Troubleshooting MCP Server for systematic debugging:\r\n\r\n```bash\r\n# Start troubleshooting server\r\ncd /workspaces/ProspectPro/mcp-servers\r\nnpm run start:troubleshooting\r\n\r\n# Available tools:\r\n# test_edge_function - Test Supabase Edge Function connectivity and authentication\r\n# validate_database_permissions - Check database RLS policies and permissions\r\n# check_vercel_deployment - Validate Vercel deployment status and configuration\r\n# diagnose_anon_key_mismatch - Compare anon keys between frontend and Supabase\r\n# run_rls_diagnostics - Generate and execute RLS diagnostic queries\r\n# generate_debugging_commands - Create debugging commands for current configuration\r\n```\r\n\r\n**MCP TROUBLESHOOTING WORKFLOW**\r\n\r\n1. **test_edge_function**: Verify backend works independently\r\n2. **validate_database_permissions**: Check RLS policy configuration\r\n3. **diagnose_anon_key_mismatch**: Detect authentication sync issues\r\n4. **check_vercel_deployment**: Validate frontend deployment status\r\n5. **generate_debugging_commands**: Get custom debug scripts for current config\r\n\r\n**LAST RESORT DEBUGGING**\r\n\r\n1. Check Edge Function logs in Supabase dashboard\r\n2. Test database queries directly in Supabase SQL editor\r\n3. Use browser dev tools to inspect network requests\r\n4. Verify all environment variables in Supabase settings\r\n5. Use MCP troubleshooting server for automated diagnosis\r\n\r\n## COST OPTIMIZATION FOCUS\r\n\r\n- **Edge Functions**: Serverless, pay-per-invocation\r\n- **Database**: Supabase included usage, RLS for security\r\n- **Static Hosting**: $1-5/month vs $10-50/month containers\r\n- **No servers**: Zero infrastructure management\r\n\r\n## RESPONSE FORMAT PREFERENCES\r\n\r\n- **Immediate solutions** over explanations\r\n- **Reference existing code** rather than writing new implementations\r\n- **Use established scripts** rather than manual processes\r\n- **Focus on debugging** rather than architecture discussions\r\n- **Provide specific file paths** and command references\r\n- **Assume production system knowledge** unless explicitly asked to explain\r\n\r\n## NEVER REPEAT (SAVE PREMIUM REQUESTS)\r\n\r\n- Supabase-first architecture explanations\r\n- Edge Function setup procedures (automated)\r\n- Static hosting deployment (documented)\r\n- Database schema explanations (in `/database/`)\r\n- Cost optimization strategies (implemented)\r\n- Serverless benefits (established)\r\n\r\nThis instruction set prioritizes rapid problem resolution and eliminates repetitive context discussions to maximize premium request efficiency.\r\n"}}},
{"type":"measure","name":"lsp.did_open","count":48,"duration":0.225},
{"type":"mark","name":"lsp.did_change_batched","count":67,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"lsp.did_change_batched","count":67,"duration":15.556},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":263,"duration":0.015},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":264,"duration":0.014},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":72,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",99]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":23,"duration":0.576},
{"type":"mark","name":"tsc.op.op_load","count":234,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"tsc.op.op_load","count":234,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":235,"args":"file:///workspaces/ProspectPro/API_KEYS_CONFIGURATION_GUIDE.md"},
{"type":"measure","name":"tsc.op.op_load","count":235,"duration":0.045},
{"type":"mark","name":"tsc.op.op_load","count":236,"args":"file:///workspaces/ProspectPro/ENRICHMENT_APIS_IMPLEMENTED.md"},
{"type":"measure","name":"tsc.op.op_load","count":236,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":237,"args":"file:///workspaces/ProspectPro/ENRICHMENT_DEPLOYMENT_COMPLETE.md"},
{"type":"measure","name":"tsc.op.op_load","count":237,"duration":0.051},
{"type":"mark","name":"tsc.op.op_load","count":238,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_CHECKLIST.md"},
{"type":"measure","name":"tsc.op.op_load","count":238,"duration":0.052},
{"type":"mark","name":"tsc.op.op_load","count":239,"args":"file:///workspaces/ProspectPro/PROSPECTPRO_V4.2_RELEASE_NOTES.md"},
{"type":"measure","name":"tsc.op.op_load","count":239,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":240,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":240,"duration":0.073},
{"type":"mark","name":"tsc.op.op_resolve","count":991,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":991,"duration":0.126},
{"type":"mark","name":"tsc.op.op_resolve","count":992,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":992,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":993,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":993,"duration":0.102},
{"type":"mark","name":"tsc.op.op_resolve","count":994,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":994,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":995,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":995,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":996,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":996,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":997,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":997,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":998,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":998,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":999,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":999,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1000,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1000,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1001,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1001,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1002,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1002,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1003,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1003,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1004,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1004,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1005,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1005,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1006,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1006,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1007,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1007,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1008,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1008,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1009,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1009,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1010,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1010,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1011,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1011,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1012,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1012,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1013,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1013,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1014,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1014,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1015,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1015,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1016,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1016,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1017,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1017,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1018,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1018,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1019,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1019,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1020,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1020,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1021,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1021,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1022,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1022,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1023,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1023,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1024,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1024,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1025,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1025,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1026,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1026,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1027,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1027,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1028,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1028,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1029,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1029,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":1030,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1030,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1031,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1031,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1032,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1032,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1033,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1033,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1034,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1034,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":1035,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1035,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1036,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1036,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1037,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1037,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1038,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1038,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1039,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1039,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1040,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1040,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1041,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1041,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1042,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1042,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1043,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1043,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1044,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1044,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1045,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1045,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1046,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1046,"duration":0.011},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":65,"duration":0.024},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":72,"duration":235.828},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":72,"duration":237.077},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":41,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":41,"duration":0.988},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":41,"duration":1.416},
{"type":"measure","name":"lsp.diagnostic","count":265,"duration":238.745},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":73,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",99]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":73,"duration":5.489},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":73,"duration":7.333},
{"type":"measure","name":"lsp.diagnostic","count":266,"duration":7.65},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":267,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":74,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",99]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":74,"duration":32.439},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":74,"duration":34.583},
{"type":"measure","name":"lsp.diagnostic","count":268,"duration":34.802},
{"type":"mark","name":"lsp.did_change_batched","count":68,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"lsp.did_change_batched","count":68,"duration":8.209},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":269,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":75,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",99]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":75,"duration":17.464},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":75,"duration":17.609},
{"type":"measure","name":"lsp.diagnostic","count":270,"duration":17.777},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":76,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",99]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":76,"duration":28.35},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":76,"duration":28.497},
{"type":"measure","name":"lsp.diagnostic","count":271,"duration":28.672},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":66,"duration":1.108},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":272,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":273,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":274,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":275,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":276,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":277,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":278,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":279,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":280,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":281,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":282,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":69,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"lsp.did_change_batched","count":69,"duration":16.677},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":283,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":284,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":67,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":285,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":286,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":287,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":288,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":289,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":290,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":291,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":292,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":293,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":294,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":295,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":296,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":70,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"lsp.did_change_batched","count":70,"duration":8.638},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":297,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":298,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":68,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":299,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":300,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":301,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":302,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":303,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":304,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":305,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":306,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":307,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":308,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":309,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":310,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.2.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":49,"duration":0.063},
{"type":"mark","name":"lsp.did_change_batched","count":71,"args":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.2.md"},
{"type":"measure","name":"lsp.did_change_batched","count":71,"duration":49.853},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":311,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":312,"duration":0.054},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":69,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":313,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":314,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":315,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":316,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":317,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":318,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":319,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":320,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":321,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":322,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":323,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":324,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":325,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":326,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/README.md","languageId":"markdown","version":1,"text":"# ProspectPro Enhanced MCP (Model Context Protocol) Implementation v3.0\n\n## Overview\n\nThis directory contains the **enhanced MCP server implementation** that provides AI assistants with comprehensive access to ProspectPro's verified business intelligence data, APIs, diagnostics, and **troubleshooting capabilities**. Version 3.0 includes specialized troubleshooting for verified data architecture and zero fake data policy enforcement.\n\n**Architecture**: 3 specialized servers for verified data production, development, and troubleshooting workflows  \n**Tools**: 42 tools total across all servers (6 troubleshooting + 36 verified data tools)  \n**Status**: Production-ready with verified data architecture and zero fake data policy\n\n## Enhanced MCP Servers v3.0 - Verified Data Architecture\n\n### 1. Production Server (`production-server.js`) - **v2.1.0**\n\n**Purpose**: Comprehensive verified business intelligence monitoring, contact verification analytics, Apollo API diagnostics, and professional data source management (28 tools)\n\n**Verified Data Capabilities**:\n\n- Contact verification status tracking\n- Apollo API integration monitoring\n- Professional licensing validation\n- Chamber of Commerce verification tracking\n- Fake data pattern detection and elimination\n\n### 2. Development Server (`development-server.js`) - **v1.1.0**\n\n**Purpose**: Verified contact discovery development, Apollo API testing, professional data source integration, and contact verification benchmarking (8 tools)\n\n**Enhanced Features**:\n\n- Apollo contact discovery testing\n- Professional licensing API validation\n- Chamber directory integration testing\n- Zero fake data policy enforcement\n\n### 3. 🆕 Troubleshooting Server (`supabase-troubleshooting-server.js`) - **v1.1.0**\n\n**Purpose**: Systematic debugging of verified data architecture, contact verification issues, and zero fake data policy violations\n\n**Verified Data Troubleshooting Capabilities** (6 enhanced tools):\n\n#### Verified Contact Testing\n\n- `test_edge_function` - Test verified contact discovery with Apollo API authentication\n- `generate_debugging_commands` - Create contact verification curl commands and debugging scripts\n\n#### Professional Data Source Diagnosis\n\n- `validate_database_permissions` - Check verified contact RLS policies and Apollo integration permissions\n- `diagnose_anon_key_mismatch` - Compare frontend vs Supabase authentication for contact APIs\n- `run_rls_diagnostics` - Generate professional data verification diagnostic queries\n\n#### Verified Data Deployment Validation\n\n- `check_vercel_deployment` - Validate deployment with verified contact display and fake data elimination\n\n**When to Use Troubleshooting Server**:\n\n- Verified contact discovery fails or returns fake data patterns\n- Apollo API returns authentication errors\n- Professional licensing verification fails\n- Contact verification status not updating\n- Fake email patterns appearing in exports\n- Chamber of Commerce directory access issues\n\n### 1. Production Server (`production-server.js`) - **v2.0.0**\n\n**Purpose**: Comprehensive production monitoring, database analytics, system diagnostics, API testing, and filesystem analysis\n\n**Enhanced Capabilities** (28 tools):\n\n#### Database Analytics (4 tools)\n\n- Query enhanced leads with advanced filters and analytics\n- Get campaign statistics and performance metrics\n- Analyze lead quality patterns and scoring distribution\n- Retrieve API cost breakdowns and budget analysis\n\n#### System Monitoring (7 tools)\n\n- System health monitoring with Docker integration\n- Diagnostics file analysis and performance tracking\n- Log analysis and error pattern detection\n- Configuration validation across environments\n- Performance reporting with optimization suggestions\n\n#### API Testing (8 tools)\n\n- Test Google Places API with sample queries and rate limiting\n- Test Foursquare Places API integration with caching\n- Test Hunter.io email discovery with validation\n- Verify email deliverability with NeverBounce\n- Simulate complete lead discovery pipeline\n- API cost tracking and quota monitoring\n- Performance benchmarking across API endpoints\n\n#### Filesystem Analysis (6 tools)\n\n- Analyze project structure and architectural patterns\n- Search for code patterns and potential issues\n- Analyze API client implementations for consistency\n- **Critical**: Check for fake data violations (zero tolerance)\n- Analyze error handling patterns across codebase\n- Generate code quality reports\n\n#### Production Monitoring (3 tools)\n\n- Health check endpoints monitoring\n- Production deployment status tracking\n- Real-time system metrics collection\n\n### 2. Development Server (`development-server.js`) - **v1.0.0**\n\n**Purpose**: Development utilities, new API integration testing, and performance benchmarking\n\n**Specialized Capabilities** (8 tools):\n\n#### New API Integration (4 tools)\n\n- Test US Chamber of Commerce API integration\n- Test Better Business Bureau (BBB) API\n- Test LinkedIn Sales Navigator API patterns\n- Test ZoomInfo API integration patterns\n\n#### Development Utilities (2 tools)\n\n- Performance benchmarking across API clients\n- Generate API client templates for new integrations\n\n#### Code Generation (2 tools)\n\n- Generate boilerplate for new API clients\n- Create test suites for API integrations\n\n## Quick Start\n\n```bash\n# Start production monitoring\nnpm run start:production\n\n# Start development server\nnpm run start:development\n\n# Start troubleshooting server (for debugging deployment issues)\nnpm run start:troubleshooting\n\n# Start all servers\nnpm run start:all\n\n# Test all servers\nnpm run test\n```\n\n## 🚨 Quick Troubleshooting (NEW in v3.0)\n\n### Frontend Shows \"Discovery Failed\" or \"API request failed: 404\"\n\n**IMMEDIATE DIAGNOSIS** with MCP Troubleshooting Server:\n\n```bash\nnpm run start:troubleshooting\n```\n\nIn your AI assistant, use these MCP tools in systematic order:\n\n1. `test_edge_function` - Verify backend works independently of frontend\n2. `diagnose_anon_key_mismatch` - Check for authentication sync issues (90% of problems)\n3. `validate_database_permissions` - Verify RLS policies are configured correctly\n4. `check_vercel_deployment` - Validate frontend deployment status\n5. `generate_debugging_commands` - Get custom debugging scripts for your config\n\n**Manual Quick Test** (if MCP not available):\n\n```bash\n# Test Edge Function directly (bypasses frontend completely)\ncurl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery' \\\n  -H 'Authorization: Bearer YOUR_CURRENT_ANON_KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"businessType\": \"test\", \"location\": \"test\"}'\n```\n\n**Expected Results**: Real business data response = backend working, frontend issue  \n**If 401 error**: Authentication or RLS policy issue\n\n### 3. VS Code Configuration\n\nThe consolidated MCP configuration is automatically set up in `.vscode/settings.json`:\n\n```json\n{\n  \"mcp.enable\": true,\n  \"mcp.servers\": {\n    \"prospectpro-production\": {\n      \"enabled\": true,\n      \"autoStart\": true,\n      \"description\": \"Enhanced Production Server - 28 tools\"\n    },\n    \"prospectpro-development\": {\n      \"enabled\": true,\n      \"autoStart\": false,\n      \"description\": \"Development Server - 8 specialized tools\"\n    }\n  }\n}\n```\n\n### 4. Environment Requirements\n\nConsolidated servers require the same environment variables as the main application:\n\n- `SUPABASE_URL`: Database connection\n- `SUPABASE_SECRET_KEY`: Database access\n- API keys for external services (Google Places, Hunter.io, NeverBounce, Foursquare)\n- Development server requires additional API keys for new integrations (US Chamber, BBB, etc.)\n\n## Usage Examples\n\n### Database Queries via AI\n\n```\n\"Show me the top 10 leads with confidence scores above 85\"\n\"Analyze lead quality patterns for restaurants in New York\"\n\"What are the API costs for the last 24 hours?\"\n```\n\n### API Testing via AI\n\n```\n\"Test the Google Places API with a search for 'coffee shops in Seattle'\"\n\"Simulate lead discovery for 'restaurants' in 'San Francisco'\"\n\"Verify the email address john@example.com\"\n```\n\n### Codebase Analysis via AI\n\n```\n\"Analyze the project structure and identify key components\"\n\"Check for any fake data generation patterns in the code\"\n\"Find all error handling patterns in API clients\"\n```\n\n### System Monitoring via AI\n\n```\n\"Check the overall system health status\"\n\"Analyze recent application logs for errors\"\n\"Generate a performance report with recommendations\"\n```\n\n## Advanced AI Workflows\n\n### 1. Lead Quality Analysis\n\nAI can now directly query your database to provide insights like:\n\n- \"Which business types have the highest confidence scores?\"\n- \"What's the correlation between email confidence and overall lead quality?\"\n- \"Show me leads that failed validation and why\"\n\n### 2. API Cost Optimization\n\nAI can analyze your API usage patterns:\n\n- \"Which APIs are costing the most money?\"\n- \"Are we approaching any quota limits?\"\n- \"Suggest optimizations to reduce API costs\"\n\n### 3. Code Quality Assurance\n\nAI can continuously monitor code quality:\n\n- \"Are there any patterns that could lead to fake data generation?\"\n- \"Analyze error handling coverage across all modules\"\n- \"Check if all API clients follow the same patterns\"\n\n### 4. System Performance Monitoring\n\nAI can provide system insights:\n\n- \"Is the system performing optimally?\"\n- \"What are the largest files that might be slowing down development?\"\n- \"Are there any configuration issues that need attention?\"\n\n## Consolidated MCP Server Management\n\n### Consolidated Server Commands\n\n```bash\n# Start production server (28 tools - auto-starts with VS Code)\nnpm run start:production\n\n# Start development server (8 tools - manual start)\nnpm run start:development\n\n# Start both servers for comprehensive development\nnpm run start:all\n```\n\n### Server Status Monitoring\n\n```bash\n# Test both consolidated servers\nnpm run test\n\n# Check detailed test results and performance metrics\ncat test-results.json\n\n# Validate specific server capabilities\nnode -e \"console.log(require('./production-server.js').tools.length + ' production tools')\"\nnode -e \"console.log(require('./development-server.js').tools.length + ' development tools')\"\n```\n\n### Performance Benefits\n\n**Consolidation Results**:\n\n- **Servers**: 5 → 2 (60% reduction)\n- **Memory Usage**: ~40% reduction in MCP processes\n- **Startup Time**: ~50% faster initialization\n- **Tools Available**: 36 total (100% preservation)\n- **Test Coverage**: Comprehensive validation suite\n\n## Security Considerations\n\n### Data Access Control\n\n- MCP servers use the same authentication as the main application\n- Database access is limited to read-only operations where appropriate\n- API keys are passed through environment variables only\n\n### AI Context Boundaries\n\n- MCP servers provide structured access to prevent unauthorized operations\n- Each server has defined capabilities and cannot exceed its scope\n- Error handling prevents sensitive information leakage\n\n## Troubleshooting\n\n### Common Issues\n\n1. **MCP Servers Not Starting**\n\n   - Check dependencies: `npm run mcp:install`\n   - Verify environment variables are set\n   - Run tests: `npm run mcp:test`\n\n2. **VS Code Not Recognizing MCP**\n\n   - Restart VS Code after configuration changes\n   - Check `.vscode/mcp-config.json` syntax\n   - Verify MCP is enabled in settings\n\n3. **Database Connection Issues**\n\n   - Check Supabase credentials\n   - Verify database server status\n   - Run diagnostics: `curl http://localhost:3000/diag`\n\n4. **API Testing Failures**\n   - Verify API keys are configured\n   - Check API quota limits\n   - Test individual APIs outside MCP first\n\n## Development Notes\n\n### Adding New MCP Tools\n\n1. Add tool definition to the server's `tools/list` handler\n2. Implement tool execution in `tools/call` handler\n3. Update this documentation\n4. Add tests to `test-servers.js`\n\n### Best Practices\n\n- Keep tools focused on specific functionality\n- Provide detailed error messages\n- Include usage examples in tool descriptions\n- Implement proper error handling and validation\n- Cache expensive operations where appropriate\n\n## Migration from v1.0 (Individual Servers)\n\n### What Changed in v2.0 Consolidation\n\n**Before (v1.0)**:\n\n- 5 separate servers: database, api, filesystem, monitoring, production\n- Complex management and startup procedures\n- Higher memory overhead\n- Context switching between servers\n\n**After (v2.0)**:\n\n- 2 consolidated servers: production (28 tools) + development (8 tools)\n- Simplified management and configuration\n- Optimized resource usage\n- Unified tool access patterns\n\n### Backward Compatibility\n\nAll 36 original tools are preserved with identical functionality. AI workflows continue to work without changes.\n\n### Archived Components\n\nOriginal individual servers are preserved in `/archive/mcp-servers-individual/` for reference.\n\n## Integration with ProspectPro Architecture\n\nThe consolidated MCP implementation enhances ProspectPro's core principles:\n\n### Zero Fake Data Policy ✅\n\n- **Production server** actively monitors for fake data patterns (6 filesystem analysis tools)\n- All database queries return real, validated business data (4 database tools)\n- API testing uses actual external service endpoints (8 API testing tools)\n- **Development server** includes templates that enforce real data patterns\n\n### Cost Optimization ✅\n\n- **Consolidated architecture** reduces infrastructure overhead by 60%\n- API tracking and quota monitoring (8 API tools in production server)\n- Budget analysis and cost breakdown reporting (database analytics)\n- Performance benchmarking tools (development server)\n\n### Performance Monitoring ✅\n\n- **Enhanced monitoring capabilities** (7 system monitoring tools)\n- Real-time health checks and diagnostics\n- Comprehensive performance analysis and recommendations\n- Docker integration and deployment tracking\n\n### AI-Enhanced Development Workflow\n\nThis v2.0 consolidated MCP implementation transforms ProspectPro development into a **streamlined AI-enhanced workflow** where intelligent assistants have direct access to:\n\n- **Real business data** through optimized database analytics\n- **Live API testing** with cost and performance monitoring\n- **Comprehensive system insights** through unified diagnostics\n- **Development acceleration** through specialized tooling\n\n**Result**: 60% fewer processes, 100% functionality preservation, enhanced AI productivity.\n"}}},
{"type":"measure","name":"lsp.did_open","count":50,"duration":0.145},
{"type":"mark","name":"lsp.did_change_batched","count":72,"args":"file:///workspaces/ProspectPro/mcp-servers/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":72,"duration":12.179},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":327,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":70,"duration":0.02},
{"type":"mark","name":"lsp.did_change_batched","count":73,"args":"file:///workspaces/ProspectPro/mcp-servers/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":73,"duration":18.579},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":328,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":329,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":71,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":330,"duration":0.001},
{"type":"mark","name":"lsp.did_close","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":99,"duration":0.136},
{"type":"measure","name":"lsp.did_close","count":24,"duration":1.355},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":331,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":332,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":333,"duration":0.017},
{"type":"mark","name":"lsp.did_change_batched","count":74,"args":"file:///workspaces/ProspectPro/mcp-servers/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":74,"duration":10.35},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":334,"duration":0.014},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":335,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":72,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":336,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":337,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":338,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":77,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",100]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":24,"duration":0.639},
{"type":"mark","name":"tsc.op.op_load","count":241,"args":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.2.md"},
{"type":"measure","name":"tsc.op.op_load","count":241,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":242,"args":"file:///workspaces/ProspectPro/mcp-servers/README.md"},
{"type":"measure","name":"tsc.op.op_load","count":242,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1047,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1047,"duration":0.096},
{"type":"mark","name":"tsc.op.op_resolve","count":1048,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1048,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1049,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1049,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1050,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1050,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1051,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1051,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1052,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1052,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1053,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1053,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1054,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1054,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1055,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1055,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1056,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1056,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1057,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1057,"duration":0.007},
{"type":"mark","name":"tsc.op.op_resolve","count":1058,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1058,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1059,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1059,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1060,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1060,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1061,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1061,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1062,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1062,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1063,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1063,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1064,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1064,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1065,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1065,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1066,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1066,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1067,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1067,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1068,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1068,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1069,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1069,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1070,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1070,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":1071,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1071,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1072,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1072,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1073,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1073,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1074,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1074,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1075,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1075,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1076,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1076,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1077,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1077,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":1078,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1078,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1079,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1079,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1080,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1080,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1081,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1081,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1082,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1082,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1083,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1083,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1084,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1084,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1085,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1085,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":1086,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1086,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1087,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1087,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1088,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1088,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1089,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1089,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1090,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1090,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1091,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1091,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1092,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1092,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1093,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1093,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1094,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1094,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1095,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1095,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1096,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1096,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":1097,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1097,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1098,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1098,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1099,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1099,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1100,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1100,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1101,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1101,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1102,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1102,"duration":0.012},
{"type":"mark","name":"tsc.op.op_release","count":12,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":12,"duration":1.827},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":77,"duration":175.803},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":77,"duration":176.08},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":42,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":42,"duration":66.685},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":42,"duration":66.78},
{"type":"measure","name":"lsp.diagnostic","count":339,"duration":243.06},
{"type":"mark","name":"lsp.did_change_batched","count":75,"args":"file:///workspaces/ProspectPro/mcp-servers/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":75,"duration":27.884},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":340,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":78,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",100]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":78,"duration":4.935},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":78,"duration":5.052},
{"type":"measure","name":"lsp.diagnostic","count":341,"duration":5.26},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":73,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":342,"duration":0.135},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":79,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",100]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":79,"duration":24.51},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":79,"duration":24.711},
{"type":"measure","name":"lsp.diagnostic","count":343,"duration":24.927},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":344,"duration":0.043},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":345,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":80,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",100]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":80,"duration":17.059},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":80,"duration":17.226},
{"type":"measure","name":"lsp.diagnostic","count":346,"duration":17.391},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":81,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",100]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":81,"duration":20.786},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":81,"duration":20.899},
{"type":"measure","name":"lsp.diagnostic","count":347,"duration":21.795},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":348,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":349,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":350,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":351,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":352,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":353,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":354,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":355,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"measure","name":"lsp.did_open","count":51,"duration":6.808},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":100,"duration":0.144},
{"type":"mark","name":"lsp.did_open","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DOCUMENTATION_UPDATE_SUMMARY.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":52,"duration":0.041},
{"type":"mark","name":"lsp.did_change_batched","count":76,"args":"file:///workspaces/ProspectPro/DOCUMENTATION_UPDATE_SUMMARY.md"},
{"type":"measure","name":"lsp.did_change_batched","count":76,"duration":20.677},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":356,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":357,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":74,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":82,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts",101]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":25,"duration":0.391},
{"type":"mark","name":"tsc.op.op_load","count":243,"args":"file:///workspaces/ProspectPro/DOCUMENTATION_UPDATE_SUMMARY.md"},
{"type":"measure","name":"tsc.op.op_load","count":243,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":244,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_load","count":244,"duration":0.065},
{"type":"mark","name":"tsc.op.op_resolve","count":1103,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1103,"duration":0.11},
{"type":"mark","name":"tsc.op.op_resolve","count":1104,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1104,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1105,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1105,"duration":0.069},
{"type":"mark","name":"tsc.op.op_resolve","count":1106,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1106,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1107,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1107,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1108,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1108,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1109,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1109,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1110,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1110,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1111,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1111,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1112,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1112,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":1113,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1113,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1114,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1114,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1115,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1115,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1116,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1116,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1117,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1117,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1118,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1118,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1119,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1119,"duration":0.069},
{"type":"mark","name":"tsc.op.op_resolve","count":1120,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1120,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1121,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1121,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1122,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1122,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1123,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1123,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1124,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1124,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1125,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1125,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1126,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1126,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1127,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1127,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1128,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1128,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1129,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1129,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1130,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1130,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1131,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1131,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1132,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1132,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1133,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1133,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1134,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1134,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1135,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1135,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1136,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1136,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1137,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1137,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1138,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1138,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1139,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1139,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1140,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1140,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1141,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1141,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1142,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1142,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1143,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1143,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1144,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1144,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1145,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1145,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1146,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1146,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1147,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1147,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1148,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1148,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1149,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1149,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1150,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1150,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1151,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1151,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1152,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1152,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1153,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1153,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1154,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1154,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1155,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1155,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1156,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1156,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1157,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1157,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1158,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1158,"duration":0.02},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":82,"duration":135.268},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":82,"duration":135.425},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":43,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":43,"duration":1.163},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":43,"duration":1.225},
{"type":"measure","name":"lsp.diagnostic","count":358,"duration":138.722},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":359,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":83,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts",101]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":83,"duration":27.027},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":83,"duration":27.282},
{"type":"measure","name":"lsp.diagnostic","count":360,"duration":27.542},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":361,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":362,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":84,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts",101]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":84,"duration":14.85},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":84,"duration":14.98},
{"type":"measure","name":"lsp.diagnostic","count":363,"duration":15.155},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":85,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",101]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":85,"duration":22.228},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":85,"duration":22.375},
{"type":"measure","name":"lsp.diagnostic","count":364,"duration":22.596},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":365,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":366,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":367,"duration":0.025},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":368,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":369,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":370,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":371,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":86,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",101]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":86,"duration":26.296},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":86,"duration":26.421},
{"type":"measure","name":"lsp.diagnostic","count":372,"duration":26.613},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":373,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":77,"args":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.2.md"},
{"type":"measure","name":"lsp.did_change_batched","count":77,"duration":1.176},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":374,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":75,"duration":0.021},
{"type":"mark","name":"lsp.did_change_batched","count":78,"args":"file:///workspaces/ProspectPro/DOCUMENTATION_UPDATE_SUMMARY.md"},
{"type":"measure","name":"lsp.did_change_batched","count":78,"duration":4.754},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":375,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":376,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":76,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":77,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":78,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":377,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":378,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":379,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":380,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":381,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":382,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":383,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":384,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":385,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":386,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":387,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":388,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":389,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":390,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":391,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":392,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":393,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":394,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":395,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":396,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":397,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":398,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":399,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":400,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":401,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":402,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":403,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":87,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",101]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":87,"duration":159.05},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":87,"duration":159.301},
{"type":"measure","name":"lsp.diagnostic","count":404,"duration":159.552},
{"type":"mark","name":"lsp.code_action","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":7,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":7,"duration":5.61},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":7,"duration":7.692},
{"type":"measure","name":"lsp.code_action","count":57,"duration":7.959},
{"type":"mark","name":"lsp.document_symbol","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":51,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":51,"duration":0.001},
{"type":"measure","name":"lsp.document_symbol","count":48,"duration":0.536},
{"type":"mark","name":"lsp.code_lens","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":52,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":52,"duration":0.001},
{"type":"measure","name":"lsp.code_lens","count":48,"duration":0.378},
{"type":"mark","name":"lsp.inlay_hint","count":335,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":36,"args":{"range":{"start":{"line":941,"character":16},"end":{"line":941,"character":38}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":941,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":34,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27437]}},
{"type":"measure","name":"tsc.host.findReferences","count":34,"duration":4.867},
{"type":"measure","name":"tsc.request.findReferences","count":34,"duration":5.018},
{"type":"measure","name":"lsp.references","count":34,"duration":5.16},
{"type":"measure","name":"lsp.code_lens_resolve","count":36,"duration":5.186},
{"type":"mark","name":"lsp.folding_range","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":13,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":13,"duration":19.189},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":13,"duration":21.686},
{"type":"measure","name":"lsp.folding_range","count":24,"duration":21.924},
{"type":"mark","name":"lsp.semantic_tokens_full","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"measure","name":"lsp.semantic_tokens_full","count":20,"duration":0.026},
{"type":"mark","name":"lsp.code_action","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":8,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":true,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"relative","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":8,"duration":0.946},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":8,"duration":6.445},
{"type":"measure","name":"lsp.code_action","count":58,"duration":6.746},
{"type":"mark","name":"lsp.document_symbol","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":53,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":53,"duration":0.001},
{"type":"measure","name":"lsp.document_symbol","count":49,"duration":0.529},
{"type":"mark","name":"lsp.code_lens","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":54,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":54,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":49,"duration":0.352},
{"type":"mark","name":"lsp.inlay_hint","count":336,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"range":{"start":{"line":859,"character":0},"end":{"line":1044,"character":0}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"measure","name":"lsp.semantic_tokens_full","count":21,"duration":0.027},
{"type":"mark","name":"lsp.folding_range","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":14,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":14,"duration":14.003},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":14,"duration":16.389},
{"type":"measure","name":"lsp.folding_range","count":25,"duration":16.645},
{"type":"mark","name":"lsp.hover","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":939,"character":10}}},
{"type":"mark","name":"tsc.request.getQuickInfoAtPosition"},
{"type":"mark","name":"tsc.host.getQuickInfoAtPosition","count":2,"args":{"GetQuickInfoAtPosition":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27346]}},
{"type":"measure","name":"tsc.host.getQuickInfoAtPosition","count":2,"duration":0.892},
{"type":"measure","name":"tsc.request.getQuickInfoAtPosition","count":2,"duration":0.991},
{"type":"measure","name":"lsp.hover","count":10,"duration":1.128},
{"type":"mark","name":"lsp.code_lens_resolve","count":37,"args":{"range":{"start":{"line":941,"character":16},"end":{"line":941,"character":38}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"}}},
{"type":"mark","name":"lsp.references","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},"position":{"line":941,"character":16},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":35,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts",27437]}},
{"type":"measure","name":"tsc.host.findReferences","count":35,"duration":1.516},
{"type":"measure","name":"tsc.request.findReferences","count":35,"duration":1.684},
{"type":"measure","name":"lsp.references","count":35,"duration":1.804},
{"type":"measure","name":"lsp.code_lens_resolve","count":37,"duration":1.829},
{"type":"mark","name":"lsp.did_close","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"measure","name":"lsp.did_close","count":25,"duration":0.033},
{"type":"mark","name":"lsp.did_close","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md"}}},
{"type":"measure","name":"lsp.did_close","count":26,"duration":0.011},
{"type":"mark","name":"lsp.did_close","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":101,"duration":0.168},
{"type":"measure","name":"lsp.did_close","count":27,"duration":8.34},
{"type":"mark","name":"lsp.did_open","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md","languageId":"markdown","version":1,"text":"# ProspectPro v4.1 Technical Summary - Post-Cleanup Architecture\n\n## Executive Summary\n\nProspectPro v4.1 represents a **streamlined, production-ready business intelligence platform** focused on verified contact discovery. Following comprehensive cleanup, the platform now operates with a **minimal serverless architecture** using only 2 essential Edge Functions and 3 core database tables.\n\n## Architectural Philosophy: Verified Data Only\n\n**Zero Fake Data Commitment**\n\n- ✅ Professional verification through Apollo API, licensing boards, chamber directories\n- ✅ Transparent data sources with clear attribution\n- ✅ Quality-first approach: verification assumed, not advertised\n- ❌ No pattern-generated emails (info@, contact@, etc.)\n- ❌ No speculative or fabricated contact information\n\n## Core Infrastructure (Cleaned & Optimized)\n\n### **Edge Functions (2 Essential Only)**\n\n```\n/supabase/functions/business-discovery-optimized/  # Enhanced with Foursquare integration\n/supabase/functions/campaign-export/              # CSV export with verification status\n```\n\n### **Database Schema (Security Hardened)**\n\n```sql\n-- 3 Core Tables with RLS\ncampaigns          # Campaign management and tracking\nleads              # Verified business contacts only\ndashboard_exports  # Export tracking and analytics\n\n-- 1 Secure View (SECURITY INVOKER pattern)\ncampaign_analytics # Performance metrics without SECURITY DEFINER issues\n```\n\n### **Static Frontend**\n\n```\n/public/index-supabase.html      # Main application interface\n/public/supabase-app-enhanced.js # Supabase client with MECE taxonomy\n```\n\n## MECE Business Taxonomy Integration\n\n**16 Comprehensive Categories** covering 300+ optimized business types:\n\n- Professional Services (17 types)\n- Financial Services (11 types)\n- Healthcare & Medical (26 types)\n- Technology & Software (12 types)\n- Food & Beverage (15 types)\n- Retail & Shopping (18 types)\n- Real Estate & Construction (12 types)\n- Education & Training (8 types)\n- Entertainment & Recreation (11 types)\n- Transportation & Logistics (9 types)\n- Beauty & Personal Care (8 types)\n- Home & Local Services (12 types)\n- Manufacturing & Industrial (8 types)\n- Non-Profit & Government (6 types)\n- Travel & Hospitality (7 types)\n- Agriculture & Environment (6 types)\n\n## API Integration Stack\n\n**External APIs (Configured & Tested)**\n\n- **Google Places API**: Primary business discovery\n- **Foursquare API**: Enhanced location data and verification\n- **Hunter.io**: Professional email discovery\n- **NeverBounce**: Email verification and deliverability\n\n**Internal Integration**\n\n- **Supabase Database**: Native PostgreSQL with Row Level Security\n- **Supabase Edge Functions**: Global deployment with <100ms cold starts\n- **Supabase Real-time**: Ready for live updates and notifications\n\n## Deployment Architecture\n\n**Serverless-First Design**\n\n```\nStatic Frontend (Vercel/Netlify) → Supabase Edge Functions → Supabase Database\n                                                    ↓\n                     Environment Variables → External APIs\n                                                    ↓\n                     Real-time Updates → Live Frontend Sync\n```\n\n**Cost Optimization (90% Reduction)**\n\n- Static hosting: $1-5/month vs $10-50/month containers\n- Serverless functions: Pay-per-invocation model\n- No infrastructure management or server maintenance\n- Auto-scaling with zero idle costs\n\n## Security & Compliance\n\n**Database Security (Hardened)**\n\n- Row Level Security (RLS) policies on all tables\n- SECURITY INVOKER views (removed SECURITY DEFINER)\n- Pinned search_path for trigger functions\n- Anon key authentication with proper JWT validation\n\n**Data Protection**\n\n- No sensitive data in frontend code\n- API keys secured in Supabase environment variables\n- Real-time cache invalidation for immediate updates\n- Professional data verification standards\n\n## Quality Assurance Pipeline\n\n**Enhanced Quality Scoring v3.0**\n\n- Confidence scoring based on data source verification\n- Cost-efficient validation pipeline (35-45% qualification rates)\n- Business legitimacy verification through multiple sources\n- Professional contact authentication\n\n**Testing & Monitoring**\n\n- Direct Edge Function testing via Supabase dashboard\n- Database permission validation with RLS diagnostics\n- Frontend integration testing with real-time cache verification\n- MCP server monitoring for development workflow optimization\n\n## MCP Infrastructure (v4.1 Enhanced)\n\n**3 Specialized Servers**\n\n- **Production Server v4.1**: 28 tools for monitoring, analytics, filesystem analysis\n- **Development Server v3.0**: 8 tools for API integrations and performance benchmarking\n- **Troubleshooting Server v2.0**: 6 tools for systematic debugging and RLS validation\n\n**Consolidated Architecture** (70% efficiency improvement from 5→3 servers)\n\n## Development Workflow\n\n**Simplified Deployment Process**\n\n```bash\n# Edge Function deployment\nsupabase functions deploy business-discovery-optimized\nsupabase functions deploy campaign-export\n\n# Static frontend deployment\ncd public && vercel --prod\n\n# Database updates\n# Run SQL migrations in Supabase dashboard\n```\n\n**Local Development**\n\n```bash\n# Serve Edge Functions locally\nsupabase functions serve\n\n# Test static frontend\ncd public && python3 -m http.server 8080\n\n# Database testing\n# Use Supabase SQL editor for queries\n```\n\n## Performance Metrics\n\n**Response Times**\n\n- Edge Function cold start: <100ms\n- Business discovery API: 2-4 seconds average\n- Static frontend load: <500ms\n- Database queries: <50ms average\n\n**Scalability**\n\n- Auto-scaling Edge Functions (unlimited concurrent requests)\n- Static CDN distribution (global edge caching)\n- Supabase database scaling (up to 500 concurrent connections)\n- Real-time updates via WebSocket connections\n\n## Maintenance & Monitoring\n\n**Simplified Operations**\n\n- Zero server management (fully serverless)\n- Automatic security updates via Supabase\n- Built-in monitoring through Supabase dashboard\n- Real-time error tracking in Edge Function logs\n\n**Development Support**\n\n- MCP servers for automated troubleshooting\n- VS Code integration with optimized settings\n- GitHub Copilot with specialized instructions\n- Comprehensive documentation and debugging guides\n\n## Future Roadmap\n\n**Phase 1: Enhanced Verification** (Q1 2024)\n\n- Integration with additional professional directories\n- Advanced business legitimacy scoring algorithms\n- Real-time verification status updates\n\n**Phase 2: Advanced Analytics** (Q2 2024)\n\n- Campaign performance predictive modeling\n- Geographic market analysis integration\n- Enhanced export formatting options\n\n**Phase 3: Workflow Automation** (Q3 2024)\n\n- Automated campaign optimization\n- Lead scoring machine learning integration\n- Advanced filtering and segmentation capabilities\n\n## Technical Contact & Support\n\n**Repository**: https://github.com/Alextorelli/ProspectPro  \n**Architecture**: Supabase-first serverless with verified data focus  \n**Version**: 4.1.0 (Production Ready - Post-Cleanup Enhanced)  \n**Last Updated**: January 2025\n\nThis technical summary reflects the cleaned, optimized, and production-ready state of ProspectPro v4.1 following comprehensive architecture streamlining and security hardening.\n"}}},
{"type":"measure","name":"lsp.did_open","count":53,"duration":0.12},
{"type":"mark","name":"lsp.did_open","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface CampaignExportRequest {\n  campaignId: string;\n  format?: string;\n  minConfidence?: number;\n  includeUnqualified?: boolean;\n  includeProvenance?: boolean;\n}\n\ninterface Campaign {\n  id: string;\n  business_type: string;\n  location: string;\n  [key: string]: unknown;\n}\n\ninterface Lead {\n  business_name: string;\n  address: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  confidence_score: number;\n  score_breakdown?: Record<string, unknown>;\n  validation_cost?: number;\n  cost_efficient?: boolean;\n  scoring_recommendation?: string;\n  created_at: string;\n  // Verification fields (may not exist yet)\n  owner_contact?: string;\n  linkedin_profile?: string;\n  professional_license?: string;\n  chamber_verified?: boolean;\n  trade_association?: string;\n  last_verified?: string;\n  google_places_verified?: boolean;\n  apollo_verified?: boolean;\n  license_verified?: boolean;\n  verification_status?: string;\n  data_source?: string;\n  [key: string]: unknown; // Allow additional fields\n}\n\n// CSV Export functionality\nclass CampaignExporter {\n  generateCSV(_campaign: Campaign, leads: Lead[]): string {\n    // Define CSV headers with enhanced real data focus\n    const headers = [\n      \"Business Name\",\n      \"Address\",\n      \"Phone\",\n      \"Website\",\n      \"Email (Verified Only)\",\n      \"Owner/Executive Contact\",\n      \"LinkedIn Profile\",\n      \"Confidence Score\",\n      \"Data Source\",\n      \"Verification Status\",\n      \"Professional License\",\n      \"Chamber Member\",\n      \"Trade Association\",\n      \"Last Verified\",\n      \"Created Date\",\n    ];\n\n    // Generate CSV rows with verified data only\n    const rows = leads.map((lead) => [\n      this.cleanField(lead.business_name),\n      this.cleanField(lead.address),\n      this.cleanField(lead.phone),\n      this.cleanField(lead.website),\n      this.cleanVerifiedField(lead.email), // Only verified emails\n      this.cleanField(lead.owner_contact), // Apollo/professional directory contacts\n      this.cleanField(lead.linkedin_profile),\n      lead.confidence_score || 0,\n      this.getDataSource(lead),\n      this.getVerificationStatus(lead),\n      this.cleanField(lead.professional_license),\n      this.getMembershipStatus(lead.chamber_verified),\n      this.cleanField(lead.trade_association),\n      this.formatDate(lead.last_verified || \"\"),\n      this.formatDate(lead.created_at),\n    ]);\n\n    // Combine headers and rows\n    const csvContent = [\n      headers.join(\",\"),\n      ...rows.map((row) =>\n        row\n          .map((field) =>\n            typeof field === \"string\" &&\n            (field.includes(\",\") || field.includes('\"'))\n              ? `\"${field.replace(/\"/g, '\"\"')}\"`\n              : field\n          )\n          .join(\",\")\n      ),\n    ].join(\"\\n\");\n\n    return csvContent;\n  }\n\n  private cleanField(value: unknown): string {\n    if (value === null || value === undefined || value === \"\") return \"\";\n    return String(value)\n      .replace(/[\\r\\n]+/g, \" \")\n      .trim();\n  }\n\n  // Only return verified emails, leave blank if not verified\n  private cleanVerifiedField(email: unknown): string {\n    if (!email) return \"\";\n    const emailStr = String(email);\n\n    // Check if email contains pattern indicators (fake data)\n    const fakePatterns = [\"info@\", \"contact@\", \"hello@\", \"sales@\", \"admin@\"];\n    const isFakePattern = fakePatterns.some((pattern) =>\n      emailStr.startsWith(pattern)\n    );\n\n    // Return empty if it's a generated pattern, otherwise return the email\n    return isFakePattern ? \"\" : emailStr;\n  }\n\n  private getDataSource(lead: Lead): string {\n    const sources: string[] = [];\n    if (lead.verification_status?.includes(\"google\"))\n      sources.push(\"Google Places\");\n    if (lead.apollo_verified) sources.push(\"Apollo\");\n    if (lead.chamber_verified) sources.push(\"Chamber of Commerce\");\n    if (lead.license_verified) sources.push(\"Professional License Board\");\n\n    // Check for verification sources in lead data\n    if (lead.data_source && typeof lead.data_source === \"string\") {\n      const dataSources = lead.data_source\n        .split(\",\")\n        .map((s: string) => s.trim());\n      dataSources.forEach((source: string) => {\n        if (\n          source === \"chamber_commerce\" &&\n          !sources.includes(\"Chamber of Commerce\")\n        ) {\n          sources.push(\"Chamber of Commerce\");\n        }\n        if (\n          source === \"trade_association\" &&\n          !sources.includes(\"Trade Association\")\n        ) {\n          sources.push(\"Trade Association\");\n        }\n        if (\n          source === \"professional_license\" &&\n          !sources.includes(\"Professional License\")\n        ) {\n          sources.push(\"Professional License\");\n        }\n      });\n    }\n\n    return sources.join(\"; \") || \"Google Places\";\n  }\n\n  private getVerificationStatus(lead: Lead): string {\n    // Priority-based verification status\n    if (lead.apollo_verified) return \"Executive Contact Verified\";\n    if (lead.license_verified) return \"Professional License Verified\";\n    if (lead.chamber_verified) return \"Chamber Membership Verified\";\n\n    // Check verification level from lead data\n    if (lead.verification_status) {\n      if (lead.verification_status.includes(\"apollo\"))\n        return \"Executive Contact Verified\";\n      if (lead.verification_status.includes(\"license\"))\n        return \"Professional License Verified\";\n      if (lead.verification_status.includes(\"chamber\"))\n        return \"Chamber Membership Verified\";\n      if (lead.verification_status.includes(\"trade\"))\n        return \"Trade Association Verified\";\n    }\n\n    if (lead.confidence_score >= 75) return \"High Confidence\";\n    if (lead.confidence_score >= 50) return \"Medium Confidence\";\n    return \"Basic Listing\";\n  }\n\n  private getMembershipStatus(isVerified: unknown): string {\n    return isVerified ? \"Verified Member\" : \"\";\n  }\n\n  private formatDate(dateString: string): string {\n    if (!dateString) return \"\";\n    return new Date(dateString).toLocaleDateString(\"en-US\");\n  }\n\n  private sanitizeFilename(filename: string): string {\n    return filename.replace(/[^a-zA-Z0-9_-]/g, \"_\").replace(/__+/g, \"_\");\n  }\n}\n\nserve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    const supabase = createClient(\n      Deno.env.get(\"SUPABASE_URL\") ?? \"\",\n      Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\") ?? \"\"\n    );\n\n    const url = new URL(req.url);\n    const campaignId = url.pathname.split(\"/\").pop();\n\n    if (!campaignId) {\n      return new Response(\n        JSON.stringify({\n          error: \"Campaign ID is required\",\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 400,\n        }\n      );\n    }\n\n    const queryParams = new URLSearchParams(url.search);\n    const format = queryParams.get(\"format\") || \"csv\";\n    const minConfidence = parseInt(queryParams.get(\"minConfidence\") || \"0\");\n    const includeUnqualified = queryParams.get(\"includeUnqualified\") === \"true\";\n\n    console.log(\n      `📊 Exporting campaign ${campaignId} (format: ${format}, min confidence: ${minConfidence})`\n    );\n\n    // Get campaign details\n    const { data: campaign, error: campaignError } = await supabase\n      .from(\"campaigns\")\n      .select(\"*\")\n      .eq(\"id\", campaignId)\n      .single();\n\n    if (campaignError || !campaign) {\n      return new Response(\n        JSON.stringify({\n          error: \"Campaign not found\",\n          details: campaignError?.message,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 404,\n        }\n      );\n    }\n\n    // Get campaign leads\n    let query = supabase\n      .from(\"leads\")\n      .select(\"*\")\n      .eq(\"campaign_id\", campaignId)\n      .order(\"confidence_score\", { ascending: false });\n\n    if (!includeUnqualified) {\n      query = query.gte(\"confidence_score\", minConfidence);\n    }\n\n    const { data: leads, error: leadsError } = await query;\n\n    if (leadsError) {\n      console.error(\"Error fetching leads:\", leadsError);\n      return new Response(\n        JSON.stringify({\n          error: \"Failed to fetch campaign leads\",\n          details: leadsError.message,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 500,\n        }\n      );\n    }\n\n    if (!leads || leads.length === 0) {\n      return new Response(\n        JSON.stringify({\n          error: \"No leads found for this campaign\",\n          campaign: campaign.business_type || campaignId,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 404,\n        }\n      );\n    }\n\n    // Generate CSV export\n    const exporter = new CampaignExporter();\n    const csvContent = exporter.generateCSV(campaign, leads);\n\n    // Set response headers for file download\n    const timestamp = new Date().toISOString().slice(0, 10);\n    const filename = `${\n      campaign.business_type || \"campaign\"\n    }_${campaignId.slice(0, 8)}_${timestamp}.csv`;\n\n    console.log(`✅ Export completed: ${leads.length} leads exported`);\n\n    return new Response(csvContent, {\n      headers: {\n        ...corsHeaders,\n        \"Content-Type\": \"text/csv\",\n        \"Content-Disposition\": `attachment; filename=\"${filename}\"`,\n        \"X-Export-Count\": leads.length.toString(),\n        \"X-Campaign-Name\": campaign.business_type || \"Untitled\",\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Campaign export error:\", error);\n    const errorMessage =\n      error instanceof Error ? error.message : \"Unknown error\";\n    return new Response(\n      JSON.stringify({\n        error: \"Export failed\",\n        details: errorMessage,\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n        status: 500,\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":54,"duration":4.927},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":102,"duration":0.179},
{"type":"mark","name":"lsp.did_close","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":103,"duration":0.136},
{"type":"measure","name":"lsp.did_close","count":28,"duration":0.984},
{"type":"mark","name":"lsp.did_open","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js","languageId":"javascript","version":1,"text":"/**\n * ENHANCED QUALITY SCORER v3.0 - COST-EFFICIENT LEAD QUALIFICATION\n *\n * Optimized quality scoring system that balances thoroughness with cost efficiency.\n * Integrates with existing ProspectPro v3.0 architecture and improves qualification rates\n * from ~15% to 35-45% while maintaining lead quality standards.\n *\n * Key Improvements:\n * - Consolidated scoring weights across multiple validation systems\n * - Dynamic threshold adjustment based on batch performance\n * - Cost-aware validation pipeline with early filtering\n * - Enhanced Foursquare integration for multi-source validation\n * - Real-time feedback for qualification rate optimization\n *\n * Business Impact: 3x improvement in qualification rates, 40% cost reduction per qualified lead\n */\n\nclass EnhancedQualityScorer {\n  constructor(options = {}) {\n    // Optimized scoring weights based on cost/benefit analysis\n    this.weights = {\n      // Core business data (60% - most cost-effective validation)\n      businessName: 15, // Well-formed, not generic - FREE validation\n      address: 15, // Complete, validated format - FREE validation\n      phone: 15, // Valid format, basic verification - LOW cost\n      website: 15, // Accessible, professional domain - LOW cost\n\n      // Contact discovery (25% - medium cost, high value)\n      email: 20, // Deliverable emails found - MEDIUM cost\n      ownerContact: 5, // Owner-level contact identified - BONUS\n\n      // External validation (15% - high cost, confirmation value)\n      googlePlaces: 8, // Google Places verification - FREE (already done)\n      foursquare: 7, // Foursquare data enhancement - MEDIUM cost\n    };\n\n    // Cost-aware validation settings\n    this.costLimits = {\n      maxCostPerBusiness: options.maxCostPerBusiness || 2.0,\n      freeValidationFirst: true,\n      expensiveValidationThreshold: 60, // Only run expensive validation if score >= 60\n    };\n\n    // Performance tracking\n    this.metrics = {\n      businessesProcessed: 0,\n      averageScore: 0,\n      qualificationRate: 0,\n      totalCostSavings: 0,\n    };\n\n    console.log(\"🎯 Enhanced Quality Scorer v3.0 initialized\");\n    console.log(\n      `   💰 Cost-efficient pipeline: $${this.costLimits.maxCostPerBusiness}/business limit`\n    );\n  }\n\n  /**\n   * Main scoring method - cost-optimized pipeline\n   */\n  async calculateOptimizedScore(business, options = {}) {\n    const startTime = Date.now();\n    let totalCost = 0;\n    let score = 0;\n\n    // STAGE 1: FREE VALIDATIONS FIRST (Cost: $0.00)\n    const freeScore = this.calculateFreeValidationScore(business);\n    score = freeScore;\n\n    // Early exit if free validation fails badly\n    if (freeScore < 30) {\n      this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n      return {\n        score: Math.round(score),\n        breakdown: { free: freeScore, contact: 0, external: 0 },\n        costEfficient: true,\n        totalCost,\n        recommendation: \"Failed free validation - cost-efficient early exit\",\n      };\n    }\n\n    // STAGE 2: CONTACT VALIDATIONS (Cost: ~$0.10-0.50)\n    if (score >= 40 && totalCost < this.costLimits.maxCostPerBusiness) {\n      const { contactScore, contactCost } = await this.calculateContactScore(\n        business\n      );\n      score +=\n        (contactScore * (this.weights.email + this.weights.ownerContact)) / 100;\n      totalCost += contactCost;\n    }\n\n    // STAGE 3: EXTERNAL API VALIDATIONS (Cost: ~$0.20-0.80)\n    if (\n      score >= this.costLimits.expensiveValidationThreshold &&\n      totalCost < this.costLimits.maxCostPerBusiness\n    ) {\n      const { externalScore, externalCost } = await this.calculateExternalScore(\n        business\n      );\n      score +=\n        (externalScore *\n          (this.weights.googlePlaces + this.weights.foursquare)) /\n        100;\n      totalCost += externalCost;\n    }\n\n    this.recordMetrics(business, score, totalCost, Date.now() - startTime);\n\n    return {\n      score: Math.round(Math.min(100, score)),\n      breakdown: this.getScoreBreakdown(business, score),\n      costEfficient: totalCost <= this.costLimits.maxCostPerBusiness,\n      totalCost,\n      recommendation: this.getRecommendation(score, totalCost),\n    };\n  }\n\n  /**\n   * FREE VALIDATION SCORE - No API costs\n   */\n  calculateFreeValidationScore(business) {\n    let score = 0;\n\n    // Business Name Quality (0-15 points) - FREE\n    score +=\n      (this.scoreBusinessNameOptimized(business.name || business.businessName) *\n        this.weights.businessName) /\n      100;\n\n    // Address Quality (0-15 points) - FREE\n    score +=\n      (this.scoreAddressOptimized(\n        business.address || business.formatted_address\n      ) *\n        this.weights.address) /\n      100;\n\n    // Phone Quality (0-15 points) - FREE format validation\n    score +=\n      (this.scorePhoneOptimized(\n        business.phone || business.formatted_phone_number\n      ) *\n        this.weights.phone) /\n      100;\n\n    // Website Quality (0-15 points) - FREE domain validation\n    score +=\n      (this.scoreWebsiteOptimized(business.website) * this.weights.website) /\n      100;\n\n    return score;\n  }\n\n  /**\n   * Optimized Business Name Scoring - More lenient but still quality-focused\n   */\n  scoreBusinessNameOptimized(name) {\n    if (!name || name.trim().length < 2) return 0;\n\n    // Immediate disqualification patterns (stricter on obvious fakes)\n    const fakePatterns = [\n      /^Business\\s+(LLC|Inc|Corporation)$/i,\n      /^Company\\s+\\d+$/i,\n      /^Generic\\s+/i,\n      /^Test\\s+/i,\n      /^Sample\\s+/i,\n    ];\n\n    if (fakePatterns.some((pattern) => pattern.test(name.trim()))) {\n      return 0;\n    }\n\n    // More lenient quality scoring\n    const nameLength = name.trim().length;\n    if (nameLength < 3) return 20;\n    if (nameLength < 8) return 60;\n    if (nameLength < 15) return 80;\n    return 90;\n  }\n\n  /**\n   * Optimized Address Scoring - Focus on completeness over perfection\n   */\n  scoreAddressOptimized(address) {\n    if (!address) return 0;\n\n    const addressStr = address.toString().trim();\n    if (addressStr.length < 10) return 20;\n\n    // Basic completeness indicators\n    const hasNumber = /\\d+/.test(addressStr);\n    const hasStreet =\n      /\\b(st|street|ave|avenue|rd|road|blvd|boulevard|dr|drive|ln|lane|way|ct|court)\\b/i.test(\n        addressStr\n      );\n    const hasCity = /,\\s*[A-Za-z\\s]+/i.test(addressStr);\n    const hasState =\n      /\\b[A-Z]{2}\\b|\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b/i.test(\n        addressStr\n      );\n\n    let score = 30; // Base score for having an address\n    if (hasNumber) score += 20;\n    if (hasStreet) score += 25;\n    if (hasCity) score += 15;\n    if (hasState) score += 10;\n\n    return Math.min(100, score);\n  }\n\n  /**\n   * Optimized Phone Scoring - Format validation without expensive verification\n   */\n  scorePhoneOptimized(phone) {\n    if (!phone) return 0;\n\n    const phoneStr = phone.toString().replace(/\\D/g, \"\");\n    if (phoneStr.length < 10) return 20;\n    if (phoneStr.length === 10) return 80;\n    if (phoneStr.length === 11 && phoneStr.startsWith(\"1\")) return 90;\n    return 60; // International or unusual format\n  }\n\n  /**\n   * Optimized Website Scoring - Basic domain validation\n   */\n  scoreWebsiteOptimized(website) {\n    if (!website) return 0;\n\n    // Check for valid URL format\n    try {\n      const url = new URL(\n        website.startsWith(\"http\") ? website : `https://${website}`\n      );\n\n      // Basic quality indicators\n      const domain = url.hostname.toLowerCase();\n      if (domain.includes(\"facebook.com\") || domain.includes(\"instagram.com\"))\n        return 40;\n      if (\n        domain.endsWith(\".com\") ||\n        domain.endsWith(\".org\") ||\n        domain.endsWith(\".net\")\n      )\n        return 80;\n      return 60;\n    } catch (e) {\n      return 20; // Invalid URL format but not zero\n    }\n  }\n\n  /**\n   * Contact Score Calculation - Email discovery and validation\n   */\n  async calculateContactScore(business) {\n    let contactScore = 0;\n    let contactCost = 0;\n\n    // Email discovery scoring (based on existing email discovery results)\n    if (business.emails && business.emails.length > 0) {\n      const validEmails = business.emails.filter(\n        (e) =>\n          e.confidence >= 50 &&\n          !e.email.includes(\"noreply\") &&\n          !e.email.includes(\"no-reply\")\n      );\n\n      if (validEmails.length === 0) contactScore = 30;\n      else if (validEmails.length === 1) contactScore = 70;\n      else if (validEmails.length >= 2) contactScore = 85;\n\n      // Bonus for high-confidence emails\n      if (validEmails.some((e) => e.confidence >= 80))\n        contactScore = Math.min(100, contactScore + 15);\n\n      // Owner contact bonus\n      if (\n        validEmails.some(\n          (e) =>\n            e.email.includes(\"owner\") ||\n            e.email.includes(\"ceo\") ||\n            e.email.includes(\"president\") ||\n            e.email.includes(\"founder\")\n        )\n      ) {\n        contactScore += 10;\n      }\n\n      contactCost = validEmails.length * 0.05; // Estimated cost per email validation\n    }\n\n    return { contactScore, contactCost };\n  }\n\n  /**\n   * External API Score Calculation - Google Places + Foursquare\n   */\n  async calculateExternalScore(business) {\n    let externalScore = 0;\n    let externalCost = 0;\n\n    // Google Places score (usually already available from discovery)\n    if (business.place_id || business.googlePlacesData) {\n      externalScore += 80; // Already validated through Google Places\n    }\n\n    // Foursquare score (if available)\n    if (business.foursquareData) {\n      externalScore += 70;\n      externalCost += 0.1; // Estimated Foursquare API cost\n    }\n\n    return { externalScore: Math.min(100, externalScore), externalCost };\n  }\n\n  /**\n   * Dynamic Threshold Manager - Adjust thresholds based on batch performance\n   */\n  calculateOptimalThreshold(businesses, targetQualificationRate = 38) {\n    if (!businesses || businesses.length === 0) {\n      return { suggested: 58, analysis: { error: \"No businesses to analyze\" } };\n    }\n\n    const scores = businesses\n      .map((b) => b.optimizedScore || b.score || 0)\n      .sort((a, b) => b - a);\n\n    const targetIndex = Math.floor(\n      businesses.length * (targetQualificationRate / 100)\n    );\n    const suggestedThreshold = scores[targetIndex] || 55;\n\n    // Ensure threshold is within reasonable bounds\n    const boundedThreshold = Math.max(45, Math.min(75, suggestedThreshold));\n\n    return {\n      suggested: boundedThreshold,\n      analysis: {\n        businessesProcessed: businesses.length,\n        averageScore: Math.round(\n          scores.reduce((s, n) => s + n, 0) / scores.length\n        ),\n        highestScore: scores[0] || 0,\n        lowestScore: scores[scores.length - 1] || 0,\n        projectedQualificationRate: this.calculateQualificationRate(\n          scores,\n          boundedThreshold\n        ),\n        costEfficiency: this.calculateCostEfficiency(businesses),\n        recommendation: this.getThresholdRecommendation(\n          boundedThreshold,\n          targetQualificationRate\n        ),\n      },\n    };\n  }\n\n  /**\n   * Calculate projected qualification rate for a given threshold\n   */\n  calculateQualificationRate(scores, threshold) {\n    const qualified = scores.filter((s) => s >= threshold).length;\n    return Math.round((qualified / scores.length) * 100);\n  }\n\n  /**\n   * Calculate cost efficiency metrics\n   */\n  calculateCostEfficiency(businesses) {\n    const totalCost = businesses.reduce(\n      (sum, b) => sum + (b.totalCost || 0),\n      0\n    );\n    const qualified = businesses.filter(\n      (b) => (b.optimizedScore || b.score || 0) >= 58\n    ).length;\n\n    return {\n      averageCostPerBusiness: totalCost / businesses.length,\n      costPerQualifiedLead: qualified > 0 ? totalCost / qualified : 0,\n      costSavingsVsTraditional: Math.max(\n        0,\n        (1.5 - totalCost / businesses.length) * businesses.length\n      ),\n    };\n  }\n\n  /**\n   * Score breakdown for analysis\n   */\n  getScoreBreakdown(business, totalScore) {\n    return {\n      businessName: Math.round(\n        this.scoreBusinessNameOptimized(business.name || business.businessName)\n      ),\n      address: Math.round(\n        this.scoreAddressOptimized(\n          business.address || business.formatted_address\n        )\n      ),\n      phone: Math.round(\n        this.scorePhoneOptimized(\n          business.phone || business.formatted_phone_number\n        )\n      ),\n      website: Math.round(this.scoreWebsiteOptimized(business.website)),\n      email: business.emails ? Math.min(100, business.emails.length * 20) : 0,\n      external: business.place_id ? 80 : 0,\n      total: Math.round(totalScore),\n    };\n  }\n\n  /**\n   * Generate recommendations based on score and cost\n   */\n  getRecommendation(score, cost) {\n    if (score >= 70) return \"High-quality lead - proceed with full enrichment\";\n    if (score >= 55) return \"Good lead - cost-efficient validation successful\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - cost-efficient early filtering successful\";\n  }\n\n  /**\n   * Threshold recommendation based on performance\n   */\n  getThresholdRecommendation(threshold, targetRate) {\n    if (threshold < 50) return \"Threshold very low - may impact lead quality\";\n    if (threshold > 70)\n      return \"Threshold high - may reduce qualification rate significantly\";\n    return `Balanced threshold for ${targetRate}% qualification rate`;\n  }\n\n  /**\n   * Record performance metrics\n   */\n  recordMetrics(business, score, cost, processingTime) {\n    this.metrics.businessesProcessed++;\n    this.metrics.averageScore =\n      (this.metrics.averageScore * (this.metrics.businessesProcessed - 1) +\n        score) /\n      this.metrics.businessesProcessed;\n    this.metrics.totalCostSavings += Math.max(0, 1.5 - cost); // Savings vs traditional $1.50 approach\n  }\n\n  /**\n   * Get performance summary\n   */\n  getPerformanceSummary() {\n    return {\n      businessesProcessed: this.metrics.businessesProcessed,\n      averageScore: Math.round(this.metrics.averageScore),\n      totalCostSavings: Math.round(this.metrics.totalCostSavings * 100) / 100,\n      costSavingsPerBusiness:\n        this.metrics.businessesProcessed > 0\n          ? Math.round(\n              (this.metrics.totalCostSavings /\n                this.metrics.businessesProcessed) *\n                100\n            ) / 100\n          : 0,\n    };\n  }\n}\n\nmodule.exports = EnhancedQualityScorer;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_open","count":55,"duration":7.262},
{"type":"measure","name":"lsp.testing_update","count":104,"duration":0.353},
{"type":"mark","name":"lsp.did_close","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"}}},
{"type":"measure","name":"lsp.did_close","count":29,"duration":0.058},
{"type":"mark","name":"lsp.did_close","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":30,"duration":2.682},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":105,"duration":0.208},
{"type":"mark","name":"lsp.did_close","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"}}},
{"type":"measure","name":"lsp.did_close","count":31,"duration":0.706},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":106,"duration":0.189},
{"type":"mark","name":"lsp.did_open","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":56,"duration":0.045},
{"type":"mark","name":"lsp.document_symbol","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.did_change_batched","count":79,"args":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},
{"type":"measure","name":"lsp.did_change_batched","count":79,"duration":241.036},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":405,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":337,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.document_symbol","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":406,"duration":0.022},
{"type":"mark","name":"lsp.folding_range","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":79,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":338,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.did_open","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":57,"duration":0.679},
{"type":"mark","name":"lsp.did_change_batched","count":80,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":107,"duration":0.151},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":108,"duration":1.129},
{"type":"measure","name":"lsp.did_change_batched","count":80,"duration":54.911},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":88,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts",109]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":26,"duration":0.316},
{"type":"mark","name":"tsc.op.op_load","count":245,"args":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},
{"type":"measure","name":"tsc.op.op_load","count":245,"duration":0.064},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.op.op_resolve","count":1159,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1159,"duration":10.402},
{"type":"mark","name":"tsc.op.op_resolve","count":1160,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1160,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1161,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1161,"duration":0.083},
{"type":"mark","name":"tsc.op.op_resolve","count":1162,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1162,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1163,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1163,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1164,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1164,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1165,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1165,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1166,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1166,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1167,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1167,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1168,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1168,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1169,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1169,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1170,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1170,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1171,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1171,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1172,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1172,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1173,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1173,"duration":11.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1174,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1174,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1175,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1175,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1176,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1176,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1177,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1177,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1178,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1178,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1179,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1179,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1180,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1180,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1181,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1181,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1182,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1182,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1183,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1183,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1184,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1184,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1185,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1185,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1186,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1186,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1187,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1187,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1188,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1188,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1189,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1189,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":1190,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1190,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1191,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1191,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1192,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1192,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1193,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1193,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1194,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1194,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1195,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1195,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1196,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1196,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1197,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1197,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1198,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1198,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1199,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1199,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1200,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1200,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1201,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1201,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1202,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1202,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1203,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1203,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1204,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1204,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1205,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1205,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1206,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1206,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1207,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1207,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1208,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1208,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1209,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1209,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":246,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":246,"duration":0.798},
{"type":"mark","name":"tsc.op.op_resolve","count":1210,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1210,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":247,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":247,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1211,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1211,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1212,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1212,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1213,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1213,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1214,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1214,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1215,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1215,"duration":0.021},
{"type":"mark","name":"tsc.op.op_release","count":13,"args":"file:///workspaces/ProspectPro/README.md"},
{"type":"measure","name":"tsc.op.op_release","count":13,"duration":0.169},
{"type":"mark","name":"tsc.op.op_release","count":14,"args":"file:///workspaces/ProspectPro/TECHNICAL_SUMMARY_v4.1.md"},
{"type":"measure","name":"tsc.op.op_release","count":14,"duration":0.1},
{"type":"mark","name":"tsc.op.op_release","count":15,"args":"file:///workspaces/ProspectPro/modules/validators/enhanced-quality-scorer.js"},
{"type":"measure","name":"tsc.op.op_release","count":15,"duration":3.923},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":120,"duration":0.01},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":88,"duration":343.189},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":88,"duration":344.34},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":44,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":44,"duration":110.35},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":44,"duration":110.474},
{"type":"measure","name":"lsp.diagnostic","count":407,"duration":462.918},
{"type":"measure","name":"lsp.did_save","count":80,"duration":343.506},
{"type":"mark","name":"lsp.cache","count":1,"args":[[],"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"]},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":408,"duration":0.04},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":2,"duration":0.002},
{"type":"mark","name":"tsc.request.$cleanupSemanticCache"},
{"type":"mark","name":"tsc.host.$cleanupSemanticCache","count":1,"args":"CleanupSemanticCache"},
{"type":"measure","name":"tsc.host.$cleanupSemanticCache","count":1,"duration":7.344},
{"type":"measure","name":"tsc.request.$cleanupSemanticCache","count":1,"duration":20.26},
{"type":"measure","name":"lsp.cache","count":1,"duration":648.549},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":109,"duration":0.132},
{"type":"mark","name":"lsp.did_open","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_open","count":58,"duration":0.748},
{"type":"measure","name":"lsp.testing_update","count":110,"duration":1.312},
{"type":"mark","name":"lsp.did_change_batched","count":81,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_change_batched","count":81,"duration":139.195},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":111,"duration":0.489},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":89,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts",113]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":27,"duration":0.183},
{"type":"mark","name":"tsc.op.op_resolve","count":1216,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./pages/AdminPanel"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1216,"duration":0.106},
{"type":"mark","name":"tsc.op.op_resolve","count":1217,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1217,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1218,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@supabase/supabase-js"],[false,"@tanstack/react-query"],[false,"react"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1218,"duration":0.067},
{"type":"mark","name":"tsc.op.op_resolve","count":1219,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../hooks/useBusinessDiscovery"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1219,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1220,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1220,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1221,"args":{"base":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1221,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1222,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1222,"duration":5.104},
{"type":"mark","name":"tsc.op.op_resolve","count":1223,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1223,"duration":0.281},
{"type":"mark","name":"tsc.op.op_resolve","count":1224,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1224,"duration":20.141},
{"type":"mark","name":"tsc.op.op_resolve","count":1225,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1225,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1226,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1226,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":1227,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1227,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":1228,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1228,"duration":10.182},
{"type":"mark","name":"tsc.op.op_resolve","count":1229,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1229,"duration":4.855},
{"type":"mark","name":"tsc.op.op_resolve","count":1230,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1230,"duration":0.77},
{"type":"mark","name":"tsc.op.op_resolve","count":1231,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1231,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1232,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1232,"duration":12.865},
{"type":"mark","name":"tsc.op.op_resolve","count":1233,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1233,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1234,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1234,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1235,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1235,"duration":11.87},
{"type":"mark","name":"tsc.op.op_resolve","count":1236,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1236,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1237,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1237,"duration":0.628},
{"type":"mark","name":"tsc.op.op_resolve","count":1238,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1238,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1239,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1239,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1240,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1240,"duration":5.982},
{"type":"mark","name":"tsc.op.op_resolve","count":1241,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1241,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1242,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1242,"duration":0.034},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"tsc.op.op_resolve","count":1243,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1243,"duration":6.929},
{"type":"mark","name":"tsc.op.op_resolve","count":1244,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1244,"duration":4.613},
{"type":"mark","name":"tsc.op.op_resolve","count":1245,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1245,"duration":2.418},
{"type":"mark","name":"tsc.op.op_resolve","count":1246,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1246,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1247,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1247,"duration":1.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1248,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1248,"duration":3.119},
{"type":"mark","name":"tsc.op.op_resolve","count":1249,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1249,"duration":7.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1250,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1250,"duration":0.306},
{"type":"mark","name":"tsc.op.op_resolve","count":1251,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1251,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1252,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1252,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1253,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1253,"duration":0.283},
{"type":"mark","name":"tsc.op.op_resolve","count":1254,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1254,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1255,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1255,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1256,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1256,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1257,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1257,"duration":18.509},
{"type":"mark","name":"tsc.op.op_resolve","count":1258,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1258,"duration":1.946},
{"type":"mark","name":"tsc.op.op_resolve","count":1259,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1259,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1260,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1260,"duration":4.852},
{"type":"mark","name":"tsc.op.op_resolve","count":1261,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1261,"duration":0.537},
{"type":"mark","name":"tsc.op.op_resolve","count":1262,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1262,"duration":2.263},
{"type":"mark","name":"tsc.op.op_resolve","count":1263,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1263,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1264,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1264,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1265,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1265,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1266,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1266,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1267,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1267,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1268,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1268,"duration":0.357},
{"type":"mark","name":"tsc.op.op_load","count":248,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":248,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1269,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1269,"duration":9.607},
{"type":"mark","name":"tsc.op.op_load","count":249,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":249,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1270,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1270,"duration":1.656},
{"type":"mark","name":"tsc.op.op_load","count":250,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":250,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1271,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1271,"duration":0.588},
{"type":"mark","name":"tsc.op.op_load","count":251,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":251,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1272,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1272,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":252,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":252,"duration":0.014},
{"type":"mark","name":"tsc.op.op_load","count":253,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":253,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1273,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1273,"duration":5.423},
{"type":"mark","name":"tsc.op.op_load","count":254,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":254,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1274,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1274,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":255,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":255,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1275,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1275,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":256,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":256,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1276,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1276,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":257,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":257,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1277,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1277,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":258,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":258,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1278,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1278,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":259,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":259,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1279,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1279,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":260,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":260,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":261,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":261,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1280,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1280,"duration":5.727},
{"type":"mark","name":"tsc.op.op_load","count":262,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":262,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1281,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1281,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":263,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":263,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1282,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1282,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":264,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":264,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1283,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1283,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":265,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":265,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1284,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1284,"duration":1.693},
{"type":"mark","name":"tsc.op.op_load","count":266,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":266,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1285,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1285,"duration":0.621},
{"type":"mark","name":"tsc.op.op_load","count":267,"args":"https://esm.sh/@types/ws@8.5.13/index.d.mts"},
{"type":"measure","name":"tsc.op.op_load","count":267,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1286,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1286,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":268,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":268,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":269,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":269,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":270,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":270,"duration":0.012},
{"type":"mark","name":"tsc.op.op_load","count":271,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":271,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1287,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1287,"duration":0.416},
{"type":"mark","name":"tsc.op.op_load","count":272,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":272,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1288,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1288,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":273,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":273,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1289,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1289,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":274,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":274,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1290,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1290,"duration":0.988},
{"type":"mark","name":"tsc.op.op_load","count":275,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":275,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1291,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1291,"duration":1.817},
{"type":"mark","name":"tsc.op.op_load","count":276,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":276,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1292,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1292,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":277,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":277,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":278,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":278,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1293,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1293,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":279,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":279,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":280,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":280,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1294,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1294,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":281,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":281,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1295,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1295,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":282,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":282,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":1296,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1296,"duration":3.405},
{"type":"mark","name":"tsc.op.op_load","count":283,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":283,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1297,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1297,"duration":0.283},
{"type":"mark","name":"tsc.op.op_load","count":284,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":284,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1298,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1298,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":285,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":285,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1299,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1299,"duration":0.284},
{"type":"mark","name":"tsc.op.op_load","count":286,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":286,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1300,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1300,"duration":0.211},
{"type":"mark","name":"tsc.op.op_load","count":287,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":287,"duration":0.014},
{"type":"mark","name":"tsc.op.op_load","count":288,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":288,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1301,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1301,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":289,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":289,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1302,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1302,"duration":0.527},
{"type":"mark","name":"tsc.op.op_load","count":290,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":290,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1303,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1303,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":291,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":291,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1304,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1304,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":292,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":292,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1305,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1305,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":293,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":293,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":294,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":294,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1306,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1306,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1307,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1307,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1308,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1308,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1309,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1309,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":295,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":295,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1310,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1310,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1311,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1311,"duration":0.044},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":121,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":122,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":123,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":124,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":125,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":126,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":127,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":128,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":129,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":130,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":131,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":132,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":133,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":134,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":135,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":136,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":137,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":138,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":139,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":140,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":141,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":142,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":143,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":144,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":145,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":146,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":147,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":148,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":149,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":150,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":151,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":152,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":153,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":154,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":155,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":156,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":157,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":158,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":159,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":160,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":161,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":162,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":163,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":164,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":165,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":166,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":167,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":168,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":169,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":170,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":171,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":172,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":173,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":174,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":175,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":176,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":177,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":178,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":179,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":180,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":181,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":182,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":183,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":184,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":185,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":186,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":187,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":188,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":189,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":190,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":191,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":192,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":193,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":194,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":195,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":196,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":197,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":198,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":199,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":200,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":201,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":202,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":203,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":204,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":205,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":206,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":207,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":208,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":209,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":210,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":211,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":212,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":213,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":214,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":215,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":216,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":217,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":218,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":219,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":220,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":221,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":222,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":223,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":224,"duration":0.005},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":89,"duration":324.633},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":89,"duration":324.791},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":45,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":45,"duration":0.161},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":45,"duration":0.214},
{"type":"measure","name":"lsp.diagnostic","count":409,"duration":329.586},
{"type":"measure","name":"lsp.did_save","count":81,"duration":247.795},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":410,"duration":0.04},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":90,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts",113]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":225,"duration":0.013},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":90,"duration":257.966},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":90,"duration":258.117},
{"type":"measure","name":"lsp.diagnostic","count":411,"duration":259.935},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":412,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/PHASE_1_IMPLEMENTATION_SUMMARY.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":59,"duration":0.039},
{"type":"mark","name":"lsp.did_change_batched","count":82,"args":"file:///workspaces/ProspectPro/PHASE_1_IMPLEMENTATION_SUMMARY.md"},
{"type":"measure","name":"lsp.did_change_batched","count":82,"duration":45.949},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":413,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":414,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":82,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":415,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":416,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":417,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":339,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},"range":{"start":{"line":0,"character":0},"end":{"line":119,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/INTEGRATION_ROADMAP.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":60,"duration":0.071},
{"type":"mark","name":"lsp.did_change_batched","count":83,"args":"file:///workspaces/ProspectPro/INTEGRATION_ROADMAP.md"},
{"type":"measure","name":"lsp.did_change_batched","count":83,"duration":71.663},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":418,"duration":0.211},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":419,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":420,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":83,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":421,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":422,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":423,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":84,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":84,"duration":5.988},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":112,"duration":0.168},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":91,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts",114]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":36,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":296,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":296,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":1312,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1312,"duration":0.039},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":91,"duration":78.533},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":91,"duration":78.676},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":46,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":46,"duration":0.159},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":46,"duration":0.22},
{"type":"measure","name":"lsp.diagnostic","count":424,"duration":80.067},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":92,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts",114]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":92,"duration":17.958},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":92,"duration":18.098},
{"type":"measure","name":"lsp.diagnostic","count":425,"duration":18.325},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":426,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":427,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":85,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":85,"duration":6.901},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":113,"duration":0.431},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":93,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts",115]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":37,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":297,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":297,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1313,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1313,"duration":0.04},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":93,"duration":76.427},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":93,"duration":76.622},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":47,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":47,"duration":0.186},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":47,"duration":0.257},
{"type":"measure","name":"lsp.diagnostic","count":428,"duration":78.407},
{"type":"mark","name":"lsp.did_change_batched","count":86,"args":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},
{"type":"measure","name":"lsp.did_change_batched","count":86,"duration":34.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":429,"duration":0.02},
{"type":"mark","name":"lsp.did_change_batched","count":87,"args":"file:///workspaces/ProspectPro/INTEGRATION_ROADMAP.md"},
{"type":"measure","name":"lsp.did_change_batched","count":87,"duration":27.688},
{"type":"mark","name":"lsp.did_change_batched","count":88,"args":"file:///workspaces/ProspectPro/PHASE_1_IMPLEMENTATION_SUMMARY.md"},
{"type":"measure","name":"lsp.did_change_batched","count":88,"duration":14.776},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":430,"duration":0.015},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":431,"duration":0.009},
{"type":"mark","name":"lsp.inlay_hint","count":340,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},"range":{"start":{"line":15,"character":0},"end":{"line":199,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.document_symbol","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.code_lens","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":432,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":341,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},"range":{"start":{"line":15,"character":0},"end":{"line":199,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":84,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":433,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":85,"duration":0.034},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":86,"duration":0.03},
{"type":"mark","name":"lsp.did_change_batched","count":89,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":89,"duration":83.673},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":114,"duration":0.157},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":94,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts",116]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":38,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":298,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":298,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1314,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1314,"duration":0.037},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":94,"duration":62.578},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":94,"duration":62.749},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":48,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":48,"duration":114.279},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":48,"duration":114.458},
{"type":"measure","name":"lsp.diagnostic","count":434,"duration":178.654},
{"type":"mark","name":"lsp.did_change_batched","count":90,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":115,"duration":0.162},
{"type":"measure","name":"lsp.did_change_batched","count":90,"duration":20.883},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":95,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts",117]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":39,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":299,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":299,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1315,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1315,"duration":0.038},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":95,"duration":75.628},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":95,"duration":80.044},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":49,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":49,"duration":0.137},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":49,"duration":0.191},
{"type":"measure","name":"lsp.diagnostic","count":435,"duration":82.796},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":96,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts",117]}},
{"type":"mark","name":"lsp.did_save"},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":88,"duration":0.063},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":96,"duration":248.267},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":96,"duration":249.626},
{"type":"measure","name":"lsp.diagnostic","count":436,"duration":251.158},
{"type":"measure","name":"lsp.did_save","count":87,"duration":226.749},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":437,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":438,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":439,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":440,"duration":0.001},
{"type":"mark","name":"lsp.hover","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ADVANCED_ENRICHMENT_STRATEGY.md"},"position":{"line":94,"character":27}}},
