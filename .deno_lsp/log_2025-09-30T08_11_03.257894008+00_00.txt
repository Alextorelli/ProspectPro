Starting Deno language server...
{"type":"mark","name":"lsp.initialize","count":1,"args":{"processId":316,"rootPath":"/workspaces/ProspectPro","rootUri":"file:///workspaces/ProspectPro","initializationOptions":{"enable":true,"cacheOnSave":true,"disablePaths":[],"enablePaths":["supabase/functions"],"path":null,"env":{},"envFile":null,"cache":null,"certificateStores":null,"codeLens":{"implementations":true,"references":true,"referencesAllFunctions":true,"test":true,"testArgs":["--allow-all","--no-check"]},"config":null,"documentPreloadLimit":1000,"future":false,"importMap":null,"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"maxTsServerMemory":3072,"suggest":{"autoImports":true,"completeFunctionCalls":false,"names":true,"paths":true,"imports":{"autoDiscover":true,"hosts":{"https://deno.land":true}}},"trace":{"server":"off"},"testing":{"args":["--allow-all","--no-check"]},"tlsCertificate":null,"unsafelyIgnoreCertificateErrors":null,"unstable":["bare-node-builtins","byonm","sloppy-imports"],"lint":true,"internalDebug":false,"internalInspect":false,"logFile":true,"defaultTaskCommand":"open","javascript":{"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"validate":{"enable":true},"suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"always"},"autoClosingTags":true,"preferGoToSourceDefinition":false,"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":true,"names":true,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"shortest","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false}}},"typescript":{"tsdk":"","disableAutomaticTypeAcquisition":false,"enablePromptUseWorkspaceTsdk":false,"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"implementationsCodeLens":{"enabled":false,"showOnInterfaceMethods":false},"experimental":{"useTsgo":false},"reportStyleChecksAsWarnings":true,"validate":{"enable":true},"tsc":{"autoDetect":"on"},"locale":"auto","suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"workspaceSymbols":{"scope":"allOpenProjects","excludeLibrarySymbols":true},"preferGoToSourceDefinition":false,"tsserver":{"enableRegionDiagnostics":true,"nodePath":"","web":{"projectWideIntellisense":{"enabled":true,"suppressSemanticErrors":false},"typeAcquisition":{"enabled":true}},"useSyntaxServer":"auto","maxTsServerMemory":3072,"experimental":{"enableProjectDiagnostics":false},"watchOptions":"vscode","enableTracing":false,"log":"off","pluginPaths":[]},"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":true,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true},"objectLiteralMethodSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"relative","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","includePackageJsonAutoImports":"on","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"preferTypeOnlyAutoImports":false,"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"insertSpaceAfterTypeAssertion":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"npm":"","check":{"npmIsInstalled":true}},"enableBuiltinCommands":true},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"willCreate":true,"didRename":true,"willRename":true,"didDelete":true,"willDelete":true},"inlineValue":{"refreshSupport":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"insertTextMode":2,"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]}},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.move","refactor.rewrite","source","source.organizeImports","notebook"]}},"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit","command"]},"honorsChangeAnnotations":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false,"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true,"foldingRangeKind":{"valueSet":["comment","imports","region"]},"foldingRange":{"collapsedText":false}},"selectionRange":{"dynamicRegistration":true},"linkedEditingRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"requests":{"range":true,"full":{"delta":true}},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"overlappingTokenSupport":false,"multilineTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"typeHierarchy":{"dynamicRegistration":true},"inlineValue":{"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false}},"notebookDocument":{"synchronization":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true}},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"},"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"positionEncodings":["utf-16"]},"experimental":{"testingApi":true}},"trace":"off","workspaceFolders":[{"uri":"file:///workspaces/ProspectPro","name":"ProspectPro"}],"clientInfo":{"name":"Visual Studio Code","version":"1.104.2"},"locale":"en"}},
  version: 2.5.2 (release, x86_64-unknown-linux-gnu)
  executable: /usr/local/share/npm-global/lib/node_modules/deno/deno
Connected to "Visual Studio Code" 1.104.2
{"type":"measure","name":"lsp.initialize","count":1,"duration":1.393},
{"type":"mark","name":"lsp.update_global_cache"},
Enabling import suggestions for: https://deno.land
{"type":"measure","name":"lsp.update_global_cache","count":1,"duration":53.874},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":1,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","languageId":"typescript","version":6,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface CampaignExportRequest {\n  campaignId: string;\n  format?: string;\n  minConfidence?: number;\n  includeUnqualified?: boolean;\n  includeProvenance?: boolean;\n}\n\ninterface Campaign {\n  id: string;\n  business_type: string;\n  location: string;\n  [key: string]: unknown;\n}\n\ninterface Lead {\n  business_name: string;\n  address: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  confidence_score: number;\n  score_breakdown?: Record<string, unknown>;\n  validation_cost?: number;\n  cost_efficient?: boolean;\n  scoring_recommendation?: string;\n  created_at: string;\n}\n\n// CSV Export functionality\nclass CampaignExporter {\n  generateCSV(_campaign: Campaign, leads: Lead[]): string {\n    // Define CSV headers\n    const headers = [\n      \"Business Name\",\n      \"Address\",\n      \"Phone\",\n      \"Website\",\n      \"Email\",\n      \"Confidence Score\",\n      \"Score Breakdown\",\n      \"Validation Cost\",\n      \"Cost Efficient\",\n      \"Recommendation\",\n      \"Created Date\",\n    ];\n\n    // Generate CSV rows\n    const rows = leads.map((lead) => [\n      this.cleanField(lead.business_name),\n      this.cleanField(lead.address),\n      this.cleanField(lead.phone),\n      this.cleanField(lead.website),\n      this.cleanField(lead.email),\n      lead.confidence_score || 0,\n      JSON.stringify(lead.score_breakdown || {}),\n      `$${(lead.validation_cost || 0).toFixed(4)}`,\n      lead.cost_efficient ? \"Yes\" : \"No\",\n      this.cleanField(lead.scoring_recommendation),\n      this.formatDate(lead.created_at),\n    ]);\n\n    // Combine headers and rows\n    const csvContent = [\n      headers.join(\",\"),\n      ...rows.map((row) =>\n        row\n          .map((field) =>\n            typeof field === \"string\" &&\n            (field.includes(\",\") || field.includes('\"'))\n              ? `\"${field.replace(/\"/g, '\"\"')}\"`\n              : field\n          )\n          .join(\",\")\n      ),\n    ].join(\"\\n\");\n\n    return csvContent;\n  }\n\n  private cleanField(value: unknown): string {\n    if (value === null || value === undefined) return \"\";\n    return String(value)\n      .replace(/[\\r\\n]+/g, \" \")\n      .trim();\n  }\n\n  private formatDate(dateString: string): string {\n    if (!dateString) return \"\";\n    return new Date(dateString).toLocaleDateString(\"en-US\");\n  }\n\n  private sanitizeFilename(filename: string): string {\n    return filename.replace(/[^a-zA-Z0-9_-]/g, \"_\").replace(/__+/g, \"_\");\n  }\n}\n\nserve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    const supabase = createClient(\n      Deno.env.get(\"SUPABASE_URL\") ?? \"\",\n      Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\") ?? \"\"\n    );\n\n    const url = new URL(req.url);\n    const campaignId = url.pathname.split(\"/\").pop();\n\n    if (!campaignId) {\n      return new Response(\n        JSON.stringify({\n          error: \"Campaign ID is required\",\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 400,\n        }\n      );\n    }\n\n    const queryParams = new URLSearchParams(url.search);\n    const format = queryParams.get(\"format\") || \"csv\";\n    const minConfidence = parseInt(queryParams.get(\"minConfidence\") || \"0\");\n    const includeUnqualified = queryParams.get(\"includeUnqualified\") === \"true\";\n\n    console.log(\n      `📊 Exporting campaign ${campaignId} (format: ${format}, min confidence: ${minConfidence})`\n    );\n\n    // Get campaign details\n    const { data: campaign, error: campaignError } = await supabase\n      .from(\"campaigns\")\n      .select(\"*\")\n      .eq(\"id\", campaignId)\n      .single();\n\n    if (campaignError || !campaign) {\n      return new Response(\n        JSON.stringify({\n          error: \"Campaign not found\",\n          details: campaignError?.message,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 404,\n        }\n      );\n    }\n\n    // Get campaign leads\n    let query = supabase\n      .from(\"leads\")\n      .select(\"*\")\n      .eq(\"campaign_id\", campaignId)\n      .order(\"confidence_score\", { ascending: false });\n\n    if (!includeUnqualified) {\n      query = query.gte(\"confidence_score\", minConfidence);\n    }\n\n    const { data: leads, error: leadsError } = await query;\n\n    if (leadsError) {\n      console.error(\"Error fetching leads:\", leadsError);\n      return new Response(\n        JSON.stringify({\n          error: \"Failed to fetch campaign leads\",\n          details: leadsError.message,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 500,\n        }\n      );\n    }\n\n    if (!leads || leads.length === 0) {\n      return new Response(\n        JSON.stringify({\n          error: \"No leads found for this campaign\",\n          campaign: campaign.business_type || campaignId,\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 404,\n        }\n      );\n    }\n\n    // Generate CSV export\n    const exporter = new CampaignExporter();\n    const csvContent = exporter.generateCSV(campaign, leads);\n\n    // Set response headers for file download\n    const timestamp = new Date().toISOString().slice(0, 10);\n    const filename = `${\n      campaign.business_type || \"campaign\"\n    }_${campaignId.slice(0, 8)}_${timestamp}.csv`;\n\n    console.log(`✅ Export completed: ${leads.length} leads exported`);\n\n    return new Response(csvContent, {\n      headers: {\n        ...corsHeaders,\n        \"Content-Type\": \"text/csv\",\n        \"Content-Disposition\": `attachment; filename=\"${filename}\"`,\n        \"X-Export-Count\": leads.length.toString(),\n        \"X-Campaign-Name\": campaign.business_type || \"Untitled\",\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Campaign export error:\", error);\n    const errorMessage =\n      error instanceof Error ? error.message : \"Unknown error\";\n    return new Response(\n      JSON.stringify({\n        error: \"Export failed\",\n        details: errorMessage,\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n        status: 500,\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":1,"duration":11.286},
{"type":"mark","name":"lsp.did_open","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql","languageId":"sql","version":2,"text":"-- Supabase-First Architecture Database Schema\n-- Core tables for campaign and lead management\n\n-- Campaigns table\nCREATE TABLE IF NOT EXISTS campaigns (\n  id TEXT PRIMARY KEY,\n  business_type TEXT NOT NULL,\n  location TEXT NOT NULL,\n  target_count INTEGER DEFAULT 10,\n  budget_limit DECIMAL(10,4) DEFAULT 50.0,\n  min_confidence_score INTEGER DEFAULT 50,\n  status TEXT DEFAULT 'pending',\n  results_count INTEGER DEFAULT 0,\n  total_cost DECIMAL(10,4) DEFAULT 0,\n  processing_time_ms INTEGER,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Leads table\nCREATE TABLE IF NOT EXISTS leads (\n  id BIGSERIAL PRIMARY KEY,\n  campaign_id TEXT NOT NULL REFERENCES campaigns(id) ON DELETE CASCADE,\n  business_name TEXT NOT NULL,\n  address TEXT,\n  phone TEXT,\n  website TEXT,\n  email TEXT,\n  confidence_score INTEGER DEFAULT 0,\n  score_breakdown JSONB,\n  validation_cost DECIMAL(10,4) DEFAULT 0,\n  cost_efficient BOOLEAN DEFAULT true,\n  scoring_recommendation TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Dashboard exports tracking\nCREATE TABLE IF NOT EXISTS dashboard_exports (\n  id BIGSERIAL PRIMARY KEY,\n  campaign_id TEXT REFERENCES campaigns(id) ON DELETE CASCADE,\n  export_type TEXT DEFAULT 'lead_export',\n  file_format TEXT DEFAULT 'csv',\n  row_count INTEGER DEFAULT 0,\n  export_status TEXT DEFAULT 'completed',\n  completed_at TIMESTAMPTZ DEFAULT NOW(),\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Indexes for performance\nCREATE INDEX IF NOT EXISTS idx_campaigns_created_at ON campaigns(created_at);\nCREATE INDEX IF NOT EXISTS idx_campaigns_status ON campaigns(status);\nCREATE INDEX IF NOT EXISTS idx_leads_campaign_id ON leads(campaign_id);\nCREATE INDEX IF NOT EXISTS idx_leads_confidence_score ON leads(confidence_score);\nCREATE INDEX IF NOT EXISTS idx_leads_created_at ON leads(created_at);\n\n-- Enable Row Level Security (RLS)\nALTER TABLE campaigns ENABLE ROW LEVEL SECURITY;\nALTER TABLE leads ENABLE ROW LEVEL SECURITY;\nALTER TABLE dashboard_exports ENABLE ROW LEVEL SECURITY;\n\n-- RLS Policies for public access (since we're not using auth yet)\n-- In production, these would be more restrictive\nCREATE POLICY \"Public read campaigns\" ON campaigns \n  FOR SELECT USING (true);\n\nCREATE POLICY \"Public insert campaigns\" ON campaigns \n  FOR INSERT WITH CHECK (true);\n\nCREATE POLICY \"Public update campaigns\" ON campaigns \n  FOR UPDATE USING (true);\n\nCREATE POLICY \"Public read leads\" ON leads \n  FOR SELECT USING (true);\n\nCREATE POLICY \"Public insert leads\" ON leads \n  FOR INSERT WITH CHECK (true);\n\nCREATE POLICY \"Public update leads\" ON leads \n  FOR UPDATE USING (true);\n\nCREATE POLICY \"Public read exports\" ON dashboard_exports \n  FOR SELECT USING (true);\n\nCREATE POLICY \"Public insert exports\" ON dashboard_exports \n  FOR INSERT WITH CHECK (true);\n\n-- Function to update updated_at timestamp\nCREATE OR REPLACE FUNCTION update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_at = NOW();\n  RETURN NEW;\nEND;\n$$ language 'plpgsql';\n\n-- Triggers for updated_at\nCREATE TRIGGER update_campaigns_updated_at \n  BEFORE UPDATE ON campaigns \n  FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();\n\nCREATE TRIGGER update_leads_updated_at \n  BEFORE UPDATE ON leads \n  FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();\n\n-- Analytics view for campaign performance\nCREATE OR REPLACE VIEW campaign_analytics AS\nSELECT \n  c.id,\n  c.business_type,\n  c.location,\n  c.target_count,\n  c.budget_limit,\n  c.total_cost,\n  c.results_count,\n  c.processing_time_ms,\n  COUNT(l.id) as actual_leads,\n  AVG(l.confidence_score) as avg_confidence,\n  SUM(l.validation_cost) as total_validation_cost,\n  COUNT(CASE WHEN l.cost_efficient = true THEN 1 END) as cost_efficient_leads,\n  c.created_at\nFROM campaigns c\nLEFT JOIN leads l ON c.id = l.campaign_id\nGROUP BY c.id, c.business_type, c.location, c.target_count, c.budget_limit, \n         c.total_cost, c.results_count, c.processing_time_ms, c.created_at;\n\n-- Grant permissions for Edge Functions to access these tables\n-- Note: In production, you'd use more specific service role permissions\nGRANT ALL ON campaigns TO postgres, anon, authenticated, service_role;\nGRANT ALL ON leads TO postgres, anon, authenticated, service_role;\nGRANT ALL ON dashboard_exports TO postgres, anon, authenticated, service_role;\nGRANT SELECT ON campaign_analytics TO postgres, anon, authenticated, service_role;\nGRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO postgres, anon, authenticated, service_role;"}}},
{"type":"measure","name":"lsp.did_open","count":2,"duration":0.06},
{"type":"mark","name":"lsp.did_open","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/supabase-app.js","languageId":"javascript","version":3,"text":"// ProspectPro Supabase-First Frontend\nimport { createClient } from \"https://cdn.skypack.dev/@supabase/supabase-js@2\";\n\nclass ProspectProSupabase {\n  constructor() {\n    // Initialize Supabase client\n    this.supabase = createClient(\n      \"https://sriycekxdqnesdsgwiuc.supabase.co\",\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjI4MjU2ODIsImV4cCI6MjAzODQwMTY4Mn0.Ks4v7z6DJy80YA5OJJtjEgBAUCuRbdOOKfEAd5k9SJE\"\n    );\n\n    this.selectedTool = \"business-discovery\";\n    this.searchResults = [];\n    this.lastSearchCampaignId = null;\n    this.lastSearchCampaignName = null;\n    this.costPerLead = 0.084;\n    this.campaignRunning = false;\n    this.sessionStats = null;\n    this.selectedQuantity = 5;\n\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 ProspectPro Supabase-First Client initialized\");\n\n    // Check Supabase connection\n    await this.checkSupabaseStatus();\n\n    // Initialize business categories\n    if (document.getElementById(\"categorySelect\")) {\n      this.initBusinessCategories();\n    }\n\n    // Bind events\n    this.bindEvents();\n\n    // Update initial cost estimate\n    this.updateCostEstimate();\n  }\n\n  async checkSupabaseStatus() {\n    try {\n      const { data, error } = await this.supabase\n        .from(\"campaigns\")\n        .select(\"count\", { count: \"exact\" })\n        .limit(1);\n\n      if (error) {\n        console.warn(\"Supabase connection issue:\", error.message);\n        this.showNotification(\n          \"Database connection issue - some features may be limited\",\n          \"warning\"\n        );\n      } else {\n        console.log(\"✅ Supabase connection verified\");\n      }\n    } catch (error) {\n      console.error(\"Supabase status check failed:\", error);\n      this.showNotification(\"Unable to connect to database\", \"error\");\n    }\n  }\n\n  selectTemplate(templateType) {\n    if (templateType === \"local-business\") {\n      document.getElementById(\"businessType\").value = \"restaurant\";\n      document.getElementById(\"location\").value = \"San Francisco, CA\";\n    }\n  }\n\n  showPage(pageId) {\n    // Hide all pages\n    document.querySelectorAll(\".page-content\").forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    // Show selected page\n    const targetPage = document.getElementById(pageId);\n    if (targetPage) {\n      targetPage.style.display = \"block\";\n    }\n  }\n\n  showSettings() {\n    this.showPage(\"settingsPage\");\n    this.loadAdminData();\n  }\n\n  async loadAdminData() {\n    try {\n      // Get recent campaigns from Supabase\n      const { data: campaigns, error } = await this.supabase\n        .from(\"campaigns\")\n        .select(\"*\")\n        .order(\"created_at\", { ascending: false })\n        .limit(10);\n\n      if (error) {\n        console.error(\"Failed to load campaigns:\", error);\n        return;\n      }\n\n      // Update recent campaigns display\n      this.updateRecentCampaignsDisplay(campaigns || []);\n\n      // Get campaign statistics\n      const { data: stats } = await this.supabase\n        .from(\"campaign_analytics\")\n        .select(\"*\");\n\n      if (stats) {\n        this.updateEnhancedStatsDisplay({ success: true, data: stats });\n      }\n    } catch (error) {\n      console.error(\"Admin data loading error:\", error);\n      this.showNotification(\"Failed to load admin data\", \"error\");\n    }\n  }\n\n  updateEnhancedStatsDisplay(statsData) {\n    if (statsData.success && statsData.data) {\n      const stats = statsData.data;\n      const totalCampaigns = stats.length;\n      const totalLeads = stats.reduce(\n        (sum, s) => sum + (s.actual_leads || 0),\n        0\n      );\n      const avgConfidence =\n        stats.reduce((sum, s) => sum + (s.avg_confidence || 0), 0) /\n          stats.length || 0;\n      const totalCost = stats.reduce((sum, s) => sum + (s.total_cost || 0), 0);\n\n      // Update dashboard elements\n      const elements = {\n        totalCampaigns: document.getElementById(\"totalCampaigns\"),\n        totalLeads: document.getElementById(\"totalLeads\"),\n        avgConfidence: document.getElementById(\"avgConfidence\"),\n        totalCost: document.getElementById(\"totalCost\"),\n      };\n\n      if (elements.totalCampaigns)\n        elements.totalCampaigns.textContent = totalCampaigns;\n      if (elements.totalLeads) elements.totalLeads.textContent = totalLeads;\n      if (elements.avgConfidence)\n        elements.avgConfidence.textContent = `${avgConfidence.toFixed(1)}%`;\n      if (elements.totalCost)\n        elements.totalCost.textContent = `$${totalCost.toFixed(2)}`;\n    }\n  }\n\n  updateRecentCampaignsDisplay(campaigns) {\n    const recentCampaignsEl = document.getElementById(\"recentCampaigns\");\n    if (!recentCampaignsEl || !campaigns.length) return;\n\n    const campaignsList = campaigns\n      .slice(0, 5)\n      .map((campaign) => {\n        const date = new Date(campaign.created_at).toLocaleDateString();\n        return `\n          <div class=\"campaign-item\">\n            <div class=\"campaign-info\">\n              <strong>${campaign.business_type || \"Unknown\"}</strong>\n              <span class=\"campaign-location\">${\n                campaign.location || \"Unknown location\"\n              }</span>\n              <span class=\"campaign-date\">${date}</span>\n            </div>\n            <div class=\"campaign-stats\">\n              <span class=\"campaign-leads\">${\n                campaign.results_count || 0\n              } leads</span>\n              <span class=\"campaign-cost\">$${(campaign.total_cost || 0).toFixed(\n                2\n              )}</span>\n              <button onclick=\"prospectProApp.exportCampaignLeads('${\n                campaign.id\n              }')\" class=\"btn-export\">Export</button>\n            </div>\n          </div>\n        `;\n      })\n      .join(\"\");\n\n    recentCampaignsEl.innerHTML = campaignsList;\n  }\n\n  goHome() {\n    this.showPage(\"discoveryPage\");\n  }\n\n  updateCostEstimate() {\n    const quantity = parseInt(\n      document.getElementById(\"quantity\")?.value || \"5\"\n    );\n    this.selectedQuantity = quantity;\n    const estimatedCost = quantity * this.costPerLead;\n\n    const costElement = document.getElementById(\"estimatedCost\");\n    if (costElement) {\n      costElement.textContent = `$${estimatedCost.toFixed(2)}`;\n    }\n  }\n\n  bindEvents() {\n    // Search button\n    const searchBtn = document.getElementById(\"searchBtn\");\n    if (searchBtn) {\n      searchBtn.onclick = () => this.handleSearch();\n    }\n\n    // Export button\n    const exportBtn = document.getElementById(\"exportBtn\");\n    if (exportBtn) {\n      exportBtn.onclick = () => this.exportResults();\n    }\n\n    // Quantity slider\n    const quantitySlider = document.getElementById(\"quantity\");\n    if (quantitySlider) {\n      quantitySlider.oninput = () => this.updateCostEstimate();\n    }\n\n    // Settings button\n    const settingsBtn = document.getElementById(\"settingsBtn\");\n    if (settingsBtn) {\n      settingsBtn.onclick = () => this.showSettings();\n    }\n\n    // Home button\n    const homeBtn = document.getElementById(\"homeBtn\");\n    if (homeBtn) {\n      homeBtn.onclick = () => this.goHome();\n    }\n  }\n\n  async handleSearch() {\n    if (this.campaignRunning) {\n      console.log(\"Campaign already running, ignoring request\");\n      return;\n    }\n\n    const businessType = document.getElementById(\"businessType\")?.value;\n    const location = document.getElementById(\"location\")?.value;\n    const quantity = parseInt(\n      document.getElementById(\"quantity\")?.value || \"5\"\n    );\n\n    if (!businessType || !location) {\n      this.showError(\"Please enter both business type and location\");\n      return;\n    }\n\n    this.campaignRunning = true;\n    this.setLoadingState(true);\n    this.showCampaignProgress(true);\n\n    try {\n      console.log(\n        `🔍 Starting business discovery: ${businessType} in ${location}`\n      );\n\n      // Call Supabase Edge Function instead of server.js\n      const { data, error } = await this.supabase.functions.invoke(\n        \"business-discovery\",\n        {\n          body: {\n            businessType,\n            location,\n            maxResults: quantity,\n            budgetLimit: 50,\n            requireCompleteContacts: false,\n            minConfidenceScore: 50,\n          },\n        }\n      );\n\n      if (error) {\n        throw new Error(`Edge Function error: ${error.message}`);\n      }\n\n      if (!data.success) {\n        throw new Error(data.error || \"Business discovery failed\");\n      }\n\n      // Store results for potential export\n      this.searchResults = data.leads || [];\n      this.lastSearchCampaignId = data.campaignId;\n      this.lastSearchCampaignName = `${businessType} in ${location}`;\n\n      // Show results\n      this.showResults(data);\n\n      console.log(\n        `✅ Discovery completed: ${this.searchResults.length} leads found`\n      );\n    } catch (error) {\n      console.error(\"❌ Search error:\", error);\n      this.showError(error.message || \"Business discovery failed\");\n    } finally {\n      this.campaignRunning = false;\n      this.setLoadingState(false);\n      this.showCampaignProgress(false);\n    }\n  }\n\n  showCampaignProgress(isRunning) {\n    const progressContainer = document.getElementById(\"campaignProgress\");\n    if (progressContainer) {\n      progressContainer.style.display = isRunning ? \"block\" : \"none\";\n\n      if (isRunning) {\n        this.animateProgressSteps();\n      }\n    }\n  }\n\n  animateProgressSteps() {\n    const steps = [\n      \"Searching for businesses...\",\n      \"Validating contact information...\",\n      \"Scoring lead quality...\",\n      \"Generating results...\",\n    ];\n\n    const progressText = document.getElementById(\"progressText\");\n    let currentStep = 0;\n\n    const interval = setInterval(() => {\n      if (progressText && currentStep < steps.length) {\n        progressText.textContent = steps[currentStep];\n        currentStep++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 2000);\n  }\n\n  setLoadingState(isLoading) {\n    const searchBtn = document.getElementById(\"searchBtn\");\n    if (searchBtn) {\n      searchBtn.disabled = isLoading;\n      searchBtn.textContent = isLoading ? \"Searching...\" : \"Search Businesses\";\n    }\n  }\n\n  showResults(result) {\n    const resultsContainer = document.getElementById(\"results\");\n    if (!resultsContainer) return;\n\n    // Clear previous results\n    resultsContainer.innerHTML = \"\";\n    resultsContainer.style.display = \"block\";\n\n    const leads = result.leads || [];\n    const stats = result.results || {};\n\n    if (leads.length === 0) {\n      this.showInsufficientResults(result);\n      return;\n    }\n\n    // Results header\n    const header = document.createElement(\"div\");\n    header.className = \"results-header\";\n    header.innerHTML = `\n      <h3>🎯 Discovery Results</h3>\n      <div class=\"results-stats\">\n        <span class=\"stat-item\">\n          <strong>${stats.totalFound || leads.length}</strong> businesses found\n        </span>\n        <span class=\"stat-item\">\n          <strong>${stats.qualified || leads.length}</strong> qualified leads\n        </span>\n        <span class=\"stat-item\">\n          Qualification rate: <strong>${\n            stats.qualificationRate || \"100%\"\n          }</strong>\n        </span>\n        <span class=\"stat-item\">\n          Avg confidence: <strong>${stats.averageConfidence || 0}%</strong>\n        </span>\n      </div>\n      <div class=\"results-actions\">\n        <button id=\"exportCurrentBtn\" class=\"btn btn-secondary\">📊 Export Results</button>\n      </div>\n    `;\n    resultsContainer.appendChild(header);\n\n    // Results grid\n    const grid = document.createElement(\"div\");\n    grid.className = \"results-grid\";\n\n    leads.forEach((business, index) => {\n      const card = this.createEnhancedBusinessCard(business, index);\n      grid.appendChild(card);\n    });\n\n    resultsContainer.appendChild(grid);\n\n    // Bind export button\n    const exportCurrentBtn = document.getElementById(\"exportCurrentBtn\");\n    if (exportCurrentBtn) {\n      exportCurrentBtn.onclick = () => this.exportResults();\n    }\n\n    // Update session stats\n    this.updateSessionStats();\n  }\n\n  createEnhancedBusinessCard(business, index) {\n    const card = document.createElement(\"div\");\n    card.className = \"business-card enhanced\";\n\n    const confidence =\n      business.optimizedScore || business.confidence_score || 0;\n    const scoreClass =\n      confidence >= 80 ? \"high\" : confidence >= 60 ? \"medium\" : \"low\";\n\n    card.innerHTML = `\n      <div class=\"card-header\">\n        <h4 class=\"business-name\">${\n          business.businessName || business.business_name || \"Unknown Business\"\n        }</h4>\n        <div class=\"confidence-score ${scoreClass}\">\n          <span class=\"score-value\">${confidence}%</span>\n          <span class=\"score-label\">Confidence</span>\n        </div>\n      </div>\n      \n      <div class=\"card-body\">\n        <div class=\"contact-info\">\n          <div class=\"info-item\">\n            <span class=\"info-icon\">📍</span>\n            <span class=\"info-text\">${\n              business.address || \"Address not available\"\n            }</span>\n          </div>\n          \n          ${\n            business.phone\n              ? `\n            <div class=\"info-item\">\n              <span class=\"info-icon\">📞</span>\n              <span class=\"info-text\">${business.phone}</span>\n            </div>\n          `\n              : \"\"\n          }\n          \n          ${\n            business.website\n              ? `\n            <div class=\"info-item\">\n              <span class=\"info-icon\">🌐</span>\n              <a href=\"${business.website}\" target=\"_blank\" class=\"info-link\">${business.website}</a>\n            </div>\n          `\n              : \"\"\n          }\n          \n          ${\n            business.email\n              ? `\n            <div class=\"info-item\">\n              <span class=\"info-icon\">✉️</span>\n              <span class=\"info-text\">${business.email}</span>\n            </div>\n          `\n              : \"\"\n          }\n        </div>\n        \n        ${\n          business.scoringRecommendation || business.scoring_recommendation\n            ? `\n          <div class=\"recommendation\">\n            <strong>Recommendation:</strong> ${\n              business.scoringRecommendation || business.scoring_recommendation\n            }\n          </div>\n        `\n            : \"\"\n        }\n      </div>\n    `;\n\n    return card;\n  }\n\n  showInsufficientResults(result) {\n    const resultsContainer = document.getElementById(\"results\");\n    if (!resultsContainer) return;\n\n    resultsContainer.innerHTML = `\n      <div class=\"insufficient-results\">\n        <h3>🎯 Limited Results Found</h3>\n        <p>We found ${result.results?.totalFound || 0} businesses, but only ${\n      result.results?.qualified || 0\n    } met your quality criteria.</p>\n        \n        <div class=\"suggestions\">\n          <h4>💡 Try these improvements:</h4>\n          <ul>\n            <li>Expand your search radius</li>\n            <li>Try different business types (e.g., \"cafe\" instead of \"coffee shop\")</li>\n            <li>Lower the minimum confidence score</li>\n            <li>Try a different location or nearby city</li>\n          </ul>\n        </div>\n        \n        <div class=\"retry-section\">\n          <button onclick=\"prospectProApp.goHome()\" class=\"btn btn-primary\">🔍 Try New Search</button>\n        </div>\n      </div>\n    `;\n    resultsContainer.style.display = \"block\";\n  }\n\n  showError(message) {\n    const resultsContainer = document.getElementById(\"results\");\n    if (!resultsContainer) return;\n\n    resultsContainer.innerHTML = `\n      <div class=\"error-results\">\n        <h3>❌ Search Error</h3>\n        <p>${message}</p>\n        <button onclick=\"prospectProApp.goHome()\" class=\"btn btn-primary\">🔍 Try Again</button>\n      </div>\n    `;\n    resultsContainer.style.display = \"block\";\n  }\n\n  async exportResults() {\n    if (!this.lastSearchCampaignId) {\n      this.showNotification(\"No campaign results to export\", \"warning\");\n      return;\n    }\n\n    try {\n      console.log(`📊 Exporting campaign ${this.lastSearchCampaignId}`);\n\n      // Call Supabase Edge Function for export\n      const { data, error } = await this.supabase.functions.invoke(\n        \"campaign-export\",\n        {\n          body: { campaignId: this.lastSearchCampaignId },\n        }\n      );\n\n      if (error) {\n        throw new Error(`Export error: ${error.message}`);\n      }\n\n      // Trigger download\n      const blob = new Blob([data], { type: \"text/csv\" });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = `campaign_${this.lastSearchCampaignId.slice(\n        0,\n        8\n      )}_${new Date().toISOString().slice(0, 10)}.csv`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n\n      this.showNotification(\"Export completed successfully\", \"success\");\n    } catch (error) {\n      console.error(\"Export error:\", error);\n      this.showNotification(\"Export failed: \" + error.message, \"error\");\n    }\n  }\n\n  async exportCampaignLeads(campaignId) {\n    try {\n      console.log(`📊 Exporting campaign ${campaignId}`);\n\n      // Use fetch to call the edge function directly for CSV export\n      const response = await fetch(\n        `${this.supabase.supabaseUrl}/functions/v1/campaign-export/${campaignId}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${this.supabase.supabaseKey}`,\n            Accept: \"text/csv\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Export failed: ${response.statusText}`);\n      }\n\n      const csvData = await response.text();\n      const filename =\n        response.headers\n          .get(\"Content-Disposition\")\n          ?.match(/filename=\"([^\"]+)\"/)?.[1] ||\n        `campaign_${campaignId.slice(0, 8)}.csv`;\n\n      // Trigger download\n      const blob = new Blob([csvData], { type: \"text/csv\" });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n\n      this.showNotification(\"Campaign exported successfully\", \"success\");\n    } catch (error) {\n      console.error(\"Campaign export error:\", error);\n      this.showNotification(\"Export failed: \" + error.message, \"error\");\n    }\n  }\n\n  showNotification(message, type = \"info\") {\n    const notification = document.createElement(\"div\");\n    notification.className = `notification ${type}`;\n    notification.innerHTML = `\n      <span>${message}</span>\n      <button onclick=\"this.parentElement.remove()\">×</button>\n    `;\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 5000);\n  }\n\n  updateSessionStats() {\n    // Update current session performance if elements exist\n    const sessionStatsEl = document.getElementById(\"currentSessionStats\");\n    if (!sessionStatsEl) return;\n\n    this.sessionStats = {\n      campaignsRun: 1,\n      totalLeads: this.searchResults.length,\n      avgConfidence:\n        this.searchResults.reduce(\n          (sum, lead) => sum + (lead.optimizedScore || 0),\n          0\n        ) / this.searchResults.length || 0,\n      totalCost: this.searchResults.reduce(\n        (sum, lead) => sum + (lead.validationCost || 0),\n        0\n      ),\n    };\n\n    sessionStatsEl.innerHTML = `\n      <h4>Current Session</h4>\n      <div class=\"stat-grid\">\n        <div class=\"stat-item\">\n          <span class=\"stat-value\">${this.sessionStats.campaignsRun}</span>\n          <span class=\"stat-label\">Campaigns Run</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-value\">${this.sessionStats.totalLeads}</span>\n          <span class=\"stat-label\">Leads Found</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-value\">${this.sessionStats.avgConfidence.toFixed(\n            1\n          )}%</span>\n          <span class=\"stat-label\">Avg Confidence</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-value\">$${this.sessionStats.totalCost.toFixed(\n            2\n          )}</span>\n          <span class=\"stat-label\">Session Cost</span>\n        </div>\n      </div>\n    `;\n  }\n\n  initBusinessCategories() {\n    const categories = [\n      \"restaurant\",\n      \"retail store\",\n      \"professional services\",\n      \"healthcare\",\n      \"automotive\",\n      \"real estate\",\n      \"fitness\",\n      \"beauty salon\",\n      \"legal services\",\n      \"accounting\",\n      \"consulting\",\n      \"technology\",\n      \"marketing agency\",\n      \"dental office\",\n    ];\n\n    const categorySelect = document.getElementById(\"categorySelect\");\n    if (categorySelect) {\n      categories.forEach((category) => {\n        const option = document.createElement(\"option\");\n        option.value = category;\n        option.textContent =\n          category.charAt(0).toUpperCase() + category.slice(1);\n        categorySelect.appendChild(option);\n      });\n\n      categorySelect.onchange = () => {\n        const businessTypeInput = document.getElementById(\"businessType\");\n        if (businessTypeInput) {\n          businessTypeInput.value = categorySelect.value;\n        }\n      };\n    }\n  }\n}\n\n// Initialize the application\nlet prospectProApp;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  prospectProApp = new ProspectProSupabase();\n});\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":1,"duration":0.055},
{"type":"measure","name":"lsp.did_open","count":3,"duration":33.608},
{"type":"mark","name":"lsp.did_open","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-supabase.html","languageId":"html","version":3,"text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ProspectPro - Supabase-First Lead Discovery</title>\n    <style>\n      * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n      }\n\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n          sans-serif;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        min-height: 100vh;\n        padding: 20px;\n      }\n\n      .container {\n        max-width: 1200px;\n        margin: 0 auto;\n        background: white;\n        border-radius: 20px;\n        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n        overflow: hidden;\n      }\n\n      .header {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        padding: 30px;\n        text-align: center;\n      }\n\n      .header h1 {\n        font-size: 2.5rem;\n        margin-bottom: 10px;\n        font-weight: 700;\n      }\n\n      .header p {\n        opacity: 0.9;\n        font-size: 1.1rem;\n      }\n\n      .nav-tabs {\n        display: flex;\n        background: #f8f9fa;\n        border-bottom: 1px solid #dee2e6;\n      }\n\n      .nav-tab {\n        flex: 1;\n        padding: 15px 20px;\n        background: none;\n        border: none;\n        cursor: pointer;\n        font-size: 1rem;\n        transition: all 0.3s ease;\n      }\n\n      .nav-tab.active {\n        background: white;\n        border-bottom: 3px solid #667eea;\n        color: #667eea;\n        font-weight: 600;\n      }\n\n      .page-content {\n        padding: 40px;\n        min-height: 500px;\n      }\n\n      .search-form {\n        max-width: 600px;\n        margin: 0 auto;\n      }\n\n      .form-group {\n        margin-bottom: 25px;\n      }\n\n      .form-group label {\n        display: block;\n        margin-bottom: 8px;\n        font-weight: 600;\n        color: #333;\n      }\n\n      .form-group input,\n      .form-group select {\n        width: 100%;\n        padding: 15px;\n        border: 2px solid #e1e5e9;\n        border-radius: 10px;\n        font-size: 1rem;\n        transition: border-color 0.3s ease;\n      }\n\n      .form-group input:focus,\n      .form-group select:focus {\n        outline: none;\n        border-color: #667eea;\n      }\n\n      .quantity-control {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n      }\n\n      .quantity-slider {\n        flex: 1;\n      }\n\n      .quantity-display {\n        background: #667eea;\n        color: white;\n        padding: 10px 20px;\n        border-radius: 25px;\n        font-weight: 600;\n        min-width: 80px;\n        text-align: center;\n      }\n\n      .cost-estimate {\n        background: #f8f9fa;\n        padding: 20px;\n        border-radius: 10px;\n        text-align: center;\n        margin: 20px 0;\n      }\n\n      .cost-estimate h3 {\n        color: #333;\n        margin-bottom: 10px;\n      }\n\n      .cost-amount {\n        font-size: 2rem;\n        font-weight: 700;\n        color: #28a745;\n      }\n\n      .btn {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        border: none;\n        padding: 15px 30px;\n        border-radius: 10px;\n        font-size: 1.1rem;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        width: 100%;\n      }\n\n      .btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);\n      }\n\n      .btn:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        transform: none;\n      }\n\n      .btn-secondary {\n        background: #6c757d;\n        color: white;\n        padding: 10px 20px;\n        font-size: 0.9rem;\n        width: auto;\n      }\n\n      .campaign-progress {\n        display: none;\n        text-align: center;\n        padding: 30px;\n        background: #f8f9fa;\n        border-radius: 10px;\n        margin: 20px 0;\n      }\n\n      .progress-spinner {\n        width: 50px;\n        height: 50px;\n        border: 5px solid #e1e5e9;\n        border-top: 5px solid #667eea;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n        margin: 0 auto 20px;\n      }\n\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n\n      .results {\n        display: none;\n        margin-top: 30px;\n      }\n\n      .results-header {\n        background: #f8f9fa;\n        padding: 25px;\n        border-radius: 10px;\n        margin-bottom: 25px;\n      }\n\n      .results-header h3 {\n        color: #333;\n        margin-bottom: 15px;\n      }\n\n      .results-stats {\n        display: flex;\n        gap: 20px;\n        flex-wrap: wrap;\n        margin-bottom: 20px;\n      }\n\n      .stat-item {\n        padding: 10px 15px;\n        background: white;\n        border-radius: 8px;\n        border-left: 4px solid #667eea;\n      }\n\n      .results-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n        gap: 20px;\n      }\n\n      .business-card {\n        background: white;\n        border: 1px solid #e1e5e9;\n        border-radius: 15px;\n        padding: 25px;\n        transition: all 0.3s ease;\n        position: relative;\n      }\n\n      .business-card:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);\n      }\n\n      .card-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        margin-bottom: 20px;\n      }\n\n      .business-name {\n        color: #333;\n        font-size: 1.2rem;\n        margin: 0;\n        flex: 1;\n        margin-right: 15px;\n      }\n\n      .confidence-score {\n        background: #28a745;\n        color: white;\n        padding: 8px 12px;\n        border-radius: 20px;\n        text-align: center;\n        min-width: 70px;\n      }\n\n      .confidence-score.medium {\n        background: #ffc107;\n        color: #333;\n      }\n\n      .confidence-score.low {\n        background: #dc3545;\n      }\n\n      .score-value {\n        font-weight: 700;\n        font-size: 1.1rem;\n      }\n\n      .score-label {\n        display: block;\n        font-size: 0.8rem;\n        opacity: 0.8;\n      }\n\n      .contact-info {\n        margin-bottom: 15px;\n      }\n\n      .info-item {\n        display: flex;\n        align-items: center;\n        margin-bottom: 10px;\n        gap: 10px;\n      }\n\n      .info-icon {\n        font-size: 1.2rem;\n        width: 25px;\n      }\n\n      .info-text {\n        color: #666;\n        word-break: break-word;\n      }\n\n      .info-link {\n        color: #667eea;\n        text-decoration: none;\n      }\n\n      .info-link:hover {\n        text-decoration: underline;\n      }\n\n      .recommendation {\n        background: #e7f3ff;\n        padding: 12px;\n        border-radius: 8px;\n        border-left: 4px solid #667eea;\n        font-size: 0.9rem;\n        color: #333;\n      }\n\n      .notification {\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        padding: 15px 20px;\n        border-radius: 10px;\n        background: #28a745;\n        color: white;\n        z-index: 1000;\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        max-width: 400px;\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n      }\n\n      .notification.warning {\n        background: #ffc107;\n        color: #333;\n      }\n\n      .notification.error {\n        background: #dc3545;\n      }\n\n      .notification button {\n        background: none;\n        border: none;\n        color: inherit;\n        font-size: 1.2rem;\n        cursor: pointer;\n        padding: 0;\n        margin-left: auto;\n      }\n\n      .error-results,\n      .insufficient-results {\n        text-align: center;\n        padding: 40px;\n        background: #f8f9fa;\n        border-radius: 10px;\n      }\n\n      .error-results h3,\n      .insufficient-results h3 {\n        color: #333;\n        margin-bottom: 20px;\n      }\n\n      .suggestions {\n        background: white;\n        padding: 20px;\n        border-radius: 10px;\n        margin: 20px 0;\n        text-align: left;\n      }\n\n      .suggestions ul {\n        list-style-type: none;\n        padding-left: 0;\n      }\n\n      .suggestions li {\n        padding: 8px 0;\n        border-bottom: 1px solid #e1e5e9;\n      }\n\n      .suggestions li:before {\n        content: \"💡 \";\n        margin-right: 10px;\n      }\n\n      .admin-dashboard {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: 20px;\n        margin-bottom: 30px;\n      }\n\n      .dashboard-card {\n        background: white;\n        padding: 25px;\n        border-radius: 15px;\n        border: 1px solid #e1e5e9;\n        text-align: center;\n      }\n\n      .dashboard-card h3 {\n        color: #333;\n        margin-bottom: 10px;\n      }\n\n      .dashboard-value {\n        font-size: 2rem;\n        font-weight: 700;\n        color: #667eea;\n        margin-bottom: 5px;\n      }\n\n      .dashboard-label {\n        color: #666;\n        font-size: 0.9rem;\n      }\n\n      .recent-campaigns {\n        background: white;\n        border-radius: 15px;\n        padding: 25px;\n        border: 1px solid #e1e5e9;\n      }\n\n      .campaign-item {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 15px 0;\n        border-bottom: 1px solid #f0f0f0;\n      }\n\n      .campaign-item:last-child {\n        border-bottom: none;\n      }\n\n      .campaign-info {\n        flex: 1;\n      }\n\n      .campaign-info strong {\n        display: block;\n        color: #333;\n        margin-bottom: 5px;\n      }\n\n      .campaign-location,\n      .campaign-date {\n        font-size: 0.9rem;\n        color: #666;\n        margin-right: 15px;\n      }\n\n      .campaign-stats {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n      }\n\n      .campaign-leads,\n      .campaign-cost {\n        font-size: 0.9rem;\n        color: #666;\n      }\n\n      .btn-export {\n        background: #28a745;\n        color: white;\n        border: none;\n        padding: 6px 12px;\n        border-radius: 6px;\n        font-size: 0.8rem;\n        cursor: pointer;\n      }\n\n      @media (max-width: 768px) {\n        .container {\n          margin: 10px;\n          border-radius: 15px;\n        }\n\n        .page-content {\n          padding: 20px;\n        }\n\n        .results-stats {\n          flex-direction: column;\n          gap: 10px;\n        }\n\n        .results-grid {\n          grid-template-columns: 1fr;\n        }\n\n        .campaign-item {\n          flex-direction: column;\n          align-items: flex-start;\n          gap: 10px;\n        }\n\n        .campaign-stats {\n          align-self: stretch;\n          justify-content: space-between;\n        }\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"header\">\n        <h1>🎯 ProspectPro</h1>\n        <p>Supabase-First Lead Discovery Platform</p>\n      </div>\n\n      <div class=\"nav-tabs\">\n        <button\n          class=\"nav-tab active\"\n          onclick=\"prospectProApp?.showPage('discoveryPage'); this.parentElement.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active')); this.classList.add('active')\"\n        >\n          🔍 Discovery\n        </button>\n        <button\n          class=\"nav-tab\"\n          onclick=\"prospectProApp?.showSettings(); this.parentElement.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active')); this.classList.add('active')\"\n        >\n          ⚙️ Dashboard\n        </button>\n      </div>\n\n      <!-- Discovery Page -->\n      <div id=\"discoveryPage\" class=\"page-content\">\n        <div class=\"search-form\">\n          <div class=\"form-group\">\n            <label for=\"businessType\">Business Type</label>\n            <input\n              type=\"text\"\n              id=\"businessType\"\n              placeholder=\"e.g., restaurant, retail store, dental office\"\n            />\n            <select id=\"categorySelect\" style=\"margin-top: 10px\">\n              <option value=\"\">Or choose from common categories...</option>\n            </select>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"location\">Location</label>\n            <input\n              type=\"text\"\n              id=\"location\"\n              placeholder=\"e.g., San Francisco, CA or New York, NY\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"quantity\">Number of Leads</label>\n            <div class=\"quantity-control\">\n              <input\n                type=\"range\"\n                id=\"quantity\"\n                class=\"quantity-slider\"\n                min=\"1\"\n                max=\"20\"\n                value=\"5\"\n              />\n              <div class=\"quantity-display\">\n                <span id=\"quantityDisplay\">5</span> leads\n              </div>\n            </div>\n          </div>\n\n          <div class=\"cost-estimate\">\n            <h3>Estimated Cost</h3>\n            <div class=\"cost-amount\" id=\"estimatedCost\">$0.42</div>\n          </div>\n\n          <button id=\"searchBtn\" class=\"btn\">🚀 Search Businesses</button>\n        </div>\n\n        <!-- Campaign Progress -->\n        <div id=\"campaignProgress\" class=\"campaign-progress\">\n          <div class=\"progress-spinner\"></div>\n          <h3>Discovering businesses...</h3>\n          <p id=\"progressText\">Initializing search parameters...</p>\n        </div>\n\n        <!-- Results Container -->\n        <div id=\"results\" class=\"results\"></div>\n      </div>\n\n      <!-- Settings/Dashboard Page -->\n      <div id=\"settingsPage\" class=\"page-content\" style=\"display: none\">\n        <h2>📊 Dashboard & Statistics</h2>\n\n        <div class=\"admin-dashboard\">\n          <div class=\"dashboard-card\">\n            <h3>Total Campaigns</h3>\n            <div class=\"dashboard-value\" id=\"totalCampaigns\">0</div>\n            <div class=\"dashboard-label\">Completed</div>\n          </div>\n\n          <div class=\"dashboard-card\">\n            <h3>Total Leads</h3>\n            <div class=\"dashboard-value\" id=\"totalLeads\">0</div>\n            <div class=\"dashboard-label\">Discovered</div>\n          </div>\n\n          <div class=\"dashboard-card\">\n            <h3>Avg Confidence</h3>\n            <div class=\"dashboard-value\" id=\"avgConfidence\">0%</div>\n            <div class=\"dashboard-label\">Quality Score</div>\n          </div>\n\n          <div class=\"dashboard-card\">\n            <h3>Total Spent</h3>\n            <div class=\"dashboard-value\" id=\"totalCost\">$0.00</div>\n            <div class=\"dashboard-label\">API Costs</div>\n          </div>\n        </div>\n\n        <div class=\"recent-campaigns\">\n          <h3>📋 Recent Campaigns</h3>\n          <div id=\"recentCampaigns\">\n            <p style=\"text-align: center; color: #666; padding: 20px\">\n              No campaigns yet. Start your first discovery!\n            </p>\n          </div>\n        </div>\n\n        <div id=\"currentSessionStats\" style=\"margin-top: 30px\"></div>\n      </div>\n    </div>\n\n    <!-- Load Supabase-First JavaScript -->\n    <script type=\"module\" src=\"supabase-app.js\"></script>\n\n    <script>\n      // Update quantity display when slider changes\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        const quantitySlider = document.getElementById(\"quantity\");\n        const quantityDisplay = document.getElementById(\"quantityDisplay\");\n\n        if (quantitySlider && quantityDisplay) {\n          quantitySlider.oninput = () => {\n            quantityDisplay.textContent = quantitySlider.value;\n            // Trigger cost update if app is loaded\n            if (window.prospectProApp) {\n              window.prospectProApp.updateCostEstimate();\n            }\n          };\n        }\n      });\n    </script>\n  </body>\n</html>\n"}}},
{"type":"measure","name":"lsp.did_open","count":4,"duration":0.157},
{"type":"mark","name":"lsp.did_open","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/cloudbuild-static.yaml","languageId":"yaml","version":2,"text":"# Supabase-First Static Deployment Configuration\n# Deploys only static frontend to Cloud Storage + CDN\n\nsteps:\n  # Build static frontend\n  - name: 'node:18'\n    entrypoint: 'npm'\n    args: ['install']\n    \n  - name: 'node:18'\n    entrypoint: 'npm'\n    args: ['run', 'build:static']\n\n  # Deploy to Cloud Storage\n  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'\n    entrypoint: 'gsutil'\n    args: ['-m', 'rsync', '-r', '-d', './dist/', 'gs://prospectpro-static-frontend/']\n\n  # Set public permissions\n  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'\n    entrypoint: 'gsutil'\n    args: ['iam', 'ch', 'allUsers:objectViewer', 'gs://prospectpro-static-frontend']\n\n  # Invalidate CDN cache (if using Cloud CDN)\n  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'\n    entrypoint: 'gcloud'\n    args: ['compute', 'url-maps', 'invalidate-cdn-cache', 'prospectpro-url-map', '--path=\"/*\"', '--async']\n\n# Create Cloud Storage bucket if it doesn't exist\noptions:\n  logging: CLOUD_LOGGING_ONLY\n  \ntimeout: '600s'"}}},
{"type":"measure","name":"lsp.did_open","count":5,"duration":0.024},
{"type":"mark","name":"lsp.did_open","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package-supabase.json","languageId":"json","version":3,"text":"{\n    \"name\": \"prospectpro-supabase-first\",\n    \"version\": \"4.0.0\",\n    \"description\": \"ProspectPro - Supabase-First Lead Discovery Platform\",\n    \"scripts\": {\n        \"build:static\": \"mkdir -p dist && cp public/index-supabase.html dist/index.html && cp public/supabase-app.js dist/app.js\",\n        \"deploy:static\": \"gcloud builds submit --config cloudbuild-static.yaml\",\n        \"serve:local\": \"cd public && python3 -m http.server 8080\",\n        \"test:edge-functions\": \"supabase functions serve\",\n        \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy campaign-export\",\n        \"db:setup\": \"supabase db reset\",\n        \"db:migrate\": \"supabase migration up\"\n    },\n    \"keywords\": [\n        \"leads\",\n        \"business-discovery\",\n        \"supabase\",\n        \"edge-functions\",\n        \"static-site\"\n    ],\n    \"author\": \"Alex Torelli\",\n    \"license\": \"MIT\",\n    \"dependencies\": {},\n    \"devDependencies\": {},\n    \"engines\": {\n        \"node\": \">=18.0.0\"\n    }\n}"}}},
{"type":"measure","name":"lsp.did_open","count":6,"duration":0.021},
{"type":"mark","name":"lsp.did_open","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md","languageId":"markdown","version":4,"text":"# 🚀 ProspectPro Supabase-First Deployment Complete!\n\n## ✅ **DEPLOYMENT STATUS**\n\n### **Edge Functions Deployed:**\n\n- ✅ `business-discovery` - Main business discovery with Google Places API\n- ✅ `campaign-export` - CSV export functionality\n- ✅ Functions are ACTIVE and ready to use\n\n### **Next Steps:**\n\n## 1. **Configure Database Schema**\n\nGo to: https://supabase.com/dashboard/project/sriycekxdqnesdsgwiuc/sql-editor\n\nRun this SQL to set up the tables:\n\n```sql\n-- Campaigns table\nCREATE TABLE IF NOT EXISTS campaigns (\n  id TEXT PRIMARY KEY,\n  business_type TEXT NOT NULL,\n  location TEXT NOT NULL,\n  target_count INTEGER DEFAULT 10,\n  budget_limit DECIMAL(10,4) DEFAULT 50.0,\n  min_confidence_score INTEGER DEFAULT 50,\n  status TEXT DEFAULT 'pending',\n  results_count INTEGER DEFAULT 0,\n  total_cost DECIMAL(10,4) DEFAULT 0,\n  processing_time_ms INTEGER,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Leads table\nCREATE TABLE IF NOT EXISTS leads (\n  id BIGSERIAL PRIMARY KEY,\n  campaign_id TEXT NOT NULL REFERENCES campaigns(id) ON DELETE CASCADE,\n  business_name TEXT NOT NULL,\n  address TEXT,\n  phone TEXT,\n  website TEXT,\n  email TEXT,\n  confidence_score INTEGER DEFAULT 0,\n  score_breakdown JSONB,\n  validation_cost DECIMAL(10,4) DEFAULT 0,\n  cost_efficient BOOLEAN DEFAULT true,\n  scoring_recommendation TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Enable RLS\nALTER TABLE campaigns ENABLE ROW LEVEL SECURITY;\nALTER TABLE leads ENABLE ROW LEVEL SECURITY;\n\n-- RLS Policies for public access\nCREATE POLICY \"Public read campaigns\" ON campaigns FOR SELECT USING (true);\nCREATE POLICY \"Public insert campaigns\" ON campaigns FOR INSERT WITH CHECK (true);\nCREATE POLICY \"Public read leads\" ON leads FOR SELECT USING (true);\nCREATE POLICY \"Public insert leads\" ON leads FOR INSERT WITH CHECK (true);\n\n-- Indexes\nCREATE INDEX IF NOT EXISTS idx_campaigns_created_at ON campaigns(created_at);\nCREATE INDEX IF NOT EXISTS idx_leads_campaign_id ON leads(campaign_id);\nCREATE INDEX IF NOT EXISTS idx_leads_confidence_score ON leads(confidence_score);\n```\n\n## 2. **Configure Environment Variables**\n\nGo to: https://supabase.com/dashboard/project/sriycekxdqnesdsgwiuc/settings/environment-variables\n\nAdd these secrets:\n\n```\nGOOGLE_PLACES_API_KEY=your_google_places_key_here\nHUNTER_IO_API_KEY=your_hunter_io_key_here\nNEVERBOUNCE_API_KEY=your_neverbounce_key_here\nFOURSQUARE_API_KEY=your_foursquare_key_here\n```\n\n## 3. **Test Edge Functions**\n\n### Test Business Discovery:\n\n```bash\ncurl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery' \\\n  -H 'Authorization: Bearer YOUR_ANON_KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"businessType\": \"restaurant\",\n    \"location\": \"San Francisco, CA\",\n    \"maxResults\": 3\n  }'\n```\n\n### Test Campaign Export:\n\n```bash\ncurl -X GET 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/campaign-export/CAMPAIGN_ID' \\\n  -H 'Authorization: Bearer YOUR_ANON_KEY' \\\n  -H 'Accept: text/csv'\n```\n\n## 4. **Deploy Static Frontend**\n\nYour frontend files are ready:\n\n- ✅ `/public/index-supabase.html` - Supabase-first frontend\n- ✅ `/public/supabase-app.js` - Frontend JavaScript with Supabase client\n\nUpdate the Supabase configuration in `supabase-app.js`:\n\n```javascript\nthis.supabase = createClient(\n  \"https://sriycekxdqnesdsgwiuc.supabase.co\",\n  \"sb_secret_bY8n_a7-hP0Lxd9dPT_efg_3WzpnXN_\" // Get from Supabase dashboard\n);\n```\n\n## 5. **Cost Comparison**\n\n| Component       | Before                 | After                         |\n| --------------- | ---------------------- | ----------------------------- |\n| **Hosting**     | Cloud Run $10-50/month | Static hosting $1-5/month     |\n| **Backend**     | Express.js server      | Supabase Edge Functions       |\n| **Database**    | Manual integration     | Native Supabase               |\n| **Deployment**  | Docker build 2-5 min   | Function deploy 30 sec        |\n| **Maintenance** | High complexity        | Minimal - managed by Supabase |\n\n## 🎯 **Architecture Benefits**\n\n1. **80% Code Reduction**: From 400+ lines server.js to 50 lines of core logic\n2. **90% Cost Reduction**: Static hosting vs. container hosting\n3. **Global Edge**: Functions run in 18+ regions worldwide\n4. **Auto-scaling**: No cold starts or capacity planning\n5. **Real-time Ready**: Native Supabase real-time subscriptions\n6. **Built-in Auth**: Supabase Auth ready when needed\n\nYour ProspectPro is now running on modern serverless architecture! 🚀\n\n## **Function URLs:**\n\n- Business Discovery: `https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery`\n- Campaign Export: `https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/campaign-export/{campaignId}`\n\nNext: Set up the database schema and environment variables in your Supabase dashboard!\n"}}},
{"type":"measure","name":"lsp.did_open","count":7,"duration":0.048},
{"type":"mark","name":"lsp.did_open","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.github/copilot-instructions.md","languageId":"markdown","version":7,"text":"# ProspectPro v4.0 - Supabase-First Serverless Architecture\r\n\r\n## CRITICAL: Current Production State\r\n\r\n- **Version**: 4.0.0 (Supabase-First Serverless Architecture - PRODUCTION READY)\r\n- **Deployment**: Static Frontend + Supabase Edge Functions (serverless, auto-scaling)\r\n- **Environment**: Supabase environment variables + Edge Function secrets\r\n- **Architecture**: Supabase-first serverless with Edge Functions + Real-time database\r\n- **Quality Scoring**: v3.0 integrated into Edge Functions with cost optimization\r\n- **Backend**: 100% Supabase Edge Functions (business-discovery, campaign-export)\r\n- **Repository**: https://github.com/Alextorelli/ProspectPro (Supabase-first codebase)\r\n\r\n## CRITICAL: SUPABASE-FIRST ARCHITECTURE\r\n\r\n**DEPLOYMENT PHILOSOPHY**\r\n\r\n- ✅ Supabase Edge Functions: All backend logic (OPERATIONAL)\r\n- ✅ Static Frontend: HTML/JS calling Edge Functions directly (READY)\r\n- ✅ Supabase Database: Native integration with Row Level Security\r\n- ✅ Supabase Real-time: Ready for live updates and notifications\r\n- ✅ Static Hosting: Cloud Storage or CDN (cost-effective)\r\n- ❌ NO server.js, Express.js, or Node.js containers\r\n- ❌ NO Cloud Run containers or complex deployment pipelines\r\n- ✅ Supabase Environment Variables: Native Edge Function configuration\r\n\r\n**PLATFORM SPECIALIZATION**\r\n\r\n- **GitHub**: Minimal repo management, documentation, version control\r\n- **Supabase**: Database, Edge Functions, real-time, authentication, storage\r\n- **Static Host**: Frontend files only (Cloud Storage, Vercel, Netlify)\r\n\r\n## CRITICAL: EDGE FUNCTIONS STATUS\r\n\r\n**PRODUCTION EDGE FUNCTIONS (OPERATIONAL)**\r\n\r\n- ✅ `business-discovery` - Main business discovery with Google Places API integration\r\n- ✅ `campaign-export` - CSV export functionality with database integration\r\n- ✅ Real-time database integration with campaigns and leads tables\r\n- ✅ Global edge deployment with <100ms cold starts\r\n- ✅ Functions URL: https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/\r\n\r\n**DATABASE INTEGRATION**\r\n\r\nCore tables managed by Supabase:\r\n\r\n```sql\r\n-- Campaigns table for tracking discovery sessions\r\nCREATE TABLE campaigns (\r\n  id TEXT PRIMARY KEY,\r\n  business_type TEXT NOT NULL,\r\n  location TEXT NOT NULL,\r\n  target_count INTEGER DEFAULT 10,\r\n  results_count INTEGER DEFAULT 0,\r\n  total_cost DECIMAL(10,4) DEFAULT 0,\r\n  created_at TIMESTAMPTZ DEFAULT NOW()\r\n);\r\n\r\n-- Leads table for storing discovered businesses\r\nCREATE TABLE leads (\r\n  id BIGSERIAL PRIMARY KEY,\r\n  campaign_id TEXT REFERENCES campaigns(id),\r\n  business_name TEXT NOT NULL,\r\n  address TEXT,\r\n  phone TEXT,\r\n  website TEXT,\r\n  email TEXT,\r\n  confidence_score INTEGER DEFAULT 0,\r\n  created_at TIMESTAMPTZ DEFAULT NOW()\r\n);\r\n```\r\n\r\n## CRITICAL: REPOSITORY CLEANLINESS ENFORCEMENT\r\n\r\n**CLEAN SUPABASE-FIRST STRUCTURE**\r\n\r\n- ✅ Core production files: Edge Functions, static frontend, database schema\r\n- ✅ `/supabase/functions/` - Edge Function implementations only\r\n- ✅ `/public/` - Static frontend files (HTML, CSS, JS)\r\n- ✅ `/database/` - Schema and migration files\r\n- ❌ NO server.js, Express routes, or Node.js backend files\r\n- ❌ NO Docker containers, Cloud Run configs, or build pipelines\r\n- ❌ NO complex deployment scripts or container orchestration\r\n\r\n**FILE ORGANIZATION RULES**\r\n\r\n- Edge Functions → `/supabase/functions/` folder ONLY\r\n- Frontend → `/public/` folder ONLY\r\n- Database → `/database/` folder ONLY\r\n- Documentation → `/docs/` folder ONLY\r\n- Archive material → `/archive/` folder ONLY\r\n\r\n**SUPABASE-FIRST APPROACH**\r\n\r\n- Main branch = CLEAN Supabase-first architecture\r\n- No legacy server infrastructure\r\n- All backend logic in Edge Functions\r\n- Maintain minimal, serverless structure\r\n\r\n## IMMEDIATE CONTEXT (No Re-explanation Needed)\r\n\r\nWhen Alex asks about:\r\n\r\n- **\"Deployment\"** → Supabase Edge Functions + static hosting (serverless)\r\n- **\"Environment setup\"** → Supabase environment variables in dashboard\r\n- **\"Backend functionality\"** → Edge Functions in `/supabase/functions/`\r\n- **\"API integration\"** → All handled in Edge Functions with native Supabase clients\r\n- **\"Database issues\"** → Direct Supabase integration with RLS policies\r\n- **\"Frontend\"** → Static HTML/JS calling Edge Functions directly\r\n- **\"Cost optimization\"** → Static hosting + serverless functions (90% cost reduction)\r\n- **\"Quality scoring\"** → Integrated into Edge Functions\r\n- **\"Export functionality\"** → `campaign-export` Edge Function\r\n- **\"Testing\"** → Direct Edge Function testing via Supabase dashboard\r\n\r\n## IMMEDIATE CONTEXT (No Re-explanation Needed)\r\n\r\nWhen Alex asks about:\r\n\r\n- **\"Deployment\"** → Google Cloud Build automatic triggers (native integration)\r\n- **\"Environment setup\"** → Supabase Vault + Cloud Build substitution variables\r\n- **\"Webhook configuration\"** → 3 production endpoints already implemented (campaign-lifecycle, cost-alert, lead-enrichment)\r\n- **\"API integration\"** → All clients in `/modules/api-clients/` (Google Places, Hunter.io, NeverBounce, Foursquare)\r\n- **\"Database issues\"** → Supabase with comprehensive schema in `/database/`\r\n- **\"Container problems\"** → Multi-stage Dockerfile + Cloud Build optimization\r\n- **\"Cost optimization\"** → Enhanced Quality Scorer v3.0 with cost-efficient validation pipeline\r\n- **\"Quality scoring\"** → `/modules/validators/enhanced-quality-scorer.js` (35-45% qualification rates)\r\n- **\"Build issues\"** → Check Cloud Build logs in Google Cloud Console\r\n- **\"Webhook setup\"** → Follow `/docs/CLOUD_NATIVE_WEBHOOK_SETUP.md`\r\n- **\"Testing\"** → Use `npm run test` or check testing branch\r\n\r\n## ALEX'S TECHNICAL PROFILE\r\n\r\n- **Background**: No coding experience but highly technical\r\n- **AI Dependency**: Relies heavily on AI assistance for debugging and architecture\r\n- **Primary Models**: Claude Sonnet 4.0, GPT-5 occasionally\r\n- **Environment**: GitHub Codespaces exclusively\r\n- **Focus**: Lead generation with zero fake data tolerance\r\n- **Usage Pattern**: Debugging, testing, cloud-native architecture, monitoring\r\n- **Deployment Preference**: Cloud-native platform specialization over complex CI/CD\r\n\r\n## RESPONSE OPTIMIZATION RULES\r\n\r\n1. **NEVER re-explain project architecture** unless specifically asked with \"explain the architecture\"\r\n2. **ALWAYS reference existing files/scripts** for implementation details\r\n3. **PRIORITIZE troubleshooting** over teaching fundamentals\r\n4. **ASSUME familiarity** with ProspectPro's core concepts\r\n5. **FOCUS on immediate problem resolution** not educational content\r\n6. **USE existing npm scripts** rather than creating new implementations\r\n7. **REFERENCE the working production system** rather than theoretical solutions\r\n\r\n## CURRENT PRODUCTION ARCHITECTURE (ESTABLISHED - DO NOT RE-EXPLAIN)\r\n\r\n### **Supabase-First Serverless Pipeline**\r\n\r\n```\r\nStatic Frontend → Supabase Edge Functions → Supabase Database\r\n                                      ↓\r\n                     Supabase Environment Variables → External APIs\r\n                                      ↓\r\n                     Real-time Database Updates → Live Frontend Updates\r\n```\r\n\r\n### **Edge Function Infrastructure (Production Ready)**\r\n\r\n```\r\n/supabase/functions/business-discovery    # Main business discovery logic\r\n/supabase/functions/campaign-export       # CSV export functionality\r\n/public/index-supabase.html              # Static frontend\r\n/public/supabase-app.js                  # Frontend with Supabase client\r\n/database/supabase-first-schema.sql      # Database schema\r\n```\r\n\r\n### File Structure (REFERENCE ONLY)\r\n\r\n```\r\n/supabase/functions/business-discovery/  # Core discovery Edge Function\r\n/supabase/functions/campaign-export/     # Export Edge Function  \r\n/public/index-supabase.html              # Static frontend\r\n/public/supabase-app.js                  # Frontend JavaScript\r\n/database/supabase-first-schema.sql      # Database setup\r\n/docs/                                   # Documentation\r\n/archive/                                # Legacy files (deprecated)\r\n```\r\n\r\n### Current Working Commands (USE THESE)\r\n\r\n```bash\r\n# Edge Function deployment\r\nsupabase functions deploy business-discovery\r\nsupabase functions deploy campaign-export\r\n\r\n# Local development\r\ncd public && python3 -m http.server 8080\r\n\r\n# Static deployment\r\nnpm run build:static\r\ngsutil rsync -r ./dist/ gs://prospectpro-static-frontend/\r\n\r\n# Database setup: Run SQL in Supabase dashboard\r\n```\r\n\r\n### API Integration Stack (WORKING)\r\n\r\n- **Google Places API**: Business discovery integrated in Edge Functions\r\n- **Hunter.io**: Email discovery in Edge Functions\r\n- **NeverBounce**: Email verification in Edge Functions\r\n- **Supabase Database**: Native integration with campaigns and leads tables\r\n- **Supabase Real-time**: Ready for live updates and notifications\r\n- **Static Hosting**: Cloud Storage, Vercel, or Netlify deployment\r\n\r\n### MCP Infrastructure (CONSOLIDATED v2.0)\r\n\r\n- **Production Server**: 28 tools for monitoring, database analytics, API testing, filesystem analysis, system diagnostics\r\n- **Development Server**: 8 specialized tools for new API integrations, performance benchmarking, code generation\r\n- **Architecture**: Consolidated from 5 servers to 2 (60% efficiency improvement)\r\n- **Integration**: Auto-configured in VS Code for AI-enhanced development workflows\r\n- **Status**: Production-ready with comprehensive test coverage (`npm run test` in `/mcp-servers/`)\r\n\r\n## PROBLEM-SOLVING APPROACH\r\n\r\n### For Environment Issues:\r\n\r\n1. Check Supabase environment variables in dashboard\r\n2. Verify Edge Function deployment status\r\n3. Test Edge Functions via Supabase dashboard\r\n4. Validate database schema and RLS policies\r\n\r\n### For API Issues:\r\n\r\n1. Check Edge Function logs in Supabase dashboard\r\n2. Verify API keys in Supabase environment variables\r\n3. Test individual Edge Functions with curl\r\n4. Review Edge Function error responses\r\n\r\n### For Deployment Issues:\r\n\r\n1. Check Edge Function deployment status: `supabase functions list`\r\n2. Verify static frontend files are correct\r\n3. Test Edge Functions: `supabase functions serve`\r\n4. Check database connectivity and permissions\r\n\r\n### For Database Issues:\r\n\r\n1. Review schema in `/database/supabase-first-schema.sql`\r\n2. Check RLS policies in Supabase dashboard\r\n3. Verify Edge Function database connections\r\n4. Test database queries in Supabase SQL editor\r\n\r\n## CURRENT OPTIMIZATIONS (ALREADY IMPLEMENTED)\r\n\r\n- **Supabase-first architecture** with Edge Functions for all backend logic\r\n- **Static frontend deployment** with minimal hosting costs\r\n- **Enhanced Quality Scoring v3.0** integrated into Edge Functions\r\n- **Global edge deployment** with <100ms cold starts\r\n- **Native database integration** with Row Level Security\r\n- **Real-time capabilities** ready via Supabase subscriptions\r\n- **Cost optimization** through serverless functions (90% cost reduction)\r\n- **Zero-container deployment** with static hosting + Edge Functions\r\n- **Minimal codebase maintenance** with 80% code reduction\r\n\r\n## DEVELOPMENT WORKFLOW (ESTABLISHED)\r\n\r\n1. **Main branch** = Production (Supabase Edge Functions + static frontend)\r\n2. **Edge Functions** = Backend logic deployed to Supabase\r\n3. **Static Frontend** = HTML/JS deployed to static hosting\r\n4. **Database** = Managed entirely by Supabase with RLS\r\n5. **Development** = Local testing with `supabase functions serve`\r\n\r\n## DEBUGGING PATTERNS (OPTIMIZED FOR ALEX)\r\n\r\n- Start with Edge Function logs in Supabase dashboard\r\n- Check environment variables in Supabase settings\r\n- Test Edge Functions individually with curl or Supabase dashboard\r\n- Verify database schema and RLS policies\r\n- Use browser dev tools for frontend debugging\r\n\r\n## COST OPTIMIZATION FOCUS\r\n\r\n- **Edge Functions**: Serverless, pay-per-invocation\r\n- **Database**: Supabase included usage, RLS for security\r\n- **Static Hosting**: $1-5/month vs $10-50/month containers\r\n- **No servers**: Zero infrastructure management\r\n\r\n## RESPONSE FORMAT PREFERENCES\r\n\r\n- **Immediate solutions** over explanations\r\n- **Reference existing code** rather than writing new implementations\r\n- **Use established scripts** rather than manual processes\r\n- **Focus on debugging** rather than architecture discussions\r\n- **Provide specific file paths** and command references\r\n- **Assume production system knowledge** unless explicitly asked to explain\r\n\r\n## NEVER REPEAT (SAVE PREMIUM REQUESTS)\r\n\r\n- Supabase-first architecture explanations\r\n- Edge Function setup procedures (automated)\r\n- Static hosting deployment (documented)\r\n- Database schema explanations (in `/database/`)\r\n- Cost optimization strategies (implemented)\r\n- Serverless benefits (established)\r\n\r\nThis instruction set prioritizes rapid problem resolution and eliminates repetitive context discussions to maximize premium request efficiency.\r\n"}}},
{"type":"measure","name":"lsp.did_open","count":8,"duration":0.113},
{"type":"mark","name":"lsp.did_open","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json","languageId":"json","version":2,"text":"{\r\n  \"name\": \"prospectpro-supabase-first\",\r\n  \"version\": \"4.0.0\",\r\n  \"description\": \"ProspectPro - Supabase-First Lead Discovery Platform with Edge Functions\",\r\n  \"scripts\": {\r\n    \"build:static\": \"mkdir -p dist && cp public/index-supabase.html dist/index.html && cp public/supabase-app.js dist/app.js\",\r\n    \"deploy:static\": \"npm run build:static && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/\",\r\n    \"serve:local\": \"cd public && python3 -m http.server 8080\",\r\n    \"test:edge-functions\": \"supabase functions serve\",\r\n    \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy campaign-export\",\r\n    \"db:setup\": \"echo 'Run SQL from /database/supabase-first-schema.sql in Supabase dashboard'\",\r\n    \"db:status\": \"supabase db status\",\r\n    \"functions:list\": \"supabase functions list\",\r\n    \"functions:logs\": \"supabase functions logs\",\r\n    \"clean\": \"rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'\",\r\n    \"archive:legacy\": \"mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'\",\r\n    \"health\": \"echo 'Use Edge Function endpoints for health checks'\",\r\n    \"test\": \"echo 'Test Edge Functions via Supabase dashboard or curl'\"\r\n  },\r\n  \"keywords\": [\"leads\", \"business-discovery\", \"supabase\", \"edge-functions\", \"static-site\", \"serverless\"],\r\n  \"author\": \"Alex Torelli\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {},\r\n  \"devDependencies\": {},\r\n  \"engines\": {\r\n    \"node\": \">=18.0.0\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/Alextorelli/ProspectPro\"\r\n  },\r\n  \"architecture\": {\r\n    \"frontend\": \"Static HTML/JS\",\r\n    \"backend\": \"Supabase Edge Functions\",\r\n    \"database\": \"Supabase PostgreSQL\",\r\n    \"hosting\": \"Static hosting (Cloud Storage/CDN)\",\r\n    \"deployment\": \"Supabase CLI + gsutil\"\r\n  }\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":9,"duration":0.035},
{"type":"mark","name":"lsp.did_open","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/prospectpro-supabase.code-workspace","languageId":"jsonc","version":2,"text":"{\n    \"folders\": [\n        {\n            \"name\": \"ProspectPro\",\n            \"path\": \".\"\n        }\n    ],\n    \"settings\": {\n        \"files.exclude\": {\n            \"archive/\": true,\n            \"logs/\": true,\n            \"node_modules/\": true,\n            \"dist/\": true,\n            \".git/\": false\n        },\n        \"search.exclude\": {\n            \"archive/\": true,\n            \"logs/\": true,\n            \"node_modules/\": true,\n            \"dist/\": true\n        },\n        \"explorer.fileNesting.enabled\": true,\n        \"explorer.fileNesting.patterns\": {\n            \"*.ts\": \"${capture}.d.ts,${capture}.js,${capture}.js.map\",\n            \"package.json\": \"package-lock.json,yarn.lock,pnpm-lock.yaml\",\n            \"README.md\": \"LICENSE,CHANGELOG.md\"\n        },\n        \"typescript.preferences.includePackageJsonAutoImports\": \"on\",\n        \"typescript.suggest.autoImports\": true,\n        \"editor.formatOnSave\": true,\n        \"editor.codeActionsOnSave\": {\n            \"source.fixAll\": \"explicit\",\n            \"source.organizeImports\": \"explicit\"\n        },\n        \"supabase.projectRef\": \"sriycekxdqnesdsgwiuc\",\n        \"files.associations\": {\n            \"*.sql\": \"sql\"\n        },\n        \"git.ignoreLimitWarning\": true,\n        \"typescript.preferences.importModuleSpecifier\": \"relative\"\n    },\n    \"extensions\": {\n        \"recommendations\": [\n            \"supabase.supabase\",\n            \"ms-vscode.vscode-typescript-next\",\n            \"bradlc.vscode-tailwindcss\",\n            \"esbenp.prettier-vscode\",\n            \"ms-vscode.vscode-json\",\n            \"redhat.vscode-yaml\",\n            \"ms-python.python\",\n            \"github.copilot\",\n            \"github.copilot-chat\",\n            \"ms-vscode.remote-repositories\",\n            \"ms-vscode.remote-containers\"\n        ]\n    },\n    \"tasks\": {\n        \"version\": \"2.0.0\",\n        \"tasks\": [\n            {\n                \"label\": \"Supabase: Serve Functions\",\n                \"type\": \"shell\",\n                \"command\": \"supabase functions serve\",\n                \"group\": \"build\",\n                \"presentation\": {\n                    \"echo\": true,\n                    \"reveal\": \"always\",\n                    \"focus\": false,\n                    \"panel\": \"shared\"\n                },\n                \"problemMatcher\": []\n            },\n            {\n                \"label\": \"Supabase: Deploy Functions\",\n                \"type\": \"shell\",\n                \"command\": \"supabase functions deploy business-discovery && supabase functions deploy campaign-export\",\n                \"group\": \"build\",\n                \"presentation\": {\n                    \"echo\": true,\n                    \"reveal\": \"always\",\n                    \"focus\": false,\n                    \"panel\": \"shared\"\n                },\n                \"problemMatcher\": []\n            },\n            {\n                \"label\": \"Build Static Site\",\n                \"type\": \"shell\",\n                \"command\": \"npm run build:static\",\n                \"group\": \"build\",\n                \"presentation\": {\n                    \"echo\": true,\n                    \"reveal\": \"always\",\n                    \"focus\": false,\n                    \"panel\": \"shared\"\n                },\n                \"problemMatcher\": []\n            },\n            {\n                \"label\": \"Serve Local Development\",\n                \"type\": \"shell\",\n                \"command\": \"npm run serve:local\",\n                \"group\": \"build\",\n                \"presentation\": {\n                    \"echo\": true,\n                    \"reveal\": \"always\",\n                    \"focus\": false,\n                    \"panel\": \"shared\"\n                },\n                \"isBackground\": true,\n                \"problemMatcher\": []\n            },\n            {\n                \"label\": \"Deploy to Production\",\n                \"type\": \"shell\",\n                \"command\": \"npm run deploy:static\",\n                \"group\": \"build\",\n                \"presentation\": {\n                    \"echo\": true,\n                    \"reveal\": \"always\",\n                    \"focus\": false,\n                    \"panel\": \"shared\"\n                },\n                \"dependsOn\": \"Build Static Site\",\n                \"problemMatcher\": []\n            }\n        ]\n    },\n    \"launch\": {\n        \"version\": \"0.2.0\",\n        \"configurations\": [\n            {\n                \"name\": \"Preview Static Site\",\n                \"type\": \"node\",\n                \"request\": \"launch\",\n                \"program\": \"${workspaceFolder}/public/index-supabase.html\",\n                \"console\": \"integratedTerminal\",\n                \"env\": {\n                    \"NODE_ENV\": \"development\"\n                }\n            }\n        ]\n    }\n}"}}},
{"type":"measure","name":"lsp.did_open","count":10,"duration":0.058},
{"type":"mark","name":"lsp.did_open","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json","languageId":"jsonc","version":2,"text":"{\n  // === SUPABASE-FIRST CONFIGURATION ===\n  \"deno.enable\": true,\n  \"deno.enablePaths\": [\"supabase/functions\"],\n  \"[typescript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"deno.lint\": true,\n  \"deno.unstable\": [\"bare-node-builtins\", \"byonm\", \"sloppy-imports\"],\n  \"supabase.projectRef\": \"sriycekxdqnesdsgwiuc\",\n\n  // === GIT OPTIMIZATIONS ===\n  \"git.ignoreLimitWarning\": true,\n  \"git.autofetch\": true,\n  \"git.confirmSync\": false,\n  \"git.enableSmartCommit\": true,\n  \"git.fetchOnPull\": true,\n  \"git.mergeEditor\": true,\n\n  // === GITHUB COPILOT OPTIMIZATIONS ===\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"plaintext\": false,\n    \"markdown\": true,\n    \"scminput\": false\n  },\n  \"github.copilot.inlineSuggest.enable\": true,\n  \"github.copilot.chat.welcomeMessage\": \"none\",\n  \"github.copilot.chat.localeOverride\": \"en\",\n  \"github.copilot.chat.historyCount\": 8,\n  \"github.copilot.chat.completionPhrasesEnabled\": false,\n  \"github.copilot.chat.dynamicContextTrailingLength\": 500,\n  \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\n  \"github.copilot.advanced.connectionTimeout\": 45000,\n\n  // === EDITOR PERFORMANCE OPTIMIZATIONS ===\n  \"editor.minimap.enabled\": false,\n  \"editor.renderWhitespace\": \"none\",\n  \"editor.renderControlCharacters\": false,\n  \"editor.renderLineHighlight\": \"gutter\",\n  \"editor.bracketPairColorization.enabled\": false,\n  \"editor.guides.bracketPairs\": false,\n  \"editor.formatOnSave\": true,\n  \"editor.formatOnPaste\": true,\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll.eslint\": \"explicit\",\n    \"source.organizeImports\": \"explicit\"\n  },\n\n  // === WORKBENCH OPTIMIZATIONS ===\n  \"workbench.colorTheme\": \"Default Dark Modern\",\n  \"workbench.list.smoothScrolling\": false,\n  \"workbench.tree.renderIndentGuides\": \"none\",\n  \"workbench.editor.closeOnFileDelete\": true,\n  \"workbench.colorCustomizations\": {\n    \"statusBar.background\": \"#667eea\",\n    \"statusBar.foreground\": \"#ffffff\"\n  },\n\n  // === FILE SYSTEM PERFORMANCE (SUPABASE-FIRST) ===\n  \"files.exclude\": {\n    \"archive/\": true,\n    \"logs/\": true,\n    \"node_modules/\": true,\n    \"dist/\": true,\n    \"server.js\": true,\n    \"api/\": true,\n    \"modules/\": true,\n    \"docker/\": true,\n    \"cloudbuild.yaml\": true,\n    \"Dockerfile\": true,\n    \"docker-compose*.yml\": true,\n    \"**/*.log\": true,\n    \"**/*.tmp\": true,\n    \"**/*.temp\": true\n  },\n\n  \"files.watcherExclude\": {\n    \"**/*.log\": true,\n    \"**/*.tmp\": true,\n    \"**/*.temp\": true,\n    \"**/node_modules/**\": true,\n    \"**/archive/**\": true,\n    \"**/.git/**\": true,\n    \"**/logs/**\": true,\n    \"**/dist/**\": true\n  },\n\n  \"files.autoSave\": \"afterDelay\",\n  \"files.autoSaveDelay\": 1000,\n  \"files.associations\": {\n    \"*.md\": \"markdown\",\n    \"*.sql\": \"sql\",\n    \"*.ts\": \"typescript\",\n    \".copilot-instructions\": \"markdown\"\n  },\n\n  // === SEARCH OPTIMIZATIONS (SUPABASE-FIRST) ===\n  \"search.exclude\": {\n    \"archive/\": true,\n    \"logs/\": true,\n    \"node_modules/\": true,\n    \"dist/\": true,\n    \"server.js\": true,\n    \"api/\": true,\n    \"modules/\": true,\n    \"docker/\": true,\n    \"**/node_modules\": true,\n    \"**/*.log\": true,\n    \"**/*.tmp\": true,\n    \"**/*.temp\": true,\n    \"**/.git\": true,\n    \"**/coverage/**\": true\n  },\n  \"search.searchOnType\": false,\n  \"search.searchOnTypeDebouncePeriod\": 800,\n\n  // === TYPESCRIPT/JAVASCRIPT SETTINGS ===\n  \"typescript.preferences.includePackageJsonAutoImports\": \"on\",\n  \"typescript.suggest.autoImports\": true,\n  \"typescript.preferences.importModuleSpecifier\": \"relative\",\n  \"javascript.updateImportsOnFileMove.enabled\": \"always\",\n  \"javascript.suggest.autoImports\": true,\n  \"js/ts.implicitProjectConfig.checkJs\": false,\n\n  // === EXPLORER NESTING ===\n  \"explorer.fileNesting.enabled\": true,\n  \"explorer.fileNesting.patterns\": {\n    \"*.ts\": \"${capture}.d.ts,${capture}.js,${capture}.js.map\",\n    \"package.json\": \"package-lock.json,yarn.lock,pnpm-lock.yaml,package-supabase.json\",\n    \"README.md\": \"LICENSE,CHANGELOG.md\",\n    \"index-supabase.html\": \"supabase-app.js\"\n  },\n\n  // === MARKDOWN SETTINGS ===\n  \"markdown.preview.breaks\": true,\n  \"markdown.preview.linkify\": true,\n\n  // === TERMINAL OPTIMIZATIONS ===\n  \"terminal.integrated.defaultProfile.linux\": \"bash\",\n  \"terminal.integrated.profiles.linux\": {\n    \"bash\": {\n      \"path\": \"bash\",\n      \"args\": []\n    }\n  },\n  \"terminal.integrated.gpuAcceleration\": \"on\",\n  \"terminal.integrated.scrollback\": 1000,\n\n  // === AI PROJECT CONTEXT (UPDATED FOR SUPABASE) ===\n  \"ai.contextAware\": true,\n  \"ai.projectContext\": {\n    \"type\": \"lead-generation-platform\",\n    \"framework\": \"supabase-edge-functions\",\n    \"frontend\": \"static-html-js\",\n    \"database\": \"supabase-postgresql\",\n    \"apis\": [\"google-places\", \"hunter-io\", \"neverbounce\"],\n    \"deployment\": \"supabase-functions\",\n    \"hosting\": \"static-hosting\"\n  }\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":11,"duration":0.06},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":2,"duration":0.054},
TS server started.
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":3,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":4,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":5,"duration":0.011},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":6,"duration":0.009},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":7,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":8,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":9,"duration":0.008},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":10,"duration":0.006},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":11,"duration":0.008},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":12,"duration":0.006},
Server ready.
{"type":"mark","name":"tsc.host.$getDiagnostics","count":1,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts",3]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":1,"duration":0.339},
{"type":"mark","name":"tsc.op.op_load","count":1,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"tsc.op.op_load","count":1,"duration":0.059},
{"type":"mark","name":"tsc.op.op_load","count":2,"args":"file:///workspaces/ProspectPro/.vscode/prospectpro-supabase.code-workspace.json"},
{"type":"measure","name":"tsc.op.op_load","count":2,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":3,"args":"file:///workspaces/ProspectPro/.vscode/settings.json"},
{"type":"measure","name":"tsc.op.op_load","count":3,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":4,"args":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},
{"type":"measure","name":"tsc.op.op_load","count":4,"duration":0.039},
{"type":"mark","name":"tsc.op.op_load","count":5,"args":"file:///workspaces/ProspectPro/cloudbuild-static.yaml"},
{"type":"measure","name":"tsc.op.op_load","count":5,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":6,"args":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},
{"type":"measure","name":"tsc.op.op_load","count":6,"duration":0.046},
{"type":"mark","name":"tsc.op.op_load","count":7,"args":"file:///workspaces/ProspectPro/package-supabase.json"},
{"type":"measure","name":"tsc.op.op_load","count":7,"duration":0.051},
{"type":"mark","name":"tsc.op.op_load","count":8,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":8,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":9,"args":"file:///workspaces/ProspectPro/public/index-supabase.html"},
{"type":"measure","name":"tsc.op.op_load","count":9,"duration":0.045},
{"type":"mark","name":"tsc.op.op_load","count":10,"args":"file:///workspaces/ProspectPro/public/supabase-app.js"},
{"type":"measure","name":"tsc.op.op_load","count":10,"duration":0.081},
{"type":"mark","name":"tsc.op.op_resolve","count":1,"args":{"base":"file:///workspaces/ProspectPro/public/supabase-app.js","specifiers":[[false,"https://cdn.skypack.dev/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1,"duration":0.074},
{"type":"mark","name":"tsc.op.op_load","count":11,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":11,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":2,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":2,"duration":0.655},
{"type":"mark","name":"tsc.op.op_load","count":12,"args":"https://deno.land/std@0.168.0/http/server.ts"},
{"type":"measure","name":"tsc.op.op_load","count":12,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":3,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":3,"duration":0.426},
{"type":"mark","name":"tsc.op.op_load","count":13,"args":"https://deno.land/std@0.168.0/async/mod.ts"},
{"type":"measure","name":"tsc.op.op_load","count":13,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":4,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":4,"duration":15.752},
{"type":"mark","name":"tsc.op.op_load","count":14,"args":"https://deno.land/std@0.168.0/async/abortable.ts"},
{"type":"measure","name":"tsc.op.op_load","count":14,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":5,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":5,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":15,"args":"https://deno.land/std@0.168.0/async/deferred.ts"},
{"type":"measure","name":"tsc.op.op_load","count":15,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":16,"args":"https://deno.land/std@0.168.0/async/deadline.ts"},
{"type":"measure","name":"tsc.op.op_load","count":16,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":6,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":6,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":17,"args":"https://deno.land/std@0.168.0/async/debounce.ts"},
{"type":"measure","name":"tsc.op.op_load","count":17,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":18,"args":"https://deno.land/std@0.168.0/async/delay.ts"},
{"type":"measure","name":"tsc.op.op_load","count":18,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":19,"args":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts"},
{"type":"measure","name":"tsc.op.op_load","count":19,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":7,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":7,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":20,"args":"https://deno.land/std@0.168.0/async/pool.ts"},
{"type":"measure","name":"tsc.op.op_load","count":20,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":21,"args":"https://deno.land/std@0.168.0/async/tee.ts"},
{"type":"measure","name":"tsc.op.op_load","count":21,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":22,"args":"https://deno.land/std@0.168.0/async/retry.ts"},
{"type":"measure","name":"tsc.op.op_load","count":22,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":23,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":23,"duration":0.835},
{"type":"mark","name":"tsc.op.op_resolve","count":8,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":8,"duration":17.532},
{"type":"mark","name":"tsc.op.op_load","count":24,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":24,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":9,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":9,"duration":0.597},
{"type":"mark","name":"tsc.op.op_load","count":25,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":25,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":10,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":10,"duration":3.761},
{"type":"mark","name":"tsc.op.op_load","count":26,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":26,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":11,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":11,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":27,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":27,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":28,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":28,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":12,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":12,"duration":29.581},
{"type":"mark","name":"tsc.op.op_load","count":29,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":29,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":13,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":13,"duration":0.039},
{"type":"mark","name":"tsc.op.op_load","count":30,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":30,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":14,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":14,"duration":0.047},
{"type":"mark","name":"tsc.op.op_load","count":31,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":31,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":15,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":15,"duration":9.886},
{"type":"mark","name":"tsc.op.op_load","count":32,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":32,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":16,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":16,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":33,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":33,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":17,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":17,"duration":3.184},
{"type":"mark","name":"tsc.op.op_load","count":34,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":34,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":18,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":18,"duration":2.413},
{"type":"mark","name":"tsc.op.op_load","count":35,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":35,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":36,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":36,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":19,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":19,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":37,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":37,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":20,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":20,"duration":32.197},
{"type":"mark","name":"tsc.op.op_load","count":38,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":38,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":21,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":21,"duration":0.051},
{"type":"mark","name":"tsc.op.op_load","count":39,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":39,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":22,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":22,"duration":0.079},
{"type":"mark","name":"tsc.op.op_load","count":40,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":40,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":23,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":23,"duration":17.132},
{"type":"mark","name":"tsc.op.op_load","count":41,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":41,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":24,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":24,"duration":0.734},
{"type":"mark","name":"tsc.op.op_load","count":42,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/websocket-factory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":42,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":43,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":43,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":44,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":44,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":45,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":45,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":46,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":46,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":25,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":25,"duration":0.434},
{"type":"mark","name":"tsc.op.op_load","count":47,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":47,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":26,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":26,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":48,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":48,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":27,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":27,"duration":1.106},
{"type":"mark","name":"tsc.op.op_load","count":49,"args":"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":49,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":50,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":50,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":28,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":28,"duration":13.493},
{"type":"mark","name":"tsc.op.op_load","count":51,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":51,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":29,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":29,"duration":10.214},
{"type":"mark","name":"tsc.op.op_load","count":52,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":52,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":30,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":30,"duration":0.5},
{"type":"mark","name":"tsc.op.op_load","count":53,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":53,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":54,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":54,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":31,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":31,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":55,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":55,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":32,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":32,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":56,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":56,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":33,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":33,"duration":0.396},
{"type":"mark","name":"tsc.op.op_load","count":57,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":57,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":34,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":34,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":58,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":58,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":35,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":35,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":59,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":59,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":36,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":36,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":60,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":60,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":37,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":37,"duration":33.61},
{"type":"mark","name":"tsc.op.op_load","count":61,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":61,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":38,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":38,"duration":0.392},
{"type":"mark","name":"tsc.op.op_load","count":62,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":62,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":39,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":39,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":63,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":63,"duration":0.072},
{"type":"mark","name":"tsc.op.op_resolve","count":40,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":40,"duration":5.97},
{"type":"mark","name":"tsc.op.op_load","count":64,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/ethereum.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":64,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":65,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":65,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":41,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":41,"duration":2.411},
{"type":"mark","name":"tsc.op.op_load","count":66,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":66,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":67,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/solana.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":67,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":68,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":68,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":42,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":42,"duration":9.795},
{"type":"mark","name":"tsc.op.op_load","count":69,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":69,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":43,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":43,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":70,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":70,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":44,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":44,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":71,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":71,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":45,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":45,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":72,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":72,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":73,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":73,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":46,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":46,"duration":0.046},
{"type":"mark","name":"tsc.op.op_load","count":74,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":74,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":47,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":47,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":75,"args":"file:///workspaces/ProspectPro/supabase/functions/enhanced-business-discovery/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":75,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":48,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enhanced-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":48,"duration":0.062},
{"type":"mark","name":"tsc.op.op_load","count":76,"args":"asset:///lib.deno.window.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":76,"duration":23.963},
{"type":"mark","name":"tsc.op.op_load","count":77,"args":"asset:///lib.deno.ns.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":77,"duration":63.417},
{"type":"mark","name":"tsc.op.op_load","count":78,"args":"asset:///lib.esnext.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":78,"duration":0.155},
{"type":"mark","name":"tsc.op.op_load","count":79,"args":"asset:///lib.es2024.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":79,"duration":0.06},
{"type":"mark","name":"tsc.op.op_load","count":80,"args":"asset:///lib.es2023.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":80,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":81,"args":"asset:///lib.es2022.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":81,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":82,"args":"asset:///lib.es2021.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":82,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":83,"args":"asset:///lib.es2020.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":83,"duration":4.088},
{"type":"mark","name":"tsc.op.op_load","count":84,"args":"asset:///lib.es2019.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":84,"duration":0.06},
{"type":"mark","name":"tsc.op.op_load","count":85,"args":"asset:///lib.es2018.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":85,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":86,"args":"asset:///lib.es2017.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":86,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":87,"args":"asset:///lib.es2016.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":87,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":88,"args":"asset:///lib.es2015.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":88,"duration":0.061},
{"type":"mark","name":"tsc.op.op_load","count":89,"args":"asset:///lib.es5.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":89,"duration":48.323},
{"type":"mark","name":"tsc.op.op_load","count":90,"args":"asset:///lib.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":90,"duration":3.917},
{"type":"mark","name":"tsc.op.op_load","count":91,"args":"asset:///lib.decorators.legacy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":91,"duration":2.324},
{"type":"mark","name":"tsc.op.op_load","count":92,"args":"asset:///lib.es2015.core.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":92,"duration":1.194},
{"type":"mark","name":"tsc.op.op_load","count":93,"args":"asset:///lib.es2015.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":93,"duration":0.685},
{"type":"mark","name":"tsc.op.op_load","count":94,"args":"asset:///lib.es2015.iterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":94,"duration":8.718},
{"type":"mark","name":"tsc.op.op_load","count":95,"args":"asset:///lib.es2015.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":95,"duration":0.215},
{"type":"mark","name":"tsc.op.op_load","count":96,"args":"asset:///lib.es2015.generator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":96,"duration":0.332},
{"type":"mark","name":"tsc.op.op_load","count":97,"args":"asset:///lib.es2015.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":97,"duration":8.325},
{"type":"mark","name":"tsc.op.op_load","count":98,"args":"asset:///lib.es2015.proxy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":98,"duration":0.381},
{"type":"mark","name":"tsc.op.op_load","count":99,"args":"asset:///lib.es2015.reflect.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":99,"duration":0.416},
{"type":"mark","name":"tsc.op.op_load","count":100,"args":"asset:///lib.es2015.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":100,"duration":13.135},
{"type":"mark","name":"tsc.op.op_load","count":101,"args":"asset:///lib.es2016.array.include.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":101,"duration":0.355},
{"type":"mark","name":"tsc.op.op_load","count":102,"args":"asset:///lib.es2016.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":102,"duration":0.126},
{"type":"mark","name":"tsc.op.op_load","count":103,"args":"asset:///lib.es2017.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":103,"duration":0.067},
{"type":"mark","name":"tsc.op.op_load","count":104,"args":"asset:///lib.es2017.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":104,"duration":0.094},
{"type":"mark","name":"tsc.op.op_load","count":105,"args":"asset:///lib.es2017.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":105,"duration":0.144},
{"type":"mark","name":"tsc.op.op_load","count":106,"args":"asset:///lib.es2017.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":106,"duration":0.302},
{"type":"mark","name":"tsc.op.op_load","count":107,"args":"asset:///lib.es2017.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":107,"duration":17.506},
{"type":"mark","name":"tsc.op.op_load","count":108,"args":"asset:///lib.es2017.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":108,"duration":0.255},
{"type":"mark","name":"tsc.op.op_load","count":109,"args":"asset:///lib.es2017.typedarrays.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":109,"duration":0.15},
{"type":"mark","name":"tsc.op.op_load","count":110,"args":"asset:///lib.es2018.asynciterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":110,"duration":0.275},
{"type":"mark","name":"tsc.op.op_load","count":111,"args":"asset:///lib.es2018.asyncgenerator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":111,"duration":0.268},
{"type":"mark","name":"tsc.op.op_load","count":112,"args":"asset:///lib.es2018.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":112,"duration":0.162},
{"type":"mark","name":"tsc.op.op_load","count":113,"args":"asset:///lib.es2018.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":113,"duration":0.119},
{"type":"mark","name":"tsc.op.op_load","count":114,"args":"asset:///lib.es2018.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":114,"duration":0.305},
{"type":"mark","name":"tsc.op.op_load","count":115,"args":"asset:///lib.es2019.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":115,"duration":2.267},
{"type":"mark","name":"tsc.op.op_load","count":116,"args":"asset:///lib.es2019.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":116,"duration":0.159},
{"type":"mark","name":"tsc.op.op_load","count":117,"args":"asset:///lib.es2019.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":117,"duration":0.084},
{"type":"mark","name":"tsc.op.op_load","count":118,"args":"asset:///lib.es2019.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":118,"duration":0.088},
{"type":"mark","name":"tsc.op.op_load","count":119,"args":"asset:///lib.es2019.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":119,"duration":0.096},
{"type":"mark","name":"tsc.op.op_load","count":120,"args":"asset:///lib.es2020.bigint.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":120,"duration":11.681},
{"type":"mark","name":"tsc.op.op_load","count":121,"args":"asset:///lib.es2020.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":121,"duration":3.181},
{"type":"mark","name":"tsc.op.op_load","count":122,"args":"asset:///lib.es2020.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":122,"duration":0.182},
{"type":"mark","name":"tsc.op.op_load","count":123,"args":"asset:///lib.es2020.number.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":123,"duration":0.106},
{"type":"mark","name":"tsc.op.op_load","count":124,"args":"asset:///lib.es2020.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":124,"duration":0.18},
{"type":"mark","name":"tsc.op.op_load","count":125,"args":"asset:///lib.es2020.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":125,"duration":0.301},
{"type":"mark","name":"tsc.op.op_load","count":126,"args":"asset:///lib.es2020.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":126,"duration":0.181},
{"type":"mark","name":"tsc.op.op_load","count":127,"args":"asset:///lib.es2020.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":127,"duration":0.146},
{"type":"mark","name":"tsc.op.op_load","count":128,"args":"asset:///lib.es2021.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":128,"duration":0.231},
{"type":"mark","name":"tsc.op.op_load","count":129,"args":"asset:///lib.es2021.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":129,"duration":0.102},
{"type":"mark","name":"tsc.op.op_load","count":130,"args":"asset:///lib.es2021.weakref.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":130,"duration":0.224},
{"type":"mark","name":"tsc.op.op_load","count":131,"args":"asset:///lib.es2021.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":131,"duration":0.429},
{"type":"mark","name":"tsc.op.op_load","count":132,"args":"asset:///lib.es2022.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":132,"duration":0.284},
{"type":"mark","name":"tsc.op.op_load","count":133,"args":"asset:///lib.es2022.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":133,"duration":0.284},
{"type":"mark","name":"tsc.op.op_load","count":134,"args":"asset:///lib.es2022.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":134,"duration":0.321},
{"type":"mark","name":"tsc.op.op_load","count":135,"args":"asset:///lib.es2022.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":135,"duration":7.341},
{"type":"mark","name":"tsc.op.op_load","count":136,"args":"asset:///lib.es2022.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":136,"duration":0.136},
{"type":"mark","name":"tsc.op.op_load","count":137,"args":"asset:///lib.es2022.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":137,"duration":0.073},
{"type":"mark","name":"tsc.op.op_load","count":138,"args":"asset:///lib.es2023.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":138,"duration":7.758},
{"type":"mark","name":"tsc.op.op_load","count":139,"args":"asset:///lib.es2023.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":139,"duration":0.179},
{"type":"mark","name":"tsc.op.op_load","count":140,"args":"asset:///lib.es2023.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":140,"duration":0.322},
{"type":"mark","name":"tsc.op.op_load","count":141,"args":"asset:///lib.es2024.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":141,"duration":6.218},
{"type":"mark","name":"tsc.op.op_load","count":142,"args":"asset:///lib.es2024.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":142,"duration":0.106},
{"type":"mark","name":"tsc.op.op_load","count":143,"args":"asset:///lib.es2024.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":143,"duration":0.105},
{"type":"mark","name":"tsc.op.op_load","count":144,"args":"asset:///lib.es2024.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":144,"duration":0.144},
{"type":"mark","name":"tsc.op.op_load","count":145,"args":"asset:///lib.es2024.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":145,"duration":0.071},
{"type":"mark","name":"tsc.op.op_load","count":146,"args":"asset:///lib.es2024.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":146,"duration":4.735},
{"type":"mark","name":"tsc.op.op_load","count":147,"args":"asset:///lib.es2024.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":147,"duration":2.57},
{"type":"mark","name":"tsc.op.op_load","count":148,"args":"asset:///lib.esnext.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":148,"duration":0.07},
{"type":"mark","name":"tsc.op.op_load","count":149,"args":"asset:///lib.esnext.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":149,"duration":0.088},
{"type":"mark","name":"tsc.op.op_load","count":150,"args":"asset:///lib.esnext.disposable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":150,"duration":0.447},
{"type":"mark","name":"tsc.op.op_load","count":151,"args":"asset:///lib.esnext.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":151,"duration":0.322},
{"type":"mark","name":"tsc.op.op_load","count":152,"args":"asset:///lib.esnext.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":152,"duration":0.208},
{"type":"mark","name":"tsc.op.op_load","count":153,"args":"asset:///lib.esnext.iterator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":153,"duration":1.611},
{"type":"mark","name":"tsc.op.op_load","count":154,"args":"asset:///lib.esnext.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":154,"duration":0.152},
{"type":"mark","name":"tsc.op.op_load","count":155,"args":"asset:///lib.esnext.float16.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":155,"duration":4.127},
{"type":"mark","name":"tsc.op.op_load","count":156,"args":"asset:///lib.esnext.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":156,"duration":3.27},
{"type":"mark","name":"tsc.op.op_load","count":157,"args":"asset:///lib.esnext.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":157,"duration":0.089},
{"type":"mark","name":"tsc.op.op_load","count":158,"args":"asset:///lib.deno.net.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":158,"duration":9.889},
{"type":"mark","name":"tsc.op.op_load","count":159,"args":"asset:///lib.deno.shared_globals.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":159,"duration":14.012},
{"type":"mark","name":"tsc.op.op_load","count":160,"args":"asset:///lib.deno.console.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":160,"duration":0.494},
{"type":"mark","name":"tsc.op.op_load","count":161,"args":"asset:///lib.deno.url.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":161,"duration":1.488},
{"type":"mark","name":"tsc.op.op_load","count":162,"args":"asset:///lib.deno.web.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":162,"duration":25.443},
{"type":"mark","name":"tsc.op.op_load","count":163,"args":"asset:///lib.deno.webgpu.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":163,"duration":29.905},
{"type":"mark","name":"tsc.op.op_load","count":164,"args":"asset:///lib.deno.canvas.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":164,"duration":15.213},
{"type":"mark","name":"tsc.op.op_load","count":165,"args":"asset:///lib.deno.fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":165,"duration":7.269},
{"type":"mark","name":"tsc.op.op_load","count":166,"args":"asset:///lib.deno.websocket.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":166,"duration":5.712},
{"type":"mark","name":"tsc.op.op_load","count":167,"args":"asset:///lib.deno.crypto.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":167,"duration":11.116},
{"type":"mark","name":"tsc.op.op_load","count":168,"args":"asset:///lib.deno.webstorage.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":168,"duration":0.282},
{"type":"mark","name":"tsc.op.op_load","count":169,"args":"asset:///lib.deno.cache.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":169,"duration":0.262},
{"type":"mark","name":"tsc.op.op_load","count":170,"args":"asset:///lib.deno.unstable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":170,"duration":77.781},
{"type":"mark","name":"tsc.op.op_load","count":171,"args":"asset:///lib.deno.broadcast_channel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":171,"duration":0.385},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":1,"duration":0.017},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":2,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":3,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":4,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":5,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":6,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":7,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":8,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":9,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":10,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":11,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":12,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":13,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":14,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":15,"duration":0.009},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":16,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":17,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":18,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":19,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":20,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":21,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":22,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":23,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":24,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":25,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":26,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":27,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":28,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":29,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":30,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":31,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":32,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":33,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":34,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":35,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":36,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":37,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":38,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":39,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":40,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":41,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":42,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":43,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":44,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":45,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":46,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":47,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":48,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":49,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":50,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":51,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":52,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":53,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":54,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":55,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":56,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":57,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":58,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":59,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":60,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":61,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":62,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":63,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":64,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":65,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":66,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":67,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":68,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":69,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":70,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":71,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":72,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":73,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":74,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":75,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":76,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":77,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":78,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":79,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":80,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":81,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":82,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":83,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":84,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":85,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":86,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":87,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":88,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":89,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":90,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":91,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":92,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":93,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":94,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":95,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":96,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":97,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":98,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":99,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":100,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":101,"duration":0.014},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":102,"duration":0.015},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":103,"duration":0.015},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":104,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":105,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":106,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":107,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":108,"duration":0.012},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":109,"duration":0.01},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":1,"duration":5494.947},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":2,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",3]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":1,"duration":6613.422},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":110,"duration":0.009},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":111,"duration":0.016},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":2,"duration":66.572},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":1,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":2,"duration":6650.277},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":1,"duration":0.395},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":1,"duration":65.114},
{"type":"measure","name":"lsp.diagnostic","count":1,"duration":6688.596},
{"type":"measure","name":"lsp.diagnostic","count":2,"duration":6678.681},
{"type":"mark","name":"lsp.did_open","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/config/environment-loader.js","languageId":"javascript","version":6,"text":"/**\n * Production-Ready Environment Configuration Loader\n * Loads configuration from GitHub Actions, Supabase Vault, and environment variables\n *\n * Configuration Sources (in priority order):\n * 1. Process environment variables (GitHub Actions, CI/CD)\n * 2. Supabase Vault (for API keys)\n * 3. Local .env file (development only)\n * 4. Production defaults\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\n\n// Import Supabase Vault Loader for API key management\nlet vaultLoader;\ntry {\n  vaultLoader = require(\"../modules/utils/supabase-vault-loader\");\n} catch (error) {\n  console.warn(\"⚠️ Supabase Vault Loader not available:\", error.message);\n}\n\nclass EnvironmentLoader {\n  constructor() {\n    this.configSources = [];\n    this.vaultApiKeys = null;\n    this.loadEnvironment();\n  }\n\n  loadEnvironment() {\n    console.log(\"🔧 ProspectPro Environment Configuration Loader\");\n    console.log(\"📍 Loading configuration from multiple sources...\\n\");\n\n    // 1. Load from .env file (development/local only)\n    this.loadDotEnv();\n\n    // 2. Process environment variables (CI/CD, GitHub Actions)\n    this.loadProcessEnvironment();\n\n    // 3. Set production defaults if not specified\n    this.setProductionDefaults();\n\n    // 4. Validate required configuration\n    this.validateConfiguration();\n\n    // 5. Display configuration summary\n    this.displayConfigurationSummary();\n  }\n\n  /**\n   * Load API keys from Supabase Vault\n   * @returns {Promise<Object>} API keys object\n   */\n  async loadApiKeysFromVault() {\n    // PRODUCTION/CLOUD RUN: Always use environment variables (no vault)\n    if (\n      process.env.NODE_ENV === \"production\" ||\n      process.env.K_SERVICE ||\n      process.env.CLOUD_RUN_SERVICE ||\n      process.env.GOOGLE_CLOUD_PROJECT\n    ) {\n      console.log(\n        \"☁️ Production/Cloud Run detected: using direct environment variables\"\n      );\n      console.log(\"💡 Vault bypassed for Cloud Run compatibility\");\n      return null; // Force fallback to environment variables\n    }\n\n    if (!vaultLoader) {\n      console.warn(\n        \"⚠️ Vault loader not available, using environment variables only\"\n      );\n      return null;\n    }\n\n    if (this.vaultApiKeys) {\n      return this.vaultApiKeys; // Return cached keys\n    }\n\n    try {\n      console.log(\n        \"🔑 Loading API keys from Supabase Vault (local development)...\"\n      );\n\n      this.vaultApiKeys = await vaultLoader.loadStandardApiKeys();\n\n      if (this.vaultApiKeys) {\n        this.configSources.push(\"🔐 Supabase Vault (API Keys)\");\n        console.log(\"✅ API keys loaded from Supabase Vault\");\n      }\n\n      return this.vaultApiKeys;\n    } catch (error) {\n      console.warn(\n        \"⚠️ Failed to load API keys from Supabase Vault:\",\n        error.message\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Get API keys with environment variable fallback\n   * @returns {Promise<Object>} Combined API keys\n   */\n  async getApiKeys() {\n    const vaultKeys = await this.loadApiKeysFromVault();\n\n    if (!vaultKeys) {\n      // Fallback to environment variables only\n      console.log(\"🔑 Using API keys from environment variables\");\n\n      const envApiKeys = {\n        googlePlaces: process.env.GOOGLE_PLACES_API_KEY,\n        foursquare:\n          process.env.FOURSQUARE_SERVICE_API_KEY ||\n          process.env.FOURSQUARE_PLACES_API_KEY,\n        hunterIO: process.env.HUNTER_API_KEY,\n        neverBounce: process.env.NEVERBOUNCE_API_KEY,\n        zeroBounce: process.env.ZEROBOUNCE_API_KEY,\n        apollo: process.env.APOLLO_API_KEY,\n        scrapingdog: process.env.SCRAPINGDOG_API_KEY,\n        californiaSOSApiKey: process.env.CALIFORNIA_SOS_API_KEY,\n        socrata: process.env.SOCRATA_API_KEY,\n        socrataToken: process.env.SOCRATA_APP_TOKEN,\n        uspto: process.env.USPTO_TSDR_API_KEY,\n        personalAccessToken: process.env.PERSONAL_ACCESS_TOKEN,\n      };\n\n      // Log which API keys are available\n      const availableKeys = Object.entries(envApiKeys)\n        .filter(([key, value]) => value && !value.includes(\"your_\"))\n        .map(([key]) => key);\n\n      if (availableKeys.length > 0) {\n        console.log(\n          `✅ Found ${availableKeys.length} API keys in environment variables`\n        );\n        console.log(`   Available: ${availableKeys.join(\", \")}`);\n      } else {\n        console.warn(\"⚠️ No API keys found in environment variables\");\n        if (process.env.ALLOW_DEGRADED_START === \"true\") {\n          console.log(\"💡 Continuing in webhook-only mode\");\n        }\n      }\n\n      return envApiKeys;\n    }\n\n    return vaultKeys;\n  }\n\n  loadDotEnv() {\n    const envPath = path.join(process.cwd(), \".env\");\n    if (fs.existsSync(envPath)) {\n      require(\"dotenv\").config({ path: envPath });\n      this.configSources.push(\"📄 .env file\");\n      console.log(\"✅ Environment template loaded from .env file\");\n    } else {\n      console.log(\"ℹ️  No .env file found (expected in CI/CD environments)\");\n    }\n  }\n\n  loadProcessEnvironment() {\n    // Check for GitHub Actions / CI/CD injected variables\n    const cicdVars = [\n      \"SUPABASE_URL\",\n      \"SUPABASE_SECRET_KEY\",\n      \"BUILD_TIMESTAMP\",\n      \"BUILD_COMMIT\",\n      \"BUILD_BRANCH\",\n    ];\n\n    let cicdCount = 0;\n    cicdVars.forEach((varName) => {\n      if (process.env[varName] && !process.env[varName].includes(\"your_\")) {\n        cicdCount++;\n      }\n    });\n\n    if (cicdCount >= 2) {\n      this.configSources.push(\"🏭 GitHub Actions / CI/CD\");\n      console.log(`✅ ${cicdCount} variables loaded from CI/CD environment`);\n\n      if (process.env.BUILD_TIMESTAMP) {\n        console.log(`📅 Build: ${process.env.BUILD_TIMESTAMP}`);\n      }\n      if (process.env.BUILD_COMMIT) {\n        console.log(`📋 Commit: ${process.env.BUILD_COMMIT?.substring(0, 8)}`);\n      }\n    }\n\n    // Check for direct environment variables\n    const envVars = [\"SUPABASE_URL\", \"SUPABASE_SECRET_KEY\"];\n    let envCount = 0;\n    envVars.forEach((varName) => {\n      if (process.env[varName] && !process.env[varName].includes(\"your_\")) {\n        envCount++;\n      }\n    });\n\n    if (envCount > 0 && cicdCount < 2) {\n      this.configSources.push(\"🌍 Process Environment\");\n      console.log(`✅ ${envCount} variables loaded from process environment`);\n    }\n  }\n\n  setProductionDefaults() {\n    // Set production-optimized defaults\n    const defaults = {\n      NODE_ENV: \"production\",\n      ENABLE_PROMETHEUS_METRICS: \"true\",\n      ENABLE_PERFORMANCE_LOGGING: \"true\",\n      ENABLE_TTL_CACHE: \"true\",\n      ENABLE_BATCH_PROCESSING: \"true\",\n      CACHE_TTL_SECONDS: \"3600\",\n      MAX_CONCURRENT_REQUESTS: \"10\",\n      MIN_CONFIDENCE_SCORE: \"85\",\n      ENABLE_COST_TRACKING: \"true\",\n      ENABLE_CIRCUIT_BREAKER: \"true\",\n    };\n\n    let defaultsSet = 0;\n    Object.entries(defaults).forEach(([key, value]) => {\n      if (!process.env[key]) {\n        process.env[key] = value;\n        defaultsSet++;\n      }\n    });\n\n    if (defaultsSet > 0) {\n      this.configSources.push(\"⚙️  Production Defaults\");\n      console.log(`✅ ${defaultsSet} production defaults applied`);\n    }\n  }\n\n  validateConfiguration() {\n    const required = [\"SUPABASE_URL\", \"SUPABASE_SECRET_KEY\", \"NODE_ENV\"];\n    const missing = required.filter(\n      (key) => !process.env[key] || process.env[key].includes(\"your_\")\n    );\n\n    console.log(\"\\n🔍 Configuration Validation:\");\n\n    if (missing.length > 0) {\n      console.error(\"❌ Missing required environment variables:\", missing);\n      console.error(\"\\n💡 Solutions:\");\n      console.error(\n        \"   🔧 Production: Ensure GitHub repository secrets are configured\"\n      );\n      console.error(\"   🛠️  Development: Add real values to .env file\");\n      console.error(\"   📋 Secrets needed: SUPABASE_URL, SUPABASE_SECRET_KEY\");\n\n      if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n        console.error(\n          \"\\n❌ Set ALLOW_DEGRADED_START=true to continue without full configuration\"\n        );\n        process.exit(1);\n      } else {\n        console.warn(\n          \"⚠️  Continuing in degraded mode without complete configuration\"\n        );\n      }\n    } else {\n      console.log(\"✅ All required environment variables configured\");\n    }\n\n    // Validate Supabase configuration\n    const supabaseUrl = process.env.SUPABASE_URL;\n    if (supabaseUrl && !supabaseUrl.includes(\"your_\")) {\n      if (supabaseUrl.includes(\"supabase.co\")) {\n        console.log(\"✅ Supabase URL format validated\");\n      } else {\n        console.warn(\"⚠️  Supabase URL format may be incorrect\");\n      }\n    }\n  }\n\n  displayConfigurationSummary() {\n    console.log(\"\\n📊 Configuration Sources Summary:\");\n    this.configSources.forEach((source) => {\n      console.log(`   ${source}`);\n    });\n\n    console.log(\"\\n🎯 Runtime Configuration:\");\n    console.log(`   Environment: ${process.env.NODE_ENV}`);\n    console.log(`   Port: ${process.env.PORT || 3000}`);\n    console.log(\n      `   Degraded Mode Allowed: ${\n        process.env.ALLOW_DEGRADED_START === \"true\" ? \"Yes\" : \"No\"\n      }`\n    );\n\n    if (\n      process.env.SUPABASE_URL &&\n      !process.env.SUPABASE_URL.includes(\"your_\")\n    ) {\n      const url = process.env.SUPABASE_URL;\n      console.log(`   Supabase: ${url.substring(0, 30)}...`);\n    }\n\n    // Show vault configuration expectation\n    console.log(\"\\n🔑 API Keys Expected from Supabase Vault:\");\n    const expectedVaultKeys = [\n      \"GOOGLE_PLACES_API_KEY\",\n      \"HUNTER_IO_API_KEY\",\n      \"NEVERBOUNCE_API_KEY\",\n      \"APOLLO_API_KEY\",\n      \"FOURSQUARE_SERVICE_API_KEY\",\n      \"PERSONAL_ACCESS_TOKEN\",\n    ];\n    expectedVaultKeys.forEach((key) => {\n      console.log(`   📝 ${key}`);\n    });\n\n    console.log(\"\\n\" + \"=\".repeat(50) + \"\\n\");\n  }\n\n  // Get environment-specific configuration\n  getConfig() {\n    const isProduction = process.env.NODE_ENV === \"production\";\n    const isDevelopment = process.env.NODE_ENV === \"development\";\n\n    return {\n      environment: process.env.NODE_ENV,\n      isProduction,\n      isDevelopment,\n\n      // Database\n      supabase: {\n        url: process.env.SUPABASE_URL,\n        secretKey: process.env.SUPABASE_SECRET_KEY,\n      },\n\n      // Performance Settings\n      performance: {\n        requestTimeout: parseInt(process.env.REQUEST_TIMEOUT) || 30000,\n        maxConcurrentRequests:\n          parseInt(process.env.MAX_CONCURRENT_REQUESTS) || 10,\n        batchSize: parseInt(process.env.BATCH_SIZE) || 25,\n        cacheTTL: parseInt(process.env.CACHE_TTL_SECONDS) || 3600,\n      },\n\n      // Budget Controls\n      budget: {\n        dailyLimit: parseFloat(process.env.DAILY_BUDGET_LIMIT) || 100.0,\n        defaultLimit: parseFloat(process.env.DEFAULT_BUDGET_LIMIT) || 25.0,\n        perLeadLimit: parseFloat(process.env.PER_LEAD_COST_LIMIT) || 2.0,\n        alertThreshold: parseFloat(process.env.COST_ALERT_THRESHOLD) || 80.0,\n      },\n\n      // Quality Standards\n      quality: {\n        minConfidenceScore: parseInt(process.env.MIN_CONFIDENCE_SCORE) || 85,\n        preValidationThreshold:\n          parseInt(process.env.PRE_VALIDATION_THRESHOLD) || 75,\n        exportThreshold:\n          parseInt(process.env.EXPORT_CONFIDENCE_THRESHOLD) || 90,\n      },\n\n      // Feature Flags\n      features: {\n        enableMetrics: process.env.ENABLE_PROMETHEUS_METRICS === \"true\",\n        enableCaching: process.env.ENABLE_TTL_CACHE === \"true\",\n        enableBatching: process.env.ENABLE_BATCH_PROCESSING === \"true\",\n        enableCircuitBreaker: process.env.ENABLE_CIRCUIT_BREAKER === \"true\",\n        enableCostTracking: process.env.ENABLE_COST_TRACKING === \"true\",\n      },\n\n      // Build information (from CI/CD)\n      build: {\n        timestamp: process.env.BUILD_TIMESTAMP,\n        commit: process.env.BUILD_COMMIT,\n        branch: process.env.BUILD_BRANCH,\n        actor: process.env.BUILD_ACTOR,\n      },\n    };\n  }\n}\n\nmodule.exports = EnvironmentLoader;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":3,"duration":0.061},
{"type":"measure","name":"lsp.did_open","count":12,"duration":3.567},
{"type":"mark","name":"lsp.did_open","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/cloudbuild.yaml","languageId":"yaml","version":11,"text":"# Cloud Build Configuration for ProspectPro v3.1\n# Native Google Cloud deployment with Supabase Vault integration\n\nsteps:\n  # Step 1: Create Artifact Registry repository if needed\n  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'\n    entrypoint: 'bash'\n    args:\n      - '-c'\n      - |\n        if ! gcloud artifacts repositories describe prospectpro --location=us-central1 &>/dev/null; then\n          echo \"🏗️ Creating Artifact Registry repository...\"\n          gcloud artifacts repositories create prospectpro \\\n            --location=us-central1 \\\n            --repository-format=docker \\\n            --description=\"ProspectPro container repository\"\n          echo \"✅ Repository created successfully\"\n        else\n          echo \"✅ Repository already exists\"\n        fi\n    id: 'setup-registry'\n\n  # Step 2: Build Docker container\n  - name: 'gcr.io/cloud-builders/docker'\n    args: \n      - 'build'\n      - '-t'\n      - 'us-central1-docker.pkg.dev/$PROJECT_ID/prospectpro/app:$COMMIT_SHA'\n      - '-t'\n      - 'us-central1-docker.pkg.dev/$PROJECT_ID/prospectpro/app:latest'\n      - '.'\n    id: 'build-container'\n    waitFor: ['setup-registry']\n\n  # Step 3: Push container to Artifact Registry\n  - name: 'gcr.io/cloud-builders/docker'\n    args:\n      - 'push'\n      - '--all-tags'\n      - 'us-central1-docker.pkg.dev/$PROJECT_ID/prospectpro/app'\n    id: 'push-container'\n    waitFor: ['build-container']\n\n  # Step 4: Deploy to Cloud Run with Google Secret Manager\n  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'\n    entrypoint: 'gcloud'\n    args:\n      - 'run'\n      - 'deploy'\n      - 'prospectpro'\n      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/prospectpro/app:$COMMIT_SHA'\n      - '--platform=managed'\n      - '--region=us-central1'\n      - '--allow-unauthenticated'\n      - '--memory=2Gi'\n      - '--cpu=2'\n      - '--min-instances=0'\n      - '--max-instances=10'\n      - '--concurrency=100'\n      - '--timeout=300'\n      - '--set-env-vars=NODE_ENV=production'\n      - '--set-env-vars=ALLOW_DEGRADED_START=true'\n      - '--set-secrets=SUPABASE_URL=supabase-url:latest'\n      - '--set-secrets=SUPABASE_SECRET_KEY=supabase-secret-key:latest'\n      - '--set-secrets=WEBHOOK_AUTH_TOKEN=webhook-auth-token:latest'\n      - '--set-secrets=GOOGLE_PLACES_API_KEY=google-places-api-key:latest'\n      - '--set-secrets=HUNTER_API_KEY=hunter-api-key:latest'\n      - '--set-secrets=NEVERBOUNCE_API_KEY=neverbounce-api-key:latest'\n      - '--set-secrets=FOURSQUARE_SERVICE_API_KEY=foursquare-api-key:latest'\n      - '--set-secrets=APOLLO_API_KEY=apollo-api-key:latest'\n      - '--set-secrets=SCRAPINGDOG_API_KEY=scrapingdog-api-key:latest'\n      - '--set-secrets=SOCRATA_API_KEY=socrata-api-key:latest'\n      - '--set-secrets=SOCRATA_APP_TOKEN=socrata-app-token:latest'\n      - '--set-secrets=USPTO_TSDR_API_KEY=uspto-api-key:latest'\n      - '--set-secrets=ZEROBOUNCE_API_KEY=zerobounce-api-key:latest'\n      - '--set-secrets=CALIFORNIA_SOS_API_KEY=california-sos-api-key:latest'\n      - '--set-secrets=PERSONAL_ACCESS_TOKEN=personal-access-token:latest'\n      - '--service-account=prospectpro-deployment@leadgen-471822.iam.gserviceaccount.com'\n    id: 'deploy-cloud-run'\n    waitFor: ['push-container']\n\n  # Step 5: Get service URL and test health\n  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'\n    entrypoint: 'bash'\n    args:\n      - '-c'\n      - |\n        # Get the deployed service URL\n        SERVICE_URL=$$(gcloud run services describe prospectpro --region=us-central1 --format='value(status.url)')\n        echo \"🌐 Service deployed at: $$SERVICE_URL\"\n        \n        # Wait for service to be ready\n        echo \"⏳ Waiting for service to be ready...\"\n        sleep 30\n        \n        # Test health endpoint\n        echo \"🧪 Testing health endpoint...\"\n        curl -f --max-time 30 --retry 5 --retry-delay 10 \"$$SERVICE_URL/health\" || echo \"❌ Health check failed but deployment succeeded\"\n        \n        # Test basic API endpoint\n        echo \"🧪 Testing business discovery API...\"\n        curl -X POST --max-time 30 -H \"Content-Type: application/json\" \\\n          -d '{\"businessType\":\"restaurant\",\"location\":\"Austin, TX\",\"maxResults\":1}' \\\n          -f \"$$SERVICE_URL/api/business/discover-businesses\" || echo \"❌ API test failed but deployment succeeded\"\n        \n        echo \"✅ Deployment completed - Service URL: $$SERVICE_URL\"\n    id: 'health-check'\n    waitFor: ['deploy-cloud-run']\n\n# Build configuration optimized for production\noptions:\n  machineType: 'E2_HIGHCPU_8'\n  diskSizeGb: 100\n  substitutionOption: 'ALLOW_LOOSE'\n  logging: CLOUD_LOGGING_ONLY\n\n# Build timeout (20 minutes for comprehensive build and test)\ntimeout: '1200s'"}}},
{"type":"measure","name":"lsp.did_open","count":13,"duration":0.06},
{"type":"mark","name":"lsp.did_open","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/scripts/cloud-run-diagnostic.js","languageId":"javascript","version":3,"text":"#!/usr/bin/env node\n\n/**\n * Cloud Run Deployment Diagnostic Script\n * Identifies common failure patterns for ProspectPro Cloud Run deployments\n */\n\nconsole.log(\"🔍 ProspectPro Cloud Run Deployment Diagnostic\");\nconsole.log(\"=\".repeat(50));\n\nasync function runDiagnostic() {\n  // 1. Environment Variable Analysis\n  console.log(\"\\n📋 1. Environment Variables Analysis:\");\n\n  const criticalVars = {\n    NODE_ENV: process.env.NODE_ENV || \"❌ MISSING\",\n    PORT: process.env.PORT || \"❌ MISSING (Cloud Run sets this)\",\n    SUPABASE_URL: process.env.SUPABASE_URL ? \"✅ SET\" : \"❌ MISSING\",\n    SUPABASE_SECRET_KEY: process.env.SUPABASE_SECRET_KEY\n      ? \"✅ SET\"\n      : \"❌ MISSING\",\n    WEBHOOK_AUTH_TOKEN: process.env.WEBHOOK_AUTH_TOKEN\n      ? \"✅ SET\"\n      : \"❌ MISSING\",\n    ALLOW_DEGRADED_START: process.env.ALLOW_DEGRADED_START || \"❌ NOT SET\",\n  };\n\n  Object.entries(criticalVars).forEach(([key, value]) => {\n    console.log(`   ${key}: ${value}`);\n  });\n\n  // 2. Cloud Run Detection\n  console.log(\"\\n🏗️ 2. Cloud Run Environment Detection:\");\n  const cloudRunIndicators = {\n    K_SERVICE: process.env.K_SERVICE ? \"✅ DETECTED\" : \"❌ NOT DETECTED\",\n    K_REVISION: process.env.K_REVISION ? \"✅ DETECTED\" : \"❌ NOT DETECTED\",\n    \"PORT (Cloud Run)\": process.env.PORT ? \"✅ SET BY CLOUD RUN\" : \"❌ NOT SET\",\n  };\n\n  Object.entries(cloudRunIndicators).forEach(([key, value]) => {\n    console.log(`   ${key}: ${value}`);\n  });\n\n  // 3. Module Loading Test\n  console.log(\"\\n📦 3. Critical Module Loading:\");\n  const modules = [\n    { name: \"dotenv\", path: \"dotenv\" },\n    { name: \"express\", path: \"express\" },\n    { name: \"environment-loader\", path: \"./config/environment-loader\" },\n    { name: \"supabase\", path: \"./config/supabase\" },\n  ];\n\n  for (const module of modules) {\n    try {\n      require(module.path);\n      console.log(`   ✅ ${module.name}`);\n    } catch (error) {\n      console.log(`   ❌ ${module.name}: ${error.message}`);\n    }\n  }\n\n  // 4. Database Connection Test\n  console.log(\"\\n🗄️ 4. Database Connection Test:\");\n  try {\n    const { testConnection } = require(\"./config/supabase\");\n    const dbResult = await testConnection();\n    if (dbResult.success) {\n      console.log(\"   ✅ Database connection successful\");\n    } else {\n      console.log(`   ❌ Database connection failed: ${dbResult.error}`);\n    }\n  } catch (error) {\n    console.log(`   ❌ Database test failed: ${error.message}`);\n  }\n\n  // 5. Port Binding Test\n  console.log(\"\\n🌐 5. Port Binding Test:\");\n  try {\n    const express = require(\"express\");\n    const testApp = express();\n\n    testApp.get(\"/test\", (req, res) => {\n      res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n    });\n\n    const testPort = process.env.PORT || 8080;\n    const server = testApp.listen(testPort, \"0.0.0.0\", () => {\n      console.log(`   ✅ Successfully bound to port ${testPort} on 0.0.0.0`);\n      server.close();\n    });\n\n    server.on(\"error\", (error) => {\n      console.log(`   ❌ Port binding failed: ${error.message}`);\n    });\n  } catch (error) {\n    console.log(`   ❌ Port binding test failed: ${error.message}`);\n  }\n\n  // 6. Common Cloud Run Failure Patterns\n  console.log(\"\\n⚠️ 6. Common Failure Pattern Analysis:\");\n\n  const failures = [];\n\n  // Missing environment variables\n  if (!process.env.SUPABASE_URL || !process.env.SUPABASE_SECRET_KEY) {\n    failures.push(\n      \"Missing Supabase configuration in Cloud Build substitutions\"\n    );\n  }\n\n  // Missing degraded start\n  if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n    failures.push(\n      \"ALLOW_DEGRADED_START not set to true for Cloud Run stability\"\n    );\n  }\n\n  // PORT not being respected\n  if (!process.env.PORT) {\n    failures.push(\n      \"PORT environment variable not set (Cloud Run sets this automatically)\"\n    );\n  }\n\n  if (failures.length === 0) {\n    console.log(\"   ✅ No common failure patterns detected\");\n  } else {\n    failures.forEach((failure) => {\n      console.log(`   ❌ ${failure}`);\n    });\n  }\n\n  // 7. Recommended Fixes\n  console.log(\"\\n🔧 7. Recommended Actions:\");\n\n  if (!process.env.SUPABASE_URL || !process.env.SUPABASE_SECRET_KEY) {\n    console.log(\"   📝 Check Cloud Build trigger substitution variables\");\n    console.log(\"   📝 Verify _SUPABASE_URL and _SUPABASE_SECRET_KEY are set\");\n  }\n\n  if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n    console.log(\"   📝 Add ALLOW_DEGRADED_START=true to Cloud Run environment\");\n  }\n\n  console.log(\"   📝 Check Cloud Run deployment logs for specific errors\");\n  console.log(\"   📝 Verify container build completed successfully\");\n  console.log(\"   📝 Test health endpoint after deployment\");\n\n  console.log(\"\\n✅ Diagnostic complete\");\n}\n\n// Run the diagnostic\nrunDiagnostic().catch((error) => {\n  console.error(\"❌ Diagnostic failed:\", error.message);\n  process.exit(1);\n});\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":4,"duration":0.061},
{"type":"measure","name":"lsp.did_open","count":14,"duration":2.863},
{"type":"mark","name":"lsp.did_open","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/docs/CLOUD_RUN_DEPLOYMENT_FIX.md","languageId":"markdown","version":3,"text":"## 🎯 Cloud Run Deployment Fix Summary\n\n**Commit:** `a479021` - Fix: Bypass Supabase Vault in Cloud Run production environment\n\n### 🔍 **Root Cause Identified**\n\nThe Cloud Run deployment failures were caused by the environment loader attempting to access Supabase Vault even in production environments, leading to schema cache compatibility issues.\n\n### 🛠️ **Fix Applied**\n\nUpdated `config/environment-loader.js` to:\n\n1. **Complete Vault Bypass in Production**\n\n   ```javascript\n   // PRODUCTION/CLOUD RUN: Always use environment variables (no vault)\n   if (\n     process.env.NODE_ENV === \"production\" ||\n     process.env.K_SERVICE ||\n     process.env.CLOUD_RUN_SERVICE ||\n     process.env.GOOGLE_CLOUD_PROJECT\n   ) {\n     console.log(\n       \"☁️ Production/Cloud Run detected: using direct environment variables\"\n     );\n     return null; // Force fallback to environment variables\n   }\n   ```\n\n2. **Enhanced Environment Detection**\n\n   - `NODE_ENV=production`\n   - `K_SERVICE` (Cloud Run indicator)\n   - `CLOUD_RUN_SERVICE`\n   - `GOOGLE_CLOUD_PROJECT`\n\n3. **Improved API Key Logging**\n   - Reports which API keys are available from environment variables\n   - Clearer degraded mode messaging\n   - Better troubleshooting information\n\n### ✅ **Deployment Improvements**\n\n- ✅ No more vault access attempts in Cloud Run\n- ✅ Direct environment variable usage (faster startup)\n- ✅ Compatible with Cloud Build substitution variables\n- ✅ Maintains degraded startup for webhook-only operation\n- ✅ Resolves schema cache compatibility issues\n\n### 🚀 **Current Status**\n\n- **Git Push**: Completed to `main` branch\n- **Cloud Build**: Triggered automatically\n- **Expected Result**: Successful Cloud Run deployment without vault errors\n\n### 🔧 **Environment Variables Working**\n\nBased on your Cloud Build trigger configuration:\n\n- `_SUPABASE_URL` → `SUPABASE_URL` ✅\n- `_SUPABASE_SECRET_KEY` → `SUPABASE_SECRET_KEY` ✅\n- `_WEBHOOK_AUTH_TOKEN` → `WEBHOOK_AUTH_TOKEN` ✅\n- `ALLOW_DEGRADED_START=true` ✅\n- `NODE_ENV=production` ✅\n\n### 🎯 **Next Steps**\n\n1. Monitor Cloud Build logs for successful deployment\n2. Test health endpoint: `https://prospectpro-184492422840.us-central1.run.app/health`\n3. Verify webhook endpoints are operational\n4. Add additional API keys as environment variables in Cloud Build if needed\n\nThis fix maintains your current simple environment variable approach while eliminating the vault compatibility issues that were causing deployment failures.\n"}}},
{"type":"measure","name":"lsp.did_open","count":15,"duration":0.049},
{"type":"mark","name":"lsp.did_open","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/california-sos-client.js","languageId":"javascript","version":2,"text":"/**\r\n * California Secretary of State API Client\r\n *\r\n * Provides business entity verification using CA SOS Business Entity Public Search API\r\n * - Keyword search for business entities\r\n * - Entity details retrieval by number\r\n * - Rate limiting and error handling\r\n * - Response normalization for ProspectPro pipeline\r\n *\r\n * API Documentation: https://calico.sos.ca.gov/cbc/v1/api/\r\n * Authentication: Ocp-Apim-Subscription-Key header\r\n *\r\n * ProspectPro - Zero Fake Data Policy\r\n */\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nclass CaliforniaSOSClient {\r\n  constructor(apiKey = null) {\r\n    this.apiKey = apiKey || process.env.CALIFORNIA_SOS_API_KEY;\r\n    this.baseUrl =\r\n      process.env.CALIFORNIA_SOS_BASE_URL ||\r\n      \"https://calico.sos.ca.gov/cbc/v1/api\";\r\n\r\n    // Rate limiting configuration\r\n    this.rateLimitPerHour = 100; // Conservative estimate\r\n    this.requestCount = 0;\r\n    this.lastResetTime = Date.now();\r\n    this.rateLimitWindow = 60 * 60 * 1000; // 1 hour in milliseconds\r\n\r\n    // Caching for performance\r\n    this.cache = new Map();\r\n    this.cacheTimeout = 24 * 60 * 60 * 1000; // 24 hours\r\n\r\n    // Quality scoring configuration\r\n    this.qualityScore = 75; // High quality score for official CA data\r\n    this.costPerRequest = 0.0; // Free API\r\n\r\n    // Request statistics\r\n    this.stats = {\r\n      totalRequests: 0,\r\n      successfulRequests: 0,\r\n      cachedResponses: 0,\r\n      errorCount: 0,\r\n      lastRequestTime: null,\r\n    };\r\n\r\n    if (!this.apiKey) {\r\n      console.warn(\r\n        \"⚠️ California SOS API key not found. This API requires a subscription key from https://calico.sos.ca.gov\"\r\n      );\r\n      console.warn(\r\n        \"💡 To get access: Contact California Secretary of State API team for subscription\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Legacy method for backward compatibility\r\n   */\r\n  async searchBusiness(businessName) {\r\n    return this.searchByKeyword(businessName);\r\n  }\r\n\r\n  /**\r\n   * Check if we're within rate limits\r\n   */\r\n  checkRateLimit() {\r\n    const now = Date.now();\r\n\r\n    // Reset counter if window has passed\r\n    if (now - this.lastResetTime >= this.rateLimitWindow) {\r\n      this.requestCount = 0;\r\n      this.lastResetTime = now;\r\n    }\r\n\r\n    return this.requestCount < this.rateLimitPerHour;\r\n  }\r\n\r\n  /**\r\n   * Generate cache key for request\r\n   */\r\n  generateCacheKey(searchTerm, options = {}) {\r\n    return `ca_sos_${searchTerm.toLowerCase().trim()}_${JSON.stringify(\r\n      options\r\n    )}`;\r\n  }\r\n\r\n  /**\r\n   * Search for business entities by keyword\r\n   * @param {string} businessName - Business name to search for\r\n   * @param {Object} options - Search options\r\n   * @param {boolean} options.exactMatch - Whether to search for exact matches only\r\n   * @param {string} options.createdDateStart - Filter by creation date start (YYYY-MM-DD)\r\n   * @param {string} options.createdDateEnd - Filter by creation date end (YYYY-MM-DD)\r\n   * @returns {Object} Search results with normalized structure\r\n   */\r\n  async searchByKeyword(businessName, options = {}) {\r\n    if (!this.apiKey) {\r\n      console.warn(\r\n        \"⚠️ California SOS API key not configured, returning mock response\"\r\n      );\r\n      return this.getMockResponse(businessName);\r\n    }\r\n\r\n    if (!businessName || typeof businessName !== \"string\") {\r\n      throw new Error(\"Business name is required and must be a string\");\r\n    }\r\n\r\n    // Check cache first\r\n    const cacheKey = this.generateCacheKey(businessName, options);\r\n    if (this.cache.has(cacheKey)) {\r\n      const cached = this.cache.get(cacheKey);\r\n      if (Date.now() - cached.timestamp < this.cacheTimeout) {\r\n        this.stats.cachedResponses++;\r\n        return cached.data;\r\n      }\r\n      this.cache.delete(cacheKey);\r\n    }\r\n\r\n    // Rate limit check\r\n    if (!this.checkRateLimit()) {\r\n      throw new Error(\r\n        \"California SOS rate limit exceeded. Please try again later.\"\r\n      );\r\n    }\r\n\r\n    try {\r\n      const searchParams = new URLSearchParams({\r\n        \"search-term\": businessName.trim(),\r\n        \"begins-with\": options.exactMatch ? \"true\" : \"false\",\r\n      });\r\n\r\n      // Add optional date filters\r\n      if (options.createdDateStart) {\r\n        searchParams.append(\"created-date-start\", options.createdDateStart);\r\n      }\r\n      if (options.createdDateEnd) {\r\n        searchParams.append(\"created-date-end\", options.createdDateEnd);\r\n      }\r\n\r\n      const response = await this.makeRequest(\r\n        `/BusinessEntityKeywordSearch?${searchParams}`\r\n      );\r\n      const normalizedResponse = this.normalizeSearchResponse(\r\n        response,\r\n        businessName\r\n      );\r\n\r\n      // Cache successful responses\r\n      this.cache.set(cacheKey, {\r\n        data: normalizedResponse,\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n      this.stats.successfulRequests++;\r\n      return normalizedResponse;\r\n    } catch (error) {\r\n      this.stats.errorCount++;\r\n      console.error(\"California SOS search error:\", error.message);\r\n\r\n      // Return structured error response\r\n      return {\r\n        found: false,\r\n        totalResults: 0,\r\n        entities: [],\r\n        error: error.message,\r\n        source: \"California Secretary of State\",\r\n        apiCost: this.costPerRequest,\r\n        qualityScore: 0,\r\n        confidenceBoost: 0,\r\n        searchTerm: businessName,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get detailed information about a specific business entity\r\n   * @param {string} entityNumber - CA SOS entity number\r\n   * @returns {Object} Entity details with normalized structure\r\n   */\r\n  async getEntityDetails(entityNumber) {\r\n    if (!this.apiKey) {\r\n      console.warn(\"⚠️ California SOS API key not configured\");\r\n      return { found: false, error: \"API key not configured\" };\r\n    }\r\n\r\n    if (!entityNumber) {\r\n      throw new Error(\"Entity number is required\");\r\n    }\r\n\r\n    // Check cache\r\n    const cacheKey = `ca_sos_entity_${entityNumber}`;\r\n    if (this.cache.has(cacheKey)) {\r\n      const cached = this.cache.get(cacheKey);\r\n      if (Date.now() - cached.timestamp < this.cacheTimeout) {\r\n        this.stats.cachedResponses++;\r\n        return cached.data;\r\n      }\r\n      this.cache.delete(cacheKey);\r\n    }\r\n\r\n    // Rate limit check\r\n    if (!this.checkRateLimit()) {\r\n      throw new Error(\r\n        \"California SOS rate limit exceeded. Please try again later.\"\r\n      );\r\n    }\r\n\r\n    try {\r\n      const response = await this.makeRequest(\r\n        `/BusinessEntityDetails?entity-number=${encodeURIComponent(\r\n          entityNumber\r\n        )}`\r\n      );\r\n      const normalizedResponse = this.normalizeEntityResponse(\r\n        response,\r\n        entityNumber\r\n      );\r\n\r\n      // Cache successful responses\r\n      this.cache.set(cacheKey, {\r\n        data: normalizedResponse,\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n      this.stats.successfulRequests++;\r\n      return normalizedResponse;\r\n    } catch (error) {\r\n      this.stats.errorCount++;\r\n      console.error(\"California SOS entity details error:\", error.message);\r\n\r\n      return {\r\n        found: false,\r\n        entityNumber,\r\n        error: error.message,\r\n        source: \"California Secretary of State\",\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check API server status\r\n   */\r\n  async checkServerStatus() {\r\n    try {\r\n      const response = await this.makeRequest(\"/ServerStatus\");\r\n      return {\r\n        status: \"operational\",\r\n        response,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        status: \"error\",\r\n        error: error.message,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make HTTP request to CA SOS API\r\n   */\r\n  async makeRequest(endpoint, retries = 3) {\r\n    const headers = {\r\n      \"Ocp-Apim-Subscription-Key\": this.apiKey,\r\n      Accept: \"application/json\",\r\n      \"User-Agent\": \"ProspectPro/2.0 Business Validation System\",\r\n    };\r\n\r\n    const url = `${this.baseUrl}${endpoint}`;\r\n\r\n    for (let attempt = 1; attempt <= retries; attempt++) {\r\n      try {\r\n        const response = await fetch(url, {\r\n          headers,\r\n          timeout: 30000, // 30 second timeout\r\n        });\r\n\r\n        // Handle different response statuses\r\n        if (response.ok) {\r\n          this.requestCount++;\r\n          this.stats.totalRequests++;\r\n          this.stats.lastRequestTime = new Date().toISOString();\r\n          return await response.json();\r\n        }\r\n\r\n        // Handle specific error codes\r\n        if (response.status === 400) {\r\n          throw new Error(\"Bad Request - Invalid parameters or no match found\");\r\n        } else if (response.status === 401 || response.status === 403) {\r\n          throw new Error(\"Authentication failed - Invalid API key\");\r\n        } else if (response.status === 429) {\r\n          // Rate limit exceeded - wait and retry\r\n          if (attempt < retries) {\r\n            const delay = Math.pow(2, attempt) * 1000; // Exponential backoff\r\n            console.log(\r\n              `Rate limit exceeded. Waiting ${delay}ms before retry ${attempt}/${retries}`\r\n            );\r\n            await new Promise((resolve) => setTimeout(resolve, delay));\r\n            continue;\r\n          }\r\n          throw new Error(\"Rate limit exceeded - Please try again later\");\r\n        } else if (response.status >= 500) {\r\n          // Server error - retry with backoff\r\n          if (attempt < retries) {\r\n            const delay = Math.pow(2, attempt) * 1000;\r\n            console.log(\r\n              `Server error ${response.status}. Retrying in ${delay}ms`\r\n            );\r\n            await new Promise((resolve) => setTimeout(resolve, delay));\r\n            continue;\r\n          }\r\n          throw new Error(`California SOS server error: ${response.status}`);\r\n        } else {\r\n          throw new Error(`California SOS API error: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        if (attempt === retries) {\r\n          throw error;\r\n        }\r\n        // Wait before retry\r\n        await new Promise((resolve) => setTimeout(resolve, 1000 * attempt));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Normalize search response for ProspectPro pipeline\r\n   */\r\n  normalizeSearchResponse(data, searchTerm) {\r\n    const entities = Array.isArray(data) ? data : [];\r\n\r\n    // Calculate confidence boost based on match quality\r\n    let confidenceBoost = 0;\r\n    let exactMatches = 0;\r\n\r\n    entities.forEach((entity) => {\r\n      if (\r\n        entity.EntityName &&\r\n        entity.EntityName.toLowerCase() === searchTerm.toLowerCase()\r\n      ) {\r\n        exactMatches++;\r\n      }\r\n    });\r\n\r\n    if (exactMatches > 0) {\r\n      confidenceBoost = 20; // High confidence for exact matches\r\n    } else if (entities.length > 0) {\r\n      confidenceBoost = 10; // Moderate confidence for partial matches\r\n    }\r\n\r\n    return {\r\n      found: entities.length > 0,\r\n      totalResults: entities.length,\r\n      exactMatches,\r\n      entities: entities.map((entity) => ({\r\n        entityId: entity.EntityID || null,\r\n        entityNumber: entity.EntityNumber || entity.EntityID,\r\n        entityName: entity.EntityName || null,\r\n        entityType: entity.EntityType || null,\r\n        status: entity.StatusDescription || entity.Status || null,\r\n        statusDescription: entity.StatusDescription || null,\r\n        jurisdiction: entity.Jurisdiction || \"California\",\r\n        registrationDate:\r\n          entity.RegistrationDate || entity.FormationDate || null,\r\n        lastUpdated: entity.LastUpdated || null,\r\n\r\n        // Agent information\r\n        agentName: entity.AgentName || null,\r\n        agentType: entity.AgentType || null,\r\n        agentAddress: entity.AgentAddress || null,\r\n\r\n        // Address information\r\n        principalAddress: entity.PrincipalAddress || null,\r\n        mailingAddress: entity.MailingAddress || null,\r\n\r\n        // Business details\r\n        purpose: entity.Purpose || null,\r\n        ceoName: entity.CEOName || null,\r\n        cfoCfoName: entity.CFOName || null,\r\n        secretaryName: entity.SecretaryName || null,\r\n\r\n        // Validation metadata\r\n        source: \"California Secretary of State\",\r\n        sourceId: entity.EntityID || entity.EntityNumber,\r\n        lastVerified: new Date().toISOString(),\r\n        dataQuality: \"official_government_record\",\r\n      })),\r\n\r\n      // ProspectPro metadata\r\n      source: \"California Secretary of State\",\r\n      apiCost: this.costPerRequest,\r\n      qualityScore: this.qualityScore,\r\n      confidenceBoost,\r\n      searchTerm,\r\n\r\n      // Performance metrics\r\n      cached: false,\r\n      processingTime: Date.now(),\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Normalize entity details response\r\n   */\r\n  normalizeEntityResponse(data, entityNumber) {\r\n    if (!data) {\r\n      return {\r\n        found: false,\r\n        entityNumber,\r\n        source: \"California Secretary of State\",\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    }\r\n\r\n    return {\r\n      found: true,\r\n      entityNumber,\r\n      entityDetails: {\r\n        entityId: data.EntityID || null,\r\n        entityNumber: data.EntityNumber || entityNumber,\r\n        entityName: data.EntityName || null,\r\n        entityType: data.EntityType || null,\r\n        status: data.StatusDescription || data.Status || null,\r\n        jurisdiction: data.Jurisdiction || \"California\",\r\n        registrationDate: data.RegistrationDate || null,\r\n        lastUpdated: data.LastUpdated || null,\r\n\r\n        // Complete entity information\r\n        agentName: data.AgentName || null,\r\n        agentType: data.AgentType || null,\r\n        principalAddress: data.PrincipalAddress || null,\r\n        mailingAddress: data.MailingAddress || null,\r\n        purpose: data.Purpose || null,\r\n\r\n        // Officers\r\n        ceoName: data.CEOName || null,\r\n        cfoName: data.CFOName || null,\r\n        secretaryName: data.SecretaryName || null,\r\n\r\n        // Additional fields\r\n        sicCode: data.SICCode || null,\r\n        sicDescription: data.SICDescription || null,\r\n      },\r\n      source: \"California Secretary of State\",\r\n      qualityScore: this.qualityScore,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Mock response for testing when API key not available\r\n   */\r\n  getMockResponse(businessName) {\r\n    return {\r\n      found: false,\r\n      totalResults: 0,\r\n      entities: [],\r\n      error:\r\n        \"API key not configured - this would search California SOS database\",\r\n      source: \"California Secretary of State (Mock)\",\r\n      apiCost: this.costPerRequest,\r\n      qualityScore: 0,\r\n      confidenceBoost: 0,\r\n      searchTerm: businessName,\r\n      timestamp: new Date().toISOString(),\r\n      mockData: true,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get usage statistics\r\n   */\r\n  getUsageStats() {\r\n    return {\r\n      ...this.stats,\r\n      rateLimitStatus: {\r\n        currentPeriodRequests: this.requestCount,\r\n        hourlyLimit: this.rateLimitPerHour,\r\n        resetTime: new Date(\r\n          this.lastResetTime + this.rateLimitWindow\r\n        ).toISOString(),\r\n      },\r\n      cacheStats: {\r\n        entriesCount: this.cache.size,\r\n        hitRate:\r\n          this.stats.totalRequests > 0\r\n            ? this.stats.cachedResponses / this.stats.totalRequests\r\n            : 0,\r\n      },\r\n      apiInfo: {\r\n        qualityScore: this.qualityScore,\r\n        costPerRequest: this.costPerRequest,\r\n        isConfigured: !!this.apiKey,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clear cache\r\n   */\r\n  clearCache() {\r\n    this.cache.clear();\r\n    console.log(\"California SOS API cache cleared\");\r\n  }\r\n}\r\n\r\nmodule.exports = CaliforniaSOSClient;\r\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":5,"duration":0.07},
{"type":"measure","name":"lsp.did_open","count":16,"duration":3.775},
{"type":"mark","name":"lsp.did_open","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/docs/CA_SOS_API_ANALYSIS.md","languageId":"markdown","version":3,"text":"## 🔍 California SOS Business Search Analysis\n\n**Investigation Date:** September 30, 2025  \n**Objective:** Determine if public CA SOS business search can be leveraged without subscription API\n\n### 🌐 **Available CA SOS Resources**\n\n#### **1. Business Search Portal**\n\n- **URL**: https://businesssearch.sos.ca.gov/\n- **Access**: Public web interface\n- **Protection**: Behind Incapsula/Imperva WAF\n- **API**: No accessible public API endpoints\n\n#### **2. BizFile Online Portal**\n\n- **URL**: https://bizfileonline.sos.ca.gov/\n- **Access**: React-based application\n- **Protection**: Incapsula protection active\n- **Purpose**: Business entity filings and registrations\n\n#### **3. Subscription API (Current Implementation)**\n\n- **URL**: https://calico.sos.ca.gov/cbc/v1/api/\n- **Authentication**: `Ocp-Apim-Subscription-Key` header required\n- **Cost**: Subscription-based (contact CA SOS)\n- **Features**: Keyword search, entity details, server status\n\n### 🚫 **Limitations Found**\n\n1. **No Public API**: All attempts to access endpoints return 401 Unauthorized\n2. **WAF Protection**: Sites are protected against automated access\n3. **Frontend Only**: Web portals are React/JavaScript applications without exposed APIs\n4. **robots.txt**: Returns HTML app instead of robots file (protected)\n\n### 💡 **Alternative Approaches**\n\n#### **Option 1: Keep Current Implementation (Recommended)**\n\n```javascript\n// Current CA SOS client with subscription key\nif (!this.apiKey) {\n  console.warn(\"⚠️ California SOS API requires subscription key\");\n  return this.getMockResponse(businessName);\n}\n```\n\n**Pros:**\n\n- Official API with structured data\n- High data quality and reliability\n- Rate limiting and proper error handling\n- Legal compliance with terms of service\n\n**Cons:**\n\n- Requires paid subscription\n- Must contact CA SOS for access\n\n#### **Option 2: Web Scraping (Not Recommended)**\n\n```javascript\n// Theoretical scraping approach - DO NOT IMPLEMENT\nconst searchUrl = `https://businesssearch.sos.ca.gov/CBS/SearchResults?SearchType=CORP&SearchCriteria=${encodeURIComponent(\n  businessName\n)}&SearchSubType=Keyword`;\n```\n\n**Why Not Recommended:**\n\n- ❌ Violates terms of service\n- ❌ WAF protection prevents reliable access\n- ❌ No structured data format\n- ❌ Legal risks and potential IP blocking\n- ❌ Unreliable and maintenance-heavy\n\n#### **Option 3: Remove CA SOS Integration**\n\nSince you don't have a subscription key and the public search isn't accessible:\n\n```javascript\n// Simplified approach - remove CA SOS from required APIs\nconst optionalGovAPIs = [\n  \"CALIFORNIA_SOS_API_KEY\",\n  \"SOCRATA_API_KEY\",\n  \"USPTO_TSDR_API_KEY\",\n];\n```\n\n### 🎯 **Recommendation**\n\n**Current Status**: Keep CA SOS implementation as-is with proper fallback\n\n**Rationale:**\n\n1. **Legal Compliance**: Only use official APIs\n2. **Future Proof**: Easy to activate if you get subscription\n3. **Clean Fallback**: Graceful degradation when key not available\n4. **Professional**: Maintains code quality and reliability\n\n### 🔧 **Implementation Status**\n\nYour current implementation is actually **optimal**:\n\n```javascript\n// ✅ Already implemented correctly\nif (!this.apiKey) {\n  console.warn(\"⚠️ California SOS API requires subscription key\");\n  return this.getMockResponse(businessName);\n}\n```\n\n### 📝 **Next Steps**\n\n1. **Keep current code** - no changes needed\n2. **Don't add subscription key** to Cloud Build until you have one\n3. **Focus on essential APIs**: Google Places, Hunter.io, NeverBounce\n4. **Consider CA SOS subscription** only if CA business verification becomes critical\n\n### 🎉 **Conclusion**\n\nNo public alternatives found for CA SOS business search. Your current implementation with graceful fallback is the correct approach. The subscription API is the only legitimate way to access CA SOS business data programmatically.\n"}}},
{"type":"measure","name":"lsp.did_open","count":17,"duration":0.061},
{"type":"mark","name":"lsp.did_open","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/scripts/cloud-run-service-diagnostic.js","languageId":"javascript","version":3,"text":"#!/usr/bin/env node\n\n/**\n * Cloud Run Service Diagnostic\n * Checks the current deployment status and troubleshoots issues\n */\n\nconsole.log(\"🔍 ProspectPro Cloud Run Service Diagnostic\");\nconsole.log(\"=\" * 50);\n\nasync function checkService() {\n  const serviceUrls = [\n    \"https://prospectpro-184492422840.us-central1.run.app\",\n    \"https://prospectpro-uswbuyt7ha-uc.a.run.app\",\n  ];\n\n  console.log(\"\\n🌐 Testing Service Endpoints:\");\n\n  for (const url of serviceUrls) {\n    console.log(`\\n📍 Testing: ${url}`);\n\n    try {\n      // Test different endpoints\n      const endpoints = [\n        \"/health\",\n        \"/diag\",\n        \"/\",\n        \"/api/business/discover-businesses\",\n      ];\n\n      for (const endpoint of endpoints) {\n        try {\n          const response = await fetch(url + endpoint, {\n            method:\n              endpoint === \"/api/business/discover-businesses\" ? \"POST\" : \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body:\n              endpoint === \"/api/business/discover-businesses\"\n                ? JSON.stringify({ businessType: \"test\", location: \"test\" })\n                : undefined,\n            timeout: 10000,\n          });\n\n          console.log(\n            `   ${endpoint}: ${response.status} ${response.statusText}`\n          );\n\n          if (response.status === 200) {\n            const text = await response.text();\n            console.log(`   ✅ SUCCESS: ${text.substring(0, 100)}...`);\n            return; // Found working endpoint\n          }\n        } catch (error) {\n          console.log(`   ${endpoint}: ❌ ${error.message}`);\n        }\n      }\n    } catch (error) {\n      console.log(`   ❌ Service unreachable: ${error.message}`);\n    }\n  }\n\n  console.log(\"\\n🔧 Diagnostic Summary:\");\n  console.log(\n    \"   📊 Service Status: Container running but app not responding correctly\"\n  );\n  console.log(\"   🚨 Likely Issues:\");\n  console.log(\"      - Application startup failure\");\n  console.log(\"      - Port binding issues\");\n  console.log(\"      - Environment variable problems\");\n  console.log(\"      - Authentication/authorization blocking\");\n  console.log(\"\\n💡 Next Steps:\");\n  console.log(\"   1. Check Cloud Run logs for startup errors\");\n  console.log(\"   2. Verify environment variables are properly set\");\n  console.log(\"   3. Test local startup with production-like environment\");\n  console.log(\"   4. Check if service requires authentication\");\n}\n\n// Only run if fetch is available (Node 18+)\nif (typeof fetch !== \"undefined\") {\n  checkService().catch(console.error);\n} else {\n  console.log(\n    \"⚠️ Node.js version does not support fetch. Use Node 18+ for full diagnostic.\"\n  );\n  console.log(\"\\n🔧 Manual Tests:\");\n  console.log(\n    \"   curl https://prospectpro-184492422840.us-central1.run.app/health\"\n  );\n  console.log(\n    \"   curl https://prospectpro-184492422840.us-central1.run.app/diag\"\n  );\n  console.log(\"   curl https://prospectpro-184492422840.us-central1.run.app/\");\n}\n\nconsole.log(\"\\n📋 Latest Deployment Info from Logs:\");\nconsole.log(\"   🏷️  Revision: prospectpro-00089-g67\");\nconsole.log(\n  \"   📦 Image: us-central1-docker.pkg.dev/leadgen-471822/prospectpro/app:ebd102a\"\n);\nconsole.log(\"   ⏰ Deployed: 2025-09-30T05:14:13Z\");\nconsole.log(\"   🌐 URLs: https://prospectpro-184492422840.us-central1.run.app\");\nconsole.log('   📊 Status: All conditions \"True\" (should be working)');\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":6,"duration":0.072},
{"type":"measure","name":"lsp.did_open","count":18,"duration":1.868},
{"type":"mark","name":"lsp.did_open","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/scripts/verify-env-mapping.js","languageId":"javascript","version":3,"text":"#!/usr/bin/env node\n\n/**\n * Environment Variable Mapping Verification\n * Checks that Cloud Build substitution variables match environment loader expectations\n */\n\nconsole.log(\"🔍 Environment Variable Mapping Verification\");\nconsole.log(\"=\" * 50);\n\n// Expected mappings from Cloud Build trigger → Environment Variables → Environment Loader\nconst mappings = [\n  {\n    trigger: \"_SUPABASE_URL\",\n    envVar: \"SUPABASE_URL\",\n    loaderKey: \"supabase.url\",\n    required: true,\n  },\n  {\n    trigger: \"_SUPABASE_SECRET_KEY\",\n    envVar: \"SUPABASE_SECRET_KEY\",\n    loaderKey: \"supabase.secretKey\",\n    required: true,\n  },\n  {\n    trigger: \"_WEBHOOK_AUTH_TOKEN\",\n    envVar: \"WEBHOOK_AUTH_TOKEN\",\n    loaderKey: \"webhookAuthToken\",\n    required: true,\n  },\n  {\n    trigger: \"_GOOGLE_PLACES_API_KEY\",\n    envVar: \"GOOGLE_PLACES_API_KEY\",\n    loaderKey: \"apiKeys.googlePlaces\",\n    required: false,\n  },\n  {\n    trigger: \"_HUNTER_API_KEY\",\n    envVar: \"HUNTER_API_KEY\",\n    loaderKey: \"apiKeys.hunterIO\",\n    required: false,\n  },\n  {\n    trigger: \"_NEVERBOUNCE_API_KEY\",\n    envVar: \"NEVERBOUNCE_API_KEY\",\n    loaderKey: \"apiKeys.neverBounce\",\n    required: false,\n  },\n  {\n    trigger: \"_FOURSQUARE_SERVICE_API_KEY\",\n    envVar: \"FOURSQUARE_SERVICE_API_KEY\",\n    loaderKey: \"apiKeys.foursquare\",\n    required: false,\n  },\n];\n\nconsole.log(\"\\n📋 Variable Mapping Check:\");\nconsole.log(\n  \"Cloud Build Trigger → Environment Variable → Environment Loader\\n\"\n);\n\nmappings.forEach((mapping) => {\n  const status = mapping.required ? \"🔴 REQUIRED\" : \"🟡 OPTIONAL\";\n  console.log(`${status} ${mapping.trigger}`);\n  console.log(`   → ${mapping.envVar}`);\n  console.log(`   → ${mapping.loaderKey}`);\n  console.log(\"\");\n});\n\n// Check current Cloud Build YAML configuration\nconsole.log(\"🔧 Cloud Build Configuration Check:\");\nconst fs = require(\"fs\");\nconst yaml = fs.readFileSync(\"/workspaces/ProspectPro/cloudbuild.yaml\", \"utf8\");\n\nconst checks = [\n  {\n    pattern: /--set-env-vars=SUPABASE_URL=\\$\\{_SUPABASE_URL\\}/,\n    name: \"SUPABASE_URL\",\n  },\n  {\n    pattern: /--set-env-vars=SUPABASE_SECRET_KEY=\\$\\{_SUPABASE_SECRET_KEY\\}/,\n    name: \"SUPABASE_SECRET_KEY\",\n  },\n  {\n    pattern: /--set-env-vars=WEBHOOK_AUTH_TOKEN=\\$\\{_WEBHOOK_AUTH_TOKEN\\}/,\n    name: \"WEBHOOK_AUTH_TOKEN\",\n  },\n  {\n    pattern:\n      /--set-env-vars=GOOGLE_PLACES_API_KEY=\\$\\{_GOOGLE_PLACES_API_KEY\\}/,\n    name: \"GOOGLE_PLACES_API_KEY\",\n  },\n  {\n    pattern: /--set-env-vars=HUNTER_API_KEY=\\$\\{_HUNTER_API_KEY\\}/,\n    name: \"HUNTER_API_KEY\",\n  },\n  {\n    pattern: /--set-env-vars=NEVERBOUNCE_API_KEY=\\$\\{_NEVERBOUNCE_API_KEY\\}/,\n    name: \"NEVERBOUNCE_API_KEY\",\n  },\n];\n\nchecks.forEach((check) => {\n  const found = check.pattern.test(yaml);\n  console.log(\n    `   ${found ? \"✅\" : \"❌\"} ${check.name}: ${\n      found ? \"CONFIGURED\" : \"MISSING\"\n    }`\n  );\n});\n\n// Check substitution variables\nconsole.log(\"\\n🔄 Substitution Variables Check:\");\nconst subChecks = [\n  { pattern: /_SUPABASE_URL:\\s*''/, name: \"_SUPABASE_URL\" },\n  { pattern: /_SUPABASE_SECRET_KEY:\\s*''/, name: \"_SUPABASE_SECRET_KEY\" },\n  { pattern: /_WEBHOOK_AUTH_TOKEN:\\s*''/, name: \"_WEBHOOK_AUTH_TOKEN\" },\n  { pattern: /_GOOGLE_PLACES_API_KEY:\\s*''/, name: \"_GOOGLE_PLACES_API_KEY\" },\n  { pattern: /_HUNTER_API_KEY:\\s*''/, name: \"_HUNTER_API_KEY\" },\n  { pattern: /_NEVERBOUNCE_API_KEY:\\s*''/, name: \"_NEVERBOUNCE_API_KEY\" },\n];\n\nsubChecks.forEach((check) => {\n  const found = check.pattern.test(yaml);\n  console.log(\n    `   ${found ? \"✅\" : \"❌\"} ${check.name}: ${found ? \"DECLARED\" : \"MISSING\"}`\n  );\n});\n\nconsole.log(\"\\n✅ Configuration Status:\");\nconsole.log(\"   📋 Cloud Build YAML updated to use environment variables\");\nconsole.log(\"   🔧 Environment loader updated to match variable names\");\nconsole.log(\"   🚀 Ready for deployment test\");\n\nconsole.log(\"\\n📝 Next Steps:\");\nconsole.log(\"   1. Commit and push changes\");\nconsole.log(\"   2. Cloud Build will trigger automatically\");\nconsole.log(\"   3. Test deployed service endpoints\");\nconsole.log(\"   4. Verify environment variables in Cloud Run logs\");\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":7,"duration":0.102},
{"type":"measure","name":"lsp.did_open","count":19,"duration":3.005},
{"type":"mark","name":"lsp.did_open","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/docs/WEBHOOK_CONFIGURATION_GUIDE.md","languageId":"markdown","version":3,"text":"# Supabase Webhook Configuration Guide\n\n## Manual Configuration via Supabase Dashboard\n\n### Prerequisites\n\n- Access to your Supabase project dashboard\n- Database → Webhooks section\n- ProspectPro deployed at: `https://prospectpro-uswbuyt7ha-uc.a.run.app`\n\n### Webhook Authentication Token\n\n```\nwh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2\n```\n\n---\n\n## Webhook 1: Campaign Lifecycle Monitor\n\n### Conditions to fire webhook\n\n- **Table**: `business_discovery_campaigns`\n- **Events**:\n  - ☑️ Insert (Any insert operation on the table)\n  - ☑️ Update (Any update operation, of any column in the table)\n  - ☐ Delete\n\n### Webhook configuration\n\n- **Type of webhook**: HTTP Request\n- **Method**: POST\n- **URL**: `https://prospectpro-uswbuyt7ha-uc.a.run.app/api/webhooks/campaign-lifecycle`\n- **Timeout**: 5000 ms\n\n### HTTP Headers\n\n- **Content-type**: `application/json`\n- **Authorization**: `Bearer wh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2`\n\n### HTTP Parameters\n\n- (Leave empty - data will be sent in request body)\n\n---\n\n## Webhook 2: Cost Alert Monitor\n\n### Conditions to fire webhook\n\n- **Table**: `campaign_costs`\n- **Events**:\n  - ☑️ Insert (Any insert operation on the table)\n  - ☑️ Update (Any update operation, of any column in the table)\n  - ☐ Delete\n\n### Webhook configuration\n\n- **Type of webhook**: HTTP Request\n- **Method**: POST\n- **URL**: `https://prospectpro-uswbuyt7ha-uc.a.run.app/api/webhooks/cost-alert`\n- **Timeout**: 5000 ms\n\n### HTTP Headers\n\n- **Content-type**: `application/json`\n- **Authorization**: `Bearer wh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2`\n\n### HTTP Parameters\n\n- (Leave empty - data will be sent in request body)\n\n---\n\n## Webhook 3: Lead Enrichment Processor\n\n### Conditions to fire webhook\n\n- **Table**: `business_contacts`\n- **Events**:\n  - ☑️ Insert (Any insert operation on the table)\n  - ☑️ Update (Any update operation, of any column in the table)\n  - ☐ Delete\n\n### Webhook configuration\n\n- **Type of webhook**: HTTP Request\n- **Method**: POST\n- **URL**: `https://prospectpro-uswbuyt7ha-uc.a.run.app/api/webhooks/lead-enrichment`\n- **Timeout**: 5000 ms\n\n### HTTP Headers\n\n- **Content-type**: `application/json`\n- **Authorization**: `Bearer wh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2`\n\n### HTTP Parameters\n\n- (Leave empty - data will be sent in request body)\n\n---\n\n## Testing Webhooks\n\nAfter configuration, test each webhook:\n\n```bash\n# Test campaign lifecycle webhook\ncurl -X POST https://prospectpro-uswbuyt7ha-uc.a.run.app/api/webhooks/campaign-lifecycle \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer wh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2\" \\\n  -d '{\"test\": true}'\n\n# Test cost alert webhook\ncurl -X POST https://prospectpro-uswbuyt7ha-uc.a.run.app/api/webhooks/cost-alert \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer wh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2\" \\\n  -d '{\"test\": true}'\n\n# Test lead enrichment webhook\ncurl -X POST https://prospectpro-uswbuyt7ha-uc.a.run.app/api/webhooks/lead-enrichment \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer wh_f7616c7477f7e2072912c82360bf048ce88950be5d746490a0b3e74ba2bab3a2\" \\\n  -d '{\"test\": true}'\n```\n\n## Database Tables Required\n\nEnsure these tables exist in your Supabase database:\n\n- `business_discovery_campaigns` - Campaign tracking\n- `campaign_costs` - Cost monitoring\n- `business_contacts` - Lead storage and enrichment\n\nIf tables don't exist, run the database setup scripts in `/database/` folder.\n"}}},
{"type":"measure","name":"lsp.did_open","count":20,"duration":0.07},
{"type":"mark","name":"lsp.did_open","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/server.js","languageId":"javascript","version":4,"text":"/**\n * ProspectPro Server - Production Optimized\n * Fast startup with comprehensive error handling and monitoring\n * @version 3.1.0 - Production Branch Optimized\n */\n\n// CRITICAL: Load environment variables FIRST before any other imports\nrequire(\"dotenv\").config();\n\n// Advanced Environment Loading\nconsole.log(`🔧 Initializing ProspectPro Environment Loader...`);\nconst EnvironmentLoader = require(\"./config/environment-loader\");\nconst envLoader = new EnvironmentLoader();\nconst config = envLoader.getConfig();\n\nconsole.log(`🚀 ProspectPro v3.1.0 starting in ${config.environment} mode`);\nconsole.log(\n  `🔧 Container binding to all interfaces (0.0.0.0) on port ${\n    process.env.PORT || 3100\n  }`\n);\n\n// Core dependencies with error handling\nconst express = require(\"express\");\nconst path = require(\"path\");\n\n// Import streamlined Supabase client\nconst {\n  testConnection,\n  getSupabaseClient,\n  getDatabaseInfo,\n} = require(\"./config/supabase\");\n\n// Initialize Express app\nconst app = express();\n\n// Production middleware stack\napp.use(express.json({ limit: \"10mb\" }));\napp.use(express.urlencoded({ extended: true }));\n\n// Security headers for production\nif (config.isProduction) {\n  app.use((req, res, next) => {\n    res.header(\"X-Powered-By\", \"ProspectPro\");\n    res.header(\"X-Content-Type-Options\", \"nosniff\");\n    res.header(\"X-Frame-Options\", \"DENY\");\n    next();\n  });\n}\n\n// CORS configuration\nif (config.isDevelopment) {\n  app.use((req, res, next) => {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\n      \"Access-Control-Allow-Methods\",\n      \"GET, POST, PUT, DELETE, OPTIONS\"\n    );\n    res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Accept, Authorization\"\n    );\n    if (req.method === \"OPTIONS\") {\n      res.sendStatus(200);\n    } else {\n      next();\n    }\n  });\n}\n\n// Serve static files\napp.use(express.static(path.join(__dirname, \"public\")));\n\n// Health endpoints for production monitoring\napp.get(\"/health\", (req, res) => {\n  const healthData = {\n    status: \"ok\",\n    timestamp: new Date().toISOString(),\n    environment: config.environment,\n    port: process.env.PORT || 3100,\n    degradedStart: process.env.ALLOW_DEGRADED_START === \"true\",\n    uptime: process.uptime(),\n    version: \"3.1.0\",\n  };\n\n  console.log(\"🏥 Health check requested:\", JSON.stringify(healthData));\n  res.json(healthData);\n});\n\napp.get(\"/ready\", async (req, res) => {\n  try {\n    const dbTest = await testConnection();\n    if (dbTest.success || dbTest.warning) {\n      res.json({\n        status: \"ready\",\n        database: \"connected\",\n        timestamp: new Date().toISOString(),\n      });\n    } else {\n      res.status(503).json({\n        status: \"not_ready\",\n        database: \"disconnected\",\n        error: dbTest.error,\n        timestamp: new Date().toISOString(),\n      });\n    }\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      error: error.message,\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\napp.get(\"/diag\", async (req, res) => {\n  try {\n    const dbInfo = getDatabaseInfo();\n    const dbTest = await testConnection();\n\n    res.json({\n      database: dbInfo,\n      connection: dbTest,\n      environment: {\n        node_env: config.environment,\n        port: config.port,\n        supabase_configured: !!process.env.SUPABASE_URL,\n      },\n      timestamp: new Date().toISOString(),\n    });\n  } catch (error) {\n    res.status(500).json({\n      error: error.message,\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\n// Business API Route with enhanced error handling\nlet businessDiscoveryRouter;\ntry {\n  businessDiscoveryRouter = require(\"./api/business-discovery\");\n} catch (e) {\n  console.error(\"Failed to load business-discovery API:\", e.message);\n  const router = require(\"express\").Router();\n  router.use((req, res) =>\n    res.status(503).json({ error: \"Business discovery service unavailable\" })\n  );\n  businessDiscoveryRouter = router;\n}\n\n// Campaign Export Route - Using simple export temporarily\nlet campaignExportRouter;\ntry {\n  const { router, storeCampaignResults } = require(\"./api/simple-export\");\n  campaignExportRouter = router;\n  // Make storeCampaignResults available globally for business discovery\n  global.storeCampaignResults = storeCampaignResults;\n} catch (e) {\n  console.error(\"Failed to load simple-export:\", e.message);\n  const router = require(\"express\").Router();\n  router.use((req, res) =>\n    res.status(503).json({ error: \"Export service unavailable\" })\n  );\n  campaignExportRouter = router;\n}\n\n// Webhook routes with graceful degradation\nlet campaignLifecycleWebhook;\ntry {\n  campaignLifecycleWebhook = require(\"./api/webhooks/campaign-lifecycle\");\n} catch (e) {\n  console.error(\"Failed to load campaign-lifecycle webhook:\", e.message);\n  const router = require(\"express\").Router();\n  router.use((req, res) =>\n    res.status(503).json({ error: \"Webhook service unavailable\" })\n  );\n  campaignLifecycleWebhook = router;\n}\n\nlet costAlertWebhook;\ntry {\n  costAlertWebhook = require(\"./api/webhooks/cost-alert\");\n} catch (e) {\n  console.error(\"Failed to load cost-alert webhook:\", e.message);\n  const router = require(\"express\").Router();\n  router.use((req, res) =>\n    res.status(503).json({ error: \"Webhook service unavailable\" })\n  );\n  costAlertWebhook = router;\n}\n\nlet leadEnrichmentWebhook;\ntry {\n  leadEnrichmentWebhook = require(\"./api/webhooks/lead-enrichment\");\n} catch (e) {\n  console.error(\"Failed to load lead-enrichment webhook:\", e.message);\n  const router = require(\"express\").Router();\n  router.use((req, res) =>\n    res.status(503).json({ error: \"Webhook service unavailable\" })\n  );\n  leadEnrichmentWebhook = router;\n}\n\n// Mount API routes\napp.use(\"/api/business-discovery\", businessDiscoveryRouter);\napp.use(\"/api/business\", businessDiscoveryRouter); // Frontend compatibility\napp.use(\"/api/campaigns\", campaignExportRouter);\n\n// Mount webhook routes\napp.use(\"/api/webhooks/campaign-lifecycle\", campaignLifecycleWebhook);\napp.use(\"/api/webhooks/cost-alert\", costAlertWebhook);\napp.use(\"/api/webhooks/lead-enrichment\", leadEnrichmentWebhook);\n\n// Default route - serve frontend with error handling\napp.get(\"/\", (req, res) => {\n  try {\n    const indexPath = path.join(__dirname, \"public\", \"index.html\");\n    console.log(`📄 Serving index.html from: ${indexPath}`);\n    res.sendFile(indexPath, (err) => {\n      if (err) {\n        console.error(\"❌ Failed to serve index.html:\", err.message);\n        res.status(404).json({\n          error: \"Frontend not found\",\n          message: \"The application frontend is not available\",\n          timestamp: new Date().toISOString(),\n        });\n      }\n    });\n  } catch (error) {\n    console.error(\"❌ Root route error:\", error.message);\n    res.status(500).json({\n      error: \"Application error\",\n      message: \"Failed to serve the application\",\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\n// Catch-all for SPA routing\napp.get(\"*\", (req, res) => {\n  // Only serve SPA for HTML requests (not API calls)\n  if (req.accepts(\"html\")) {\n    res.sendFile(path.join(__dirname, \"public\", \"index.html\"));\n  } else {\n    res.status(404).json({ error: \"Endpoint not found\" });\n  }\n});\n\n// Global error handler\napp.use((error, req, res, next) => {\n  console.error(\"Global error handler:\", error.message);\n\n  res.status(error.status || 500).json({\n    error: \"Internal server error\",\n    message: config.isDevelopment ? error.message : \"Something went wrong\",\n    ...(config.isDevelopment && { stack: error.stack }),\n    timestamp: new Date().toISOString(),\n  });\n});\n\n// Graceful shutdown handlers\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"🔄 SIGTERM received, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"🔄 SIGINT received, shutting down gracefully\");\n  process.exit(0);\n});\n\n// Unhandled error safety nets\nprocess.on(\"unhandledRejection\", (reason, promise) => {\n  console.error(\"🚨 Unhandled Promise Rejection:\", reason);\n});\n\nprocess.on(\"uncaughtException\", (err) => {\n  console.error(\"🔥 Uncaught Exception:\", err.message);\n  console.error(err.stack);\n  process.exit(1);\n});\n\n// Start server with enhanced database validation and schema cache handling\nasync function startServer() {\n  try {\n    console.log(\"🔍 Testing database connection...\");\n    const dbTest = await testConnection();\n\n    if (dbTest.success && !dbTest.warning) {\n      console.log(\"✅ Database connection verified\");\n    } else if (dbTest.success && dbTest.warning) {\n      console.log(\"⚠️  Database connected with warning:\", dbTest.warning);\n      if (dbTest.warning.includes(\"schema cache\")) {\n        console.log(\n          \"🔧 Schema cache issue detected - this is common after database updates\"\n        );\n\n        // STRICT PRODUCTION MODE: Handle degraded starts appropriately\n        if (config.isProduction) {\n          console.error(\n            \"❌ Production startup blocked: schema cache issues detected\"\n          );\n          console.error(\"💡 Solutions:\");\n          console.error(\"   1. Wait 5-10 minutes for automatic cache refresh\");\n          console.error(\"   2. Restart your Supabase project in the dashboard\");\n          console.error(\"   3. Run: node scripts/refresh-schema-cache.js\");\n          console.error(\n            \"   4. Set ALLOW_DEGRADED_START=true for emergency bypass\"\n          );\n\n          if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n            console.error(\n              \"🚨 CLOUD RUN: Schema cache issue - forcing degraded start for stability\"\n            );\n            console.warn(\n              \"⚠️ CLOUD RUN: Starting in degraded mode due to schema cache\"\n            );\n            // Force degraded start in Cloud Run environment\n            process.env.ALLOW_DEGRADED_START = \"true\";\n          } else {\n            console.warn(\"🚨 EMERGENCY: Starting production in degraded mode\");\n          }\n        }\n      }\n    } else {\n      console.error(\"❌ Database connection failed:\", dbTest.error);\n\n      // STRICT PRODUCTION MODE: Handle database connection failures\n      if (config.isProduction) {\n        console.error(\n          \"❌ Production startup blocked: database connection failed\"\n        );\n        console.error(\n          \"💡 Ensure Supabase URL and SECRET_KEY are correctly configured\"\n        );\n\n        if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n          console.error(\n            \"🚨 CLOUD RUN: Database connection failed - forcing degraded start\"\n          );\n          console.warn(\"⚠️ CLOUD RUN: Starting without database connection\");\n          // Force degraded start in Cloud Run environment\n          process.env.ALLOW_DEGRADED_START = \"true\";\n        } else {\n          console.warn(\"🚨 EMERGENCY: Starting production without database\");\n        }\n      } else {\n        console.log(\"🔄 Development mode: starting in degraded mode...\");\n      }\n    }\n\n    // Load API Keys from Vault in production\n    if (config.isProduction) {\n      console.log(\"🔑 Pre-loading API keys from Supabase Vault...\");\n      try {\n        const apiKeys = await envLoader.getApiKeys();\n        const keyCount = Object.values(apiKeys).filter(\n          (key) => key && key !== \"your_api_key_here\" && !key.includes(\"your_\")\n        ).length;\n\n        console.log(\n          `� API Keys loaded: ${keyCount}/${\n            Object.keys(apiKeys).length\n          } available`\n        );\n\n        // Critical API validation for production\n        const criticalApis = [\"googlePlaces\"]; // Foursquare is optional enhancement\n        const missingCritical = criticalApis.filter((api) => !apiKeys[api]);\n\n        if (missingCritical.length > 0) {\n          console.error(\n            `❌ Critical API keys missing: ${missingCritical.join(\", \")}`\n          );\n          console.error(\"💡 Business discovery requires Google Places API key\");\n\n          if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n            console.error(\n              \"🚨 Forcing graceful degraded start for Cloud Run stability\"\n            );\n            console.warn(\"⚠️ CLOUD RUN: Starting without critical API keys\");\n          } else {\n            console.warn(\"🚨 EMERGENCY: Starting without critical API keys\");\n          }\n        }\n      } catch (error) {\n        console.error(\n          \"❌ Failed to load API keys from Supabase Vault:\",\n          error.message\n        );\n\n        if (process.env.ALLOW_DEGRADED_START !== \"true\") {\n          console.error(\n            \"🚨 Forcing graceful degraded start for Cloud Run stability\"\n          );\n          console.warn(\"⚠️ CLOUD RUN: Starting without Vault API keys\");\n        } else {\n          console.warn(\"🚨 EMERGENCY: Starting without Vault API keys\");\n        }\n      }\n    }\n\n    // Start HTTP server with optimized configuration for Cloud Run\n    const server = app.listen(\n      process.env.PORT || 3100,\n      \"0.0.0.0\", // Explicitly bind to all interfaces for Cloud Run\n      () => {\n        const port = process.env.PORT || 3100;\n\n        // Determine the actual accessible URL based on environment\n        let publicUrl;\n        if (process.env.RAILWAY_STATIC_URL) {\n          publicUrl = process.env.RAILWAY_STATIC_URL;\n        } else if (process.env.CLOUD_RUN_SERVICE_URL) {\n          publicUrl = process.env.CLOUD_RUN_SERVICE_URL;\n        } else if (config.isProduction) {\n          publicUrl = `https://prospectpro-production.com`; // Will be actual Cloud Run URL\n        } else {\n          publicUrl = `http://localhost:${port}`;\n        }\n\n        console.log(`🌐 ProspectPro v3.1.0 accessible at: ${publicUrl}`);\n        console.log(`📊 Environment: ${config.environment}`);\n        console.log(`🔗 Health check: ${publicUrl}/health`);\n        console.log(`🔍 Diagnostics: ${publicUrl}/diag`);\n        console.log(`🐳 Container internal port: ${port} (platform managed)`);\n\n        // Production status summary\n        if (config.isProduction) {\n          console.log(\"\\n\" + \"=\".repeat(50));\n          console.log(\"🏭 PRODUCTION MODE ACTIVE\");\n          console.log(\"✅ Strict startup validation enabled\");\n          console.log(\"✅ Supabase Vault API key loading\");\n          console.log(\n            `✅ Degraded startup: ${\n              process.env.ALLOW_DEGRADED_START === \"true\"\n                ? \"ENABLED\"\n                : \"DISABLED\"\n            }`\n          );\n          console.log(\"=\".repeat(50) + \"\\n\");\n        }\n      }\n    ); // Set server timeout for production\n    server.timeout = 120000; // 2 minutes\n\n    return server;\n  } catch (error) {\n    console.error(\"💥 Server startup failed:\", error.message);\n    if (config.isDevelopment) {\n      console.error(error.stack);\n    }\n    process.exit(1);\n  }\n}\n\n// Start the server\nstartServer();\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":8,"duration":0.087},
{"type":"measure","name":"lsp.did_open","count":21,"duration":6.844},
{"type":"mark","name":"lsp.did_open","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/app.js","languageId":"javascript","version":5,"text":"// ProspectPro v2.0 Real API Client - Enhanced with Phase 1 API Integration\r\nclass ProspectProRealAPI {\r\n  constructor() {\r\n    this.baseUrl = window.location.origin;\r\n    this.selectedTool = \"business-discovery\";\r\n    this.searchResults = [];\r\n    this.lastSearchCampaignId = null;\r\n    this.lastSearchCampaignName = null;\r\n    // SECURITY: Access token will be provided by authenticated session\r\n    this.accessToken = window.PERSONAL_ACCESS_TOKEN || \"UNAUTHORIZED\";\r\n\r\n    this.costPerLead = 0.084; // Base estimated cost per lead with enrichment\r\n    this.campaignRunning = false; // Track campaign status\r\n    this.sessionStats = null; // Track current session statistics\r\n\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"🚀 ProspectPro Real API Client initialized\");\r\n\r\n    // Check API status\r\n    await this.checkApiStatus();\r\n\r\n    // Initialize business categories (only when on business page)\r\n    if (document.getElementById(\"categorySelect\")) {\r\n      this.initBusinessCategories();\r\n    }\r\n\r\n    // Bind events\r\n    this.bindEvents();\r\n\r\n    // Update initial cost estimate\r\n    this.updateCostEstimate();\r\n\r\n    // Set initial lead quantity\r\n    this.selectedQuantity = 5;\r\n  }\r\n\r\n  selectTemplate(templateType) {\r\n    if (templateType === \"local-business\") {\r\n      this.showPage(\"localBusinessPage\");\r\n      this.initBusinessCategories();\r\n    }\r\n  }\r\n\r\n  showPage(pageId) {\r\n    // Hide all pages\r\n    document.querySelectorAll(\".page-content\").forEach((page) => {\r\n      page.classList.add(\"hidden\");\r\n    });\r\n\r\n    // Show selected page\r\n    const targetPage = document.getElementById(pageId);\r\n    if (targetPage) {\r\n      targetPage.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  showSettings() {\r\n    this.showPage(\"settingsPage\");\r\n    this.loadAdminData();\r\n  }\r\n\r\n  async loadAdminData() {\r\n    try {\r\n      // Load enhanced campaign statistics from the business discovery API\r\n      const statsResponse = await fetch(`${this.baseUrl}/api/business/stats`, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      });\r\n\r\n      if (statsResponse.ok) {\r\n        const statsData = await statsResponse.json();\r\n        this.updateEnhancedStatsDisplay(statsData);\r\n      } else {\r\n        console.warn(\"Stats API not available, using placeholder data\");\r\n        this.updateStatsDisplay({\r\n          totalSearches: \"N/A\",\r\n          totalLeads: \"N/A\",\r\n          totalCost: \"N/A\",\r\n          avgConfidence: \"N/A\",\r\n        });\r\n      }\r\n\r\n      // Show current session stats if available\r\n      if (this.sessionStats) {\r\n        this.updateSessionStatsDisplay();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to load admin data:\", error);\r\n      // Show placeholder data\r\n      this.updateStatsDisplay({\r\n        totalSearches: \"N/A\",\r\n        totalLeads: \"N/A\",\r\n        totalCost: \"N/A\",\r\n        avgConfidence: \"N/A\",\r\n      });\r\n    }\r\n  }\r\n\r\n  updateEnhancedStatsDisplay(statsData) {\r\n    if (statsData.success) {\r\n      const aggregateStats = statsData.aggregateStats || {};\r\n      const currentSession = statsData.currentSessionStats || {};\r\n\r\n      // Update aggregate statistics\r\n      document.getElementById(\"totalSearches\").textContent =\r\n        aggregateStats.totalCampaigns || \"0\";\r\n      document.getElementById(\"totalLeads\").textContent =\r\n        aggregateStats.totalOwnerFound || \"0\";\r\n      document.getElementById(\"totalCost\").textContent = `$${(\r\n        aggregateStats.totalCost || 0\r\n      ).toFixed(2)}`;\r\n      document.getElementById(\"avgConfidence\").textContent = `${Math.round(\r\n        aggregateStats.averageSuccessRate || 0\r\n      )}%`;\r\n\r\n      // Update additional metrics if elements exist\r\n      const totalBusinessesEl = document.getElementById(\"totalBusinesses\");\r\n      if (totalBusinessesEl) {\r\n        totalBusinessesEl.textContent =\r\n          aggregateStats.totalBusinessesProcessed || \"0\";\r\n      }\r\n\r\n      const avgCostPerLeadEl = document.getElementById(\"avgCostPerLead\");\r\n      if (avgCostPerLeadEl) {\r\n        avgCostPerLeadEl.textContent = `$${(\r\n          aggregateStats.averageCostPerLead || 0\r\n        ).toFixed(4)}`;\r\n      }\r\n\r\n      const emailVerificationRateEl = document.getElementById(\r\n        \"emailVerificationRate\"\r\n      );\r\n      if (emailVerificationRateEl) {\r\n        const rate =\r\n          aggregateStats.totalEmailsVerified && aggregateStats.totalEmailsFound\r\n            ? (aggregateStats.totalEmailsVerified /\r\n                aggregateStats.totalEmailsFound) *\r\n              100\r\n            : 0;\r\n        emailVerificationRateEl.textContent = `${Math.round(rate)}%`;\r\n      }\r\n\r\n      // Update API usage breakdown\r\n      this.updateApiUsageDisplay(aggregateStats.apiUsage || {});\r\n\r\n      // Display recent campaigns\r\n      if (statsData.recentCampaigns) {\r\n        this.updateRecentCampaignsDisplay(statsData.recentCampaigns);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateApiUsageDisplay(apiUsage) {\r\n    const freeCallsEl = document.getElementById(\"freeApiCalls\");\r\n    const lowCostCallsEl = document.getElementById(\"lowCostApiCalls\");\r\n    const expensiveCallsEl = document.getElementById(\"expensiveApiCalls\");\r\n\r\n    if (freeCallsEl) freeCallsEl.textContent = apiUsage.free || \"0\";\r\n    if (lowCostCallsEl) lowCostCallsEl.textContent = apiUsage.lowCost || \"0\";\r\n    if (expensiveCallsEl)\r\n      expensiveCallsEl.textContent = apiUsage.expensive || \"0\";\r\n  }\r\n\r\n  updateRecentCampaignsDisplay(campaigns) {\r\n    const recentCampaignsEl = document.getElementById(\"recentCampaigns\");\r\n    if (!recentCampaignsEl || !campaigns.length) return;\r\n\r\n    const campaignsList = campaigns\r\n      .slice(0, 5)\r\n      .map((campaign) => {\r\n        const date = new Date(campaign.timestamp).toLocaleDateString();\r\n        const time = new Date(campaign.timestamp).toLocaleTimeString();\r\n        const successRate = campaign.performance?.successRate || 0;\r\n        const cost = campaign.costs?.totalActualCost || 0;\r\n\r\n        return `\r\n                <div class=\"campaign-item\">\r\n                    <div class=\"campaign-header\">\r\n                        <span class=\"campaign-type\">${\r\n                          campaign.parameters.businessType\r\n                        }</span>\r\n                        <span class=\"campaign-location\">${\r\n                          campaign.parameters.location\r\n                        }</span>\r\n                        <span class=\"campaign-date\">${date} ${time}</span>\r\n                    </div>\r\n                    <div class=\"campaign-metrics\">\r\n                        <span class=\"metric\">📊 ${\r\n                          campaign.results.totalBusinessesFound\r\n                        } found</span>\r\n                        <span class=\"metric\">👤 ${\r\n                          campaign.results.businessesWithOwners\r\n                        } with owners</span>\r\n                        <span class=\"metric\">✅ ${successRate}% success</span>\r\n                        <span class=\"metric\">💰 $${cost.toFixed(4)}</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n      })\r\n      .join(\"\");\r\n\r\n    recentCampaignsEl.innerHTML = campaignsList;\r\n  }\r\n\r\n  updateSessionStatsDisplay() {\r\n    // Update current session performance if elements exist\r\n    const sessionStatsEl = document.getElementById(\"currentSessionStats\");\r\n    if (!sessionStatsEl || !this.sessionStats) return;\r\n\r\n    const { stats, costs, performance } = this.sessionStats;\r\n\r\n    sessionStatsEl.innerHTML = `\r\n            <h4>Current Session</h4>\r\n            <div class=\"session-metrics\">\r\n                <div class=\"metric-item\">\r\n                    <span class=\"metric-value\">${stats.withOwners || 0}</span>\r\n                    <span class=\"metric-label\">Owners Found</span>\r\n                </div>\r\n                <div class=\"metric-item\">\r\n                    <span class=\"metric-value\">${\r\n                      stats.withVerifiedEmails || 0\r\n                    }</span>\r\n                    <span class=\"metric-label\">Verified Emails</span>\r\n                </div>\r\n                <div class=\"metric-item\">\r\n                    <span class=\"metric-value\">$${(\r\n                      costs.totalEstimated || 0\r\n                    ).toFixed(4)}</span>\r\n                    <span class=\"metric-label\">Session Cost</span>\r\n                </div>\r\n                <div class=\"metric-item\">\r\n                    <span class=\"metric-value\">${\r\n                      performance.qualityDistribution?.A || 0\r\n                    }</span>\r\n                    <span class=\"metric-label\">Grade A Leads</span>\r\n                </div>\r\n            </div>\r\n        `;\r\n  }\r\n\r\n  updateStatsDisplay(stats) {\r\n    document.getElementById(\"totalSearches\").textContent =\r\n      stats.totalSearches || \"0\";\r\n    document.getElementById(\"totalLeads\").textContent = stats.totalLeads || \"0\";\r\n    document.getElementById(\"totalCost\").textContent =\r\n      stats.totalCost || \"$0.00\";\r\n    document.getElementById(\"avgConfidence\").textContent = stats.avgConfidence\r\n      ? `${stats.avgConfidence}%`\r\n      : \"0%\";\r\n  }\r\n\r\n  updatePerformanceDisplay(performance) {\r\n    // Update API status indicators\r\n    const apis = [\"googlePlaces\", \"ownerDiscovery\", \"emailValidation\"];\r\n\r\n    apis.forEach((api) => {\r\n      const statusEl = document.getElementById(`${api}Status`);\r\n      const usageEl = document.getElementById(`${api}Usage`);\r\n\r\n      if (statusEl && usageEl) {\r\n        const apiData = performance[api] || {};\r\n        statusEl.textContent = apiData.status || \"Unknown\";\r\n        statusEl.className = `api-status ${\r\n          apiData.status === \"Active\" ? \"status-active\" : \"status-inactive\"\r\n        }`;\r\n        usageEl.textContent = apiData.usage || \"0 calls\";\r\n      }\r\n    });\r\n  }\r\n\r\n  saveAdminSettings() {\r\n    const settings = {\r\n      confidenceThreshold: document.getElementById(\"confidenceThreshold\").value,\r\n      maxLeadsPerSearch: document.getElementById(\"maxLeadsPerSearch\").value,\r\n      ownerDiscoveryEnabled: document.getElementById(\"ownerDiscoveryEnabled\")\r\n        .checked,\r\n    };\r\n\r\n    // Save settings (in production, this would make an API call)\r\n    localStorage.setItem(\"adminSettings\", JSON.stringify(settings));\r\n\r\n    alert(\"Settings saved successfully!\");\r\n    console.log(\"Admin settings saved:\", settings);\r\n  }\r\n\r\n  goHome() {\r\n    this.showPage(\"homePage\");\r\n  }\r\n\r\n  updateCostEstimate() {\r\n    const leadCount = this.selectedQuantity || 5;\r\n    const estimatedCost = (leadCount * this.costPerLead).toFixed(2);\r\n    const costElement = document.getElementById(\"costEstimate\");\r\n    if (costElement) {\r\n      costElement.textContent = `$${estimatedCost}`;\r\n    }\r\n  }\r\n\r\n  async checkApiStatus() {\r\n    try {\r\n      // First check basic health\r\n      const healthResponse = await fetch(`${this.baseUrl}/health`);\r\n      const healthStatus = await healthResponse.json();\r\n\r\n      // Then check detailed API status\r\n      const statusResponse = await fetch(`${this.baseUrl}/api/status`, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      });\r\n      const detailedStatus = await statusResponse.json();\r\n\r\n      const statusElement = document.getElementById(\"apiStatus\");\r\n      const statusDot = statusElement.querySelector(\".status-dot\");\r\n      const statusText = statusElement.querySelector(\".status-text\");\r\n\r\n      console.log(\"Health Status:\", healthStatus);\r\n      console.log(\"API Status:\", detailedStatus);\r\n\r\n      // Check if all required APIs are configured\r\n      const requiredAPIs = detailedStatus.api_keys;\r\n      const criticalAPIs = [\"google_places\"]; // At minimum, Google Places is required\r\n      const allCriticalReady = criticalAPIs.every(\r\n        (api) => requiredAPIs[api] === true\r\n      );\r\n\r\n      if (detailedStatus.configuration_complete && allCriticalReady) {\r\n        statusDot.className = \"status-dot status-dot--success\";\r\n        statusText.textContent = \"All APIs Ready\";\r\n      } else if (allCriticalReady) {\r\n        statusDot.className = \"status-dot status-dot--warning\";\r\n        statusText.textContent = \"Core APIs Ready\";\r\n      } else {\r\n        statusDot.className = \"status-dot status-dot--warning\";\r\n        statusText.textContent = \"APIs Not Fully Configured\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"API status check failed:\", error);\r\n      const statusElement = document.getElementById(\"apiStatus\");\r\n      const statusDot = statusElement.querySelector(\".status-dot\");\r\n      const statusText = statusElement.querySelector(\".status-text\");\r\n\r\n      statusDot.className = \"status-dot status-dot--error\";\r\n      statusText.textContent = \"API Connection Failed\";\r\n    }\r\n  }\r\n\r\n  initBusinessCategories() {\r\n    const categorySelect = document.getElementById(\"categorySelect\");\r\n    const typeSelect = document.getElementById(\"typeSelect\");\r\n\r\n    // Populate categories\r\n    const categories = window.BusinessCategories.getCategories();\r\n    categories.forEach((category) => {\r\n      const option = document.createElement(\"option\");\r\n      option.value = category;\r\n      option.textContent = category;\r\n      categorySelect.appendChild(option);\r\n    });\r\n\r\n    // Handle category change\r\n    categorySelect.addEventListener(\"change\", (e) => {\r\n      const selectedCategory = e.target.value;\r\n      typeSelect.innerHTML = \"\";\r\n\r\n      if (selectedCategory) {\r\n        const types =\r\n          window.BusinessCategories.getTypesForCategory(selectedCategory);\r\n        typeSelect.disabled = false;\r\n\r\n        types.forEach((type) => {\r\n          const option = document.createElement(\"option\");\r\n          option.value = type;\r\n          option.textContent = type;\r\n          typeSelect.appendChild(option);\r\n        });\r\n      } else {\r\n        const option = document.createElement(\"option\");\r\n        option.value = \"\";\r\n        option.textContent = \"Select category first...\";\r\n        typeSelect.appendChild(option);\r\n        typeSelect.disabled = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  bindEvents() {\r\n    // Logo click to go home\r\n    const logoLink = document.getElementById(\"logoLink\");\r\n    if (logoLink) {\r\n      logoLink.addEventListener(\"click\", () => this.goHome());\r\n    }\r\n\r\n    // Settings button\r\n    const settingsBtn = document.getElementById(\"settingsBtn\");\r\n    if (settingsBtn) {\r\n      settingsBtn.addEventListener(\"click\", () => this.showSettings());\r\n    }\r\n\r\n    // Back from settings\r\n    const backFromSettings = document.getElementById(\"backFromSettings\");\r\n    if (backFromSettings) {\r\n      backFromSettings.addEventListener(\"click\", () => this.goHome());\r\n    }\r\n\r\n    // Save settings\r\n    const saveSettings = document.getElementById(\"saveSettings\");\r\n    if (saveSettings) {\r\n      saveSettings.addEventListener(\"click\", () => this.saveAdminSettings());\r\n    }\r\n\r\n    // Template tile clicks\r\n    const localBusinessCard = document.getElementById(\"localBusinessCard\");\r\n    if (localBusinessCard) {\r\n      localBusinessCard.addEventListener(\"click\", () =>\r\n        this.selectTemplate(\"local-business\")\r\n      );\r\n    }\r\n\r\n    // Form submission (only bind if form exists)\r\n    const searchForm = document.getElementById(\"searchForm\");\r\n    if (searchForm) {\r\n      searchForm.addEventListener(\"submit\", (e) => {\r\n        e.preventDefault();\r\n        this.handleSearch();\r\n      });\r\n    }\r\n\r\n    // Quantity button selection\r\n    const quantityButtons = document.querySelectorAll(\".quantity-btn\");\r\n    quantityButtons.forEach((btn) => {\r\n      btn.addEventListener(\"click\", () => {\r\n        // Remove selected class from all buttons\r\n        quantityButtons.forEach((b) => b.classList.remove(\"selected\"));\r\n        // Add selected class to clicked button\r\n        btn.classList.add(\"selected\");\r\n        // Update selected quantity\r\n        this.selectedQuantity = parseInt(btn.dataset.value);\r\n        // Update cost estimate\r\n        this.updateCostEstimate();\r\n      });\r\n    });\r\n  }\r\n\r\n  updateCostEstimate() {\r\n    const leadCount = this.selectedQuantity || 5;\r\n    const estimatedCost = (leadCount * this.costPerLead).toFixed(2);\r\n    const costElement = document.getElementById(\"costEstimate\");\r\n    if (costElement) {\r\n      costElement.textContent = `$${estimatedCost}`;\r\n    }\r\n  }\r\n\r\n  async handleSearch() {\r\n    // Prevent simultaneous campaigns\r\n    if (this.campaignRunning) {\r\n      alert(\r\n        \"A campaign is already running. Please wait for it to complete before starting a new one.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const categorySelect = document.getElementById(\"categorySelect\");\r\n    const typeSelect = document.getElementById(\"typeSelect\");\r\n    const locationInput = document.getElementById(\"locationInput\");\r\n    const radiusSelect = document.getElementById(\"radiusSelect\");\r\n    const sizeSelect = document.getElementById(\"sizeSelect\");\r\n\r\n    // Get form values\r\n    const category = categorySelect.value;\r\n    const selectedTypes = Array.from(typeSelect.selectedOptions).map(\r\n      (option) => option.value\r\n    );\r\n    const selectedSizes = Array.from(sizeSelect.selectedOptions).map(\r\n      (option) => option.value\r\n    );\r\n    const businessTypes = selectedTypes.map((displayType) =>\r\n      window.BusinessCategories.getRawTypeForDisplay(displayType)\r\n    );\r\n    const location = locationInput.value.trim();\r\n    const radius = parseInt(radiusSelect.value);\r\n    const leadCount = this.selectedQuantity || 5;\r\n\r\n    // Validate form\r\n    if (!category || selectedTypes.length === 0 || !location) {\r\n      alert(\r\n        \"Please fill in all required fields and select at least one business type\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n      `🔍 Starting business discovery: \"${businessTypes.join(\r\n        \", \"\r\n      )}\" in \"${location}\" (${radius} miles, ${leadCount} leads)`\r\n    );\r\n\r\n    // Start campaign\r\n    this.campaignRunning = true;\r\n    this.showCampaignProgress(true);\r\n\r\n    try {\r\n      // Call the API with multiple business types\r\n      const response = await fetch(`${this.baseUrl}/api/business/discover`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          query: businessTypes.join(\", \"), // Join multiple types\r\n          businessTypes: businessTypes, // Send as array too\r\n          businessSizes: selectedSizes, // Send selected sizes\r\n          location: location,\r\n          radius: radius,\r\n          count: leadCount,\r\n          category: category,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Handle insufficient results (206 Partial Content)\r\n        if (response.status === 206) {\r\n          const partialResult = await response.json();\r\n          console.log(\"⚠️ Insufficient results:\", partialResult);\r\n          this.showInsufficientResults(partialResult);\r\n          return;\r\n        }\r\n        throw new Error(\r\n          `API request failed: ${response.status} ${response.statusText}`\r\n        );\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"✅ API Response:\", result);\r\n\r\n      // Store results and campaign ID for export functionality\r\n      this.searchResults = result.leads || result.businesses || [];\r\n      this.lastSearchCampaignId =\r\n        result.campaign?.id || result.campaignId || null;\r\n      this.lastSearchCampaignName =\r\n        result.campaign?.name || result.campaignName || null;\r\n\r\n      console.log(\"📊 Campaign tracking:\", {\r\n        campaignId: this.lastSearchCampaignId,\r\n        campaignName: this.lastSearchCampaignName,\r\n        resultsCount: this.searchResults.length,\r\n      });\r\n\r\n      this.showResults(result);\r\n    } catch (error) {\r\n      console.error(\"❌ Business discovery failed:\", error);\r\n      this.showError(`Business discovery failed: ${error.message}`);\r\n    } finally {\r\n      // End campaign\r\n      this.campaignRunning = false;\r\n      this.showCampaignProgress(false);\r\n    }\r\n  }\r\n\r\n  showCampaignProgress(isRunning) {\r\n    let progressIndicator = document.getElementById(\"campaignProgress\");\r\n\r\n    if (isRunning) {\r\n      if (!progressIndicator) {\r\n        // Create progress indicator\r\n        const searchInterface = document.querySelector(\".search-interface\");\r\n        progressIndicator = document.createElement(\"div\");\r\n        progressIndicator.id = \"campaignProgress\";\r\n        progressIndicator.className = \"campaign-progress\";\r\n        progressIndicator.innerHTML = `\r\n                    <div class=\"progress-content\">\r\n                        <div class=\"progress-icon\">🔄</div>\r\n                        <div class=\"progress-text\">\r\n                            <h3>Campaign Running...</h3>\r\n                            <p>Discovering businesses and extracting owner information</p>\r\n                            <div class=\"progress-steps\">\r\n                                <span class=\"step active\" id=\"step1\">🔍 Searching</span>\r\n                                <span class=\"step\" id=\"step2\">✅ Validating</span>\r\n                                <span class=\"step\" id=\"step3\">👤 Finding Owners</span>\r\n                                <span class=\"step\" id=\"step4\">📊 Compiling Results</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n        searchInterface.appendChild(progressIndicator);\r\n      }\r\n\r\n      // Animate progress steps\r\n      this.animateProgressSteps();\r\n    } else {\r\n      if (progressIndicator) {\r\n        progressIndicator.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  animateProgressSteps() {\r\n    const steps = [\"step1\", \"step2\", \"step3\", \"step4\"];\r\n    let currentStep = 0;\r\n\r\n    const interval = setInterval(() => {\r\n      if (!this.campaignRunning) {\r\n        clearInterval(interval);\r\n        return;\r\n      }\r\n\r\n      // Remove active class from all steps\r\n      steps.forEach((step) => {\r\n        const element = document.getElementById(step);\r\n        if (element) element.classList.remove(\"active\");\r\n      });\r\n\r\n      // Add active class to current step\r\n      const currentElement = document.getElementById(steps[currentStep]);\r\n      if (currentElement) currentElement.classList.add(\"active\");\r\n\r\n      currentStep = (currentStep + 1) % steps.length;\r\n    }, 2000);\r\n  }\r\n\r\n  setLoadingState(isLoading) {\r\n    const searchButton = document.getElementById(\"searchButton\");\r\n    const btnText = searchButton.querySelector(\".btn-text\");\r\n    const btnSpinner = searchButton.querySelector(\".btn-spinner\");\r\n\r\n    if (isLoading) {\r\n      searchButton.disabled = true;\r\n      btnText.style.display = \"none\";\r\n      btnSpinner.classList.remove(\"hidden\");\r\n    } else {\r\n      searchButton.disabled = false;\r\n      btnText.style.display = \"inline\";\r\n      btnSpinner.classList.add(\"hidden\");\r\n    }\r\n  }\r\n\r\n  showResults(result) {\r\n    const resultsSection = document.getElementById(\"resultsSection\");\r\n    const businesses = result.leads || result.businesses || [];\r\n    const stats = result.results || result.stats || {};\r\n    const costs = result.costs || {};\r\n    const performance = result.performance || {};\r\n\r\n    // Store session stats for admin dashboard\r\n    this.sessionStats = {\r\n      stats: stats,\r\n      costs: costs,\r\n      performance: performance,\r\n    };\r\n\r\n    // Create enhanced results HTML with Phase 1 metrics\r\n    resultsSection.innerHTML = `\r\n            <div class=\"results-header\">\r\n                <h2>Business Discovery Results</h2>\r\n                <p>Found ${\r\n                  businesses.length\r\n                } verified business leads with owner data</p>\r\n                ${\r\n                  costs.totalEstimated > 0\r\n                    ? `\r\n                    <div class=\"cost-summary\">\r\n                        <span class=\"cost-badge\">💰 Total Cost: $${costs.totalEstimated.toFixed(\r\n                          4\r\n                        )}</span>\r\n                        <span class=\"efficiency-badge\">⚡ ${\r\n                          costs.averagePerLead\r\n                            ? \"$\" + costs.averagePerLead.toFixed(4)\r\n                            : \"$0.00\"\r\n                        } per lead</span>\r\n                    </div>\r\n                `\r\n                    : \"\"\r\n                }\r\n            </div>\r\n\r\n            <div class=\"results-stats\">\r\n                <div class=\"stat-item\">\r\n                    <div class=\"stat-value\">${stats.totalFound || 0}</div>\r\n                    <div class=\"stat-label\">Results</div>\r\n                </div>\r\n                <div class=\"stat-item\">\r\n                    <div class=\"stat-value\">${stats.qualified || 0}</div>\r\n                    <div class=\"stat-label\">With Owners</div>\r\n                </div>\r\n                <div class=\"stat-item\">\r\n                    <div class=\"stat-value\">${\r\n                      businesses.filter((b) => b.email).length\r\n                    }</div>\r\n                    <div class=\"stat-label\">With Emails</div>\r\n                </div>\r\n                <div class=\"stat-item\">\r\n                    <div class=\"stat-value\">${\r\n                      businesses.filter((b) => b.email && b.email.includes(\"@\"))\r\n                        .length\r\n                    }</div>\r\n                    <div class=\"stat-label\">Verified Emails</div>\r\n                </div>\r\n                <div class=\"stat-item\">\r\n                    <div class=\"stat-value\">${\r\n                      performance.qualityDistribution?.A || 0\r\n                    }</div>\r\n                    <div class=\"stat-label\">Grade A</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"results-grid\">\r\n                ${businesses\r\n                  .map((business) => this.createEnhancedBusinessCard(business))\r\n                  .join(\"\")}\r\n            </div>\r\n\r\n            ${\r\n              businesses.length > 0\r\n                ? `\r\n                <div class=\"export-section\">\r\n                    <h3>Export Your Verified Leads</h3>\r\n                    <p>Download your verified business leads with owner contact information</p>\r\n                    <div class=\"results-actions\">\r\n                        <button class=\"btn btn-outline\" id=\"newSearchResultsBtn\">\r\n                            ← New Search\r\n                        </button>\r\n                        <button class=\"btn btn-primary\" id=\"exportResultsBtn\">\r\n                            📄 Export to CSV\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            `\r\n                : \"\"\r\n            }\r\n        `;\r\n\r\n    resultsSection.classList.remove(\"hidden\");\r\n\r\n    // Bind the result action buttons\r\n    this.bindResultButtons();\r\n  }\r\n\r\n  bindResultButtons() {\r\n    const newSearchBtn = document.getElementById(\"newSearchResultsBtn\");\r\n    const exportBtn = document.getElementById(\"exportResultsBtn\");\r\n\r\n    if (newSearchBtn) {\r\n      newSearchBtn.addEventListener(\"click\", () => this.goHome());\r\n    }\r\n\r\n    if (exportBtn) {\r\n      exportBtn.addEventListener(\"click\", () => this.exportResults());\r\n    }\r\n  }\r\n\r\n  createEnhancedBusinessCard(business) {\r\n    const hasOwnerInfo = business.ownerName || business.ownerEmail;\r\n    const qualityGrade = business.qualityGrade || \"F\";\r\n    const confidence = business.confidence || 0;\r\n\r\n    return `\r\n            <div class=\"business-list-item ${qualityGrade.toLowerCase()}-grade\">\r\n                <div class=\"business-main-info\">\r\n                    <div class=\"business-header-inline\">\r\n                        <span class=\"business-name\">${business.name}</span>\r\n                        <div class=\"quality-badges\">\r\n                            <span class=\"grade-badge grade-${qualityGrade.toLowerCase()}\">${qualityGrade}</span>\r\n                            ${\r\n                              confidence > 0\r\n                                ? `<span class=\"confidence-badge\">${confidence}%</span>`\r\n                                : \"\"\r\n                            }\r\n                            ${\r\n                              business.emailVerification?.isValid\r\n                                ? `<span class=\"verified-badge\">✅</span>`\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"business-details\">\r\n                        <div class=\"address-line\">📍 ${\r\n                          business.address || \"No address available\"\r\n                        }</div>\r\n                        \r\n                        <div class=\"contact-details\">\r\n                            ${\r\n                              business.phone\r\n                                ? `<span class=\"contact-item\">📞 <a href=\"tel:${business.phone}\">${business.phone}</a></span>`\r\n                                : \"\"\r\n                            }\r\n                            ${\r\n                              business.website\r\n                                ? `<span class=\"contact-item\">🌐 <a href=\"${business.website}\" target=\"_blank\">Website</a></span>`\r\n                                : \"\"\r\n                            }\r\n                            ${\r\n                              business.rating\r\n                                ? `<span class=\"contact-item\">⭐ ${business.rating}/5</span>`\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                        \r\n                        ${\r\n                          hasOwnerInfo\r\n                            ? `\r\n                            <div class=\"owner-details\">\r\n                                <span class=\"owner-label\">👤 Owner:</span>\r\n                                ${\r\n                                  business.ownerName\r\n                                    ? `<span class=\"owner-name\">${\r\n                                        business.ownerName\r\n                                      }${\r\n                                        business.ownerTitle\r\n                                          ? ` (${business.ownerTitle})`\r\n                                          : \"\"\r\n                                      }</span>`\r\n                                    : \"\"\r\n                                }\r\n                                ${\r\n                                  business.ownerEmail\r\n                                    ? `\r\n                                    <span class=\"owner-email\">\r\n                                        📧 <a href=\"mailto:${\r\n                                          business.ownerEmail\r\n                                        }\">${business.ownerEmail}</a>\r\n                                        ${\r\n                                          business.emailVerification\r\n                                            ? `\r\n                                            <span class=\"verification-inline ${\r\n                                              business.emailVerification.isValid\r\n                                                ? \"valid\"\r\n                                                : \"invalid\"\r\n                                            }\">\r\n                                                ${\r\n                                                  business.emailVerification\r\n                                                    .isValid\r\n                                                    ? \"✅\"\r\n                                                    : \"❌\"\r\n                                                } ${\r\n                                                business.emailVerification\r\n                                                  .confidence\r\n                                              }%\r\n                                            </span>\r\n                                        `\r\n                                            : \"\"\r\n                                        }\r\n                                    </span>\r\n                                `\r\n                                    : \"\"\r\n                                }\r\n                                ${\r\n                                  business.ownerPhone\r\n                                    ? `<span class=\"owner-phone\">📞 <a href=\"tel:${business.ownerPhone}\">${business.ownerPhone}</a></span>`\r\n                                    : \"\"\r\n                                }\r\n                                ${\r\n                                  business.ownerLinkedIn\r\n                                    ? `<span class=\"owner-linkedin\">💼 <a href=\"${business.ownerLinkedIn}\" target=\"_blank\">LinkedIn</a></span>`\r\n                                    : \"\"\r\n                                }\r\n                            </div>\r\n                        `\r\n                            : `\r\n                            <div class=\"no-owner-info\">\r\n                                <span class=\"no-data-badge\">👤 No owner data available</span>\r\n                            </div>\r\n                        `\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                ${\r\n                  business.sources && business.sources.length > 0\r\n                    ? `\r\n                    <div class=\"business-meta\">\r\n                        <small class=\"sources-info\">📊 ${this.formatSources(\r\n                          business.sources\r\n                        ).join(\", \")}</small>\r\n                    </div>\r\n                `\r\n                    : \"\"\r\n                }\r\n            </div>\r\n        `;\r\n  }\r\n\r\n  // Helper method to format source names for display\r\n  formatSources(sources) {\r\n    const sourceMap = {\r\n      website_scraping: \"Website\",\r\n      whois: \"WHOIS\",\r\n      state_registries: \"State Registry\",\r\n      opencorporates: \"OpenCorporates\",\r\n      hunter_io: \"Hunter.io\",\r\n      neverbounce: \"NeverBounce\",\r\n      business_directories: \"Directories\",\r\n      google_places: \"Google Places\",\r\n      yellow_pages: \"Yellow Pages\",\r\n    };\r\n\r\n    return sources.map((source) => sourceMap[source] || source);\r\n  }\r\n\r\n  createBusinessCard(business) {\r\n    // Keep the legacy method for backward compatibility\r\n    return this.createEnhancedBusinessCard(business);\r\n  }\r\n\r\n  showInsufficientResults(result) {\r\n    const resultsSection = document.getElementById(\"resultsSection\");\r\n    const businesses = result.businesses || [];\r\n    const stats = result.stats || {};\r\n\r\n    resultsSection.innerHTML = `\r\n            <div class=\"insufficient-results\">\r\n                <div class=\"insufficient-header\">\r\n                    <h2>⚠️ Insufficient Results Found</h2>\r\n                    <p><strong>${\r\n                      stats.preValidated || 0\r\n                    }</strong> unique businesses found, but <strong>${\r\n      stats.requested || 0\r\n    }</strong> were requested</p>\r\n                </div>\r\n\r\n                <div class=\"suggestions-card\">\r\n                    <h3>💡 Suggestions to Get More Results</h3>\r\n                    <ul class=\"suggestions-list\">\r\n                        ${result.suggestions\r\n                          .map((suggestion) => `<li>${suggestion}</li>`)\r\n                          .join(\"\")}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div class=\"partial-results\">\r\n                    <h3>Available Results (${businesses.length})</h3>\r\n                    <div class=\"results-grid\">\r\n                        ${businesses\r\n                          .map((business) => this.createBusinessCard(business))\r\n                          .join(\"\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"insufficient-actions\">\r\n                    <button class=\"btn btn-outline\" id=\"adjustSearchBtn\">\r\n                        🔧 Adjust Search Parameters\r\n                    </button>\r\n                    ${\r\n                      businesses.length > 0\r\n                        ? `\r\n                        <button class=\"btn btn-secondary\" id=\"proceedAnywayBtn\">\r\n                            ✅ Proceed with ${businesses.length} Results\r\n                        </button>\r\n                    `\r\n                        : \"\"\r\n                    }\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n    resultsSection.classList.remove(\"hidden\");\r\n\r\n    // Bind action buttons\r\n    const adjustBtn = document.getElementById(\"adjustSearchBtn\");\r\n    const proceedBtn = document.getElementById(\"proceedAnywayBtn\");\r\n\r\n    if (adjustBtn) {\r\n      adjustBtn.addEventListener(\"click\", () => {\r\n        // Scroll back to search form and highlight suggestions\r\n        document\r\n          .querySelector(\".search-interface\")\r\n          .scrollIntoView({ behavior: \"smooth\" });\r\n        this.highlightSearchSuggestions();\r\n      });\r\n    }\r\n\r\n    if (proceedBtn) {\r\n      proceedBtn.addEventListener(\"click\", () => {\r\n        // Store partial results and show them as normal results\r\n        this.searchResults = businesses;\r\n        this.showResults({\r\n          businesses: businesses,\r\n          stats: stats,\r\n          partial: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  highlightSearchSuggestions() {\r\n    // Temporarily highlight form elements that could help get more results\r\n    const radiusSelect = document.getElementById(\"radiusSelect\");\r\n    const typeSelect = document.getElementById(\"typeSelect\");\r\n\r\n    [radiusSelect, typeSelect].forEach((element) => {\r\n      if (element) {\r\n        element.style.borderColor = \"#f59e0b\";\r\n        element.style.boxShadow = \"0 0 0 3px rgba(245, 158, 11, 0.2)\";\r\n\r\n        setTimeout(() => {\r\n          element.style.borderColor = \"\";\r\n          element.style.boxShadow = \"\";\r\n        }, 3000);\r\n      }\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    const resultsSection = document.getElementById(\"resultsSection\");\r\n    resultsSection.innerHTML = `\r\n            <div class=\"error-message\">\r\n                <h3>Discovery Failed</h3>\r\n                <p>${message}</p>\r\n                <p>This system only returns real data from actual APIs. If discovery fails, no fake data will be generated.</p>\r\n                <button class=\"btn btn-secondary\" onclick=\"document.getElementById('resultsSection').classList.add('hidden')\">\r\n                    Try Again\r\n                </button>\r\n            </div>\r\n        `;\r\n    resultsSection.classList.remove(\"hidden\");\r\n  }\r\n\r\n  exportResults() {\r\n    console.log(\"Export function called\");\r\n    console.log(\"Search results:\", this.searchResults);\r\n\r\n    if (this.searchResults.length === 0) {\r\n      alert(\"No data to export\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Enhanced CSV headers with all Phase 1 data fields\r\n      const headers = [\r\n        \"Business Name\",\r\n        \"Address\",\r\n        \"Business Phone\",\r\n        \"Website\",\r\n        \"Business Rating\",\r\n        \"Owner Name\",\r\n        \"Owner Title\",\r\n        \"Owner Email\",\r\n        \"Owner Phone\",\r\n        \"Owner LinkedIn\",\r\n        \"Email Verification Status\",\r\n        \"Email Verification Confidence\",\r\n        \"Overall Confidence Score\",\r\n        \"Quality Grade\",\r\n        \"Data Sources\",\r\n        \"Incorporation State\",\r\n        \"API Cost\",\r\n        \"Pre-validation Score\",\r\n      ];\r\n\r\n      const csvContent = [\r\n        headers.join(\",\"),\r\n        ...this.searchResults.map((business) => {\r\n          return [\r\n            `\"${business.name || \"\"}\"`,\r\n            `\"${business.address || \"\"}\"`,\r\n            `\"${business.phone || \"\"}\"`,\r\n            `\"${business.website || \"\"}\"`,\r\n            `\"${business.rating || \"\"}\"`,\r\n            `\"${business.ownerName || \"\"}\"`,\r\n            `\"${business.ownerTitle || \"\"}\"`,\r\n            `\"${business.ownerEmail || \"\"}\"`,\r\n            `\"${business.ownerPhone || \"\"}\"`,\r\n            `\"${business.ownerLinkedIn || \"\"}\"`,\r\n            `\"${\r\n              business.emailVerification?.isValid\r\n                ? \"Valid\"\r\n                : business.emailVerification\r\n                ? \"Invalid\"\r\n                : \"Not Checked\"\r\n            }\"`,\r\n            `\"${business.emailVerification?.confidence || 0}%\"`,\r\n            `\"${business.confidence || 0}%\"`,\r\n            `\"${business.qualityGrade || \"F\"}\"`,\r\n            `\"${\r\n              business.sources\r\n                ? this.formatSources(business.sources).join(\"; \")\r\n                : \"\"\r\n            }\"`,\r\n            `\"${business.incorporationState || \"\"}\"`,\r\n            `\"$${\r\n              business.actualCost ? business.actualCost.toFixed(4) : \"0.0000\"\r\n            }\"`,\r\n            `\"${business.preValidationScore || 0}%\"`,\r\n          ].join(\",\");\r\n        }),\r\n      ].join(\"\\n\");\r\n\r\n      console.log(\r\n        \"Enhanced CSV content generated:\",\r\n        csvContent.substring(0, 200) + \"...\"\r\n      );\r\n\r\n      // Download CSV with enhanced filename\r\n      const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n      const link = document.createElement(\"a\");\r\n      const timestamp = new Date()\r\n        .toISOString()\r\n        .slice(0, 19)\r\n        .replace(/[:-]/g, \"\");\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = `ProspectPro_Enhanced_Leads_${timestamp}.csv`;\r\n      link.click();\r\n\r\n      console.log(\"CSV export completed successfully\");\r\n    } catch (error) {\r\n      console.error(\"CSV export failed:\", error);\r\n      alert(\"Failed to export CSV. Please try again.\");\r\n    }\r\n  }\r\n\r\n  // Settings Management\r\n  initializeSettingsHandlers() {\r\n    // Load saved configuration\r\n    this.loadConfiguration();\r\n\r\n    // Grafana Dashboard Link Handler\r\n    const grafanaLink = document.getElementById(\"grafanaLink\");\r\n    const grafanaUrl = document.getElementById(\"grafanaUrl\");\r\n\r\n    // Update Grafana link when URL changes\r\n    grafanaUrl.addEventListener(\"change\", () => {\r\n      const url = grafanaUrl.value.trim();\r\n      if (url) {\r\n        grafanaLink.href = url;\r\n        grafanaLink.style.display = \"inline-block\";\r\n      } else {\r\n        grafanaLink.href = \"#\";\r\n        grafanaLink.style.display = \"none\";\r\n      }\r\n    });\r\n\r\n    // Configuration Save Handler\r\n    document.getElementById(\"saveAllSettings\").addEventListener(\"click\", () => {\r\n      this.saveConfiguration();\r\n    });\r\n\r\n    // Reset to Defaults Handler\r\n    document.getElementById(\"resetToDefaults\").addEventListener(\"click\", () => {\r\n      this.resetConfiguration();\r\n    });\r\n\r\n    // Export Handlers\r\n    document\r\n      .getElementById(\"exportCampaignData\")\r\n      .addEventListener(\"click\", async () => {\r\n        // Check if we have a current campaign from search results\r\n        if (this.lastSearchCampaignId) {\r\n          try {\r\n            console.log(\r\n              `📤 Exporting specific campaign: ${this.lastSearchCampaignName} (${this.lastSearchCampaignId})`\r\n            );\r\n            await this.exportCampaignLeads(this.lastSearchCampaignId, {\r\n              minConfidence: 70,\r\n              includeProvenance: true,\r\n            });\r\n          } catch (error) {\r\n            console.error(\r\n              \"Campaign export failed, falling back to dashboard export:\",\r\n              error\r\n            );\r\n            this.exportDashboardData(\"campaign\");\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"📊 No specific campaign available, exporting all campaign data\"\r\n          );\r\n          // Fall back to general dashboard export\r\n          this.exportDashboardData(\"campaign\");\r\n        }\r\n      });\r\n\r\n    document\r\n      .getElementById(\"exportCostAnalysis\")\r\n      .addEventListener(\"click\", () => {\r\n        this.exportDashboardData(\"cost\");\r\n      });\r\n\r\n    document.getElementById(\"exportROIReport\").addEventListener(\"click\", () => {\r\n      this.exportDashboardData(\"roi\");\r\n    });\r\n\r\n    // Test Dashboard Connection\r\n    document\r\n      .getElementById(\"testDashboardConnection\")\r\n      .addEventListener(\"click\", () => {\r\n        this.testDashboardConnection();\r\n      });\r\n  }\r\n\r\n  loadConfiguration() {\r\n    const config = JSON.parse(\r\n      localStorage.getItem(\"prospectpro_config\") || \"{}\"\r\n    );\r\n\r\n    // Load cost and usage limits\r\n    document.getElementById(\"dailyCostLimit\").value =\r\n      config.dailyCostLimit || \"50.00\";\r\n    document.getElementById(\"costPerLeadLimit\").value =\r\n      config.costPerLeadLimit || \"2.00\";\r\n    document.getElementById(\"qualificationRateAlert\").value =\r\n      config.qualificationRateAlert || \"70\";\r\n    document.getElementById(\"maxLeadsPerCampaign\").value =\r\n      config.maxLeadsPerCampaign || \"50\";\r\n\r\n    // Load campaign settings\r\n    document.getElementById(\"confidenceThreshold\").value =\r\n      config.confidenceThreshold || \"80\";\r\n    document.getElementById(\"emailVerificationEnabled\").checked =\r\n      config.emailVerificationEnabled !== false;\r\n    document.getElementById(\"websiteValidationEnabled\").checked =\r\n      config.websiteValidationEnabled !== false;\r\n    document.getElementById(\"socialProfilesEnabled\").checked =\r\n      config.socialProfilesEnabled || false;\r\n\r\n    // Load monitoring configuration\r\n    document.getElementById(\"grafanaUrl\").value = config.grafanaUrl || \"\";\r\n    document.getElementById(\"metricsCollectionInterval\").value =\r\n      config.metricsCollectionInterval || \"60\";\r\n    document.getElementById(\"healthCheckInterval\").value =\r\n      config.healthCheckInterval || \"300\";\r\n    document.getElementById(\"enableRealTimeUpdates\").checked =\r\n      config.enableRealTimeUpdates !== false;\r\n\r\n    // Update Grafana link\r\n    const grafanaUrl = config.grafanaUrl || \"\";\r\n    const grafanaLink = document.getElementById(\"grafanaLink\");\r\n    if (grafanaUrl) {\r\n      grafanaLink.href = grafanaUrl;\r\n      grafanaLink.style.display = \"inline-block\";\r\n    } else {\r\n      grafanaLink.href = \"#\";\r\n      grafanaLink.onclick = (e) => {\r\n        e.preventDefault();\r\n        alert(\r\n          \"Please configure your Grafana URL in the monitoring settings below.\"\r\n        );\r\n      };\r\n    }\r\n  }\r\n\r\n  saveConfiguration() {\r\n    const config = {\r\n      // Cost and usage limits\r\n      dailyCostLimit: document.getElementById(\"dailyCostLimit\").value,\r\n      costPerLeadLimit: document.getElementById(\"costPerLeadLimit\").value,\r\n      qualificationRateAlert: document.getElementById(\"qualificationRateAlert\")\r\n        .value,\r\n      maxLeadsPerCampaign: document.getElementById(\"maxLeadsPerCampaign\").value,\r\n\r\n      // Campaign settings\r\n      confidenceThreshold: document.getElementById(\"confidenceThreshold\").value,\r\n      emailVerificationEnabled: document.getElementById(\r\n        \"emailVerificationEnabled\"\r\n      ).checked,\r\n      websiteValidationEnabled: document.getElementById(\r\n        \"websiteValidationEnabled\"\r\n      ).checked,\r\n      socialProfilesEnabled: document.getElementById(\"socialProfilesEnabled\")\r\n        .checked,\r\n\r\n      // Monitoring configuration\r\n      grafanaUrl: document.getElementById(\"grafanaUrl\").value,\r\n      metricsCollectionInterval: document.getElementById(\r\n        \"metricsCollectionInterval\"\r\n      ).value,\r\n      healthCheckInterval: document.getElementById(\"healthCheckInterval\").value,\r\n      enableRealTimeUpdates: document.getElementById(\"enableRealTimeUpdates\")\r\n        .checked,\r\n\r\n      // Save timestamp\r\n      lastUpdated: new Date().toISOString(),\r\n    };\r\n\r\n    localStorage.setItem(\"prospectpro_config\", JSON.stringify(config));\r\n\r\n    // Show success message\r\n    const saveButton = document.getElementById(\"saveAllSettings\");\r\n    const originalText = saveButton.textContent;\r\n    saveButton.textContent = \"✅ Configuration Saved!\";\r\n    saveButton.style.backgroundColor = \"#10b981\";\r\n\r\n    setTimeout(() => {\r\n      saveButton.textContent = originalText;\r\n      saveButton.style.backgroundColor = \"\";\r\n    }, 2000);\r\n\r\n    console.log(\"Configuration saved:\", config);\r\n  }\r\n\r\n  resetConfiguration() {\r\n    if (\r\n      confirm(\r\n        \"This will reset all configuration to default values. Are you sure?\"\r\n      )\r\n    ) {\r\n      localStorage.removeItem(\"prospectpro_config\");\r\n      this.loadConfiguration();\r\n\r\n      const resetButton = document.getElementById(\"resetToDefaults\");\r\n      const originalText = resetButton.textContent;\r\n      resetButton.textContent = \"🔄 Reset Complete!\";\r\n\r\n      setTimeout(() => {\r\n        resetButton.textContent = originalText;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  async exportDashboardData(type) {\r\n    try {\r\n      const endpoint = {\r\n        campaign: \"/api/dashboard/export/campaign-performance\",\r\n        cost: \"/api/dashboard/export/cost-analysis\",\r\n        roi: \"/api/dashboard/export/roi-reports\",\r\n      }[type];\r\n\r\n      if (!endpoint) {\r\n        throw new Error(\"Invalid export type\");\r\n      }\r\n\r\n      const response = await fetch(`${this.baseUrl}${endpoint}?format=csv`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Export failed: ${response.statusText}`);\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n\r\n      const timestamp = new Date()\r\n        .toISOString()\r\n        .slice(0, 19)\r\n        .replace(/[:-]/g, \"\");\r\n      link.href = url;\r\n      link.download = `ProspectPro_${type}_export_${timestamp}.csv`;\r\n      link.click();\r\n\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log(`${type} export completed successfully`);\r\n    } catch (error) {\r\n      console.error(`${type} export failed:`, error);\r\n      alert(`Failed to export ${type} data. Please try again.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Export specific campaign leads to CSV\r\n   */\r\n  async exportCampaignLeads(campaignId, options = {}) {\r\n    try {\r\n      const {\r\n        minConfidence = 70,\r\n        includeUnqualified = false,\r\n        includeProvenance = true,\r\n      } = options;\r\n\r\n      console.log(`📤 Exporting campaign ${campaignId}...`);\r\n\r\n      const params = new URLSearchParams({\r\n        format: \"csv\",\r\n        minConfidence: minConfidence.toString(),\r\n        includeUnqualified: includeUnqualified.toString(),\r\n        includeProvenance: includeProvenance.toString(),\r\n      });\r\n\r\n      const response = await fetch(\r\n        `${this.baseUrl}/api/campaigns/${campaignId}/export?${params}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.error || `Export failed: ${response.statusText}`\r\n        );\r\n      }\r\n\r\n      // Get export metadata from headers\r\n      const exportCount = response.headers.get(\"X-Export-Count\");\r\n      const totalCount = response.headers.get(\"X-Total-Count\");\r\n      const campaignName = response.headers.get(\"X-Campaign-Name\");\r\n\r\n      // Download the CSV file\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n\r\n      const timestamp = new Date().toISOString().slice(0, 10);\r\n      const filename = `${campaignName}_${campaignId.slice(\r\n        0,\r\n        8\r\n      )}_${timestamp}.csv`;\r\n\r\n      link.href = url;\r\n      link.download = filename;\r\n      link.click();\r\n\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log(\r\n        `✅ Campaign export completed: ${exportCount}/${totalCount} leads exported`\r\n      );\r\n\r\n      // Show success notification\r\n      this.showNotification(\r\n        `✅ Exported ${exportCount}/${totalCount} leads from \"${campaignName}\"`,\r\n        \"success\"\r\n      );\r\n\r\n      return {\r\n        success: true,\r\n        exportCount: parseInt(exportCount),\r\n        totalCount: parseInt(totalCount),\r\n        campaignName,\r\n        filename,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"❌ Campaign export failed:\", error);\r\n      this.showNotification(`❌ Export failed: ${error.message}`, \"error\");\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show notification to user\r\n   */\r\n  showNotification(message, type = \"info\") {\r\n    // Create notification element if it doesn't exist\r\n    let notification = document.getElementById(\"notification\");\r\n    if (!notification) {\r\n      notification = document.createElement(\"div\");\r\n      notification.id = \"notification\";\r\n      notification.style.cssText = `\r\n                position: fixed;\r\n                top: 20px;\r\n                right: 20px;\r\n                padding: 12px 20px;\r\n                border-radius: 6px;\r\n                color: white;\r\n                font-weight: 500;\r\n                z-index: 10000;\r\n                max-width: 400px;\r\n                box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n            `;\r\n      document.body.appendChild(notification);\r\n    }\r\n\r\n    // Set notification style based on type\r\n    const colors = {\r\n      success: \"#10B981\",\r\n      error: \"#EF4444\",\r\n      warning: \"#F59E0B\",\r\n      info: \"#3B82F6\",\r\n    };\r\n\r\n    notification.style.backgroundColor = colors[type] || colors.info;\r\n    notification.textContent = message;\r\n    notification.style.display = \"block\";\r\n\r\n    // Auto-hide after 5 seconds\r\n    setTimeout(() => {\r\n      notification.style.display = \"none\";\r\n    }, 5000);\r\n  }\r\n\r\n  async testDashboardConnection() {\r\n    const button = document.getElementById(\"testDashboardConnection\");\r\n    const originalText = button.textContent;\r\n\r\n    button.textContent = \"🔍 Testing...\";\r\n    button.disabled = true;\r\n\r\n    try {\r\n      const grafanaUrl = document.getElementById(\"grafanaUrl\").value;\r\n\r\n      if (!grafanaUrl) {\r\n        throw new Error(\"Please configure Grafana URL first\");\r\n      }\r\n\r\n      // Test basic connectivity\r\n      const response = await fetch(\r\n        `${this.baseUrl}/api/dashboard/health-check`\r\n      );\r\n      const healthData = await response.json();\r\n\r\n      if (response.ok) {\r\n        button.textContent = \"✅ Connection OK!\";\r\n        button.style.backgroundColor = \"#10b981\";\r\n        console.log(\"Dashboard connection test successful:\", healthData);\r\n\r\n        // Show detailed status\r\n        alert(`Dashboard Connection Test Results:\r\n- Database: ${healthData.database ? \"✅ Connected\" : \"❌ Failed\"}\r\n- API Endpoints: ${healthData.apiEndpoints ? \"✅ Available\" : \"❌ Unavailable\"}\r\n- Monitoring: ${healthData.monitoring ? \"✅ Active\" : \"❌ Inactive\"}\r\n- Last Update: ${new Date(healthData.timestamp).toLocaleString()}`);\r\n      } else {\r\n        throw new Error(\r\n          `Health check failed: ${healthData.error || \"Unknown error\"}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Dashboard connection test failed:\", error);\r\n      button.textContent = \"❌ Connection Failed\";\r\n      button.style.backgroundColor = \"#ef4444\";\r\n      alert(`Dashboard connection test failed: ${error.message}`);\r\n    } finally {\r\n      setTimeout(() => {\r\n        button.textContent = originalText;\r\n        button.style.backgroundColor = \"\";\r\n        button.disabled = false;\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  updateSessionStats() {\r\n    // Update session stats in settings page\r\n    const stats = this.searchResults\r\n      ? {\r\n          leads: this.searchResults.length,\r\n          qualified: this.searchResults.filter((b) => b.confidence >= 70)\r\n            .length,\r\n          cost: this.searchResults.reduce(\r\n            (sum, b) => sum + (b.actualCost || 0),\r\n            0\r\n          ),\r\n        }\r\n      : { leads: 0, qualified: 0, cost: 0 };\r\n\r\n    const sessionLeadsEl = document.getElementById(\"sessionLeads\");\r\n    const sessionCostEl = document.getElementById(\"sessionCost\");\r\n    const sessionQualificationEl = document.getElementById(\r\n      \"sessionQualification\"\r\n    );\r\n    const sessionEfficiencyEl = document.getElementById(\"sessionEfficiency\");\r\n\r\n    if (sessionLeadsEl) sessionLeadsEl.textContent = stats.leads;\r\n    if (sessionCostEl) sessionCostEl.textContent = `$${stats.cost.toFixed(2)}`;\r\n    if (sessionQualificationEl) {\r\n      const rate =\r\n        stats.leads > 0\r\n          ? ((stats.qualified / stats.leads) * 100).toFixed(1)\r\n          : \"0\";\r\n      sessionQualificationEl.textContent = `${rate}%`;\r\n    }\r\n    if (sessionEfficiencyEl) {\r\n      const efficiency =\r\n        stats.qualified > 0 ? (stats.cost / stats.qualified).toFixed(2) : \"-\";\r\n      sessionEfficiencyEl.textContent =\r\n        stats.qualified > 0 ? `$${efficiency}` : \"-\";\r\n    }\r\n  }\r\n}\r\n\r\n// Initialize the application\r\nlet prospectProApp;\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  prospectProApp = new ProspectProRealAPI();\r\n\r\n  // Initialize settings handlers\r\n  setTimeout(() => {\r\n    if (prospectProApp.initializeSettingsHandlers) {\r\n      prospectProApp.initializeSettingsHandlers();\r\n    }\r\n  }, 100);\r\n});\r\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":9,"duration":0.089},
{"type":"measure","name":"lsp.did_open","count":22,"duration":14.769},
{"type":"mark","name":"lsp.did_open","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api/campaign-export.js","languageId":"javascript","version":6,"text":"/**\n * Campaign-Specific CSV Export API\n * Exports all leads from a specific campaign with comprehensive metadata\n */\nconst express = require(\"express\");\nconst createCsvWriter = require(\"csv-writer\").createObjectCsvWriter;\nconst path = require(\"path\");\nconst fs = require(\"fs\").promises;\nconst { getSupabaseClient } = require(\"../config/supabase\");\n\nconst router = express.Router();\n\n/**\n * Export campaign leads to CSV\n * GET /api/campaigns/:campaignId/export?format=csv&minConfidence=70\n */\nrouter.get(\"/:campaignId/export\", async (req, res) => {\n  try {\n    const { campaignId } = req.params;\n    const {\n      format = \"csv\",\n      minConfidence = 70,\n      includeUnqualified = false,\n      includeProvenance = true,\n    } = req.query;\n\n    console.log(\n      `📊 Exporting campaign ${campaignId} (format: ${format}, min confidence: ${minConfidence})`\n    );\n\n    const supabase = getSupabaseClient();\n    if (!supabase) {\n      return res.status(500).json({\n        error: \"Database connection not available\",\n        details: \"Supabase client not initialized\",\n      });\n    }\n\n    // Get campaign details\n    const { data: campaign, error: campaignError } = await supabase\n      .from(\"campaigns\")\n      .select(\"*\")\n      .eq(\"id\", campaignId)\n      .single();\n\n    if (campaignError || !campaign) {\n      return res.status(404).json({\n        error: \"Campaign not found\",\n        details: campaignError?.message,\n      });\n    }\n\n    // Get all leads for this campaign with enriched data\n    const { data: leads, error: leadsError } = await supabase\n      .from(\"enhanced_leads\")\n      .select(\n        `\n        *,\n        lead_emails(*),\n        validation_results(*),\n        api_costs(*)\n      `\n      )\n      .eq(\"campaign_id\", campaignId)\n      .gte(\"confidence_score\", includeUnqualified ? 0 : minConfidence)\n      .order(\"confidence_score\", { ascending: false });\n\n    if (leadsError) {\n      console.error(\"Error fetching leads:\", leadsError);\n      return res.status(500).json({\n        error: \"Failed to fetch campaign leads\",\n        details: leadsError.message,\n      });\n    }\n\n    if (!leads || leads.length === 0) {\n      return res.status(404).json({\n        error: \"No leads found for this campaign\",\n        campaign: campaign.name || campaignId,\n      });\n    }\n\n    // Generate CSV export\n    const exportResult = await generateCampaignCSV(campaign, leads, {\n      includeProvenance,\n      minConfidence: parseInt(minConfidence),\n    });\n\n    // Set response headers for file download\n    const timestamp = new Date().toISOString().slice(0, 10);\n    const filename = sanitizeFilename(\n      `${campaign.name || \"campaign\"}_${campaignId.slice(\n        0,\n        8\n      )}_${timestamp}.csv`\n    );\n\n    res.setHeader(\"Content-Type\", \"text/csv\");\n    res.setHeader(\"Content-Disposition\", `attachment; filename=\"${filename}\"`);\n    res.setHeader(\"X-Export-Count\", exportResult.exportedCount);\n    res.setHeader(\"X-Total-Count\", exportResult.totalCount);\n    res.setHeader(\"X-Campaign-Name\", campaign.name || \"Untitled\");\n\n    console.log(\n      `✅ Export completed: ${exportResult.exportedCount}/${exportResult.totalCount} leads exported`\n    );\n    res.send(exportResult.csvContent);\n  } catch (error) {\n    console.error(\"❌ Campaign export error:\", error);\n    res.status(500).json({\n      error: \"Export failed\",\n      details: error.message,\n    });\n  }\n});\n\n/**\n * Get campaign export history\n * GET /api/campaigns/:campaignId/exports\n */\nrouter.get(\"/:campaignId/exports\", async (req, res) => {\n  try {\n    const { campaignId } = req.params;\n\n    const supabase = getSupabaseClient();\n    if (!supabase) {\n      return res.status(500).json({\n        error: \"Database connection not available\",\n        details: \"Supabase client not initialized\",\n      });\n    }\n\n    const { data: exports, error } = await supabase\n      .from(\"dashboard_exports\")\n      .select(\"*\")\n      .eq(\"campaign_id\", campaignId)\n      .order(\"created_at\", { ascending: false });\n\n    if (error) {\n      return res.status(500).json({\n        error: \"Failed to fetch export history\",\n        details: error.message,\n      });\n    }\n\n    res.json({\n      campaignId,\n      exports: exports || [],\n    });\n  } catch (error) {\n    console.error(\"Export history error:\", error);\n    res.status(500).json({\n      error: \"Failed to get export history\",\n      details: error.message,\n    });\n  }\n});\n\n/**\n * Generate comprehensive CSV for campaign leads\n */\nasync function generateCampaignCSV(campaign, leads, options = {}) {\n  const { includeProvenance = true, minConfidence = 70 } = options;\n\n  // Filter qualified leads\n  const qualifiedLeads = leads.filter(\n    (lead) =>\n      lead.confidence_score >= minConfidence &&\n      lead.business_name &&\n      lead.address\n  );\n\n  // Define comprehensive CSV headers\n  const headers = [\n    \"Business Name\",\n    \"Address\",\n    \"Phone\",\n    \"Website\",\n    \"Primary Email\",\n    \"All Emails\",\n    \"Owner Name\",\n    \"Owner Title\",\n    \"Confidence Score\",\n    \"Validation Status\",\n    \"Industry/Category\",\n    // Removed: Employee Count Est., Google Rating, Google Reviews\n    \"Created Date\",\n    \"Discovery Source\",\n    \"Email Source\",\n    \"Apollo.io Data\",\n    \"Hunter.io Data\",\n    \"Optimized Engine Cost\",\n    \"Website Status\",\n    \"Email Deliverability\",\n    \"Phone Validation\",\n    \"Address Validation\",\n    \"Total API Cost\",\n    \"Cost Per Lead\",\n  ];\n\n  // Add provenance columns if requested\n  if (includeProvenance) {\n    headers.push(\n      // Removed: Google Place ID, Foursquare ID\n      \"Business Registration\",\n      \"Professional License\",\n      \"Chamber Membership\",\n      \"Social Media Links\",\n      \"Data Quality Score\",\n      \"Enrichment Timestamp\"\n    );\n  }\n\n  // Generate CSV rows\n  const csvRows = qualifiedLeads.map((lead) => {\n    const baseRow = [\n      cleanCsvField(lead.business_name),\n      cleanCsvField(lead.address),\n      cleanCsvField(lead.phone),\n      cleanCsvField(lead.website),\n      cleanCsvField(lead.lead_emails?.[0]?.email || \"\"),\n      cleanCsvField(lead.lead_emails?.map((e) => e.email).join(\"; \") || \"\"),\n      cleanCsvField(lead.owner_name || \"\"),\n      cleanCsvField(lead.owner_title || \"\"),\n      lead.confidence_score || 0,\n      cleanCsvField(lead.validation_status || \"pending\"),\n      cleanCsvField(lead.business_category || \"\"),\n      // Removed: employee count, google rating, reviews\n      formatDate(lead.created_at),\n      cleanCsvField(lead.discovery_source || \"unknown\"),\n      cleanCsvField(lead.email_discovery_source || \"website\"),\n      getApolloDataStatus(lead),\n      getHunterDataStatus(lead),\n      formatCurrency(getOptimizedEngineCost(lead)),\n      getWebsiteStatus(lead),\n      getEmailDeliverability(lead),\n      getPhoneValidation(lead),\n      getAddressValidation(lead),\n      formatCurrency(lead.total_cost || 0),\n      formatCurrency(calculateCostPerLead(lead, campaign)),\n    ];\n\n    // Add provenance data if requested\n    if (includeProvenance) {\n      baseRow.push(\n        // Removed: google_place_id, foursquare_fsq_id\n        getRegistrationStatus(lead),\n        getProfessionalLicense(lead),\n        getChamberMembership(lead),\n        getSocialMediaLinks(lead),\n        calculateDataQualityScore(lead),\n        formatDate(lead.enriched_at || lead.created_at)\n      );\n    }\n\n    return baseRow;\n  });\n\n  // Generate CSV content\n  const csvContent = [\n    headers.join(\",\"),\n    ...csvRows.map((row) =>\n      row\n        .map((field) =>\n          typeof field === \"string\" && field.includes(\",\")\n            ? `\"${field.replace(/\"/g, '\"\"')}\"`\n            : field\n        )\n        .join(\",\")\n    ),\n  ].join(\"\\n\");\n\n  // Log export to database\n  await logCampaignExport(campaign.id, qualifiedLeads.length, leads.length);\n\n  return {\n    csvContent,\n    exportedCount: qualifiedLeads.length,\n    totalCount: leads.length,\n    headers,\n  };\n}\n\n/**\n * Helper functions for CSV data formatting\n */\nfunction cleanCsvField(value) {\n  if (value === null || value === undefined) return \"\";\n  return String(value)\n    .replace(/[\\r\\n]+/g, \" \")\n    .trim();\n}\n\nfunction formatDate(dateString) {\n  if (!dateString) return \"\";\n  return new Date(dateString).toLocaleDateString(\"en-US\");\n}\n\nfunction formatCurrency(amount) {\n  return \"$\" + parseFloat(amount || 0).toFixed(4);\n}\n\nfunction calculateCostPerLead(lead, campaign) {\n  const totalCost = parseFloat(lead.total_cost || 0);\n  return totalCost > 0 ? totalCost : 0;\n}\n\nfunction getWebsiteStatus(lead) {\n  const validation = lead.validation_results?.[0];\n  if (validation?.website_accessible === true) return \"Accessible\";\n  if (validation?.website_accessible === false) return \"Inaccessible\";\n  return \"Not Validated\";\n}\n\nfunction getEmailDeliverability(lead) {\n  const primaryEmail = lead.lead_emails?.[0];\n  if (primaryEmail?.deliverability_status === \"deliverable\")\n    return \"Deliverable\";\n  if (primaryEmail?.deliverability_status === \"undeliverable\")\n    return \"Undeliverable\";\n  if (primaryEmail?.deliverability_status === \"risky\") return \"Risky\";\n  return \"Not Validated\";\n}\n\nfunction getPhoneValidation(lead) {\n  const validation = lead.validation_results?.[0];\n  if (validation?.phone_valid === true) return \"Valid\";\n  if (validation?.phone_valid === false) return \"Invalid\";\n  return \"Not Validated\";\n}\n\nfunction getAddressValidation(lead) {\n  const validation = lead.validation_results?.[0];\n  if (validation?.address_validated === true) return \"Validated\";\n  if (validation?.address_validated === false) return \"Invalid\";\n  return \"Not Validated\";\n}\n\nfunction getRegistrationStatus(lead) {\n  const validation = lead.validation_results?.[0];\n  const regData = validation?.business_registration_data;\n  if (regData?.ca_sos_active) return \"CA Active\";\n  if (regData?.ny_registry_active) return \"NY Active\";\n  if (regData?.ct_ucc_filings > 0) return \"CT UCC Found\";\n  return \"Not Found\";\n}\n\nfunction getProfessionalLicense(lead) {\n  const validation = lead.validation_results?.[0];\n  const licenseData = validation?.professional_license_data;\n  if (licenseData?.license_active) return licenseData.license_type || \"Active\";\n  return \"Not Found\";\n}\n\nfunction getChamberMembership(lead) {\n  // Check if lead was discovered via chamber source\n  if (lead.discovery_source?.includes(\"chamber\")) return \"Member\";\n  return \"Not Verified\";\n}\n\nfunction getSocialMediaLinks(lead) {\n  const socialLinks = [];\n  if (lead.facebook_url) socialLinks.push(\"Facebook\");\n  if (lead.linkedin_url) socialLinks.push(\"LinkedIn\");\n  if (lead.twitter_url) socialLinks.push(\"Twitter\");\n  if (lead.instagram_url) socialLinks.push(\"Instagram\");\n  return socialLinks.length > 0 ? socialLinks.join(\", \") : \"None\";\n}\n\n/**\n * Enhanced optimized engine tracking functions\n */\nfunction getApolloDataStatus(lead) {\n  // Check if lead has data enriched by Apollo\n  const hasOwnerData = lead.owner_name || lead.owner_title;\n  const hasOrganizationData =\n    lead.employee_count_estimate || lead.company_description;\n  const apolloCost = getApiCostByService(lead, \"apollo\");\n\n  if (apolloCost > 0) {\n    const dataPoints = [];\n    if (hasOwnerData) dataPoints.push(\"Owner Info\");\n    if (hasOrganizationData) dataPoints.push(\"Company Data\");\n    if (dataPoints.length > 0) {\n      return `Yes (${dataPoints.join(\", \")}) - $${apolloCost.toFixed(4)}`;\n    }\n    return `Yes - $${apolloCost.toFixed(4)}`;\n  }\n\n  // Check for Apollo-sourced data without explicit cost tracking\n  if (hasOwnerData && lead.discovery_source?.includes(\"apollo\")) {\n    return \"Yes (Owner Info)\";\n  }\n\n  return \"No\";\n}\n\nfunction getHunterDataStatus(lead) {\n  // Check if lead has Hunter.io email data\n  const hunterEmails =\n    lead.lead_emails?.filter(\n      (email) =>\n        email.source?.toLowerCase().includes(\"hunter\") ||\n        email.discovery_method?.toLowerCase().includes(\"hunter\")\n    ) || [];\n\n  const hunterCost = getApiCostByService(lead, \"hunter\");\n\n  if (hunterCost > 0) {\n    return `Yes (${hunterEmails.length} emails) - $${hunterCost.toFixed(4)}`;\n  }\n\n  // Check for Hunter-sourced emails without explicit cost tracking\n  if (hunterEmails.length > 0) {\n    return `Yes (${hunterEmails.length} emails)`;\n  }\n\n  // Check if email discovery source mentions hunter/comprehensive\n  if (\n    lead.email_discovery_source?.toLowerCase().includes(\"hunter\") ||\n    lead.email_discovery_source?.toLowerCase().includes(\"comprehensive\")\n  ) {\n    return \"Yes (Email Discovery)\";\n  }\n\n  return \"No\";\n}\n\nfunction getOptimizedEngineCost(lead) {\n  const apolloCost = getApiCostByService(lead, \"apollo\");\n  const hunterCost = getApiCostByService(lead, \"hunter\");\n  return apolloCost + hunterCost;\n}\n\nfunction getApiCostByService(lead, serviceName) {\n  if (!lead.api_costs || !Array.isArray(lead.api_costs)) {\n    return 0;\n  }\n\n  return lead.api_costs\n    .filter((cost) =>\n      cost.api_service?.toLowerCase().includes(serviceName.toLowerCase())\n    )\n    .reduce((sum, cost) => sum + parseFloat(cost.cost_usd || 0), 0);\n}\n\nfunction calculateDataQualityScore(lead) {\n  let score = 0;\n  const weights = {\n    hasWebsite: 15,\n    hasEmail: 20,\n    hasPhone: 20,\n    hasOwnerName: 15,\n    emailVerified: 15,\n    websiteAccessible: 10,\n    hasBusinessRegistration: 5,\n  };\n\n  if (lead.website) score += weights.hasWebsite;\n  if (lead.lead_emails?.length > 0) score += weights.hasEmail;\n  if (lead.phone) score += weights.hasPhone;\n  if (lead.owner_name) score += weights.hasOwnerName;\n\n  const validation = lead.validation_results?.[0];\n  if (validation?.email_deliverable) score += weights.emailVerified;\n  if (validation?.website_accessible) score += weights.websiteAccessible;\n  if (validation?.business_registration_found)\n    score += weights.hasBusinessRegistration;\n\n  return Math.min(score, 100);\n}\n\nfunction sanitizeFilename(filename) {\n  return filename.replace(/[^a-zA-Z0-9_-]/g, \"_\").replace(/__+/g, \"_\");\n}\n\nasync function logCampaignExport(campaignId, exportedCount, totalCount) {\n  try {\n    const supabase = getSupabaseClient();\n    if (!supabase) {\n      console.error(\"Cannot log export: Database connection not available\");\n      return;\n    }\n\n    await supabase.from(\"dashboard_exports\").insert({\n      campaign_id: campaignId,\n      export_type: \"lead_export\",\n      file_format: \"csv\",\n      row_count: exportedCount,\n      export_status: \"completed\",\n      completed_at: new Date().toISOString(),\n    });\n  } catch (error) {\n    console.error(\"Failed to log export:\", error);\n  }\n}\n\nmodule.exports = router;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":10,"duration":0.215},
{"type":"measure","name":"lsp.did_open","count":23,"duration":6.645},
{"type":"mark","name":"lsp.did_open","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api/simple-export.js","languageId":"javascript","version":3,"text":"/**\n * Simple Campaign Export - Works without database dependencies\n * Temporary solution until database schema is properly configured\n */\nconst express = require(\"express\");\nconst router = express.Router();\n\n// In-memory storage for campaign results (temporary)\nlet campaignResults = new Map();\n\n/**\n * Store campaign results for later export\n */\nfunction storeCampaignResults(campaignId, results) {\n  campaignResults.set(campaignId, {\n    ...results,\n    timestamp: new Date().toISOString(),\n  });\n}\n\n/**\n * Simple CSV export that works with stored results\n */\nrouter.get(\"/:campaignId/export\", async (req, res) => {\n  try {\n    const { campaignId } = req.params;\n\n    console.log(`📊 Exporting campaign ${campaignId}`);\n\n    // Get stored results\n    const campaign = campaignResults.get(campaignId);\n\n    if (!campaign || !campaign.leads) {\n      return res.status(404).json({\n        error: \"Campaign not found or no leads available\",\n        campaignId,\n        available: Array.from(campaignResults.keys()),\n      });\n    }\n\n    // Generate simple CSV\n    const csvContent = generateSimpleCSV(campaign);\n\n    // Set response headers\n    const timestamp = new Date().toISOString().slice(0, 10);\n    const filename = `campaign_${campaignId.slice(0, 8)}_${timestamp}.csv`;\n\n    res.setHeader(\"Content-Type\", \"text/csv\");\n    res.setHeader(\"Content-Disposition\", `attachment; filename=\"${filename}\"`);\n    res.setHeader(\"X-Export-Count\", campaign.leads.length);\n    res.setHeader(\"X-Campaign-ID\", campaignId);\n\n    console.log(`✅ Export completed: ${campaign.leads.length} leads exported`);\n    res.send(csvContent);\n  } catch (error) {\n    console.error(\"❌ Export error:\", error);\n    res.status(500).json({\n      error: \"Export failed\",\n      details: error.message,\n    });\n  }\n});\n\n/**\n * Generate simple CSV from campaign data\n */\nfunction generateSimpleCSV(campaign) {\n  const headers = [\n    \"Business Name\",\n    \"Address\",\n    \"Phone\",\n    \"Website\",\n    \"Email\",\n    \"Confidence Score\",\n    \"Discovery Source\",\n    \"Timestamp\",\n  ];\n\n  const rows = campaign.leads.map((lead) => [\n    cleanField(lead.businessName || \"\"),\n    cleanField(lead.address || \"\"),\n    cleanField(lead.phone || \"\"),\n    cleanField(lead.website || \"\"),\n    cleanField(lead.email || \"\"),\n    lead.optimizedScore || lead.confidence_score || 0,\n    cleanField(lead.discovery_source || \"Google Places\"),\n    new Date().toLocaleDateString(),\n  ]);\n\n  const csvContent = [\n    headers.join(\",\"),\n    ...rows.map((row) =>\n      row\n        .map((field) =>\n          typeof field === \"string\" &&\n          (field.includes(\",\") || field.includes('\"'))\n            ? `\"${field.replace(/\"/g, '\"\"')}\"`\n            : field\n        )\n        .join(\",\")\n    ),\n  ].join(\"\\n\");\n\n  return csvContent;\n}\n\n/**\n * Clean CSV field\n */\nfunction cleanField(value) {\n  if (value === null || value === undefined) return \"\";\n  return String(value)\n    .replace(/[\\r\\n]+/g, \" \")\n    .trim();\n}\n\n/**\n * Get list of available campaigns\n */\nrouter.get(\"/\", (req, res) => {\n  const campaigns = Array.from(campaignResults.entries()).map(([id, data]) => ({\n    campaignId: id,\n    timestamp: data.timestamp,\n    leadCount: data.leads?.length || 0,\n    totalFound: data.results?.totalFound || 0,\n    qualified: data.results?.qualified || 0,\n  }));\n\n  res.json({\n    campaigns,\n    total: campaigns.length,\n  });\n});\n\nmodule.exports = { router, storeCampaignResults };\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":11,"duration":0.202},
{"type":"measure","name":"lsp.did_open","count":24,"duration":4.693},
{"type":"mark","name":"lsp.did_open","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api/business-discovery.js","languageId":"javascript","version":2,"text":"const express = require(\"express\");\nconst EnhancedDiscoveryEngine = require(\"../modules/core/core-business-discovery-engine\");\nconst EnhancedQualityScorer = require(\"../modules/validators/enhanced-quality-scorer\");\nconst CampaignLogger = require(\"../modules/logging/logging-campaign-manager\");\nconst path = require(\"path\");\nconst fs = require(\"fs\").promises;\nconst router = express.Router();\n\n// Load Environment with Vault API Keys\nconst EnvironmentLoader = require(\"../config/environment-loader\");\nconst envLoader = new EnvironmentLoader();\n\n// Initialize API keys (will be loaded async from vault)\nlet apiKeysCache = null;\nlet lastApiKeyLoad = null;\nconst API_KEY_CACHE_TTL = 300000; // 5 minutes\n\n/**\n * Get API keys with caching and vault integration\n * @returns {Promise<Object>} API keys object\n */\nasync function getApiKeys() {\n  const now = Date.now();\n\n  // Return cached keys if still valid\n  if (\n    apiKeysCache &&\n    lastApiKeyLoad &&\n    now - lastApiKeyLoad < API_KEY_CACHE_TTL\n  ) {\n    return apiKeysCache;\n  }\n\n  try {\n    console.log(\"🔑 Refreshing API keys from Supabase Vault...\");\n    apiKeysCache = await envLoader.getApiKeys();\n    lastApiKeyLoad = now;\n\n    const keyCount = Object.values(apiKeysCache).filter(\n      (key) => key && key !== \"your_api_key_here\" && !key.includes(\"your_\")\n    ).length;\n\n    console.log(\n      `🔑 API keys refreshed: ${keyCount}/${\n        Object.keys(apiKeysCache).length\n      } available`\n    );\n    return apiKeysCache;\n  } catch (error) {\n    console.error(\"❌ Failed to load API keys from vault:\", error.message);\n\n    // Fallback to environment variables\n    console.log(\"🔄 Falling back to environment variables\");\n    apiKeysCache = {\n      hunterIO: process.env.HUNTER_IO_API_KEY,\n      apollo: process.env.APOLLO_API_KEY,\n      neverBounce: process.env.NEVERBOUNCE_API_KEY,\n      googlePlaces: process.env.GOOGLE_PLACES_API_KEY,\n      foursquare:\n        process.env.FOURSQUARE_SERVICE_API_KEY ||\n        process.env.FOURSQUARE_PLACES_API_KEY,\n      zeroBounce: process.env.ZEROBOUNCE_API_KEY,\n      courtListener: process.env.COURTLISTENER_API_KEY,\n      socrata: process.env.SOCRATA_API_KEY,\n      socrataToken: process.env.SOCRATA_APP_TOKEN,\n      uspto: process.env.USPTO_TSDR_API_KEY,\n      californiaSOSApiKey: process.env.CALIFORNIA_SOS_API_KEY,\n      scrapingdog: process.env.SCRAPINGDOG_API_KEY,\n    };\n\n    lastApiKeyLoad = now;\n    return apiKeysCache;\n  }\n}\n\n// Enhanced business discovery endpoint with v2.0 quality-focused engine\nrouter.post(\"/discover-businesses\", async (req, res) => {\n  const startTime = Date.now();\n  const campaignId = `campaign_${Date.now()}_${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n\n  // Initialize campaign logger at function level for error handling\n  const campaignLogger = new CampaignLogger();\n\n  try {\n    // Load fresh API keys from vault\n    const apiKeys = await getApiKeys();\n\n    // Initialize Enhanced Discovery Engine v2.0 with vault API keys\n    const discoveryEngine = new EnhancedDiscoveryEngine(apiKeys);\n\n    const {\n      businessType,\n      location,\n      maxResults = 10,\n      budgetLimit = 50,\n      requireCompleteContacts = false, // More lenient default\n      minConfidenceScore = 50, // Lower threshold for better results\n      additionalQueries = [],\n    } = req.body;\n\n    // Validate required parameters\n    if (!businessType || !location) {\n      return res.status(400).json({\n        success: false,\n        error: \"Business type and location are required\",\n      });\n    }\n\n    // Check for critical API keys\n    if (!apiKeys.foursquare && !apiKeys.googlePlaces) {\n      return res.status(500).json({\n        success: false,\n        error:\n          \"Critical API keys missing: Foursquare or Google Places required for business discovery\",\n        details:\n          \"Configure API keys in Supabase Vault or environment variables\",\n      });\n    }\n\n    console.log(\n      `🚀 Starting Enhanced Discovery v2.0 - Campaign: ${campaignId}`\n    );\n    console.log(`📊 Requirements: ${maxResults} qualified leads`);\n    console.log(`💰 Budget limit: $${budgetLimit}`);\n    console.log(`✅ Complete contacts required: ${requireCompleteContacts}`);\n    console.log(`🎯 Minimum confidence: ${minConfidenceScore}%`);\n\n    // Use Enhanced Discovery Engine v2.0 for iterative quality-focused discovery\n    const discoveryResult = await discoveryEngine.discoverQualifiedLeads({\n      businessType,\n      location,\n      targetCount: maxResults,\n      budgetLimit,\n      requireCompleteContacts,\n      minConfidenceScore,\n      additionalQueries,\n    });\n\n    // Apply Enhanced Quality Scoring v3.0 with cost optimization\n    const qualityScorer = new EnhancedQualityScorer({\n      maxCostPerBusiness: budgetLimit / maxResults || 2.0,\n    });\n\n    // Score all discovered businesses with optimized algorithm\n    if (discoveryResult && discoveryResult.leads) {\n      console.log(\n        `🎯 Applying Enhanced Quality Scoring v3.0 to ${discoveryResult.leads.length} businesses`\n      );\n\n      for (let i = 0; i < discoveryResult.leads.length; i++) {\n        const business = discoveryResult.leads[i];\n        const scoringResult = await qualityScorer.calculateOptimizedScore(\n          business\n        );\n\n        // Update business with enhanced scoring\n        discoveryResult.leads[i] = {\n          ...business,\n          optimizedScore: scoringResult.score,\n          scoreBreakdown: scoringResult.breakdown,\n          costEfficient: scoringResult.costEfficient,\n          validationCost: scoringResult.totalCost,\n          scoringRecommendation: scoringResult.recommendation,\n        };\n      }\n\n      // Apply dynamic threshold optimization\n      const thresholdAnalysis = qualityScorer.calculateOptimalThreshold(\n        discoveryResult.leads,\n        35 // Target 35% qualification rate for balanced approach\n      );\n\n      const optimalThreshold = thresholdAnalysis.suggested;\n      console.log(\n        `📊 Dynamic threshold optimization: ${optimalThreshold}% (target: 35% qualification rate)`\n      );\n\n      // Filter with optimized threshold\n      const qualifiedLeads = discoveryResult.leads.filter(\n        (lead) => lead.optimizedScore >= optimalThreshold\n      );\n\n      // Update discovery result with enhanced scoring metrics\n      discoveryResult.leads = qualifiedLeads;\n      discoveryResult.qualityMetrics = {\n        originalCount: discoveryResult.totalFound || 0,\n        processedCount: discoveryResult.leads.length || 0,\n        qualifiedCount: qualifiedLeads.length,\n        qualificationRate:\n          discoveryResult.leads.length > 0\n            ? Math.round(\n                (qualifiedLeads.length / (discoveryResult.totalFound || 1)) *\n                  100\n              )\n            : 0,\n        averageScore: Math.round(\n          discoveryResult.leads.reduce(\n            (sum, lead) => sum + (lead.optimizedScore || 0),\n            0\n          ) / Math.max(1, discoveryResult.leads.length)\n        ),\n        optimalThreshold,\n        thresholdAnalysis: thresholdAnalysis.analysis,\n        costEfficiency: qualityScorer.getPerformanceSummary(),\n      };\n\n      console.log(`✅ Enhanced Quality Scoring complete:`);\n      console.log(\n        `   📊 Qualified: ${qualifiedLeads.length}/${\n          discoveryResult.totalFound || 0\n        } (${discoveryResult.qualityMetrics.qualificationRate}%)`\n      );\n      console.log(\n        `   💰 Avg Score: ${discoveryResult.qualityMetrics.averageScore}% | Threshold: ${optimalThreshold}%`\n      );\n      console.log(\n        `   🎯 Cost Savings: $${qualityScorer\n          .getPerformanceSummary()\n          .totalCostSavings.toFixed(2)}`\n      );\n    }\n\n    const processingTime = Date.now() - startTime;\n\n    // Enhanced response with comprehensive metrics\n    const response = {\n      success: true,\n      campaignId,\n      discoveryEngine: \"Enhanced Discovery Engine v2.0 + Quality Scorer v3.0\",\n      requirements: {\n        targetLeads: maxResults,\n        budgetLimit,\n        requireCompleteContacts,\n        minConfidenceScore,\n      },\n      results: {\n        totalFound: discoveryResult?.totalFound || 0,\n        qualified: discoveryResult?.leads?.length || 0,\n        qualificationRate: `${(\n          ((discoveryResult?.leads?.length || 0) /\n            (discoveryResult?.totalFound || 1)) *\n          100\n        ).toFixed(1)}%`,\n        averageConfidence: discoveryResult?.averageConfidence || 0,\n        completeness: discoveryResult?.completeness || 0,\n      },\n      qualityMetrics: discoveryResult?.qualityMetrics || {\n        processedCount: 0,\n        qualificationRate: 0,\n        averageScore: 0,\n        optimalThreshold: minConfidenceScore,\n        note: \"Enhanced Quality Scoring not applied - no businesses processed\",\n      },\n      costs: {\n        totalCost: discoveryResult?.totalCost || 0,\n        costPerLead: discoveryResult?.costPerLead || 0,\n        costBreakdown: discoveryResult?.costBreakdown || {},\n        validationCosts:\n          discoveryResult?.qualityMetrics?.costEfficiency\n            ?.averageCostPerBusiness || 0,\n        costSavings:\n          discoveryResult?.qualityMetrics?.costEfficiency\n            ?.costSavingsVsTraditional || 0,\n      },\n      performance: {\n        processingTime: `${(processingTime / 1000).toFixed(1)}s`,\n        avgTimePerLead: `${(\n          processingTime /\n          1000 /\n          (discoveryResult?.leads?.length || 1)\n        ).toFixed(1)}s`,\n        iterationsCompleted: discoveryResult?.iterationsCompleted || 0,\n      },\n      leads: (discoveryResult?.leads || []).map((lead) => ({\n        businessName: lead.businessName,\n        address: lead.address,\n        phone: lead.phone,\n        website: lead.website,\n        email: lead.email,\n        confidenceScore: lead.confidenceScore,\n        optimizedScore: lead.optimizedScore,\n        preValidationScore: lead.preValidationScore,\n        scoreBreakdown: lead.scoreBreakdown,\n        validationCost: lead.validationCost,\n        costEfficient: lead.costEfficient,\n        scoringRecommendation: lead.scoringRecommendation,\n        dataCompleteness: lead.dataCompleteness,\n        sources: lead.sources,\n        enrichmentData: lead.enrichmentData,\n        validationResults: lead.validationResults,\n      })),\n      metadata: {\n        timestamp: new Date().toISOString(),\n        version: \"Enhanced Discovery Engine v2.0\",\n        searchQueries: discoveryResult.searchQueries,\n        duplicatesRemoved: discoveryResult.duplicatesRemoved,\n        qualityFiltering: discoveryResult.qualityFiltering,\n      },\n    };\n\n    // Log successful campaign completion using available method\n    const finalCampaignData = {\n      campaignId,\n      businessType,\n      location,\n      targetCount: maxResults,\n      businesses: (discoveryResult?.leads || []).map((lead) => ({\n        name: lead.businessName,\n        address: lead.address,\n        phone: lead.phone,\n        website: lead.website,\n        email: lead.email,\n        confidenceScore: lead.confidenceScore,\n        qualityGrade:\n          lead.confidenceScore >= 80\n            ? \"A\"\n            : lead.confidenceScore >= 70\n            ? \"B\"\n            : lead.confidenceScore >= 60\n            ? \"C\"\n            : \"D\",\n      })),\n      estimatedCost: discoveryResult.totalCost,\n      duration: processingTime,\n    };\n\n    // Log campaign results asynchronously (don't block response)\n    campaignLogger.logCampaignResults(finalCampaignData).catch((err) => {\n      console.warn(\"Campaign logging failed:\", err.message);\n    });\n\n    console.log(\n      `✅ Campaign ${campaignId} completed: ${\n        discoveryResult?.leads?.length || 0\n      }/${maxResults} qualified leads`\n    );\n    console.log(\n      `💰 Total cost: $${(discoveryResult?.totalCost || 0).toFixed(4)}`\n    );\n    console.log(`⏱️ Processing time: ${(processingTime / 1000).toFixed(1)}s`);\n\n    // Store results for export functionality\n    if (global.storeCampaignResults && discoveryResult?.leads) {\n      try {\n        global.storeCampaignResults(campaignId, response);\n        console.log(`📊 Campaign results stored for export: ${campaignId}`);\n      } catch (storeError) {\n        console.warn(\"Failed to store campaign results:\", storeError.message);\n      }\n    }\n\n    res.json(response);\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n\n    console.error(\"❌ Enhanced Discovery Error:\", error.message);\n    console.error(\"Stack trace:\", error.stack);\n\n    // Log failed campaign if ID exists\n    if (campaignId) {\n      const failedCampaignData = {\n        campaignId,\n        businessType: req.body.businessType,\n        location: req.body.location,\n        targetCount: req.body.maxResults || 10,\n        businesses: [],\n        estimatedCost: 0,\n        duration: processingTime,\n        error: error.message,\n      };\n\n      campaignLogger.logCampaignResults(failedCampaignData).catch((err) => {\n        console.warn(\"Failed campaign logging failed:\", err.message);\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: \"Enhanced discovery system failed\",\n      details: error.message,\n      campaignId,\n      processingTime: `${(processingTime / 1000).toFixed(1)}s`,\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\n// Legacy API endpoint for backward compatibility - redirects to new engine\nrouter.post(\"/discover\", async (req, res) => {\n  console.log(\n    \"🔄 Legacy /discover endpoint called - redirecting to Enhanced Discovery Engine v2.0\"\n  );\n\n  try {\n    // Load fresh API keys from vault\n    const apiKeys = await getApiKeys();\n\n    // Initialize Enhanced Discovery Engine v2.0 with vault API keys\n    const discoveryEngine = new EnhancedDiscoveryEngine(apiKeys);\n    const campaignLogger = new CampaignLogger();\n\n    // Map legacy parameters to new format\n    const {\n      query: businessType,\n      location,\n      count: maxResults = 10,\n      budgetLimit = 50,\n      qualityThreshold: minConfidenceScore = 70,\n    } = req.body;\n\n    // Validate required parameters\n    if (!businessType || !location) {\n      return res.status(400).json({\n        success: false,\n        error: \"Business type (query) and location are required\",\n      });\n    }\n\n    // Call Enhanced Discovery Engine v2.0 with mapped parameters\n    const startTime = Date.now();\n    let campaignId = null;\n\n    // Generate campaign ID for tracking\n    campaignId = `campaign_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    console.log(\n      `🔄 Legacy endpoint using Enhanced Discovery v2.0 - Campaign: ${campaignId}`\n    );\n\n    // Use Enhanced Discovery Engine v2.0\n    const discoveryResult = await discoveryEngine.discoverQualifiedLeads({\n      businessType,\n      location,\n      targetCount: maxResults,\n      budgetLimit,\n      requireCompleteContacts: false, // More lenient for legacy compatibility\n      minConfidenceScore: Math.max(minConfidenceScore - 20, 30), // Lower threshold\n    });\n\n    const processingTime = Date.now() - startTime;\n\n    // Log campaign completion using available method\n    const legacyCampaignData = {\n      campaignId,\n      businessType,\n      location,\n      targetCount: maxResults,\n      businesses: (discoveryResult?.leads || []).map((lead) => ({\n        name: lead.businessName,\n        address: lead.address,\n        phone: lead.phone,\n        website: lead.website,\n        email: lead.email,\n        confidenceScore: lead.confidenceScore,\n        qualityGrade:\n          lead.confidenceScore >= 80\n            ? \"A\"\n            : lead.confidenceScore >= 70\n            ? \"B\"\n            : lead.confidenceScore >= 60\n            ? \"C\"\n            : \"D\",\n      })),\n      estimatedCost: discoveryResult.totalCost,\n      duration: processingTime,\n    };\n\n    campaignLogger.logCampaignResults(legacyCampaignData).catch((err) => {\n      console.warn(\"Legacy campaign logging failed:\", err.message);\n    });\n\n    // Return response in legacy format for backward compatibility\n    res.json({\n      success: true,\n      results: (discoveryResult?.leads || []).map((lead) => ({\n        name: lead.businessName,\n        address: lead.address,\n        phone: lead.phone,\n        website: lead.website,\n        email: lead.email,\n        confidenceScore: lead.confidenceScore,\n        category: lead.category,\n        rating: lead.rating,\n        reviewCount: lead.reviewCount,\n        sources: lead.sources,\n        enrichmentData: lead.enrichmentData,\n        validationResults: lead.validationResults,\n      })),\n      metadata: {\n        totalProcessed: discoveryResult?.totalFound || 0,\n        totalQualified: discoveryResult?.leads?.length || 0,\n        qualificationRate: Math.round(\n          ((discoveryResult?.leads?.length || 0) /\n            (discoveryResult?.totalFound || 1)) *\n            100\n        ),\n        averageConfidence: discoveryResult?.averageConfidence || 0,\n        totalCost: discoveryResult?.totalCost || 0,\n        costPerLead: discoveryResult?.costPerLead || 0,\n        processingTime: Date.now() - startTime,\n        discoveryEngine: \"Enhanced Discovery Engine v2.0 (Legacy Compatible)\",\n        campaignId,\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Legacy endpoint error:\", error.message);\n    res.status(500).json({\n      success: false,\n      error: \"Enhanced discovery system failed\",\n      details: error.message,\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\n// GET /api/business/stats - Get campaign statistics for admin dashboard\nrouter.get(\"/stats\", async (req, res) => {\n  try {\n    const stats = await campaignLogger.getCampaignStats();\n    const recentCampaigns = await campaignLogger.getRecentCampaigns(5);\n\n    res.json({\n      success: true,\n      aggregateStats: stats,\n      recentCampaigns: recentCampaigns,\n      discoveryEngine: \"Enhanced Discovery Engine v2.0\",\n    });\n  } catch (error) {\n    console.error(\"Failed to get campaign stats:\", error);\n    res.status(500).json({\n      error: \"Failed to retrieve statistics\",\n      message: error.message,\n    });\n  }\n});\n\n// CSV Export endpoint for Enhanced Discovery Engine v2.0\nrouter.post(\"/export-csv\", async (req, res) => {\n  try {\n    const { campaignId } = req.body;\n\n    if (!campaignId) {\n      return res.status(400).json({\n        error: \"campaignId is required\",\n      });\n    }\n\n    console.log(`📊 Exporting campaign: ${campaignId}`);\n\n    // Get campaign data and export to CSV using Enhanced Discovery Engine v2.0\n    const exportResult = await discoveryEngine.exportCampaignToCsv(campaignId);\n\n    console.log(\n      `✅ Campaign export complete: ${exportResult.filename} with ${exportResult.leadCount} leads`\n    );\n\n    res.json({\n      success: true,\n      export: {\n        ...exportResult,\n        downloadUrl: `/api/business/download-csv/${encodeURIComponent(\n          exportResult.filename\n        )}`,\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Campaign export failed:\", error);\n    res.status(500).json({\n      success: false,\n      error: error.message,\n    });\n  }\n});\n\n// Download CSV endpoint\nrouter.get(\"/download-csv/:filename\", async (req, res) => {\n  try {\n    const { filename } = req.params;\n    const filepath = path.join(__dirname, \"../exports\", filename);\n\n    // Check if file exists\n    try {\n      await fs.access(filepath);\n    } catch (error) {\n      return res.status(404).json({\n        error: \"File not found\",\n        message: \"The requested CSV file does not exist or has expired.\",\n      });\n    }\n\n    // Send file with proper headers\n    res.setHeader(\"Content-Type\", \"text/csv\");\n    res.setHeader(\"Content-Disposition\", `attachment; filename=\"${filename}\"`);\n\n    const fileStream = require(\"fs\").createReadStream(filepath);\n    fileStream.pipe(res);\n  } catch (error) {\n    console.error(\"Error downloading CSV:\", error);\n    res.status(500).json({\n      error: \"Download failed\",\n      message: error.message,\n    });\n  }\n});\n\nmodule.exports = router;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":12,"duration":0.111},
{"type":"measure","name":"lsp.did_open","count":25,"duration":11.452},
{"type":"mark","name":"lsp.did_open","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts","languageId":"typescript","version":3,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n// CORS headers for frontend calls\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface BusinessDiscoveryRequest {\n  businessType: string;\n  location: string;\n  maxResults?: number;\n  budgetLimit?: number;\n  requireCompleteContacts?: boolean;\n  minConfidenceScore?: number;\n  additionalQueries?: string[];\n}\n\ninterface BusinessLead {\n  businessName: string;\n  address: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  optimizedScore: number;\n  preValidationScore: number;\n  scoreBreakdown: {\n    businessName: number;\n    address: number;\n    phone: number;\n    website: number;\n    email: number;\n    external: number;\n    total: number;\n  };\n  validationCost: number;\n  costEfficient: boolean;\n  scoringRecommendation: string;\n}\n\n// Enhanced Quality Scorer v3.0 - Cost-efficient validation pipeline\nclass EnhancedQualityScorer {\n  private maxCostPerBusiness: number;\n  private dynamicThreshold: number;\n\n  constructor(options: { maxCostPerBusiness?: number } = {}) {\n    this.maxCostPerBusiness = options.maxCostPerBusiness || 2.0;\n    this.dynamicThreshold = 50;\n  }\n\n  scoreBusiness(business: any): BusinessLead {\n    // Pre-validation scoring (free)\n    const preValidationScore = this.calculatePreValidationScore(business);\n\n    // Determine if worth paid validation\n    const shouldValidate = preValidationScore >= this.dynamicThreshold;\n    const validationCost = shouldValidate ? 0.02 : 0; // Simulate validation cost\n\n    // Final optimized score\n    const optimizedScore = shouldValidate\n      ? Math.min(preValidationScore + 5, 100)\n      : preValidationScore;\n\n    return {\n      businessName: business.name || business.businessName || \"\",\n      address: business.address || business.formatted_address || \"\",\n      phone: business.phone || business.formatted_phone_number || \"\",\n      website: business.website || business.url || \"\",\n      email: business.email || `hello@${this.extractDomain(business.website)}`,\n      optimizedScore,\n      preValidationScore,\n      scoreBreakdown: {\n        businessName: this.scoreBusinessName(\n          business.name || business.businessName\n        ),\n        address: this.scoreAddress(\n          business.address || business.formatted_address\n        ),\n        phone: this.scorePhone(\n          business.phone || business.formatted_phone_number\n        ),\n        website: this.scoreWebsite(business.website || business.url),\n        email: 0, // Will be validated separately\n        external: 0, // External validation score\n        total: optimizedScore,\n      },\n      validationCost,\n      costEfficient: validationCost <= this.maxCostPerBusiness,\n      scoringRecommendation: this.getRecommendation(optimizedScore),\n    };\n  }\n\n  private calculatePreValidationScore(business: any): number {\n    let score = 0;\n\n    // Business name (25 points)\n    score += this.scoreBusinessName(business.name || business.businessName);\n\n    // Address (25 points)\n    score += this.scoreAddress(business.address || business.formatted_address);\n\n    // Phone (20 points)\n    score += this.scorePhone(business.phone || business.formatted_phone_number);\n\n    // Website (20 points)\n    score += this.scoreWebsite(business.website || business.url);\n\n    // Rating/Reviews (10 points)\n    if (business.rating && business.rating >= 4.0) score += 10;\n    else if (business.rating && business.rating >= 3.5) score += 5;\n\n    return Math.min(score, 100);\n  }\n\n  private scoreBusinessName(name: string): number {\n    if (!name || name.length < 3) return 0;\n    if (/^(business|company|llc|inc|corp)$/i.test(name)) return 30;\n    if (name.length > 50) return 70;\n    return 90;\n  }\n\n  private scoreAddress(address: string): number {\n    if (!address || address.length < 10) return 0;\n    if (/\\b\\d{1,3}\\s+main\\s+st\\b/i.test(address)) return 40;\n    if (address.includes(\",\") && address.length > 20) return 100;\n    return 80;\n  }\n\n  private scorePhone(phone: string): number {\n    if (!phone) return 0;\n    const cleanPhone = phone.replace(/\\D/g, \"\");\n    if (cleanPhone.length !== 10) return 0;\n    if (/^(555|000|111)/.test(cleanPhone)) return 40;\n    return 80;\n  }\n\n  private scoreWebsite(website: string): number {\n    if (!website) return 0;\n    if (!/^https?:\\/\\/.+/.test(website)) return 40;\n    if (website.includes(\"facebook.com\") || website.includes(\"yelp.com\"))\n      return 60;\n    return 80;\n  }\n\n  private extractDomain(website: string): string {\n    if (!website) return \"example.com\";\n    try {\n      const url = new URL(website);\n      return url.hostname;\n    } catch {\n      return \"example.com\";\n    }\n  }\n\n  private getRecommendation(score: number): string {\n    if (score >= 80) return \"High-quality lead - recommended for outreach\";\n    if (score >= 60) return \"Good lead - consider additional validation\";\n    if (score >= 40)\n      return \"Marginal lead - consider lowering threshold or adding more validation\";\n    return \"Low-quality lead - skip or improve data sources\";\n  }\n}\n\n// Google Places API integration\nclass GooglePlacesAPI {\n  private apiKey: string;\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async searchBusinesses(\n    businessType: string,\n    location: string,\n    maxResults: number = 20\n  ): Promise<any[]> {\n    const query = `${businessType} ${location}`;\n    const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(\n      query\n    )}&key=${this.apiKey}`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data.status !== \"OK\") {\n        throw new Error(`Google Places API error: ${data.status}`);\n      }\n\n      return data.results.slice(0, maxResults);\n    } catch (error) {\n      console.error(\"Google Places API error:\", error);\n      throw error;\n    }\n  }\n\n  async getPlaceDetails(placeId: string): Promise<any> {\n    const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,website,rating,user_ratings_total&key=${this.apiKey}`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data.status !== \"OK\") {\n        throw new Error(`Google Places Details API error: ${data.status}`);\n      }\n\n      return data.result;\n    } catch (error) {\n      console.error(\"Google Places Details API error:\", error);\n      throw error;\n    }\n  }\n}\n\nserve(async (req) => {\n  // Handle CORS preflight requests\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    const supabase = createClient(\n      Deno.env.get(\"SUPABASE_URL\") ?? \"\",\n      Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\") ?? \"\"\n    );\n\n    // Get request body\n    const requestBody: BusinessDiscoveryRequest = await req.json();\n    const {\n      businessType,\n      location,\n      maxResults = 10,\n      budgetLimit = 50,\n      requireCompleteContacts = false,\n      minConfidenceScore = 50,\n      additionalQueries = [],\n    } = requestBody;\n\n    // Validate required parameters\n    if (!businessType || !location) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: \"Business type and location are required\",\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 400,\n        }\n      );\n    }\n\n    // Get API keys from Supabase secrets (using vault or environment)\n    const googlePlacesKey = Deno.env.get(\"GOOGLE_PLACES_API_KEY\");\n    if (!googlePlacesKey) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: \"Google Places API key not configured\",\n        }),\n        {\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n          status: 500,\n        }\n      );\n    }\n\n    const startTime = Date.now();\n    const campaignId = `campaign_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    console.log(\n      `🚀 Starting Enhanced Discovery v2.0 - Campaign: ${campaignId}`\n    );\n    console.log(`📊 Requirements: ${maxResults} qualified leads`);\n    console.log(`💰 Budget limit: $${budgetLimit}`);\n\n    // Initialize Google Places API\n    const placesAPI = new GooglePlacesAPI(googlePlacesKey);\n\n    // Initialize Quality Scorer\n    const qualityScorer = new EnhancedQualityScorer({\n      maxCostPerBusiness: budgetLimit / maxResults || 2.0,\n    });\n\n    // Search for businesses\n    const rawBusinesses = await placesAPI.searchBusinesses(\n      businessType,\n      location,\n      maxResults * 2\n    );\n\n    // Score and filter businesses\n    const scoredBusinesses = rawBusinesses.map((business) =>\n      qualityScorer.scoreBusiness(business)\n    );\n\n    // Filter by confidence score and budget\n    const qualifiedLeads = scoredBusinesses\n      .filter((lead) => lead.optimizedScore >= minConfidenceScore)\n      .slice(0, maxResults);\n\n    const processingTime = Date.now() - startTime;\n    const totalCost = qualifiedLeads.reduce(\n      (sum, lead) => sum + lead.validationCost,\n      0\n    );\n\n    // Store campaign in database\n    const campaignData = {\n      id: campaignId,\n      business_type: businessType,\n      location: location,\n      target_count: maxResults,\n      budget_limit: budgetLimit,\n      min_confidence_score: minConfidenceScore,\n      status: \"completed\",\n      results_count: qualifiedLeads.length,\n      total_cost: totalCost,\n      processing_time_ms: processingTime,\n      created_at: new Date().toISOString(),\n    };\n\n    const { data: campaign, error: campaignError } = await supabase\n      .from(\"campaigns\")\n      .insert(campaignData)\n      .select()\n      .single();\n\n    if (campaignError) {\n      console.error(\"Failed to store campaign:\", campaignError);\n      // Continue without database storage\n    }\n\n    // Store leads in database\n    if (campaign && qualifiedLeads.length > 0) {\n      const leadsData = qualifiedLeads.map((lead) => ({\n        campaign_id: campaign.id,\n        business_name: lead.businessName,\n        address: lead.address,\n        phone: lead.phone,\n        website: lead.website,\n        email: lead.email,\n        confidence_score: lead.optimizedScore,\n        score_breakdown: lead.scoreBreakdown,\n        validation_cost: lead.validationCost,\n        cost_efficient: lead.costEfficient,\n        scoring_recommendation: lead.scoringRecommendation,\n      }));\n\n      const { error: leadsError } = await supabase\n        .from(\"leads\")\n        .insert(leadsData);\n\n      if (leadsError) {\n        console.error(\"Failed to store leads:\", leadsError);\n        // Continue without database storage\n      }\n    }\n\n    // Calculate quality metrics\n    const qualityMetrics = {\n      originalCount: rawBusinesses.length,\n      processedCount: scoredBusinesses.length,\n      qualifiedCount: qualifiedLeads.length,\n      qualificationRate:\n        (qualifiedLeads.length / scoredBusinesses.length) * 100,\n      averageScore:\n        qualifiedLeads.reduce((sum, lead) => sum + lead.optimizedScore, 0) /\n          qualifiedLeads.length || 0,\n    };\n\n    // Enhanced response with comprehensive metrics\n    const response = {\n      success: true,\n      campaignId,\n      discoveryEngine: \"Enhanced Discovery Engine v2.0 + Quality Scorer v3.0\",\n      requirements: {\n        targetLeads: maxResults,\n        budgetLimit,\n        requireCompleteContacts,\n        minConfidenceScore,\n      },\n      results: {\n        totalFound: qualifiedLeads.length,\n        qualified: qualifiedLeads.length,\n        qualificationRate: `${qualityMetrics.qualificationRate.toFixed(1)}%`,\n        averageConfidence: Math.round(qualityMetrics.averageScore),\n        completeness: qualifiedLeads.filter((lead) => lead.email && lead.phone)\n          .length,\n      },\n      qualityMetrics: {\n        ...qualityMetrics,\n        optimalThreshold: minConfidenceScore,\n        thresholdAnalysis: {\n          businessesProcessed: scoredBusinesses.length,\n          averageScore: Math.round(qualityMetrics.averageScore),\n          highestScore: Math.max(\n            ...qualifiedLeads.map((l) => l.optimizedScore),\n            0\n          ),\n          lowestScore: Math.min(\n            ...qualifiedLeads.map((l) => l.optimizedScore),\n            0\n          ),\n          projectedQualificationRate: qualityMetrics.qualificationRate,\n          costEfficiency: {\n            averageCostPerBusiness: totalCost / scoredBusinesses.length || 0,\n            costPerQualifiedLead: totalCost / qualifiedLeads.length || 0,\n            costSavingsVsTraditional: budgetLimit - totalCost,\n          },\n          recommendation: \"Balanced threshold for optimal qualification rate\",\n        },\n        costEfficiency: {\n          businessesProcessed: scoredBusinesses.length,\n          averageScore: Math.round(qualityMetrics.averageScore),\n          totalCostSavings: budgetLimit - totalCost,\n          costSavingsPerBusiness:\n            (budgetLimit - totalCost) / scoredBusinesses.length || 0,\n        },\n      },\n      costs: {\n        totalCost,\n        costPerLead: totalCost / qualifiedLeads.length || 0,\n        costBreakdown: {\n          validation: totalCost,\n          discovery: 0.032, // Google Places search cost\n        },\n        validationCosts: totalCost,\n        costSavings: budgetLimit - totalCost,\n      },\n      performance: {\n        processingTime: `${(processingTime / 1000).toFixed(1)}s`,\n        avgTimePerLead: `${(\n          processingTime /\n          qualifiedLeads.length /\n          1000\n        ).toFixed(1)}s`,\n        iterationsCompleted: 1,\n      },\n      leads: qualifiedLeads,\n      metadata: {\n        timestamp: new Date().toISOString(),\n        version: \"Enhanced Discovery Engine v2.0\",\n      },\n    };\n\n    console.log(\n      `✅ Campaign ${campaignId} completed: ${qualifiedLeads.length}/${maxResults} qualified leads`\n    );\n    console.log(`💰 Total cost: $${totalCost.toFixed(4)}`);\n    console.log(`⏱️ Processing time: ${(processingTime / 1000).toFixed(1)}s`);\n\n    return new Response(JSON.stringify(response), {\n      headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      status: 200,\n    });\n  } catch (error) {\n    console.error(\"❌ Business Discovery Error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: \"Business discovery failed\",\n        details: error.message,\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n        status: 500,\n      }\n    );\n  }\n});\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":13,"duration":0.129},
{"type":"measure","name":"lsp.did_open","count":26,"duration":13.132},
{"type":"mark","name":"lsp.document_symbol","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"}}},
{"type":"mark","name":"lsp.document_symbol","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"}}},
{"type":"mark","name":"lsp.folding_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"}}},
{"type":"mark","name":"lsp.code_action","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"},"range":{"start":{"line":100,"character":4},"end":{"line":100,"character":4}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"}}},
{"type":"mark","name":"lsp.code_lens","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"}}},
{"type":"mark","name":"lsp.inlay_hint","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"},"range":{"start":{"line":29,"character":0},"end":{"line":145,"character":4}}}},
{"type":"mark","name":"lsp.inlay_hint","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"},"range":{"start":{"line":29,"character":0},"end":{"line":145,"character":4}}}},
{"type":"mark","name":"lsp.did_open","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","languageId":"json","version":1,"text":"{\n    \"name\": \"prospectpro-mcp-servers\",\n    \"version\": \"2.0.0\",\n    \"description\": \"Consolidated Model Context Protocol servers for ProspectPro AI-enhanced development\",\n    \"main\": \"production-server.js\",\n    \"scripts\": {\n        \"start:production\": \"node production-server.js\",\n        \"start:development\": \"node development-server.js\",\n        \"start:all\": \"concurrently \\\"npm run start:production\\\" \\\"npm run start:development\\\"\",\n        \"test\": \"node test-servers.js\",\n        \"validate\": \"npm run test && echo '✅ All MCP servers validated successfully'\"\n    },\n    \"dependencies\": {\n        \"@modelcontextprotocol/sdk\": \"^1.0.0\",\n        \"@supabase/supabase-js\": \"^2.39.0\"\n    },\n    \"devDependencies\": {\n        \"concurrently\": \"^8.2.2\"\n    },\n    \"keywords\": [\n        \"mcp\",\n        \"model-context-protocol\",\n        \"ai\",\n        \"prospectpro\",\n        \"lead-generation\"\n    ],\n    \"author\": \"ProspectPro Team\",\n    \"license\": \"MIT\"\n}"}}},
{"type":"measure","name":"lsp.did_open","count":27,"duration":0.057},
{"type":"mark","name":"lsp.did_change_batched","count":1,"args":"file:///workspaces/ProspectPro/mcp-servers/package.json"},
{"type":"measure","name":"lsp.did_change_batched","count":1,"duration":0.551},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":13,"duration":0.015},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":14,"duration":0.014},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":15,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":1,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":16,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":17,"duration":0.022},
{"type":"mark","name":"lsp.did_change_watched_files","count":1,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","type":2},{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","type":2}]}},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":2,"duration":0.001},
{"type":"mark","name":"tsc.request.$cleanupSemanticCache"},
{"type":"mark","name":"tsc.host.$cleanupSemanticCache","count":1,"args":"CleanupSemanticCache"},
{"type":"measure","name":"tsc.host.$cleanupSemanticCache","count":1,"duration":1.046},
{"type":"measure","name":"tsc.request.$cleanupSemanticCache","count":1,"duration":9.709},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":14,"duration":0.136},
{"type":"measure","name":"lsp.did_change_watched_files","count":1,"duration":73.78},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":18,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":19,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":20,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":21,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":22,"duration":0.025},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":3,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts",16]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":2,"duration":0.199},
{"type":"mark","name":"tsc.op.op_load","count":172,"args":"file:///workspaces/ProspectPro/api/business-discovery.js"},
{"type":"measure","name":"tsc.op.op_load","count":172,"duration":0.066},
{"type":"mark","name":"tsc.op.op_resolve","count":49,"args":{"base":"file:///workspaces/ProspectPro/api/business-discovery.js","specifiers":[[true,"express"],[true,"../modules/core/core-business-discovery-engine"],[true,"../modules/validators/enhanced-quality-scorer"],[true,"../modules/logging/logging-campaign-manager"],[true,"path"],[true,"fs"],[true,"../config/environment-loader"],[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":49,"duration":0.107},
{"type":"mark","name":"tsc.op.op_load","count":173,"args":"file:///workspaces/ProspectPro/api/campaign-export.js"},
{"type":"measure","name":"tsc.op.op_load","count":173,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":50,"args":{"base":"file:///workspaces/ProspectPro/api/campaign-export.js","specifiers":[[true,"express"],[true,"csv-writer"],[true,"path"],[true,"fs"],[true,"../config/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":50,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":174,"args":"file:///workspaces/ProspectPro/api/simple-export.js"},
{"type":"measure","name":"tsc.op.op_load","count":174,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":51,"args":{"base":"file:///workspaces/ProspectPro/api/simple-export.js","specifiers":[[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":51,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":175,"args":"file:///workspaces/ProspectPro/cloudbuild.yaml"},
{"type":"measure","name":"tsc.op.op_load","count":175,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":176,"args":"file:///workspaces/ProspectPro/config/environment-loader.js"},
{"type":"measure","name":"tsc.op.op_load","count":176,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":52,"args":{"base":"file:///workspaces/ProspectPro/config/environment-loader.js","specifiers":[[true,"path"],[true,"fs"],[true,"../modules/utils/supabase-vault-loader"],[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":52,"duration":0.043},
{"type":"mark","name":"tsc.op.op_load","count":177,"args":"file:///workspaces/ProspectPro/docs/CA_SOS_API_ANALYSIS.md"},
{"type":"measure","name":"tsc.op.op_load","count":177,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":178,"args":"file:///workspaces/ProspectPro/docs/CLOUD_RUN_DEPLOYMENT_FIX.md"},
{"type":"measure","name":"tsc.op.op_load","count":178,"duration":0.043},
{"type":"mark","name":"tsc.op.op_load","count":179,"args":"file:///workspaces/ProspectPro/docs/WEBHOOK_CONFIGURATION_GUIDE.md"},
{"type":"measure","name":"tsc.op.op_load","count":179,"duration":0.039},
{"type":"mark","name":"tsc.op.op_load","count":180,"args":"file:///workspaces/ProspectPro/mcp-servers/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":180,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":181,"args":"file:///workspaces/ProspectPro/modules/api-clients/california-sos-client.js"},
{"type":"measure","name":"tsc.op.op_load","count":181,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":53,"args":{"base":"file:///workspaces/ProspectPro/modules/api-clients/california-sos-client.js","specifiers":[[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":53,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":182,"args":"file:///workspaces/ProspectPro/public/app.js"},
{"type":"measure","name":"tsc.op.op_load","count":182,"duration":0.075},
{"type":"mark","name":"tsc.op.op_resolve","count":54,"args":{"base":"file:///workspaces/ProspectPro/public/supabase-app.js","specifiers":[[false,"https://cdn.skypack.dev/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":54,"duration":0.049},
{"type":"mark","name":"tsc.op.op_load","count":183,"args":"file:///workspaces/ProspectPro/scripts/cloud-run-diagnostic.js"},
{"type":"measure","name":"tsc.op.op_load","count":183,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":55,"args":{"base":"file:///workspaces/ProspectPro/scripts/cloud-run-diagnostic.js","specifiers":[[true,"./config/supabase"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":55,"duration":0.044},
{"type":"mark","name":"tsc.op.op_load","count":184,"args":"file:///workspaces/ProspectPro/scripts/cloud-run-service-diagnostic.js"},
{"type":"measure","name":"tsc.op.op_load","count":184,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":185,"args":"file:///workspaces/ProspectPro/scripts/verify-env-mapping.js"},
{"type":"measure","name":"tsc.op.op_load","count":185,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":56,"args":{"base":"file:///workspaces/ProspectPro/scripts/verify-env-mapping.js","specifiers":[[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":56,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":186,"args":"file:///workspaces/ProspectPro/server.js"},
{"type":"measure","name":"tsc.op.op_load","count":186,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":57,"args":{"base":"file:///workspaces/ProspectPro/server.js","specifiers":[[true,"dotenv"],[true,"./config/environment-loader"],[true,"express"],[true,"path"],[true,"./config/supabase"],[true,"./api/business-discovery"],[true,"express"],[true,"./api/simple-export"],[true,"express"],[true,"./api/webhooks/campaign-lifecycle"],[true,"express"],[true,"./api/webhooks/cost-alert"],[true,"express"],[true,"./api/webhooks/lead-enrichment"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":57,"duration":0.14},
{"type":"mark","name":"tsc.op.op_load","count":187,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":187,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":58,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":58,"duration":0.614},
{"type":"mark","name":"tsc.op.op_resolve","count":59,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":59,"duration":0.282},
{"type":"mark","name":"tsc.op.op_resolve","count":60,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":60,"duration":4.716},
{"type":"mark","name":"tsc.op.op_resolve","count":61,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":61,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":62,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":62,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":63,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":63,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":64,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":64,"duration":2.317},
{"type":"mark","name":"tsc.op.op_resolve","count":65,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":65,"duration":0.371},
{"type":"mark","name":"tsc.op.op_resolve","count":66,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":66,"duration":0.707},
{"type":"mark","name":"tsc.op.op_resolve","count":67,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":67,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":68,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":68,"duration":6.889},
{"type":"mark","name":"tsc.op.op_resolve","count":69,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":69,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":70,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":70,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":71,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":71,"duration":2.705},
{"type":"mark","name":"tsc.op.op_resolve","count":72,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":72,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":73,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":73,"duration":0.687},
{"type":"mark","name":"tsc.op.op_resolve","count":74,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":74,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":75,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":75,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":76,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":76,"duration":2.312},
{"type":"mark","name":"tsc.op.op_resolve","count":77,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":77,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":78,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":78,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":79,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":79,"duration":2.998},
{"type":"mark","name":"tsc.op.op_resolve","count":80,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":80,"duration":0.673},
{"type":"mark","name":"tsc.op.op_resolve","count":81,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":81,"duration":0.413},
{"type":"mark","name":"tsc.op.op_resolve","count":82,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":82,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":83,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":83,"duration":1.184},
{"type":"mark","name":"tsc.op.op_resolve","count":84,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":84,"duration":1.111},
{"type":"mark","name":"tsc.op.op_resolve","count":85,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":85,"duration":2.023},
{"type":"mark","name":"tsc.op.op_resolve","count":86,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":86,"duration":0.311},
{"type":"mark","name":"tsc.op.op_resolve","count":87,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":87,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":88,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":88,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":89,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":89,"duration":0.318},
{"type":"mark","name":"tsc.op.op_resolve","count":90,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":90,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":91,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":91,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":92,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":92,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":93,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":93,"duration":6.515},
{"type":"mark","name":"tsc.op.op_resolve","count":94,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":94,"duration":0.358},
{"type":"mark","name":"tsc.op.op_resolve","count":95,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":95,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":96,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":96,"duration":0.91},
{"type":"mark","name":"tsc.op.op_resolve","count":97,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":97,"duration":0.334},
{"type":"mark","name":"tsc.op.op_resolve","count":98,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":98,"duration":0.642},
{"type":"mark","name":"tsc.op.op_resolve","count":99,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":99,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":100,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":100,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":101,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":101,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":102,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":102,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":103,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":103,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":104,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enhanced-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":104,"duration":0.023},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":112,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":113,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":114,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":115,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":116,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":117,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":118,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":119,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":120,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":121,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":122,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":123,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":124,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":125,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":126,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":127,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":128,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":129,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":130,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":131,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":132,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":133,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":134,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":135,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":136,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":137,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":138,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":139,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":140,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":141,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":142,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":143,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":144,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":145,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":146,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":147,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":148,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":149,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":150,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":151,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":152,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":153,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":154,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":155,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":156,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":157,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":158,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":159,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":160,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":161,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":162,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":163,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":164,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":165,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":166,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":167,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":168,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":169,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":170,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":171,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":172,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":173,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":174,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":175,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":176,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":177,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":178,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":179,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":180,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":181,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":182,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":183,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":184,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":185,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":186,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":187,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":188,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":189,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":190,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":191,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":192,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":193,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":194,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":195,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":196,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":197,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":198,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":199,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":200,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":201,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":202,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":203,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":204,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":205,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":206,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":207,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":208,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":209,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":210,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":211,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":212,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":213,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":214,"duration":0.01},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":215,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":216,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":217,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":218,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":219,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":220,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":221,"duration":0.006},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":3,"duration":288.451},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":3,"duration":289.726},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":2,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":2,"duration":0.253},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":2,"duration":0.338},
{"type":"measure","name":"lsp.diagnostic","count":23,"duration":300.012},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":4,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",16]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":222,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":223,"duration":0.008},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":4,"duration":27.839},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":4,"duration":28.121},
{"type":"measure","name":"lsp.diagnostic","count":24,"duration":28.359},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":25,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"},"range":{"start":{"line":31,"character":0},"end":{"line":145,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":26,"duration":0.021},
{"type":"mark","name":"lsp.document_symbol","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"}}},
{"type":"mark","name":"lsp.inlay_hint","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":74,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":68,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":81,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":48,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.hover","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":124,"character":10}}},
{"type":"mark","name":"lsp.inlay_hint","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":63,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":124,"character":11},"end":{"line":124,"character":11}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":129,"character":10}}},
{"type":"mark","name":"lsp.inlay_hint","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":70,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.hover","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":128,"character":64}}},
{"type":"mark","name":"lsp.inlay_hint","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":72,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":72,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":74,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":81,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":82,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":82,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":82,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":87,"character":58},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":88,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":89,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":91,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":93,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":94,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":94,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":94,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.hover","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":61}}},
{"type":"mark","name":"lsp.did_open","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/README.md","languageId":"markdown","version":1,"text":"# Supabase CLI\n\n[![Coverage Status](https://coveralls.io/repos/github/supabase/cli/badge.svg?branch=main)](https://coveralls.io/github/supabase/cli?branch=main) [![Bitbucket Pipelines](https://img.shields.io/bitbucket/pipelines/supabase-cli/setup-cli/master?style=flat-square&label=Bitbucket%20Canary)](https://bitbucket.org/supabase-cli/setup-cli/pipelines) [![Gitlab Pipeline Status](https://img.shields.io/gitlab/pipeline-status/sweatybridge%2Fsetup-cli?label=Gitlab%20Canary)\n](https://gitlab.com/sweatybridge/setup-cli/-/pipelines)\n\n[Supabase](https://supabase.io) is an open source Firebase alternative. We're building the features of Firebase using enterprise-grade open source tools.\n\nThis repository contains all the functionality for Supabase CLI.\n\n- [x] Running Supabase locally\n- [x] Managing database migrations\n- [x] Creating and deploying Supabase Functions\n- [x] Generating types directly from your database schema\n- [x] Making authenticated HTTP requests to [Management API](https://supabase.com/docs/reference/api/introduction)\n\n## Getting started\n\n### Install the CLI\n\nAvailable via [NPM](https://www.npmjs.com) as dev dependency. To install:\n\n```bash\nnpm i supabase --save-dev\n```\n\nTo install the beta release channel:\n\n```bash\nnpm i supabase@beta --save-dev\n```\n\nWhen installing with yarn 4, you need to disable experimental fetch with the following nodejs config.\n\n```\nNODE_OPTIONS=--no-experimental-fetch yarn add supabase\n```\n\n> **Note**\nFor Bun versions below v1.0.17, you must add `supabase` as a [trusted dependency](https://bun.sh/guides/install/trusted) before running `bun add -D supabase`.\n\n<details>\n  <summary><b>macOS</b></summary>\n\n  Available via [Homebrew](https://brew.sh). To install:\n\n  ```sh\n  brew install supabase/tap/supabase\n  ```\n\n  To install the beta release channel:\n  \n  ```sh\n  brew install supabase/tap/supabase-beta\n  brew link --overwrite supabase-beta\n  ```\n  \n  To upgrade:\n\n  ```sh\n  brew upgrade supabase\n  ```\n</details>\n\n<details>\n  <summary><b>Windows</b></summary>\n\n  Available via [Scoop](https://scoop.sh). To install:\n\n  ```powershell\n  scoop bucket add supabase https://github.com/supabase/scoop-bucket.git\n  scoop install supabase\n  ```\n\n  To upgrade:\n\n  ```powershell\n  scoop update supabase\n  ```\n</details>\n\n<details>\n  <summary><b>Linux</b></summary>\n\n  Available via [Homebrew](https://brew.sh) and Linux packages.\n\n  #### via Homebrew\n\n  To install:\n\n  ```sh\n  brew install supabase/tap/supabase\n  ```\n\n  To upgrade:\n\n  ```sh\n  brew upgrade supabase\n  ```\n\n  #### via Linux packages\n\n  Linux packages are provided in [Releases](https://github.com/supabase/cli/releases). To install, download the `.apk`/`.deb`/`.rpm`/`.pkg.tar.zst` file depending on your package manager and run the respective commands.\n\n  ```sh\n  sudo apk add --allow-untrusted <...>.apk\n  ```\n\n  ```sh\n  sudo dpkg -i <...>.deb\n  ```\n\n  ```sh\n  sudo rpm -i <...>.rpm\n  ```\n\n  ```sh\n  sudo pacman -U <...>.pkg.tar.zst\n  ```\n</details>\n\n<details>\n  <summary><b>Other Platforms</b></summary>\n\n  You can also install the CLI via [go modules](https://go.dev/ref/mod#go-install) without the help of package managers.\n\n  ```sh\n  go install github.com/supabase/cli@latest\n  ```\n\n  Add a symlink to the binary in `$PATH` for easier access:\n\n  ```sh\n  ln -s \"$(go env GOPATH)/bin/cli\" /usr/bin/supabase\n  ```\n\n  This works on other non-standard Linux distros.\n</details>\n\n<details>\n  <summary><b>Community Maintained Packages</b></summary>\n\n  Available via [pkgx](https://pkgx.sh/). Package script [here](https://github.com/pkgxdev/pantry/blob/main/projects/supabase.com/cli/package.yml).\n  To install in your working directory:\n\n  ```bash\n  pkgx install supabase\n  ```\n\n  Available via [Nixpkgs](https://nixos.org/). Package script [here](https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/tools/supabase-cli/default.nix).\n</details>\n\n### Run the CLI\n\n```bash\nsupabase bootstrap\n```\n\nOr using npx:\n\n```bash\nnpx supabase bootstrap\n```\n\nThe bootstrap command will guide you through the process of setting up a Supabase project using one of the [starter](https://github.com/supabase-community/supabase-samples/blob/main/samples.json) templates.\n\n## Docs\n\nCommand & config reference can be found [here](https://supabase.com/docs/reference/cli/about).\n\n## Breaking changes\n\nWe follow semantic versioning for changes that directly impact CLI commands, flags, and configurations.\n\nHowever, due to dependencies on other service images, we cannot guarantee that schema migrations, seed.sql, and generated types will always work for the same CLI major version. If you need such guarantees, we encourage you to pin a specific version of CLI in package.json.\n\n## Developing\n\nTo run from source:\n\n```sh\n# Go >= 1.22\ngo run . help\n```\n"}}},
{"type":"measure","name":"lsp.did_open","count":28,"duration":0.083},
{"type":"mark","name":"lsp.goto_definition","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.hover","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.document_highlight","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.goto_definition","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.code_action","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_highlight","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.inlay_hint","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":89,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":96,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":87,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":87,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.document_highlight","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.inlay_hint","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":78,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.hover","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":145,"character":18}}},
{"type":"mark","name":"lsp.inlay_hint","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":74,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":74,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":74,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":2,"args":"file:///workspaces/ProspectPro/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":2,"duration":12.496},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":27,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":28,"duration":0.025},
{"type":"mark","name":"lsp.code_action","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":2,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":29,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":30,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":31,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":32,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":33,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":34,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":35,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":36,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":37,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":38,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":39,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":40,"duration":0.002},
{"type":"mark","name":"lsp.document_highlight","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.document_highlight","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":144,"character":62}}},
{"type":"mark","name":"lsp.did_change_batched","count":3,"args":"file:///workspaces/ProspectPro/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":3,"duration":0.125},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":41,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":42,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":3,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":43,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":44,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":45,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":46,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":47,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":48,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":49,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":50,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":51,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":52,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":53,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":54,"duration":0.002},
{"type":"mark","name":"lsp.did_open","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/CHANGELOG.md","languageId":"markdown","version":1,"text":"# ProspectPro Changelog\n\nAll notable changes to ProspectPro will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [3.0.0] - 2025-09-23\n\n### Added\n- Enhanced schema cache handling for production initialization\n- Graceful degraded mode startup capability  \n- Schema cache refresh utilities and automation\n- Comprehensive production diagnostics and monitoring\n- Enhanced Supabase configuration with automatic recovery\n- Production-ready error handling and user guidance\n\n### Changed\n- Improved server startup process with detailed error reporting\n- Enhanced database connection testing with cache management\n- Reorganized documentation structure with archive branches\n- Updated production deployment workflow with artifact-based configuration\n\n### Fixed\n- Schema cache initialization issues after database updates\n- Production server startup failures during cache refresh\n- Database connectivity issues in production environment\n\n## [2.0.0] - 2025-09-22\n\n### Added\n- Complete production validation system\n- Enhanced deployment pipeline with GitHub Actions\n- Comprehensive database schema with RLS policies\n- Multi-source business discovery with API integrations\n\n### Changed\n- Migration to production-ready architecture\n- Enhanced error handling and logging\n- Improved cost tracking and budget management\n\n## [1.0.0] - Initial Release\n\n### Added\n- Basic lead generation functionality\n- Supabase database integration\n- Simple web interface\n- Core business discovery features\n"}}},
{"type":"measure","name":"lsp.did_open","count":29,"duration":0.059},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":55,"duration":0.023},
{"type":"mark","name":"lsp.code_action","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":4,"args":"file:///workspaces/ProspectPro/CHANGELOG.md"},
{"type":"measure","name":"lsp.did_change_batched","count":4,"duration":0.09},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":56,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":57,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":58,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":4,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":59,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":60,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":61,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":62,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":63,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":64,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":65,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","languageId":"jsonc","version":1,"text":"{\n  \"recommendations\": [\n    // Essential Development Tools\n    \"esbenp.prettier-vscode\",\n    \"dbaeumer.vscode-eslint\",\n    \"eamodio.gitlens\",\n\n    // API Development & Testing\n    \"humao.rest-client\",\n\n    // Docker & Container Support\n    \"ms-azuretools.vscode-docker\",\n\n    // GitHub & AI Integration\n    \"github.copilot\",\n    \"github.copilot-chat\",\n\n    // Supabase & Database (Deno restricted to functions only)\n    \"supabase.supabase-vscode\",\n    \"denoland.vscode-deno\",\n\n    // Documentation & Configuration\n    \"davidanson.vscode-markdownlint\",\n    \"redhat.vscode-yaml\"\n  ],\n  \"unwantedRecommendations\": [\n    // Avoiding conflicts and redundancy\n    \"rangav.vscode-thunder-client\",\n    \"ms-vscode.js-debug-nightly\",\n    \"vscjava.vscode-java-debug\",\n    \"ms-python.python\",\n    \"ms-vscode.vscode-typescript-next\",\n    \"ms-vscode.vscode-json\"\n  ]\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":30,"duration":0.048},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":66,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":67,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":68,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":69,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":70,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":71,"duration":0.026},
{"type":"mark","name":"lsp.did_change_batched","count":5,"args":"file:///workspaces/ProspectPro/.vscode/extensions.json"},
{"type":"measure","name":"lsp.did_change_batched","count":5,"duration":0.866},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":72,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":73,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":74,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":75,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":5,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":76,"duration":0.001},
{"type":"mark","name":"lsp.did_change_watched_files","count":2,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","type":2}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":2,"duration":0.025},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":77,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":78,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":79,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":80,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":81,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":82,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":83,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":84,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":85,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":86,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":87,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":31,"duration":0.041},
{"type":"mark","name":"lsp.did_change_batched","count":6,"args":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":6,"duration":2.125},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":88,"duration":0.016},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":89,"duration":0.011},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":6,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":90,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":91,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":92,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":93,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":94,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":95,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":96,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":97,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":98,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":99,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":100,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":101,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":102,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":103,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":104,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":105,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":7,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"lsp.did_change_batched","count":7,"duration":0.469},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":106,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":8,"args":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":8,"duration":2.49},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":107,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":9,"args":"file:///workspaces/ProspectPro/CHANGELOG.md"},
{"type":"measure","name":"lsp.did_change_batched","count":9,"duration":0.07},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":108,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":7,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":8,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":109,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":10,"args":"file:///workspaces/ProspectPro/.github/copilot-instructions.md"},
{"type":"measure","name":"lsp.did_change_batched","count":10,"duration":0.146},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":110,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":11,"args":"file:///workspaces/ProspectPro/.vscode/prospectpro-supabase.code-workspace"},
{"type":"measure","name":"lsp.did_change_batched","count":11,"duration":14.752},
{"type":"mark","name":"lsp.did_change_batched","count":12,"args":"file:///workspaces/ProspectPro/.vscode/extensions.json"},
{"type":"measure","name":"lsp.did_change_batched","count":12,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":111,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":112,"duration":0.0},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":113,"duration":0.0},
{"type":"mark","name":"lsp.did_change_batched","count":13,"args":"file:///workspaces/ProspectPro/README.md"},
{"type":"measure","name":"lsp.did_change_batched","count":13,"duration":1.344},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":114,"duration":0.001},
{"type":"mark","name":"lsp.did_change_watched_files","count":3,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","type":2},{"uri":"file:///workspaces/ProspectPro/package.json","type":2},{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","type":2},{"uri":"file:///workspaces/ProspectPro/package.json","type":2}]}},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":3,"duration":0.001},
{"type":"mark","name":"tsc.request.$cleanupSemanticCache"},
{"type":"mark","name":"tsc.host.$cleanupSemanticCache","count":2,"args":"CleanupSemanticCache"},
{"type":"measure","name":"tsc.host.$cleanupSemanticCache","count":2,"duration":112.763},
{"type":"measure","name":"tsc.request.$cleanupSemanticCache","count":2,"duration":116.322},
{"type":"measure","name":"lsp.did_change_watched_files","count":3,"duration":147.345},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":15,"duration":0.131},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":9,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":10,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":115,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":116,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":117,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":118,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":119,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":120,"duration":0.032},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":5,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts",18]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":3,"duration":0.249},
{"type":"mark","name":"tsc.op.op_load","count":188,"args":"file:///workspaces/ProspectPro/.vscode/extensions.json"},
{"type":"measure","name":"tsc.op.op_load","count":188,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":189,"args":"file:///workspaces/ProspectPro/CHANGELOG.md"},
{"type":"measure","name":"tsc.op.op_load","count":189,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":190,"args":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},
{"type":"measure","name":"tsc.op.op_load","count":190,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":191,"args":"file:///workspaces/ProspectPro/README.md"},
{"type":"measure","name":"tsc.op.op_load","count":191,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":105,"args":{"base":"file:///workspaces/ProspectPro/api/business-discovery.js","specifiers":[[true,"express"],[true,"../modules/core/core-business-discovery-engine"],[true,"../modules/validators/enhanced-quality-scorer"],[true,"../modules/logging/logging-campaign-manager"],[true,"path"],[true,"fs"],[true,"../config/environment-loader"],[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":105,"duration":0.118},
{"type":"mark","name":"tsc.op.op_resolve","count":106,"args":{"base":"file:///workspaces/ProspectPro/api/campaign-export.js","specifiers":[[true,"express"],[true,"csv-writer"],[true,"path"],[true,"fs"],[true,"../config/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":106,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":107,"args":{"base":"file:///workspaces/ProspectPro/api/simple-export.js","specifiers":[[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":107,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":108,"args":{"base":"file:///workspaces/ProspectPro/config/environment-loader.js","specifiers":[[true,"path"],[true,"fs"],[true,"../modules/utils/supabase-vault-loader"],[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":108,"duration":0.042},
{"type":"mark","name":"tsc.op.op_load","count":192,"args":"file:///workspaces/ProspectPro/mcp-servers/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":192,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":109,"args":{"base":"file:///workspaces/ProspectPro/modules/api-clients/california-sos-client.js","specifiers":[[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":109,"duration":0.014},
{"type":"mark","name":"tsc.op.op_load","count":193,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":193,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":110,"args":{"base":"file:///workspaces/ProspectPro/public/supabase-app.js","specifiers":[[false,"https://cdn.skypack.dev/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":110,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":111,"args":{"base":"file:///workspaces/ProspectPro/scripts/cloud-run-diagnostic.js","specifiers":[[true,"./config/supabase"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":111,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":112,"args":{"base":"file:///workspaces/ProspectPro/scripts/verify-env-mapping.js","specifiers":[[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":112,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":113,"args":{"base":"file:///workspaces/ProspectPro/server.js","specifiers":[[true,"dotenv"],[true,"./config/environment-loader"],[true,"express"],[true,"path"],[true,"./config/supabase"],[true,"./api/business-discovery"],[true,"express"],[true,"./api/simple-export"],[true,"express"],[true,"./api/webhooks/campaign-lifecycle"],[true,"express"],[true,"./api/webhooks/cost-alert"],[true,"express"],[true,"./api/webhooks/lead-enrichment"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":113,"duration":0.128},
{"type":"mark","name":"tsc.op.op_resolve","count":114,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":114,"duration":4.808},
{"type":"mark","name":"tsc.op.op_resolve","count":115,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":115,"duration":4.314},
{"type":"mark","name":"tsc.op.op_resolve","count":116,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":116,"duration":31.646},
{"type":"mark","name":"tsc.op.op_resolve","count":117,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":117,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":118,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":118,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":119,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":119,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":120,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":120,"duration":7.498},
{"type":"mark","name":"tsc.op.op_resolve","count":121,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":121,"duration":0.359},
{"type":"mark","name":"tsc.op.op_resolve","count":122,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":122,"duration":0.711},
{"type":"mark","name":"tsc.op.op_resolve","count":123,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":123,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":124,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":124,"duration":23.444},
{"type":"mark","name":"tsc.op.op_resolve","count":125,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":125,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":126,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":126,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":127,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":127,"duration":6.509},
{"type":"mark","name":"tsc.op.op_resolve","count":128,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":128,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":129,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":129,"duration":4.663},
{"type":"mark","name":"tsc.op.op_resolve","count":130,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":130,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":131,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":131,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":132,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":132,"duration":7.335},
{"type":"mark","name":"tsc.op.op_resolve","count":133,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":133,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":134,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":134,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":135,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":135,"duration":9.706},
{"type":"mark","name":"tsc.op.op_resolve","count":136,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":136,"duration":0.602},
{"type":"mark","name":"tsc.op.op_resolve","count":137,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":137,"duration":0.933},
{"type":"mark","name":"tsc.op.op_resolve","count":138,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":138,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":139,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":139,"duration":1.075},
{"type":"mark","name":"tsc.op.op_resolve","count":140,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":140,"duration":0.988},
{"type":"mark","name":"tsc.op.op_resolve","count":141,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":141,"duration":2.152},
{"type":"mark","name":"tsc.op.op_resolve","count":142,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":142,"duration":0.284},
{"type":"mark","name":"tsc.op.op_resolve","count":143,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":143,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":144,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":144,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":145,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":145,"duration":0.266},
{"type":"mark","name":"tsc.op.op_resolve","count":146,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":146,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":147,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":147,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":148,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":148,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":149,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":149,"duration":7.104},
{"type":"mark","name":"tsc.op.op_resolve","count":150,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":150,"duration":1.233},
{"type":"mark","name":"tsc.op.op_resolve","count":151,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":151,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":152,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":152,"duration":0.825},
{"type":"mark","name":"tsc.op.op_resolve","count":153,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":153,"duration":0.294},
{"type":"mark","name":"tsc.op.op_resolve","count":154,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":154,"duration":0.572},
{"type":"mark","name":"tsc.op.op_resolve","count":155,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":155,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":156,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":156,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":157,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":157,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":158,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":158,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":159,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":159,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":160,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enhanced-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":160,"duration":0.023},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":224,"duration":0.012},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":225,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":226,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":227,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":228,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":229,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":230,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":231,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":232,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":233,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":234,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":235,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":236,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":237,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":238,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":239,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":240,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":241,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":242,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":243,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":244,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":245,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":246,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":247,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":248,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":249,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":250,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":251,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":252,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":253,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":254,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":255,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":256,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":257,"duration":8.021},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":258,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":259,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":260,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":261,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":262,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":263,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":264,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":265,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":266,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":267,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":268,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":269,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":270,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":271,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":272,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":273,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":274,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":275,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":276,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":277,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":278,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":279,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":280,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":281,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":282,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":283,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":284,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":285,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":286,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":287,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":288,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":289,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":290,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":291,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":292,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":293,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":294,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":295,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":296,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":297,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":298,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":299,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":300,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":301,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":302,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":303,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":304,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":305,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":306,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":307,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":308,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":309,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":310,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":311,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":312,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":313,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":314,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":315,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":316,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":317,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":318,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":319,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":320,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":321,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":322,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":323,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":324,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":325,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":326,"duration":0.01},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":327,"duration":0.014},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":328,"duration":0.015},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":329,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":330,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":331,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":332,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":333,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":334,"duration":0.006},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":5,"duration":557.13},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":5,"duration":560.224},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":3,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":3,"duration":0.152},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":3,"duration":0.233},
{"type":"measure","name":"lsp.diagnostic","count":121,"duration":572.269},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":6,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",18]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":335,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":336,"duration":0.007},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":6,"duration":20.615},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":6,"duration":20.842},
{"type":"measure","name":"lsp.diagnostic","count":122,"duration":21.016},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":11,"duration":0.024},
{"type":"mark","name":"lsp.code_action","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":12,"duration":0.01},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":13,"duration":0.011},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":14,"duration":0.012},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":15,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":131,"character":9}}},
{"type":"mark","name":"lsp.inlay_hint","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":82,"character":0},"end":{"line":148,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":123,"duration":0.015},
{"type":"mark","name":"lsp.did_change_watched_files","count":4,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/extensions.json","type":2},{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json","type":2}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":4,"duration":0.037},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":124,"duration":0.02},
{"type":"mark","name":"lsp.code_action","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"range":{"start":{"line":144,"character":62},"end":{"line":144,"character":62}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":125,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":126,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":127,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":128,"duration":0.021},
{"type":"mark","name":"lsp.hover","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DEPLOYMENT_SUCCESS.md"},"position":{"line":133,"character":29}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":129,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":130,"duration":0.02},
{"type":"mark","name":"lsp.code_action","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"}}},
{"type":"mark","name":"lsp.inlay_hint","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":76,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"}}},
{"type":"mark","name":"lsp.code_lens","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"}}},
{"type":"mark","name":"lsp.code_action","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.folding_range","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"}}},
{"type":"mark","name":"lsp.code_lens","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"}}},
{"type":"mark","name":"lsp.inlay_hint","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":80,"character":0}}}},
{"type":"mark","name":"lsp.hover","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"position":{"line":17,"character":66}}},
{"type":"mark","name":"lsp.hover","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"position":{"line":17,"character":63}}},
{"type":"mark","name":"lsp.hover","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"position":{"line":17,"character":62}}},
{"type":"mark","name":"lsp.inlay_hint","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":82,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/MIGRATION_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":77,"character":31}}}},
{"type":"mark","name":"lsp.did_change_batched","count":14,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"lsp.did_change_batched","count":14,"duration":0.102},
{"type":"mark","name":"lsp.code_action","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":131,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":132,"duration":0.002},
{"type":"mark","name":"lsp.document_symbol","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.code_lens","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.folding_range","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":133,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":134,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":135,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":136,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":137,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":5,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/package.json","type":2},{"uri":"file:///workspaces/ProspectPro/package.json","type":2}]}},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":4,"duration":0.001},
{"type":"mark","name":"tsc.request.$cleanupSemanticCache"},
{"type":"mark","name":"tsc.host.$cleanupSemanticCache","count":3,"args":"CleanupSemanticCache"},
{"type":"measure","name":"tsc.host.$cleanupSemanticCache","count":3,"duration":144.286},
{"type":"measure","name":"tsc.request.$cleanupSemanticCache","count":3,"duration":147.013},
{"type":"measure","name":"lsp.did_change_watched_files","count":5,"duration":171.565},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":16,"duration":0.139},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":7,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",20]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":4,"duration":0.225},
{"type":"mark","name":"tsc.op.op_resolve","count":161,"args":{"base":"file:///workspaces/ProspectPro/api/business-discovery.js","specifiers":[[true,"express"],[true,"../modules/core/core-business-discovery-engine"],[true,"../modules/validators/enhanced-quality-scorer"],[true,"../modules/logging/logging-campaign-manager"],[true,"path"],[true,"fs"],[true,"../config/environment-loader"],[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":161,"duration":0.104},
{"type":"mark","name":"tsc.op.op_resolve","count":162,"args":{"base":"file:///workspaces/ProspectPro/api/campaign-export.js","specifiers":[[true,"express"],[true,"csv-writer"],[true,"path"],[true,"fs"],[true,"../config/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":162,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":163,"args":{"base":"file:///workspaces/ProspectPro/api/simple-export.js","specifiers":[[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":163,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":164,"args":{"base":"file:///workspaces/ProspectPro/config/environment-loader.js","specifiers":[[true,"path"],[true,"fs"],[true,"../modules/utils/supabase-vault-loader"],[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":164,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":165,"args":{"base":"file:///workspaces/ProspectPro/modules/api-clients/california-sos-client.js","specifiers":[[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":165,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":194,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":194,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":166,"args":{"base":"file:///workspaces/ProspectPro/public/supabase-app.js","specifiers":[[false,"https://cdn.skypack.dev/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":166,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":167,"args":{"base":"file:///workspaces/ProspectPro/scripts/cloud-run-diagnostic.js","specifiers":[[true,"./config/supabase"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":167,"duration":0.077},
{"type":"mark","name":"tsc.op.op_resolve","count":168,"args":{"base":"file:///workspaces/ProspectPro/scripts/verify-env-mapping.js","specifiers":[[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":168,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":169,"args":{"base":"file:///workspaces/ProspectPro/server.js","specifiers":[[true,"dotenv"],[true,"./config/environment-loader"],[true,"express"],[true,"path"],[true,"./config/supabase"],[true,"./api/business-discovery"],[true,"express"],[true,"./api/simple-export"],[true,"express"],[true,"./api/webhooks/campaign-lifecycle"],[true,"express"],[true,"./api/webhooks/cost-alert"],[true,"express"],[true,"./api/webhooks/lead-enrichment"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":169,"duration":0.119},
{"type":"mark","name":"tsc.op.op_resolve","count":170,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":170,"duration":0.47},
{"type":"mark","name":"tsc.op.op_resolve","count":171,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":171,"duration":0.301},
{"type":"mark","name":"tsc.op.op_resolve","count":172,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":172,"duration":4.378},
{"type":"mark","name":"tsc.op.op_resolve","count":173,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":173,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":174,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":174,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":175,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":175,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":176,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":176,"duration":2.206},
{"type":"mark","name":"tsc.op.op_resolve","count":177,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":177,"duration":0.417},
{"type":"mark","name":"tsc.op.op_resolve","count":178,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":178,"duration":0.648},
{"type":"mark","name":"tsc.op.op_resolve","count":179,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":179,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":180,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":180,"duration":6.574},
{"type":"mark","name":"tsc.op.op_resolve","count":181,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":181,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":182,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":182,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":183,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":183,"duration":2.59},
{"type":"mark","name":"tsc.op.op_resolve","count":184,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":184,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":185,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":185,"duration":0.631},
{"type":"mark","name":"tsc.op.op_resolve","count":186,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":186,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":187,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":187,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":188,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":188,"duration":2.304},
{"type":"mark","name":"tsc.op.op_resolve","count":189,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":189,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":190,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":190,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":191,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":191,"duration":3.096},
{"type":"mark","name":"tsc.op.op_resolve","count":192,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":192,"duration":0.746},
{"type":"mark","name":"tsc.op.op_resolve","count":193,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":193,"duration":0.415},
{"type":"mark","name":"tsc.op.op_resolve","count":194,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":194,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":195,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":195,"duration":1.129},
{"type":"mark","name":"tsc.op.op_resolve","count":196,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":196,"duration":1.088},
{"type":"mark","name":"tsc.op.op_resolve","count":197,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":197,"duration":2.079},
{"type":"mark","name":"tsc.op.op_resolve","count":198,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":198,"duration":0.327},
{"type":"mark","name":"tsc.op.op_resolve","count":199,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":199,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":200,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":200,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":201,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":201,"duration":0.291},
{"type":"mark","name":"tsc.op.op_resolve","count":202,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":202,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":203,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":203,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":204,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":204,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":205,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":205,"duration":6.398},
{"type":"mark","name":"tsc.op.op_resolve","count":206,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":206,"duration":0.376},
{"type":"mark","name":"tsc.op.op_resolve","count":207,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":207,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":208,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":208,"duration":0.87},
{"type":"mark","name":"tsc.op.op_resolve","count":209,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":209,"duration":0.343},
{"type":"mark","name":"tsc.op.op_resolve","count":210,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":210,"duration":0.614},
{"type":"mark","name":"tsc.op.op_resolve","count":211,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":211,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":212,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":212,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":213,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":213,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":214,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":214,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":215,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":215,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":216,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enhanced-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":216,"duration":0.024},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":337,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":338,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":339,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":340,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":341,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":342,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":343,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":344,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":345,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":346,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":347,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":348,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":349,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":350,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":351,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":352,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":353,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":354,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":355,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":356,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":357,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":358,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":359,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":360,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":361,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":362,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":363,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":364,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":365,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":366,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":367,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":368,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":369,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":370,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":371,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":372,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":373,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":374,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":375,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":376,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":377,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":378,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":379,"duration":0.541},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":380,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":381,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":382,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":383,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":384,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":385,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":386,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":387,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":388,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":389,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":390,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":391,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":392,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":393,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":394,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":395,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":396,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":397,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":398,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":399,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":400,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":401,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":402,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":403,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":404,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":405,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":406,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":407,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":408,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":409,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":410,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":411,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":412,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":413,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":414,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":415,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":416,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":417,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":418,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":419,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":420,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":421,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":422,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":423,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":424,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":425,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":426,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":427,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":428,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":429,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":430,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":431,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":432,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":433,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":434,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":435,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":436,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":437,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":438,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":439,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":440,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":441,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":442,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":443,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":444,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":445,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":446,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":447,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":448,"duration":0.007},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":7,"duration":234.462},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":7,"duration":235.983},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":4,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":4,"duration":0.19},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":4,"duration":0.256},
{"type":"measure","name":"lsp.diagnostic","count":138,"duration":238.813},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":139,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":140,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":141,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":16,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":142,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":143,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":144,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":145,"duration":0.016},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":146,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":147,"duration":0.022},
{"type":"mark","name":"lsp.code_action","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.inlay_hint","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.inlay_hint","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":32,"character":19}}}},
{"type":"mark","name":"lsp.did_open","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/DOMAIN_DEPLOYMENT_GUIDE.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":32,"duration":0.039},
{"type":"mark","name":"lsp.did_change_batched","count":15,"args":"file:///workspaces/ProspectPro/DOMAIN_DEPLOYMENT_GUIDE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":15,"duration":3.559},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":148,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":149,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":17,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":150,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":151,"duration":0.019},
{"type":"mark","name":"lsp.code_action","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":152,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":153,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":154,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":8,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts",20]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":449,"duration":0.008},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":8,"duration":36.918},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":8,"duration":37.078},
{"type":"measure","name":"lsp.diagnostic","count":155,"duration":43.382},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":156,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":157,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":158,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":159,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":160,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":161,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":162,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":163,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":164,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":165,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":166,"duration":0.002},
{"type":"mark","name":"lsp.code_action","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":18,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":32,"character":19}}}},
{"type":"mark","name":"lsp.did_change_batched","count":16,"args":"file:///workspaces/ProspectPro/DOMAIN_DEPLOYMENT_GUIDE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":16,"duration":3.542},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":167,"duration":0.001},
{"type":"mark","name":"lsp.did_change_watched_files","count":6,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/package.json","type":2},{"uri":"file:///workspaces/ProspectPro/package.json","type":2}]}},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":5,"duration":0.001},
{"type":"mark","name":"tsc.request.$cleanupSemanticCache"},
{"type":"mark","name":"tsc.host.$cleanupSemanticCache","count":4,"args":"CleanupSemanticCache"},
{"type":"measure","name":"tsc.host.$cleanupSemanticCache","count":4,"duration":1.45},
{"type":"measure","name":"tsc.request.$cleanupSemanticCache","count":4,"duration":4.156},
{"type":"measure","name":"lsp.did_change_watched_files","count":6,"duration":34.289},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":17,"duration":0.122},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":168,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":19,"duration":0.022},
{"type":"mark","name":"lsp.code_action","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":169,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":170,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":171,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.code_action","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":172,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":9,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts",22]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":5,"duration":0.23},
{"type":"mark","name":"tsc.op.op_load","count":195,"args":"file:///workspaces/ProspectPro/DOMAIN_DEPLOYMENT_GUIDE.md"},
{"type":"measure","name":"tsc.op.op_load","count":195,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":217,"args":{"base":"file:///workspaces/ProspectPro/api/business-discovery.js","specifiers":[[true,"express"],[true,"../modules/core/core-business-discovery-engine"],[true,"../modules/validators/enhanced-quality-scorer"],[true,"../modules/logging/logging-campaign-manager"],[true,"path"],[true,"fs"],[true,"../config/environment-loader"],[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":217,"duration":0.096},
{"type":"mark","name":"tsc.op.op_resolve","count":218,"args":{"base":"file:///workspaces/ProspectPro/api/campaign-export.js","specifiers":[[true,"express"],[true,"csv-writer"],[true,"path"],[true,"fs"],[true,"../config/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":218,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":219,"args":{"base":"file:///workspaces/ProspectPro/api/simple-export.js","specifiers":[[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":219,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":220,"args":{"base":"file:///workspaces/ProspectPro/config/environment-loader.js","specifiers":[[true,"path"],[true,"fs"],[true,"../modules/utils/supabase-vault-loader"],[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":220,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":221,"args":{"base":"file:///workspaces/ProspectPro/modules/api-clients/california-sos-client.js","specifiers":[[true,"dotenv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":221,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":196,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":196,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":222,"args":{"base":"file:///workspaces/ProspectPro/public/supabase-app.js","specifiers":[[false,"https://cdn.skypack.dev/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":222,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":223,"args":{"base":"file:///workspaces/ProspectPro/scripts/cloud-run-diagnostic.js","specifiers":[[true,"./config/supabase"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":223,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":224,"args":{"base":"file:///workspaces/ProspectPro/scripts/verify-env-mapping.js","specifiers":[[true,"fs"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":224,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":225,"args":{"base":"file:///workspaces/ProspectPro/server.js","specifiers":[[true,"dotenv"],[true,"./config/environment-loader"],[true,"express"],[true,"path"],[true,"./config/supabase"],[true,"./api/business-discovery"],[true,"express"],[true,"./api/simple-export"],[true,"express"],[true,"./api/webhooks/campaign-lifecycle"],[true,"express"],[true,"./api/webhooks/cost-alert"],[true,"express"],[true,"./api/webhooks/lead-enrichment"],[true,"express"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":225,"duration":0.142},
{"type":"mark","name":"tsc.op.op_resolve","count":226,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":226,"duration":0.463},
{"type":"mark","name":"tsc.op.op_resolve","count":227,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":227,"duration":0.34},
{"type":"mark","name":"tsc.op.op_resolve","count":228,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":228,"duration":3.483},
{"type":"mark","name":"tsc.op.op_resolve","count":229,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":229,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":230,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":230,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":231,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":231,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":232,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":232,"duration":1.478},
{"type":"mark","name":"tsc.op.op_resolve","count":233,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":233,"duration":0.267},
{"type":"mark","name":"tsc.op.op_resolve","count":234,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":234,"duration":0.476},
{"type":"mark","name":"tsc.op.op_resolve","count":235,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":235,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":236,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":236,"duration":4.639},
{"type":"mark","name":"tsc.op.op_resolve","count":237,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":237,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":238,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":238,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":239,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":239,"duration":1.703},
{"type":"mark","name":"tsc.op.op_resolve","count":240,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":240,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":241,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":241,"duration":0.39},
{"type":"mark","name":"tsc.op.op_resolve","count":242,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":242,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":243,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":243,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":244,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":244,"duration":1.48},
{"type":"mark","name":"tsc.op.op_resolve","count":245,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":245,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":246,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":246,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":247,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":247,"duration":2.312},
{"type":"mark","name":"tsc.op.op_resolve","count":248,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":248,"duration":0.442},
{"type":"mark","name":"tsc.op.op_resolve","count":249,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":249,"duration":0.254},
{"type":"mark","name":"tsc.op.op_resolve","count":250,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":250,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":251,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":251,"duration":0.828},
{"type":"mark","name":"tsc.op.op_resolve","count":252,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":252,"duration":1.171},
{"type":"mark","name":"tsc.op.op_resolve","count":253,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":253,"duration":1.551},
{"type":"mark","name":"tsc.op.op_resolve","count":254,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":254,"duration":0.325},
{"type":"mark","name":"tsc.op.op_resolve","count":255,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":255,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":256,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":256,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":257,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":257,"duration":0.328},
{"type":"mark","name":"tsc.op.op_resolve","count":258,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":258,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":259,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":259,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":260,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":260,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":261,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":261,"duration":4.923},
{"type":"mark","name":"tsc.op.op_resolve","count":262,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":262,"duration":0.268},
{"type":"mark","name":"tsc.op.op_resolve","count":263,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":263,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":264,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":264,"duration":0.546},
{"type":"mark","name":"tsc.op.op_resolve","count":265,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":265,"duration":0.215},
{"type":"mark","name":"tsc.op.op_resolve","count":266,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":266,"duration":0.433},
{"type":"mark","name":"tsc.op.op_resolve","count":267,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":267,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":268,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":268,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":269,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":269,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":270,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":270,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":271,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":271,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":272,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enhanced-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":272,"duration":0.015},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":450,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":451,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":452,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":453,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":454,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":455,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":456,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":457,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":458,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":459,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":460,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":461,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":462,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":463,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":464,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":465,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":466,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":467,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":468,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":469,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":470,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":471,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":472,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":473,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":474,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":475,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":476,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":477,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":478,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":479,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":480,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":481,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":482,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":483,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":484,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":485,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":486,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":487,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":488,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":489,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":490,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":491,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":492,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":493,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":494,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":495,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":496,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":497,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":498,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":499,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":500,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":501,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":502,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":503,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":504,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":505,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":506,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":507,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":508,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":509,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":510,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":511,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":512,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":513,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":514,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":515,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":516,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":517,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":518,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":519,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":520,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":521,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":522,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":523,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":524,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":525,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":526,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":527,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":528,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":529,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":530,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":531,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":532,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":533,"duration":0.015},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":534,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":535,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":536,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":537,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":538,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":539,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":540,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":541,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":542,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":543,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":544,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":545,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":546,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":547,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":548,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":549,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":550,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":551,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":552,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":553,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":554,"duration":0.016},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":555,"duration":0.009},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":556,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":557,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":558,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":559,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":560,"duration":0.007},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":9,"duration":136.047},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":9,"duration":137.452},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":5,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":5,"duration":142.913},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":5,"duration":143.051},
{"type":"measure","name":"lsp.diagnostic","count":173,"duration":299.766},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":10,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts",22]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":561,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":562,"duration":0.016},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":10,"duration":59.11},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":10,"duration":62.07},
{"type":"measure","name":"lsp.diagnostic","count":174,"duration":68.625},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":175,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":176,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":177,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":178,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":179,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":180,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":181,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":182,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":183,"duration":0.045},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":184,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.inlay_hint","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.hover","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":8,"character":53}}},
{"type":"mark","name":"lsp.hover","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":8,"character":39}}},
{"type":"mark","name":"lsp.code_action","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.code_action","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":8,"character":12}}},
{"type":"mark","name":"lsp.did_open","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/deploy-test.html","languageId":"html","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":33,"duration":0.041},
{"type":"mark","name":"lsp.did_change_batched","count":17,"args":"file:///workspaces/ProspectPro/public/deploy-test.html"},
{"type":"measure","name":"lsp.did_change_batched","count":17,"duration":0.468},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":185,"duration":0.015},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":186,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":187,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":20,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":188,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":189,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":190,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":191,"duration":0.002},
{"type":"mark","name":"lsp.code_action","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":192,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":193,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":194,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":195,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":196,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":197,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":198,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":199,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":200,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":201,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":202,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":203,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":204,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":18,"args":"file:///workspaces/ProspectPro/public/deploy-test.html"},
{"type":"measure","name":"lsp.did_change_batched","count":18,"duration":0.979},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":205,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":21,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":206,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":207,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":208,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":209,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":210,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":211,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":212,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":213,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":214,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":215,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":216,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":217,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":218,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":219,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":220,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":221,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":222,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":223,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.code_lens","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.code_lens","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.hover","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":10,"character":47}}},
{"type":"mark","name":"lsp.hover","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":8,"character":9}}},
{"type":"mark","name":"lsp.hover","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":8,"character":85}}},
{"type":"mark","name":"lsp.code_action","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":78},"end":{"line":8,"character":89}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":78},"end":{"line":8,"character":89}},"severity":3,"source":"cSpell","message":"\"prospectpro\": Unknown word."}],"only":["quickfix"],"triggerKind":1}}},
{"type":"mark","name":"lsp.hover","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":10,"character":11}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":7,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/public/.vercel/project.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":7,"duration":0.017},
{"type":"mark","name":"lsp.code_lens","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"mark","name":"lsp.did_open","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/vercel.json","languageId":"json","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":34,"duration":0.037},
{"type":"mark","name":"lsp.did_change_batched","count":19,"args":"file:///workspaces/ProspectPro/public/vercel.json"},
{"type":"measure","name":"lsp.did_change_batched","count":19,"duration":0.082},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":224,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":225,"duration":0.014},
{"type":"mark","name":"lsp.did_change_watched_files","count":8,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":8,"duration":0.018},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":22,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":226,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":227,"duration":0.002},
{"type":"mark","name":"lsp.did_change_watched_files","count":9,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2},{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":9,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":228,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":229,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":230,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":231,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":232,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":233,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":234,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":235,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":236,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":237,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":238,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":239,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":240,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":241,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":242,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":243,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":244,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.did_change_batched","count":20,"args":"file:///workspaces/ProspectPro/public/vercel.json"},
{"type":"measure","name":"lsp.did_change_batched","count":20,"duration":0.065},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":245,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":246,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":247,"duration":0.002},
{"type":"mark","name":"lsp.code_action","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":23,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":248,"duration":0.001},
{"type":"mark","name":"lsp.did_change_watched_files","count":10,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2},{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":10,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":249,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":250,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":251,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":252,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":253,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":254,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":255,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":256,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":257,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":258,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":259,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":260,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":261,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":262,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":263,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":264,"duration":0.001},
{"type":"mark","name":"lsp.hover","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":8,"character":90}}},
{"type":"mark","name":"lsp.inlay_hint","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.inlay_hint","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.hover","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"position":{"line":5,"character":74}}},
{"type":"mark","name":"lsp.inlay_hint","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.inlay_hint","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":0,"character":0},"end":{"line":47,"character":1}}}},
{"type":"mark","name":"lsp.goto_definition","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/supabase-app.js"},"position":{"line":392,"character":19}}},
{"type":"mark","name":"lsp.goto_definition","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/supabase-app.js"},"position":{"line":156,"character":12}}},
{"type":"mark","name":"lsp.code_action","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":21,"args":"file:///workspaces/ProspectPro/public/vercel.json"},
{"type":"measure","name":"lsp.did_change_batched","count":21,"duration":0.162},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":265,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":266,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":24,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":267,"duration":0.002},
{"type":"mark","name":"lsp.did_change_watched_files","count":11,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2},{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":11,"duration":0.025},
{"type":"mark","name":"lsp.code_action","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"},"range":{"start":{"line":8,"character":40},"end":{"line":8,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":268,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":269,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":270,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":271,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":272,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":273,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":274,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":275,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":276,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":277,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":278,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":279,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":280,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":281,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":282,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":283,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":284,"duration":0.002},
{"type":"mark","name":"lsp.code_action","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":112,"character":17}}}},
{"type":"mark","name":"lsp.document_symbol","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":112,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":21,"character":27},"end":{"line":21,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":17}}}},
{"type":"mark","name":"lsp.hover","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"position":{"line":22,"character":22}}},
{"type":"mark","name":"lsp.code_action","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":22,"character":23},"end":{"line":22,"character":23}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_highlight","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"position":{"line":21,"character":17}}},
{"type":"mark","name":"lsp.code_lens","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":25,"duration":0.021},
{"type":"mark","name":"lsp.did_change_watched_files","count":12,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2},{"uri":"file:///workspaces/ProspectPro/public/vercel.json","type":2}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":12,"duration":0.027},
{"type":"mark","name":"lsp.did_open","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql","languageId":"sql","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":35,"duration":0.044},
{"type":"mark","name":"lsp.did_change_batched","count":22,"args":"file:///workspaces/ProspectPro/database/safe-setup.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":22,"duration":11.87},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":285,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":286,"duration":0.01},
{"type":"mark","name":"lsp.code_action","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":287,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":26,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":288,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":289,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":290,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":291,"duration":0.002},
{"type":"mark","name":"lsp.code_action","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":292,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":293,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":294,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":295,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":296,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":297,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":298,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":299,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":300,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":301,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":302,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":303,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":304,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":305,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":306,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/supabase-first-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":132,"character":101}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":11}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":94,"character":13},"end":{"line":94,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":27,"duration":0.104},
{"type":"mark","name":"lsp.code_action","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":112,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.code_action","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":111,"character":7}}}},
{"type":"mark","name":"lsp.hover","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"position":{"line":11,"character":47}}},
{"type":"mark","name":"lsp.folding_range","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.hover","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"position":{"line":10,"character":35}}},
{"type":"mark","name":"lsp.document_highlight","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"position":{"line":10,"character":36}}},
{"type":"mark","name":"lsp.code_lens","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.code_action","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":184,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":44}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":54,"character":55},"end":{"line":54,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":76,"character":59},"end":{"line":76,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":78,"character":79},"end":{"line":78,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":127,"character":13},"end":{"line":127,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.hover","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"position":{"line":25,"character":32}}},
{"type":"mark","name":"lsp.inlay_hint","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":78,"character":0},"end":{"line":184,"character":23}}}},
{"type":"mark","name":"lsp.did_change_batched","count":23,"args":"file:///workspaces/ProspectPro/database/safe-setup.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":23,"duration":0.446},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":307,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":78,"character":0},"end":{"line":198,"character":23}}}},
{"type":"mark","name":"lsp.folding_range","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.code_action","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":198,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":44}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":66,"character":47},"end":{"line":66,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":68,"character":55},"end":{"line":68,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":90,"character":59},"end":{"line":90,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":92,"character":79},"end":{"line":92,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":141,"character":13},"end":{"line":141,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":308,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":78,"character":0},"end":{"line":198,"character":23}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":28,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":309,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":310,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":67,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":198,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":44}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":66,"character":47},"end":{"line":66,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":68,"character":55},"end":{"line":68,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":90,"character":59},"end":{"line":90,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":92,"character":79},"end":{"line":92,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":141,"character":13},"end":{"line":141,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":311,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":312,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":313,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":314,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":315,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":316,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":317,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":318,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":319,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":320,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":321,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":322,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":323,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":324,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":325,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":326,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":24,"args":"file:///workspaces/ProspectPro/database/safe-setup.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":24,"duration":0.323},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":327,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":328,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":68,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":209,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":44}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":66,"character":47},"end":{"line":66,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":68,"character":55},"end":{"line":68,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":90,"character":59},"end":{"line":90,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":92,"character":79},"end":{"line":92,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":152,"character":13},"end":{"line":152,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":329,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":29,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":330,"duration":0.001},
{"type":"mark","name":"lsp.document_symbol","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":331,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":67,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":69,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":209,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":44}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":66,"character":47},"end":{"line":66,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":68,"character":55},"end":{"line":68,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":90,"character":59},"end":{"line":90,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":92,"character":79},"end":{"line":92,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":152,"character":13},"end":{"line":152,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":332,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":333,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":334,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":335,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":336,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":337,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":338,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":339,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":340,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":341,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":342,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":343,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":344,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":345,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":346,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":347,"duration":0.002},
{"type":"mark","name":"lsp.did_open","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql","languageId":"sql","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":36,"duration":0.042},
{"type":"mark","name":"lsp.did_change_batched","count":25,"args":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":25,"duration":0.875},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":348,"duration":0.015},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":349,"duration":0.012},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":30,"duration":0.025},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":350,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":70,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/safe-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":209,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":44}},"severity":3,"source":"cSpell","message":"\"Supabase\": Unknown word."},{"range":{"start":{"line":66,"character":47},"end":{"line":66,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":68,"character":55},"end":{"line":68,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":90,"character":59},"end":{"line":90,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":92,"character":79},"end":{"line":92,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":152,"character":13},"end":{"line":152,"character":20}},"severity":3,"source":"cSpell","message":"\"plpgsql\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":351,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":352,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":353,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":354,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":355,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":356,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":357,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":358,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":359,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":360,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":361,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":362,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":363,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":364,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":365,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":366,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":367,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":368,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":71,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":369,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":68,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":30}}}},
{"type":"mark","name":"lsp.document_symbol","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":370,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":72,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":371,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":372,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":73,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":16,"character":38},"end":{"line":16,"character":38}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":373,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":69,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":30}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":374,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":375,"duration":0.001},
{"type":"mark","name":"lsp.code_action","count":74,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":47},"end":{"line":54,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":56,"character":55},"end":{"line":56,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":62,"character":59},"end":{"line":62,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":64,"character":79},"end":{"line":64,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."}],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":376,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":377,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":378,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":379,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":380,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":381,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":382,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":383,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":384,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":385,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":386,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":387,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":388,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":389,"duration":0.001},
{"type":"mark","name":"lsp.code_lens","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":31,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":32,"duration":0.025},
{"type":"mark","name":"lsp.code_action","count":75,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/minimal-setup.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":83,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":47},"end":{"line":54,"character":51}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":56,"character":55},"end":{"line":56,"character":59}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":62,"character":59},"end":{"line":62,"character":63}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."},{"range":{"start":{"line":64,"character":79},"end":{"line":64,"character":83}},"severity":3,"source":"cSpell","message":"\"fkey\": Unknown word."}],"triggerKind":2}}},
