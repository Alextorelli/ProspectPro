Starting Deno language server...
{"type":"mark","name":"lsp.initialize","count":1,"args":{"processId":315,"rootPath":"/workspaces/ProspectPro","rootUri":"file:///workspaces/ProspectPro","initializationOptions":{"enable":true,"cacheOnSave":true,"disablePaths":[],"enablePaths":["supabase/functions"],"path":null,"env":{},"envFile":null,"cache":null,"certificateStores":null,"codeLens":{"implementations":true,"references":true,"referencesAllFunctions":true,"test":true,"testArgs":["--allow-all","--no-check"]},"config":null,"documentPreloadLimit":1000,"future":false,"importMap":null,"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"maxTsServerMemory":3072,"suggest":{"autoImports":true,"completeFunctionCalls":false,"names":true,"paths":true,"imports":{"autoDiscover":true,"hosts":{"https://deno.land":true}}},"trace":{"server":"off"},"testing":{"args":["--allow-all","--no-check"]},"tlsCertificate":null,"unsafelyIgnoreCertificateErrors":null,"unstable":true,"lint":true,"internalDebug":false,"internalInspect":false,"logFile":true,"defaultTaskCommand":"open","javascript":{"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"validate":{"enable":true},"suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"preferGoToSourceDefinition":false,"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":true,"names":true,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"shortest","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false}}},"typescript":{"tsdk":"","disableAutomaticTypeAcquisition":false,"enablePromptUseWorkspaceTsdk":false,"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"implementationsCodeLens":{"enabled":false,"showOnInterfaceMethods":false},"experimental":{"useTsgo":false},"reportStyleChecksAsWarnings":true,"validate":{"enable":true},"tsc":{"autoDetect":"on"},"locale":"auto","suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"workspaceSymbols":{"scope":"allOpenProjects","excludeLibrarySymbols":true},"preferGoToSourceDefinition":false,"tsserver":{"enableRegionDiagnostics":true,"nodePath":"","web":{"projectWideIntellisense":{"enabled":true,"suppressSemanticErrors":false},"typeAcquisition":{"enabled":true}},"useSyntaxServer":"auto","maxTsServerMemory":3072,"experimental":{"enableProjectDiagnostics":false},"watchOptions":"vscode","enableTracing":false,"log":"off","pluginPaths":[]},"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":false,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true},"objectLiteralMethodSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"shortest","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","includePackageJsonAutoImports":"auto","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"preferTypeOnlyAutoImports":false,"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"insertSpaceAfterTypeAssertion":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"npm":"","check":{"npmIsInstalled":true}},"enableBuiltinCommands":true},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"willCreate":true,"didRename":true,"willRename":true,"didDelete":true,"willDelete":true},"inlineValue":{"refreshSupport":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"insertTextMode":2,"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]}},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.move","refactor.rewrite","source","source.organizeImports","notebook"]}},"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit","command"]},"honorsChangeAnnotations":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false,"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true,"foldingRangeKind":{"valueSet":["comment","imports","region"]},"foldingRange":{"collapsedText":false}},"selectionRange":{"dynamicRegistration":true},"linkedEditingRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"requests":{"range":true,"full":{"delta":true}},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"overlappingTokenSupport":false,"multilineTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"typeHierarchy":{"dynamicRegistration":true},"inlineValue":{"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false}},"notebookDocument":{"synchronization":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true}},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"},"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"positionEncodings":["utf-16"]},"experimental":{"testingApi":true}},"trace":"off","workspaceFolders":[{"uri":"file:///workspaces/ProspectPro","name":"ProspectPro"}],"clientInfo":{"name":"Visual Studio Code","version":"1.104.3"},"locale":"en"}},
  version: 2.5.2 (release, x86_64-unknown-linux-gnu)
  executable: /usr/local/share/npm-global/lib/node_modules/deno/deno
Connected to "Visual Studio Code" 1.104.3
{"type":"measure","name":"lsp.initialize","count":1,"duration":2.875},
{"type":"mark","name":"lsp.update_global_cache"},
Enabling import suggestions for: https://deno.land
{"type":"measure","name":"lsp.update_global_cache","count":1,"duration":27.374},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":1,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","languageId":"typescriptreact","version":1,"text":"import { User } from \"@supabase/supabase-js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { supabase } from \"../lib/supabase\";\n\ninterface AuthComponentProps {\n  onAuthChange?: (user: User | null) => void;\n}\n\n// HCaptcha component integration (if available)\ndeclare global {\n  interface Window {\n    hcaptcha?: {\n      render: (container: string, options: any) => string;\n      execute: (widgetId: string) => Promise<{ response: string }>;\n      reset: (widgetId: string) => void;\n    };\n  }\n}\n\nexport const AuthComponent: React.FC<AuthComponentProps> = ({\n  onAuthChange,\n}) => {\n  const {\n    user: authUser,\n    loading: authLoading,\n    signOut: contextSignOut,\n  } = useAuth();\n  const [localLoading, setLocalLoading] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [showEmailForm, setShowEmailForm] = useState(false);\n  const [captchaToken, setCaptchaToken] = useState<string | null>(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const menuContainerRef = useRef<HTMLDivElement | null>(null);\n\n  const combinedLoading = authLoading || localLoading;\n\n  useEffect(() => {\n    if (onAuthChange) {\n      onAuthChange(authUser ?? null);\n    }\n  }, [authUser, onAuthChange]);\n\n  const hasEnsuredProfileRef = useRef(false);\n\n  useEffect(() => {\n    if (authUser && !hasEnsuredProfileRef.current) {\n      hasEnsuredProfileRef.current = true;\n      void createUserProfile(authUser);\n    }\n    if (!authUser) {\n      hasEnsuredProfileRef.current = false;\n      setIsMenuOpen(false);\n    }\n  }, [authUser]);\n\n  useEffect(() => {\n    if (!isMenuOpen) return;\n\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        menuContainerRef.current &&\n        !menuContainerRef.current.contains(event.target as Node)\n      ) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    document.addEventListener(\"keydown\", handleEscape);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      document.removeEventListener(\"keydown\", handleEscape);\n    };\n  }, [isMenuOpen]);\n\n  const createUserProfile = async (user: User) => {\n    try {\n      const { error } = await supabase.from(\"user_profiles\").upsert([\n        {\n          id: user.id,\n          email: user.email,\n          full_name: user.user_metadata?.full_name || fullName || \"\",\n          avatar_url: user.user_metadata?.avatar_url || \"\",\n          subscription_tier: \"free\",\n          total_spent: 0,\n          monthly_budget: 100.0,\n        },\n      ]);\n\n      if (error && error.code !== \"23505\") {\n        // Ignore duplicate key errors\n        console.error(\"Error creating user profile:\", error);\n      }\n    } catch (err) {\n      console.error(\"Error creating user profile:\", err);\n    }\n  };\n\n  const validatePassword = (password: string): string | null => {\n    if (password.length < 8) return \"Password must be at least 8 characters\";\n    if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(password)) {\n      return \"Password must contain uppercase, lowercase, and number\";\n    }\n    return null;\n  };\n\n  const handleEmailAuth = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(null);\n    setLocalLoading(true);\n\n    try {\n      if (isSignUp) {\n        // Validate signup data\n        if (password !== confirmPassword) {\n          throw new Error(\"Passwords do not match\");\n        }\n\n        const passwordError = validatePassword(password);\n        if (passwordError) {\n          throw new Error(passwordError);\n        }\n\n        const signUpData: any = {\n          email,\n          password,\n          options: {\n            emailRedirectTo: `${window.location.origin}/auth/callback`,\n            data: {\n              full_name: fullName,\n            },\n          },\n        };\n\n        // Add CAPTCHA token if available\n        if (captchaToken) {\n          signUpData.options.captchaToken = captchaToken;\n        }\n\n        const { error } = await supabase.auth.signUp(signUpData);\n\n        if (error) throw error;\n\n        setSuccess(\n          \"Account created! Please check your email for the confirmation link. You may need to check your spam folder.\"\n        );\n        // Reset form\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setFullName(\"\");\n        setCaptchaToken(null);\n      } else {\n        const { error } = await supabase.auth.signInWithPassword({\n          email,\n          password,\n        });\n\n        if (error) throw error;\n      }\n    } catch (err: any) {\n      setError(err.message || \"An error occurred during authentication\");\n    } finally {\n      setLocalLoading(false);\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    setError(null);\n    setSuccess(null);\n    setLocalLoading(true);\n\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: \"google\",\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`,\n          queryParams: {\n            access_type: \"offline\",\n            prompt: \"consent\",\n          },\n        },\n      });\n\n      if (error) throw error;\n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLocalLoading(false);\n    }\n  };\n\n  const handleSignOut = useCallback(async () => {\n    setLocalLoading(true);\n    setError(null);\n    try {\n      await contextSignOut();\n      resetForm();\n      setIsMenuOpen(false);\n    } catch (err: any) {\n      setError(err.message ?? \"Unable to sign out\");\n    } finally {\n      setLocalLoading(false);\n    }\n  }, [contextSignOut]);\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setFullName(\"\");\n    setError(null);\n    setSuccess(null);\n    setCaptchaToken(null);\n    setShowEmailForm(false);\n  };\n\n  if (combinedLoading) {\n    return (\n      <div className=\"flex items-center space-x-2\">\n        <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-gray-500 border-t-blue-600\"></div>\n        <span className=\"text-sm font-medium text-gray-800\">Loading…</span>\n      </div>\n    );\n  }\n\n  if (authUser) {\n    const displayName = authUser.user_metadata?.full_name || \"ProspectPro user\";\n    const emailLabel = authUser.email || \"Authenticated\";\n    const initials = displayName\n      .split(\" \")\n      .map((segment: string) => segment.charAt(0))\n      .join(\"\")\n      .slice(0, 2)\n      .toUpperCase();\n\n    return (\n      <div className=\"relative\" ref={menuContainerRef}>\n        <button\n          type=\"button\"\n          onClick={() => setIsMenuOpen((prev) => !prev)}\n          className=\"inline-flex items-center gap-3 rounded-full border border-transparent bg-white/80 px-3 py-1.5 text-left text-sm font-medium text-gray-900 shadow-sm transition-colors hover:border-blue-600 hover:bg-white dark:bg-slate-900/70 dark:text-slate-100\"\n          aria-haspopup=\"menu\"\n          aria-expanded={isMenuOpen}\n        >\n          <span className=\"relative flex h-9 w-9 items-center justify-center overflow-hidden rounded-full border border-blue-200 bg-blue-100 text-base font-semibold text-blue-700 shadow-sm dark:border-sky-500/60 dark:bg-sky-500/10 dark:text-sky-200\">\n            {authUser.user_metadata?.avatar_url ? (\n              <img\n                src={authUser.user_metadata.avatar_url}\n                alt={displayName}\n                className=\"absolute inset-0 h-full w-full object-cover\"\n              />\n            ) : (\n              initials || \"PP\"\n            )}\n          </span>\n          <span className=\"flex flex-col items-start\">\n            <span className=\"text-sm font-semibold leading-tight\">\n              {displayName}\n            </span>\n            <span className=\"text-xs text-gray-600 leading-tight dark:text-slate-300\">\n              {emailLabel}\n            </span>\n          </span>\n          <svg\n            className={`h-4 w-4 text-gray-500 transition-transform dark:text-slate-300 ${\n              isMenuOpen ? \"rotate-180\" : \"\"\n            }`}\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 011.08 1.04l-4.25 4.25a.75.75 0 01-1.08 0L5.21 8.27a.75.75 0 01.02-1.06z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n\n        {isMenuOpen && (\n          <div\n            className=\"absolute right-0 z-50 mt-2 w-64 rounded-lg border border-gray-200 bg-white p-3 text-sm shadow-xl dark:border-slate-700 dark:bg-slate-900\"\n            role=\"menu\"\n            aria-label=\"Account menu\"\n          >\n            <div className=\"mb-3 rounded-md border border-gray-100 bg-gray-50 px-3 py-2 dark:border-slate-700 dark:bg-slate-800\">\n              <p className=\"text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400\">\n                Signed in as\n              </p>\n              <p className=\"truncate text-sm font-semibold text-gray-900 dark:text-slate-100\">\n                {displayName}\n              </p>\n              <p className=\"truncate text-xs text-gray-600 dark:text-slate-300\">\n                {emailLabel}\n              </p>\n            </div>\n\n            <div className=\"flex flex-col gap-1\" role=\"none\">\n              <Link\n                to=\"/account\"\n                className=\"flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-blue-50 hover:text-blue-700 dark:text-slate-200 dark:hover:bg-slate-800\"\n                role=\"menuitem\"\n                onClick={() => setIsMenuOpen(false)}\n              >\n                <span aria-hidden=\"true\" role=\"img\">\n                  ⚙️\n                </span>\n                Account settings\n              </Link>\n              <Link\n                to=\"/dashboard\"\n                className=\"flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-blue-50 hover:text-blue-700 dark:text-slate-200 dark:hover:bg-slate-800\"\n                role=\"menuitem\"\n                onClick={() => setIsMenuOpen(false)}\n              >\n                <span aria-hidden=\"true\" role=\"img\">\n                  📊\n                </span>\n                Dashboard overview\n              </Link>\n              <button\n                type=\"button\"\n                onClick={handleSignOut}\n                disabled={combinedLoading}\n                className=\"flex items-center gap-2 rounded-md px-3 py-2 text-sm font-semibold text-red-600 transition-colors hover:bg-red-50 disabled:opacity-60 dark:text-rose-400 dark:hover:bg-rose-500/10\"\n                role=\"menuitem\"\n              >\n                <span aria-hidden=\"true\" role=\"img\">\n                  🚪\n                </span>\n                Sign out\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      {/* Quick Google Sign In */}\n      <button\n        onClick={handleGoogleAuth}\n        disabled={combinedLoading}\n        className=\"flex items-center space-x-2 rounded-md border border-gray-400 bg-white px-4 py-2 text-sm font-medium text-gray-800 shadow-sm transition-colors hover:bg-gray-50 disabled:opacity-50\"\n      >\n        <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"#4285f4\"\n            d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n          />\n          <path\n            fill=\"#34a853\"\n            d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n          />\n          <path\n            fill=\"#fbbc05\"\n            d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n          />\n          <path\n            fill=\"#ea4335\"\n            d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n          />\n        </svg>\n        <span>Sign in with Google</span>\n      </button>\n\n      {/* Email/Password Toggle */}\n      <div className=\"relative\">\n        <button\n          onClick={() => {\n            setShowEmailForm(!showEmailForm);\n            if (!showEmailForm) resetForm();\n          }}\n          className=\"text-sm font-medium text-blue-700 transition-colors hover:text-blue-800\"\n        >\n          {showEmailForm ? \"Cancel\" : \"Use Email\"}\n        </button>\n      </div>\n\n      {/* Email/Password Form - Expandable */}\n      {showEmailForm && (\n        <div className=\"absolute right-0 top-full z-50 mt-2 min-w-80 rounded-md border border-gray-300 bg-white p-4 shadow-lg\">\n          <div className=\"mb-3\">\n            <button\n              onClick={() => {\n                setIsSignUp(!isSignUp);\n                resetForm();\n              }}\n              className=\"text-sm font-medium text-blue-700 transition-colors hover:text-blue-800\"\n            >\n              {isSignUp\n                ? \"Already have an account? Sign In\"\n                : \"New user? Create Account\"}\n            </button>\n          </div>\n\n          <form onSubmit={handleEmailAuth} className=\"space-y-3\">\n            {isSignUp && (\n              <input\n                type=\"text\"\n                placeholder=\"Full Name\"\n                value={fullName}\n                onChange={(e) => setFullName(e.target.value)}\n                className=\"w-full rounded border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                required\n              />\n            )}\n\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full rounded border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              required\n            />\n\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full rounded border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              required\n            />\n\n            {isSignUp && (\n              <input\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                className=\"w-full rounded border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                required\n              />\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={combinedLoading}\n              className=\"w-full rounded bg-blue-600 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {combinedLoading ? (\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent\"></div>\n                  <span>\n                    {isSignUp ? \"Creating Account...\" : \"Signing In...\"}\n                  </span>\n                </div>\n              ) : (\n                <span>{isSignUp ? \"Create Account\" : \"Sign In\"}</span>\n              )}\n            </button>\n          </form>\n\n          {error && (\n            <div className=\"mt-3 rounded border border-red-300 bg-red-50 p-2 text-sm text-red-600\">\n              {error}\n            </div>\n          )}\n\n          {success && (\n            <div className=\"mt-3 rounded border border-green-300 bg-green-50 p-2 text-sm text-green-700\">\n              {success}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":1,"duration":15.816},
{"type":"mark","name":"lsp.did_open","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","languageId":"typescriptreact","version":1,"text":"import { importLibrary, setOptions } from \"@googlemaps/js-api-loader\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface GeographicLocation {\n  lat: number;\n  lng: number;\n  address: string;\n}\n\ndeclare global {\n  interface Window {\n    google?: any;\n  }\n}\n\ninterface GeographicSelectorProps {\n  onLocationChange: (location: GeographicLocation, radius: number) => void;\n  initialLocation?: GeographicLocation;\n  initialRadius?: number;\n}\n\nexport const GeographicSelector: React.FC<GeographicSelectorProps> = ({\n  onLocationChange,\n  initialLocation = { lat: 40.7128, lng: -74.006, address: \"New York, NY\" },\n  initialRadius = 10,\n}) => {\n  const googleMapsApiKey =\n    import.meta.env.VITE_GOOGLE_MAPS_API_KEY ||\n    import.meta.env.VITE_GOOGLE_PLACES_API_KEY;\n\n  type MapStatus = \"idle\" | \"loading\" | \"ready\" | \"error\";\n\n  const [location, setLocation] = useState<GeographicLocation>(initialLocation);\n  const [radius, setRadius] = useState<number>(initialRadius);\n  const [address, setAddress] = useState<string>(initialLocation.address);\n  const [isGeocoding, setIsGeocoding] = useState(false);\n  const [mapStatus, setMapStatus] = useState<MapStatus>(\n    googleMapsApiKey ? \"loading\" : \"idle\"\n  );\n  const mapContainerRef = useRef<HTMLDivElement | null>(null);\n  const mapRef = useRef<any>(null);\n  const markerRef = useRef<any>(null);\n  const circleRef = useRef<any>(null);\n  const mapsApiRef = useRef<any>(window.google?.maps ?? null);\n  const loaderPromiseRef = useRef<Promise<void> | null>(null);\n\n  const handleAddressChange = (value: string) => {\n    setAddress(value);\n    setLocation((prev) => {\n      const updated = { ...prev, address: value };\n      onLocationChange(updated, radius);\n      return updated;\n    });\n  };\n\n  const geocodeViaGoogle = async (\n    addressInput: string\n  ): Promise<GeographicLocation | null> => {\n    const maps = mapsApiRef.current;\n    if (!maps?.Geocoder) return null;\n\n    return new Promise((resolve) => {\n      const geocoder = new maps.Geocoder();\n      geocoder.geocode(\n        { address: addressInput },\n        (results: any, status: any) => {\n          if (status === \"OK\" && results?.[0]) {\n            const geometry = results[0].geometry.location;\n            resolve({\n              lat: geometry.lat(),\n              lng: geometry.lng(),\n              address: results[0].formatted_address,\n            });\n          } else {\n            resolve(null);\n          }\n        }\n      );\n    });\n  };\n\n  // Geocoding function with Google Maps fallback to OpenStreetMap\n  const geocodeAddress = async (\n    addressInput: string\n  ): Promise<GeographicLocation | null> => {\n    try {\n      setIsGeocoding(true);\n\n      // Try Google Geocoder first if available\n      const googleResult = await geocodeViaGoogle(addressInput);\n      if (googleResult) {\n        return googleResult;\n      }\n\n      const response = await fetch(\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\n          addressInput\n        )}&limit=1`\n      );\n\n      const data = await response.json();\n\n      if (data && data.length > 0) {\n        const result = data[0];\n        return {\n          lat: parseFloat(result.lat),\n          lng: parseFloat(result.lon),\n          address: result.display_name,\n        };\n      }\n\n      return null;\n    } catch (error) {\n      console.error(\"Geocoding error:\", error);\n      return null;\n    } finally {\n      setIsGeocoding(false);\n    }\n  };\n\n  const handleAddressSearch = async () => {\n    if (!address.trim()) return;\n\n    const result = await geocodeAddress(address);\n    if (result) {\n      setAddress(result.address);\n      setLocation(result);\n      onLocationChange(result, radius);\n    } else {\n      alert(\"Address not found. Please try a different address.\");\n    }\n  };\n\n  const handleRadiusChange = (newRadius: number) => {\n    setRadius(newRadius);\n    onLocationChange(location, newRadius);\n  };\n\n  const radiusOptions = [\n    { value: 1, label: \"1 mile\" },\n    { value: 5, label: \"5 miles\" },\n    { value: 10, label: \"10 miles\" },\n    { value: 25, label: \"25 miles\" },\n    { value: 50, label: \"50 miles\" },\n    { value: 100, label: \"100 miles\" },\n  ];\n\n  // Simple map visualization using CSS\n  const SimpleMapView: React.FC = () => {\n    const getRadiusSize = (radiusInMiles: number) => {\n      // Scale radius for visual representation (max 200px)\n      return Math.min(radiusInMiles * 4, 200);\n    };\n\n    return (\n      <div\n        className=\"relative bg-gradient-to-br from-green-100 to-blue-100 rounded-lg overflow-hidden border border-gray-300\"\n        style={{ height: \"300px\" }}\n      >\n        {/* Map Background */}\n        <div className=\"absolute inset-0 bg-gradient-to-br from-green-50 to-blue-50 opacity-50\"></div>\n\n        {/* Grid lines for map effect */}\n        <div className=\"absolute inset-0 opacity-20\">\n          {[...Array(6)].map((_, i) => (\n            <div\n              key={`h-${i}`}\n              className=\"absolute border-t border-gray-400\"\n              style={{ top: `${i * 20}%`, width: \"100%\" }}\n            />\n          ))}\n          {[...Array(8)].map((_, i) => (\n            <div\n              key={`v-${i}`}\n              className=\"absolute border-l border-gray-400\"\n              style={{ left: `${i * 12.5}%`, height: \"100%\" }}\n            />\n          ))}\n        </div>\n\n        {/* Center point */}\n        <div\n          className=\"absolute transform -translate-x-1/2 -translate-y-1/2 z-10\"\n          style={{ top: \"50%\", left: \"50%\" }}\n        >\n          {/* Radius circle */}\n          <div\n            className=\"absolute border-2 border-blue-500 border-dashed rounded-full bg-blue-200 bg-opacity-30 transform -translate-x-1/2 -translate-y-1/2\"\n            style={{\n              width: `${getRadiusSize(radius)}px`,\n              height: `${getRadiusSize(radius)}px`,\n            }}\n          />\n\n          {/* Location pin */}\n          <div className=\"relative bg-red-500 rounded-full w-4 h-4 border-2 border-white shadow-lg\">\n            <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-2 border-r-2 border-t-4 border-transparent border-t-red-500\"></div>\n          </div>\n        </div>\n\n        {/* Location info overlay */}\n        <div className=\"absolute bottom-2 left-2 right-2 bg-white bg-opacity-90 rounded p-2\">\n          <div className=\"text-xs font-medium text-gray-800 truncate\">\n            {location.address}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (!googleMapsApiKey) {\n      mapsApiRef.current = null;\n      loaderPromiseRef.current = null;\n      setMapStatus(\"idle\");\n      return;\n    }\n\n    setMapStatus(\"loading\");\n\n    if (!loaderPromiseRef.current) {\n      loaderPromiseRef.current = (async () => {\n        setOptions({ key: googleMapsApiKey, libraries: [\"places\"] });\n        await importLibrary(\"maps\");\n        await importLibrary(\"geocoding\");\n        await importLibrary(\"places\");\n      })();\n    }\n\n    loaderPromiseRef.current\n      .then(() => {\n        mapsApiRef.current = window.google?.maps ?? null;\n        if (mapsApiRef.current) {\n          setMapStatus(\"ready\");\n        } else {\n          console.error(\"Google Maps API did not initialize as expected.\");\n          setMapStatus(\"error\");\n          loaderPromiseRef.current = null;\n        }\n      })\n      .catch((error) => {\n        console.error(\"Google Maps load error:\", error);\n        loaderPromiseRef.current = null;\n        setMapStatus(\"error\");\n      });\n  }, [googleMapsApiKey]);\n\n  const getZoomFromRadius = (radiusInMiles: number) => {\n    if (radiusInMiles <= 1) return 14;\n    if (radiusInMiles <= 5) return 12;\n    if (radiusInMiles <= 10) return 11;\n    if (radiusInMiles <= 25) return 10;\n    if (radiusInMiles <= 50) return 8;\n    return 7;\n  };\n\n  useEffect(() => {\n    if (mapStatus !== \"ready\" || !mapContainerRef.current) {\n      return;\n    }\n\n    const maps = mapsApiRef.current;\n    if (!maps) {\n      setMapStatus(\"error\");\n      return;\n    }\n\n    const center = { lat: location.lat, lng: location.lng };\n\n    if (!mapRef.current) {\n      mapRef.current = new maps.Map(mapContainerRef.current, {\n        center,\n        zoom: getZoomFromRadius(radius),\n        disableDefaultUI: true,\n        zoomControl: true,\n      });\n\n      markerRef.current = new maps.Marker({\n        position: center,\n        map: mapRef.current,\n        animation: maps.Animation.DROP,\n      });\n\n      circleRef.current = new maps.Circle({\n        map: mapRef.current,\n        center,\n        radius: radius * 1609.34,\n        strokeColor: \"#2563EB\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#60A5FA\",\n        fillOpacity: 0.2,\n      });\n    } else {\n      mapRef.current.setCenter(center);\n      mapRef.current.setZoom(getZoomFromRadius(radius));\n      markerRef.current?.setPosition(center);\n      circleRef.current?.setCenter(center);\n      circleRef.current?.setRadius(radius * 1609.34);\n    }\n  }, [mapStatus, location, radius]);\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Address Input */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          Location\n        </label>\n        <div className=\"flex space-x-2\">\n          <input\n            type=\"text\"\n            value={address}\n            onChange={(e) => handleAddressChange(e.target.value)}\n            placeholder=\"Enter city, state, or address\"\n            className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n            onKeyPress={(e) => e.key === \"Enter\" && handleAddressSearch()}\n            onBlur={handleAddressSearch}\n          />\n          <button\n            onClick={handleAddressSearch}\n            disabled={isGeocoding}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 text-sm\"\n          >\n            {isGeocoding ? \"...\" : \"Search\"}\n          </button>\n        </div>\n      </div>\n\n      {/* Radius Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          Search Radius\n        </label>\n        <div className=\"grid grid-cols-3 md:grid-cols-6 gap-2\">\n          {radiusOptions.map((option) => (\n            <button\n              key={option.value}\n              onClick={() => handleRadiusChange(option.value)}\n              className={`px-3 py-2 text-sm rounded-md border ${\n                radius === option.value\n                  ? \"bg-blue-600 text-white border-blue-600\"\n                  : \"bg-white text-gray-700 border-gray-300 hover:bg-gray-50\"\n              }`}\n            >\n              {option.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Coverage Callout */}\n      <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md flex items-center justify-between\">\n        <div>\n          <p className=\"text-xs uppercase tracking-wide text-blue-600 dark:text-blue-300 font-semibold\">\n            Approximate Coverage\n          </p>\n          <p className=\"text-lg font-semibold text-blue-800 dark:text-blue-100\">\n            ~{Math.round(Math.PI * radius * radius)} square miles\n          </p>\n        </div>\n        <div className=\"text-sm text-blue-700 dark:text-blue-200\">\n          Radius: {radius} miles\n        </div>\n      </div>\n\n      {/* Map Visualization */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          Geographic Coverage\n        </label>\n        <div className=\"relative\">\n          <div\n            ref={mapContainerRef}\n            className={`h-80 w-full rounded-lg border border-gray-300 dark:border-gray-600 overflow-hidden ${\n              mapStatus === \"ready\" ? \"block\" : \"hidden\"\n            }`}\n          />\n\n          {mapStatus !== \"ready\" && (\n            <div className=\"relative\">\n              <SimpleMapView />\n\n              {googleMapsApiKey && mapStatus === \"loading\" && (\n                <div className=\"absolute inset-0 flex items-center justify-center bg-white/80 dark:bg-gray-900/70\">\n                  <div className=\"flex items-center space-x-3 text-sm text-gray-700 dark:text-gray-200\">\n                    <span className=\"inline-flex h-4 w-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\"></span>\n                    <span>Loading interactive map…</span>\n                  </div>\n                </div>\n              )}\n\n              {googleMapsApiKey && mapStatus === \"error\" && (\n                <div className=\"absolute inset-0 flex items-center justify-center px-4 text-center\">\n                  <div className=\"text-sm font-medium text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800 rounded-lg px-3 py-2\">\n                    Unable to load Google Maps. Please verify your API key in\n                    the environment configuration.\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {!googleMapsApiKey && (\n            <div className=\"absolute top-2 right-2 px-3 py-1 bg-gray-900/70 text-white text-xs rounded shadow\">\n              Add a Google Maps API key for interactive coverage\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":1,"duration":0.608},
{"type":"measure","name":"lsp.did_open","count":2,"duration":6.749},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":1,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":2,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":3,"duration":0.008},
{"type":"mark","name":"lsp.did_open","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx","languageId":"typescriptreact","version":1,"text":"import React, { ReactNode } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { AuthComponent } from \"./AuthComponent\";\nimport { ThemeToggle } from \"./ThemeToggle\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst navigation = [\n  { name: \"Discovery\", href: \"/\", icon: \"🔍\" },\n  { name: \"Dashboard\", href: \"/dashboard\", icon: \"📊\" },\n  { name: \"Account\", href: \"/account\", icon: \"👤\" },\n];\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 transition-colors dark:bg-slate-900 dark:text-slate-100\">\n      <header className=\"border-b border-yellow-400 bg-[#f9ed69] text-gray-900 dark:border-yellow-500 dark:bg-[#f9ed69] dark:text-gray-900\">\n        <div className=\"mx-auto flex h-16 max-w-5xl items-center justify-between px-6\">\n          <Link\n            to=\"/\"\n            className=\"flex h-full items-center\"\n            aria-label=\"ProspectPro home\"\n          >\n            <img\n              src=\"/header logo.png\"\n              alt=\"ProspectPro\"\n              className=\"h-full w-auto object-contain\"\n            />\n          </Link>\n          <div className=\"flex items-center space-x-3\">\n            <AuthComponent />\n            <div className=\"h-10 w-px bg-gray-300\" aria-hidden=\"true\" />\n            <ThemeToggle />\n          </div>\n        </div>\n      </header>\n\n      <nav className=\"border-b border-gray-200 bg-white text-sm font-medium transition-colors dark:border-slate-700 dark:bg-slate-900\">\n        <div className=\"mx-auto flex max-w-5xl items-center px-6\">\n          {navigation.map((item) => {\n            const isActive = location.pathname === item.href;\n            return (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={`flex items-center space-x-2 border-b-2 px-4 py-3 transition-colors ${\n                  isActive\n                    ? \"border-blue-600 text-blue-700 dark:border-sky-400 dark:text-sky-300\"\n                    : \"border-transparent text-gray-600 hover:text-gray-900 dark:text-slate-400 dark:hover:text-slate-50\"\n                }`}\n              >\n                <span aria-hidden=\"true\">{item.icon}</span>\n                <span>{item.name}</span>\n              </Link>\n            );\n          })}\n        </div>\n      </nav>\n\n      <main className=\"mx-auto max-w-5xl px-6 pb-12 pt-8 sm:pb-16 sm:pt-10\">\n        {children}\n      </main>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":3,"duration":0.955},
{"type":"mark","name":"lsp.did_open","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html","languageId":"html","version":1,"text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ProspectPro v4.2 - User-Aware Business Discovery</title>\n    <link rel=\"icon\" type=\"image/png\" href=\"/header logo.png\" />\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2\"></script>\n    <style>\n      .loading {\n        animation: spin 1s linear infinite;\n      }\n      @keyframes spin {\n        to {\n          transform: rotate(360deg);\n        }\n      }\n      .fade-in {\n        animation: fadeIn 0.5s ease-in;\n      }\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n        }\n      }\n    </style>\n  </head>\n  <body class=\"bg-gray-50 min-h-screen\">\n    <!-- Header with User Authentication -->\n    <header class=\"shadow-sm border-b\" style=\"background-color: #f9ed69\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center py-4\">\n          <div>\n            <img src=\"/header logo.png\" alt=\"ProspectPro\" class=\"h-8\" />\n          </div>\n          <div id=\"authSection\" class=\"flex items-center space-x-4\">\n            <!-- Authentication UI will be injected here -->\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <!-- Discovery Form -->\n        <div class=\"lg:col-span-2\">\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h2 class=\"text-xl font-semibold text-gray-900 mb-6\">\n              Business Discovery\n            </h2>\n\n            <form id=\"discoveryForm\" class=\"space-y-6\">\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label\n                    for=\"businessType\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Business Type\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"businessType\"\n                    name=\"businessType\"\n                    placeholder=\"e.g., coffee shop, restaurant, salon\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label\n                    for=\"location\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Location\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"location\"\n                    name=\"location\"\n                    placeholder=\"e.g., Seattle, WA\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div>\n                  <label\n                    for=\"maxResults\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Target Leads\n                  </label>\n                  <select\n                    id=\"maxResults\"\n                    name=\"maxResults\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"5\">5 leads</option>\n                    <option value=\"10\" selected>10 leads</option>\n                    <option value=\"15\">15 leads</option>\n                    <option value=\"25\">25 leads</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label\n                    for=\"budgetLimit\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Budget Limit\n                  </label>\n                  <select\n                    id=\"budgetLimit\"\n                    name=\"budgetLimit\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"25\">$25</option>\n                    <option value=\"50\" selected>$50</option>\n                    <option value=\"100\">$100</option>\n                    <option value=\"200\">$200</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label\n                    for=\"minConfidenceScore\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Min Confidence\n                  </label>\n                  <select\n                    id=\"minConfidenceScore\"\n                    name=\"minConfidenceScore\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"30\">30%</option>\n                    <option value=\"50\" selected>50%</option>\n                    <option value=\"70\">70%</option>\n                    <option value=\"85\">85%</option>\n                  </select>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                id=\"submitBtn\"\n                class=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-md transition duration-200 flex items-center justify-center\"\n              >\n                <span id=\"submitText\">Start Discovery</span>\n                <div id=\"submitSpinner\" class=\"loading ml-2 hidden\">\n                  <div\n                    class=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full\"\n                  ></div>\n                </div>\n              </button>\n            </form>\n          </div>\n        </div>\n\n        <!-- User Dashboard -->\n        <div class=\"space-y-6\">\n          <!-- User Status -->\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">\n              User Status\n            </h3>\n            <div id=\"userStatus\" class=\"space-y-2 text-sm\">\n              <!-- Status will be injected here -->\n            </div>\n          </div>\n\n          <!-- Recent Campaigns -->\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">\n              Recent Campaigns\n            </h3>\n            <div id=\"recentCampaigns\" class=\"space-y-3\">\n              <!-- Campaigns will be injected here -->\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Results Section -->\n      <div id=\"resultsSection\" class=\"mt-8 hidden\">\n        <div class=\"bg-white rounded-lg shadow\">\n          <div\n            class=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\"\n          >\n            <h3 class=\"text-lg font-semibold text-gray-900\">\n              Discovery Results\n            </h3>\n            <button\n              id=\"exportBtn\"\n              class=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm transition duration-200\"\n            >\n              Export CSV\n            </button>\n          </div>\n          <div id=\"resultsContent\" class=\"p-6\">\n            <!-- Results will be injected here -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <script>\n      // ProspectPro v4.2 - User-Aware Frontend\n      // October 4, 2025 - Complete authentication integration\n\n      // Initialize Supabase with new API keys\n      const SUPABASE_URL = \"https://sriycekxdqnesdsgwiuc.supabase.co\";\n      const SUPABASE_ANON_KEY =\n        \"sb_publishable_GaGU6ZiyiO6ncO7kU2qAvA_SFuCyYaM\";\n      const EDGE_FUNCTION_JWT =\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI\";\n\n      const supabase = window.supabase.createClient(\n        SUPABASE_URL,\n        SUPABASE_ANON_KEY\n      );\n\n      // Global state\n      let currentUser = null;\n      let sessionUserId = null;\n      let lastCampaignId = null;\n\n      // Generate session ID for anonymous users\n      function generateSessionId() {\n        return (\n          \"session_\" +\n          Date.now() +\n          \"_\" +\n          Math.random().toString(36).substr(2, 9)\n        );\n      }\n\n      // Initialize session\n      function initializeSession() {\n        if (!sessionUserId) {\n          sessionUserId = generateSessionId();\n          console.log(\"Generated session ID:\", sessionUserId);\n        }\n      }\n\n      // Authentication handlers\n      async function initializeAuth() {\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n        currentUser = session?.user || null;\n\n        updateAuthUI();\n        updateUserStatus();\n        loadRecentCampaigns();\n      }\n\n      function updateAuthUI() {\n        const authSection = document.getElementById(\"authSection\");\n\n        if (currentUser) {\n          authSection.innerHTML = `\n                    <div class=\"flex items-center space-x-4\">\n                        <span class=\"text-sm text-gray-700\">\n                            ${currentUser.email}\n                        </span>\n                        <button onclick=\"signOut()\" class=\"text-sm text-red-600 hover:text-red-800\">\n                            Sign Out\n                        </button>\n                    </div>\n                `;\n        } else {\n          authSection.innerHTML = `\n                    <div class=\"flex items-center space-x-4\">\n                        <button onclick=\"signIn()\" class=\"text-sm text-blue-600 hover:text-blue-800\">\n                            Sign In\n                        </button>\n                        <button onclick=\"signUp()\" class=\"text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded\">\n                            Sign Up\n                        </button>\n                    </div>\n                `;\n        }\n      }\n\n      function updateUserStatus() {\n        const userStatus = document.getElementById(\"userStatus\");\n\n        if (currentUser) {\n          userStatus.innerHTML = `\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                        <span class=\"text-green-700\">Authenticated User</span>\n                    </div>\n                    <div class=\"text-gray-600\">Email: ${currentUser.email}</div>\n                    <div class=\"text-gray-600\">Campaigns linked to your account</div>\n                `;\n        } else {\n          userStatus.innerHTML = `\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                        <span class=\"text-yellow-700\">Anonymous Session</span>\n                    </div>\n                    <div class=\"text-gray-600\">Session ID: ${\n                      sessionUserId || \"Not initialized\"\n                    }</div>\n                    <div class=\"text-gray-600\">Sign up to save campaigns permanently</div>\n                `;\n        }\n      }\n\n      async function signIn() {\n        const email = prompt(\"Enter your email:\");\n        if (!email) return;\n\n        const password = prompt(\"Enter your password:\");\n        if (!password) return;\n\n        const { data, error } = await supabase.auth.signInWithPassword({\n          email: email,\n          password: password,\n        });\n\n        if (error) {\n          alert(\"Sign in failed: \" + error.message);\n        } else {\n          currentUser = data.user;\n          updateAuthUI();\n          updateUserStatus();\n          loadRecentCampaigns();\n        }\n      }\n\n      async function signUp() {\n        const email = prompt(\"Enter your email:\");\n        if (!email) return;\n\n        const password = prompt(\"Create a password (min 6 characters):\");\n        if (!password || password.length < 6) {\n          alert(\"Password must be at least 6 characters\");\n          return;\n        }\n\n        const { data, error } = await supabase.auth.signUp({\n          email: email,\n          password: password,\n        });\n\n        if (error) {\n          alert(\"Sign up failed: \" + error.message);\n        } else {\n          alert(\"Check your email for confirmation link!\");\n        }\n      }\n\n      async function signOut() {\n        await supabase.auth.signOut();\n        currentUser = null;\n        updateAuthUI();\n        updateUserStatus();\n        loadRecentCampaigns();\n      }\n\n      // Load recent campaigns\n      async function loadRecentCampaigns() {\n        try {\n          let query = supabase\n            .from(\"campaigns\")\n            .select(\"*\")\n            .order(\"created_at\", { ascending: false })\n            .limit(5);\n\n          const { data: campaigns, error } = await query;\n\n          const recentCampaigns = document.getElementById(\"recentCampaigns\");\n\n          if (error || !campaigns || campaigns.length === 0) {\n            recentCampaigns.innerHTML =\n              '<p class=\"text-gray-500 text-sm\">No campaigns yet</p>';\n            return;\n          }\n\n          recentCampaigns.innerHTML = campaigns\n            .map(\n              (campaign) => `\n                    <div class=\"border border-gray-200 rounded p-3 hover:bg-gray-50 cursor-pointer\" onclick=\"viewCampaign('${campaign.id}')\">\n                        <div class=\"font-medium text-sm\">${campaign.business_type}</div>\n                        <div class=\"text-xs text-gray-600\">${campaign.location}</div>\n                        <div class=\"text-xs text-gray-500 mt-1\">${campaign.results_count} leads • $${campaign.total_cost}</div>\n                    </div>\n                `\n            )\n            .join(\"\");\n        } catch (error) {\n          console.error(\"Error loading campaigns:\", error);\n        }\n      }\n\n      // Discovery form handler\n      document\n        .getElementById(\"discoveryForm\")\n        .addEventListener(\"submit\", async (e) => {\n          e.preventDefault();\n\n          const submitBtn = document.getElementById(\"submitBtn\");\n          const submitText = document.getElementById(\"submitText\");\n          const submitSpinner = document.getElementById(\"submitSpinner\");\n\n          // Show loading state\n          submitBtn.disabled = true;\n          submitText.textContent = \"Discovering...\";\n          submitSpinner.classList.remove(\"hidden\");\n\n          try {\n            const formData = new FormData(e.target);\n            const requestData = {\n              businessType: formData.get(\"businessType\"),\n              location: formData.get(\"location\"),\n              maxResults: parseInt(formData.get(\"maxResults\")),\n              budgetLimit: parseFloat(formData.get(\"budgetLimit\")),\n              minConfidenceScore: parseInt(formData.get(\"minConfidenceScore\")),\n              userEmail: currentUser?.email,\n              sessionUserId: sessionUserId,\n            };\n\n            console.log(\"Starting discovery with:\", requestData);\n\n            const response = await fetch(\n              `${SUPABASE_URL}/functions/v1/business-discovery-user-aware`,\n              {\n                method: \"POST\",\n                headers: {\n                  Authorization: `Bearer ${EDGE_FUNCTION_JWT}`,\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(requestData),\n              }\n            );\n\n            const result = await response.json();\n\n            if (result.success) {\n              lastCampaignId = result.campaignId;\n              displayResults(result);\n              loadRecentCampaigns(); // Refresh campaigns list\n            } else {\n              throw new Error(result.error || \"Discovery failed\");\n            }\n          } catch (error) {\n            console.error(\"Discovery error:\", error);\n            alert(\"Discovery failed: \" + error.message);\n          } finally {\n            // Reset loading state\n            submitBtn.disabled = false;\n            submitText.textContent = \"Start Discovery\";\n            submitSpinner.classList.add(\"hidden\");\n          }\n        });\n\n      // Display results\n      function displayResults(result) {\n        const resultsSection = document.getElementById(\"resultsSection\");\n        const resultsContent = document.getElementById(\"resultsContent\");\n\n        resultsContent.innerHTML = `\n                <div class=\"mb-6\">\n                    <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\n                        <div class=\"bg-blue-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-blue-700\">${\n                              result.results.totalFound\n                            }</div>\n                            <div class=\"text-sm text-blue-600\">Leads Found</div>\n                        </div>\n                        <div class=\"bg-green-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-green-700\">${\n                              result.results.averageConfidence\n                            }%</div>\n                            <div class=\"text-sm text-green-600\">Avg Confidence</div>\n                        </div>\n                        <div class=\"bg-purple-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-purple-700\">$${result.optimization.totalCost.toFixed(\n                              2\n                            )}</div>\n                            <div class=\"text-sm text-purple-600\">Total Cost</div>\n                        </div>\n                        <div class=\"bg-gray-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-gray-700\">${\n                              result.optimization.processingTime\n                            }</div>\n                            <div class=\"text-sm text-gray-600\">Processing Time</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"bg-yellow-50 border border-yellow-200 rounded p-4 mb-4\">\n                        <div class=\"text-sm\">\n                            <strong>User Context:</strong> \n                            ${\n                              result.userManagement.isAuthenticated\n                                ? \"Authenticated User\"\n                                : \"Anonymous Session\"\n                            } • \n                            Campaign Ownership: ${\n                              result.userManagement.campaignOwnership\n                            }\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full divide-y divide-gray-200\">\n                        <thead class=\"bg-gray-50\">\n                            <tr>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Business</th>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact</th>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Confidence</th>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Cost</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"bg-white divide-y divide-gray-200\">\n                            ${result.leads\n                              .map(\n                                (lead) => `\n                                <tr class=\"hover:bg-gray-50\">\n                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                                        <div class=\"font-medium text-gray-900\">${\n                                          lead.businessName\n                                        }</div>\n                                        <div class=\"text-sm text-gray-500\">${\n                                          lead.address\n                                        }</div>\n                                    </td>\n                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                        <div>📞 ${lead.phone}</div>\n                                        <div>🌐 <a href=\"${\n                                          lead.website\n                                        }\" target=\"_blank\" class=\"text-blue-600 hover:underline\">${\n                                  lead.website\n                                }</a></div>\n                                        <div>✉️ ${lead.email}</div>\n                                    </td>\n                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                                        <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                                          lead.optimizedScore >= 80\n                                            ? \"bg-green-100 text-green-800\"\n                                            : lead.optimizedScore >= 60\n                                            ? \"bg-yellow-100 text-yellow-800\"\n                                            : \"bg-red-100 text-red-800\"\n                                        }\">${lead.optimizedScore}%</span>\n                                    </td>\n                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                        $${lead.validationCost.toFixed(3)}\n                                    </td>\n                                </tr>\n                            `\n                              )\n                              .join(\"\")}\n                        </tbody>\n                    </table>\n                </div>\n            `;\n\n        resultsSection.classList.remove(\"hidden\");\n        resultsSection.scrollIntoView({ behavior: \"smooth\" });\n      }\n\n      // Export functionality\n      document\n        .getElementById(\"exportBtn\")\n        .addEventListener(\"click\", async () => {\n          if (!lastCampaignId) {\n            alert(\"No campaign to export\");\n            return;\n          }\n\n          try {\n            const requestData = {\n              campaignId: lastCampaignId,\n              format: \"csv\",\n              includeEnrichmentData: true,\n              userEmail: currentUser?.email,\n              sessionUserId: sessionUserId,\n            };\n\n            const response = await fetch(\n              `${SUPABASE_URL}/functions/v1/campaign-export-user-aware?download=true`,\n              {\n                method: \"POST\",\n                headers: {\n                  Authorization: `Bearer ${EDGE_FUNCTION_JWT}`,\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(requestData),\n              }\n            );\n\n            if (response.ok) {\n              const blob = await response.blob();\n              const url = window.URL.createObjectURL(blob);\n              const a = document.createElement(\"a\");\n              a.href = url;\n              a.download = `prospectpro_export_${lastCampaignId.slice(-8)}.csv`;\n              document.body.appendChild(a);\n              a.click();\n              window.URL.revokeObjectURL(url);\n              document.body.removeChild(a);\n            } else {\n              throw new Error(\"Export failed\");\n            }\n          } catch (error) {\n            console.error(\"Export error:\", error);\n            alert(\"Export failed: \" + error.message);\n          }\n        });\n\n      // View campaign details\n      async function viewCampaign(campaignId) {\n        lastCampaignId = campaignId;\n        // You could load and display campaign details here\n        alert(\n          `Campaign ${campaignId} selected. Export functionality available.`\n        );\n      }\n\n      // Initialize the application\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        initializeSession();\n        initializeAuth();\n      });\n\n      // Listen for auth changes\n      supabase.auth.onAuthStateChange((event, session) => {\n        currentUser = session?.user || null;\n        updateAuthUI();\n        updateUserStatus();\n\n        if (event === \"SIGNED_IN\") {\n          loadRecentCampaigns();\n        }\n      });\n    </script>\n  </body>\n</html>\n"}}},
{"type":"measure","name":"lsp.did_open","count":4,"duration":0.203},
{"type":"mark","name":"lsp.did_open","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/index.html","languageId":"html","version":1,"text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"/header logo.png\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ProspectPro - Real Business Lead Discovery</title>\n    <meta\n      name=\"description\"\n      content=\"Zero fake data lead generation platform with real-time business validation\"\n    />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>\n"}}},
{"type":"measure","name":"lsp.did_open","count":5,"duration":0.02},
{"type":"mark","name":"lsp.did_open","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql","languageId":"sql","version":1,"text":"-- ProspectPro Auth & Payments Schema Update\n-- October 7, 2025 - Production Ready Features\n\n-- =============================================================================\n-- PART 1: Campaign Naming & Ownership Enhancements\n-- =============================================================================\n\n-- Add campaign naming and enhanced user management\nALTER TABLE public.campaigns \nADD COLUMN IF NOT EXISTS generated_name VARCHAR(100),\nADD COLUMN IF NOT EXISTS display_name VARCHAR(200),\nADD COLUMN IF NOT EXISTS name_components JSONB,\nADD COLUMN IF NOT EXISTS user_budget DECIMAL(10,4) DEFAULT 50.0,\nADD COLUMN IF NOT EXISTS budget_alerts_enabled BOOLEAN DEFAULT true;\n\n-- Create index for efficient campaign searching\nCREATE INDEX IF NOT EXISTS idx_campaigns_generated_name ON public.campaigns(generated_name);\nCREATE INDEX IF NOT EXISTS idx_campaigns_user_budget ON public.campaigns(user_budget);\n\n-- =============================================================================\n-- PART 2: User Profiles & Payment Information\n-- =============================================================================\n\n-- User profiles table (extends Supabase auth.users)\nCREATE TABLE IF NOT EXISTS public.user_profiles (\n  id UUID REFERENCES auth.users(id) PRIMARY KEY,\n  email TEXT,\n  full_name TEXT,\n  avatar_url TEXT,\n  subscription_tier TEXT DEFAULT 'free',\n  total_spent DECIMAL(10,4) DEFAULT 0,\n  monthly_budget DECIMAL(10,4) DEFAULT 100.0,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Payment methods table (Stripe integration)\nCREATE TABLE IF NOT EXISTS public.payment_methods (\n  id BIGSERIAL PRIMARY KEY,\n  user_id UUID REFERENCES auth.users(id),\n  stripe_payment_method_id TEXT NOT NULL,\n  type TEXT NOT NULL, -- 'card', 'bank_account', etc.\n  last_four TEXT,\n  brand TEXT, -- 'visa', 'mastercard', etc.\n  exp_month INTEGER,\n  exp_year INTEGER,\n  is_default BOOLEAN DEFAULT false,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Payment transactions table\nCREATE TABLE IF NOT EXISTS public.payment_transactions (\n  id BIGSERIAL PRIMARY KEY,\n  user_id UUID REFERENCES auth.users(id),\n  campaign_id TEXT REFERENCES public.campaigns(id),\n  stripe_payment_intent_id TEXT,\n  amount DECIMAL(10,4) NOT NULL,\n  currency TEXT DEFAULT 'usd',\n  status TEXT NOT NULL, -- 'pending', 'succeeded', 'failed'\n  description TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- =============================================================================\n-- PART 3: Enhanced RLS Policies\n-- =============================================================================\n\n-- Enable RLS on new tables\nALTER TABLE public.user_profiles ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.payment_methods ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.payment_transactions ENABLE ROW LEVEL SECURITY;\n\n-- User profiles policies\nCREATE POLICY \"Users can view own profile\" ON public.user_profiles\n  FOR SELECT USING (auth.uid() = id);\n\nCREATE POLICY \"Users can update own profile\" ON public.user_profiles\n  FOR UPDATE USING (auth.uid() = id);\n\nCREATE POLICY \"Users can insert own profile\" ON public.user_profiles\n  FOR INSERT WITH CHECK (auth.uid() = id);\n\n-- Payment methods policies\nCREATE POLICY \"Users can view own payment methods\" ON public.payment_methods\n  FOR SELECT USING (auth.uid() = user_id);\n\nCREATE POLICY \"Users can manage own payment methods\" ON public.payment_methods\n  FOR ALL USING (auth.uid() = user_id);\n\n-- Payment transactions policies\nCREATE POLICY \"Users can view own transactions\" ON public.payment_transactions\n  FOR SELECT USING (auth.uid() = user_id);\n\n-- =============================================================================\n-- PART 4: Campaign Naming Functions\n-- =============================================================================\n\n-- Generate campaign name function\nCREATE OR REPLACE FUNCTION public.generate_campaign_name(\n  business_type TEXT,\n  location TEXT,\n  user_id UUID DEFAULT NULL\n)\nRETURNS TEXT\nLANGUAGE plpgsql\nAS $$\nDECLARE\n  business_code TEXT;\n  location_code TEXT;\n  date_string TEXT;\n  time_string TEXT;\n  user_code TEXT;\n  campaign_name TEXT;\nBEGIN\n  -- Generate business type code (first 4 letters, uppercase)\n  business_code := UPPER(LEFT(REGEXP_REPLACE(business_type, '[^a-zA-Z]', '', 'g'), 4));\n  \n  -- Generate location code (first 4 letters, uppercase)\n  location_code := UPPER(LEFT(REGEXP_REPLACE(location, '[^a-zA-Z]', '', 'g'), 4));\n  \n  -- Generate date and time strings\n  date_string := TO_CHAR(NOW(), 'YYYYMMDD');\n  time_string := TO_CHAR(NOW(), 'HH24MISS');\n  \n  -- Generate user code (last 6 chars of user_id or random for anonymous)\n  IF user_id IS NOT NULL THEN\n    user_code := RIGHT(user_id::TEXT, 6);\n  ELSE\n    user_code := SUBSTRING(MD5(RANDOM()::TEXT) FROM 1 FOR 6);\n  END IF;\n  \n  -- Combine into final campaign name\n  campaign_name := business_code || '_' || location_code || '_' || date_string || '_' || time_string || '_' || user_code;\n  \n  RETURN campaign_name;\nEND;\n$$;\n\n-- Auto-generate campaign names trigger\nCREATE OR REPLACE FUNCTION public.auto_generate_campaign_name()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  -- Only generate if not already set\n  IF NEW.generated_name IS NULL OR NEW.generated_name = '' THEN\n    NEW.generated_name := public.generate_campaign_name(\n      NEW.business_type,\n      NEW.location,\n      NEW.user_id\n    );\n  END IF;\n  \n  -- Set display name if not provided\n  IF NEW.display_name IS NULL OR NEW.display_name = '' THEN\n    NEW.display_name := NEW.business_type || ' in ' || NEW.location;\n  END IF;\n  \n  -- Store name components\n  NEW.name_components := jsonb_build_object(\n    'business_type', NEW.business_type,\n    'location', NEW.location,\n    'generated_at', NOW(),\n    'user_id', NEW.user_id\n  );\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Create trigger\nDROP TRIGGER IF EXISTS trigger_auto_generate_campaign_name ON public.campaigns;\nCREATE TRIGGER trigger_auto_generate_campaign_name\n  BEFORE INSERT ON public.campaigns\n  FOR EACH ROW\n  EXECUTE FUNCTION public.auto_generate_campaign_name();\n\n-- =============================================================================\n-- PART 5: User Profile Management Functions\n-- =============================================================================\n\n-- Create or update user profile\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  INSERT INTO public.user_profiles (id, email, full_name, avatar_url)\n  VALUES (\n    NEW.id,\n    NEW.email,\n    NEW.raw_user_meta_data->>'full_name',\n    NEW.raw_user_meta_data->>'avatar_url'\n  )\n  ON CONFLICT (id) DO UPDATE SET\n    email = EXCLUDED.email,\n    full_name = EXCLUDED.full_name,\n    avatar_url = EXCLUDED.avatar_url,\n    updated_at = NOW();\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Trigger for user profile creation\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\nCREATE TRIGGER on_auth_user_created\n  AFTER INSERT OR UPDATE ON auth.users\n  FOR EACH ROW\n  EXECUTE FUNCTION public.handle_new_user();\n\n-- =============================================================================\n-- PART 6: Budget and Spending Tracking\n-- =============================================================================\n\n-- Update user spending function\nCREATE OR REPLACE FUNCTION public.update_user_spending(\n  user_id_param UUID,\n  amount_param DECIMAL(10,4)\n)\nRETURNS VOID\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  UPDATE public.user_profiles\n  SET \n    total_spent = total_spent + amount_param,\n    updated_at = NOW()\n  WHERE id = user_id_param;\nEND;\n$$;\n\n-- =============================================================================\n-- PART 7: Enhanced Views\n-- =============================================================================\n\n-- Campaign analytics with user info\nCREATE OR REPLACE VIEW public.campaign_analytics_enhanced\nWITH (security_invoker = true)\nAS SELECT\n  c.id,\n  c.generated_name,\n  c.display_name,\n  c.business_type,\n  c.location,\n  c.target_count,\n  c.min_confidence_score,\n  c.status,\n  c.results_count,\n  c.total_cost,\n  c.user_budget,\n  c.budget_limit,\n  c.processing_time_ms,\n  c.created_at,\n  c.user_id,\n  c.session_user_id,\n  up.email as user_email,\n  up.full_name as user_name,\n  COUNT(l.id) AS actual_leads,\n  COALESCE(AVG(l.confidence_score), 0)::numeric(10,2) AS avg_confidence,\n  (c.total_cost <= c.user_budget) AS within_budget\nFROM campaigns c\nLEFT JOIN leads l ON l.campaign_id = c.id\nLEFT JOIN user_profiles up ON up.id = c.user_id\nWHERE\n  c.user_id = auth.uid() OR\n  (auth.uid() IS NULL AND c.session_user_id IS NOT NULL)\nGROUP BY c.id, c.generated_name, c.display_name, c.business_type, c.location, \n         c.target_count, c.min_confidence_score, c.status, c.results_count, \n         c.total_cost, c.user_budget, c.budget_limit, c.processing_time_ms, \n         c.created_at, c.user_id, c.session_user_id, up.email, up.full_name;\n\n-- =============================================================================\n-- MIGRATION COMPLETE\n-- =============================================================================\n\n-- Test the campaign name generation\nSELECT public.generate_campaign_name('coffee shop', 'Seattle, WA', NULL) as test_campaign_name;\n\nCOMMENT ON TABLE public.user_profiles IS 'Extended user profiles with subscription and budget info';\nCOMMENT ON TABLE public.payment_methods IS 'User payment methods stored via Stripe';\nCOMMENT ON TABLE public.payment_transactions IS 'Payment transaction history';\nCOMMENT ON FUNCTION public.generate_campaign_name IS 'Generates standardized campaign names';\nCOMMENT ON VIEW public.campaign_analytics_enhanced IS 'Enhanced campaign analytics with user context';\n\n-- Final status\nDO $$\nBEGIN\n  RAISE NOTICE '';\n  RAISE NOTICE '🔐 ProspectPro Auth & Payments Schema - October 7, 2025';\n  RAISE NOTICE '================================================================';\n  RAISE NOTICE '✅ Campaign naming system implemented';\n  RAISE NOTICE '✅ User profiles and payment tables created';\n  RAISE NOTICE '✅ Enhanced RLS policies applied';\n  RAISE NOTICE '✅ Budget tracking functions added';\n  RAISE NOTICE '✅ Auto-trigger for campaign naming enabled';\n  RAISE NOTICE '';\n  RAISE NOTICE 'Ready for: Auth integration, Stripe payments, UI updates';\n  RAISE NOTICE '';\nEND $$;"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":2,"duration":0.17},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":3,"duration":0.159},
{"type":"measure","name":"lsp.did_open","count":6,"duration":3.165},
{"type":"mark","name":"lsp.did_open","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useState } from \"react\";\nimport {\n  BUSINESS_CATEGORIES,\n  BUSINESS_TYPES_BY_CATEGORY,\n} from \"../constants/businessTaxonomy\";\n\ninterface MultiSelectBusinessTypesProps {\n  selectedCategories: string[];\n  selectedBusinessTypes: string[];\n  onCategoriesChange: (categories: string[]) => void;\n  onBusinessTypesChange: (types: string[]) => void;\n}\n\nexport const MultiSelectBusinessTypes: React.FC<\n  MultiSelectBusinessTypesProps\n> = ({\n  selectedCategories,\n  selectedBusinessTypes,\n  onCategoriesChange,\n  onBusinessTypesChange,\n}) => {\n  const [showBusinessTypes, setShowBusinessTypes] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Get available business types based on selected categories\n  const availableBusinessTypes = selectedCategories.reduce(\n    (acc: string[], category) => {\n      const types = BUSINESS_TYPES_BY_CATEGORY[category] || [];\n      return [...acc, ...types];\n    },\n    []\n  );\n\n  // Filter business types by search term\n  const filteredBusinessTypes = availableBusinessTypes.filter((type) =>\n    type.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleCategoryToggle = (category: string) => {\n    const newCategories = selectedCategories.includes(category)\n      ? selectedCategories.filter((c) => c !== category)\n      : [...selectedCategories, category];\n\n    onCategoriesChange(newCategories);\n\n    // Remove business types from deselected categories\n    if (!selectedCategories.includes(category)) {\n      // Category was added, no need to remove business types\n    } else {\n      // Category was removed, remove its business types\n      const removedCategoryTypes = BUSINESS_TYPES_BY_CATEGORY[category] || [];\n      const newBusinessTypes = selectedBusinessTypes.filter(\n        (type) => !removedCategoryTypes.includes(type)\n      );\n      onBusinessTypesChange(newBusinessTypes);\n    }\n  };\n\n  const handleBusinessTypeToggle = (businessType: string) => {\n    const newBusinessTypes = selectedBusinessTypes.includes(businessType)\n      ? selectedBusinessTypes.filter((t) => t !== businessType)\n      : [...selectedBusinessTypes, businessType];\n\n    onBusinessTypesChange(newBusinessTypes);\n  };\n\n  const selectAllInCategory = (category: string) => {\n    const categoryTypes = BUSINESS_TYPES_BY_CATEGORY[category] || [];\n    const newTypes = [...new Set([...selectedBusinessTypes, ...categoryTypes])];\n    onBusinessTypesChange(newTypes);\n  };\n\n  const clearCategory = (category: string) => {\n    const categoryTypes = BUSINESS_TYPES_BY_CATEGORY[category] || [];\n    const newTypes = selectedBusinessTypes.filter(\n      (type) => !categoryTypes.includes(type)\n    );\n    onBusinessTypesChange(newTypes);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Business Categories */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n          Business Categories ({selectedCategories.length} selected)\n        </label>\n        <div className=\"max-h-40 overflow-y-auto border border-gray-300 dark:border-gray-600 rounded-md p-3 bg-white dark:bg-gray-800\">\n          <div className=\"grid grid-cols-2 gap-2\">\n            {BUSINESS_CATEGORIES.map((category) => {\n              const isSelected = selectedCategories.includes(category);\n              return (\n                <label\n                  key={category}\n                  className=\"flex items-center space-x-2 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 p-1 rounded\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={isSelected}\n                    onChange={() => handleCategoryToggle(category)}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"text-sm text-gray-900 dark:text-gray-100\">\n                    {category}\n                  </span>\n                </label>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Business Types */}\n      {selectedCategories.length > 0 && (\n        <div>\n          <div className=\"flex items-center justify-between mb-3\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Business Types ({selectedBusinessTypes.length} selected)\n            </label>\n            <button\n              onClick={() => setShowBusinessTypes(!showBusinessTypes)}\n              className=\"text-sm text-blue-600 hover:text-blue-800 dark:text-blue-400\"\n            >\n              {showBusinessTypes ? \"Hide Types\" : \"Show Types\"}\n            </button>\n          </div>\n\n          {showBusinessTypes && (\n            <div className=\"space-y-3\">\n              {/* Search */}\n              <input\n                type=\"text\"\n                placeholder=\"Search business types...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 text-sm\"\n              />\n\n              {/* Quick Actions */}\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedCategories.map((category) => (\n                  <div key={category} className=\"flex items-center space-x-1\">\n                    <button\n                      onClick={() => selectAllInCategory(category)}\n                      className=\"text-xs px-2 py-1 bg-green-100 text-green-700 rounded hover:bg-green-200\"\n                    >\n                      All {category}\n                    </button>\n                    <button\n                      onClick={() => clearCategory(category)}\n                      className=\"text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200\"\n                    >\n                      Clear {category}\n                    </button>\n                  </div>\n                ))}\n              </div>\n\n              {/* Business Types List */}\n              <div className=\"max-h-60 overflow-y-auto border border-gray-300 dark:border-gray-600 rounded-md p-3 bg-white dark:bg-gray-800\">\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                  {filteredBusinessTypes.map((businessType) => {\n                    const isSelected =\n                      selectedBusinessTypes.includes(businessType);\n                    return (\n                      <label\n                        key={businessType}\n                        className=\"flex items-center space-x-2 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 p-1 rounded\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={isSelected}\n                          onChange={() =>\n                            handleBusinessTypeToggle(businessType)\n                          }\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <span className=\"text-sm text-gray-900 dark:text-gray-100\">\n                          {businessType}\n                        </span>\n                      </label>\n                    );\n                  })}\n                </div>\n\n                {filteredBusinessTypes.length === 0 && (\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 text-center py-4\">\n                    No business types found for \"{searchTerm}\"\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Selected Summary */}\n      {selectedBusinessTypes.length > 0 && (\n        <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md\">\n          <div className=\"text-sm text-blue-800 dark:text-blue-200\">\n            <strong>Selected:</strong>{\" \"}\n            {selectedBusinessTypes.slice(0, 5).join(\", \")}\n            {selectedBusinessTypes.length > 5 &&\n              ` +${selectedBusinessTypes.length - 5} more`}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":7,"duration":3.914},
{"type":"mark","name":"lsp.did_open","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","languageId":"typescriptreact","version":1,"text":"import { User } from \"@supabase/supabase-js\";\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../lib/supabase\";\n\ninterface PaymentMethodsProps {\n  user: User | null;\n}\n\ninterface PaymentMethod {\n  id: string;\n  stripe_payment_method_id: string;\n  type: string;\n  last_four: string;\n  brand: string;\n  exp_month: number;\n  exp_year: number;\n  is_default: boolean;\n}\n\ninterface UserProfile {\n  id: string;\n  email: string;\n  full_name: string;\n  subscription_tier: string;\n  total_spent: number;\n  monthly_budget: number;\n}\n\nexport const PaymentMethods: React.FC<PaymentMethodsProps> = ({ user }) => {\n  const [paymentMethods, setPaymentMethods] = useState<PaymentMethod[]>([]);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showAddCard, setShowAddCard] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      loadUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [user]);\n\n  const loadUserData = async () => {\n    if (!user) return;\n\n    try {\n      setLoading(true);\n\n      // Load user profile\n      const { data: profile, error: profileError } = await supabase\n        .from(\"user_profiles\")\n        .select(\"*\")\n        .eq(\"id\", user.id)\n        .single();\n\n      if (profileError && profileError.code !== \"PGRST116\") {\n        throw profileError;\n      }\n\n      setUserProfile(profile);\n\n      // Load payment methods\n      const { data: methods, error: methodsError } = await supabase\n        .from(\"payment_methods\")\n        .select(\"*\")\n        .eq(\"user_id\", user.id)\n        .order(\"created_at\", { ascending: false });\n\n      if (methodsError) {\n        throw methodsError;\n      }\n\n      setPaymentMethods(methods || []);\n    } catch (err: any) {\n      console.error(\"Error loading user data:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSetDefaultPayment = async (paymentMethodId: string) => {\n    if (!user) return;\n\n    try {\n      // Unset all current defaults\n      await supabase\n        .from(\"payment_methods\")\n        .update({ is_default: false })\n        .eq(\"user_id\", user.id);\n\n      // Set new default\n      const { error } = await supabase\n        .from(\"payment_methods\")\n        .update({ is_default: true })\n        .eq(\"id\", paymentMethodId);\n\n      if (error) throw error;\n\n      // Reload data\n      await loadUserData();\n    } catch (err: any) {\n      setError(err.message);\n    }\n  };\n\n  const handleDeletePayment = async (\n    paymentMethodId: string,\n    _stripePaymentMethodId: string\n  ) => {\n    if (!user) return;\n\n    try {\n      // TODO: Call Stripe API to detach payment method\n      // For now, just remove from our database\n      const { error } = await supabase\n        .from(\"payment_methods\")\n        .delete()\n        .eq(\"id\", paymentMethodId);\n\n      if (error) throw error;\n\n      // Reload data\n      await loadUserData();\n    } catch (err: any) {\n      setError(err.message);\n    }\n  };\n\n  const AddCardForm: React.FC = () => {\n    const [cardData, setCardData] = useState({\n      number: \"\",\n      expMonth: \"\",\n      expYear: \"\",\n      cvc: \"\",\n      name: \"\",\n    });\n\n    const handleAddCard = async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      // TODO: Integrate with Stripe Elements for secure card handling\n      // This is a placeholder implementation\n\n      setError(\n        \"Stripe integration required. Please add STRIPE_PUBLISHABLE_KEY to environment.\"\n      );\n    };\n\n    return (\n      <form\n        onSubmit={handleAddCard}\n        className=\"space-y-4 p-4 border border-gray-300 rounded-md\"\n      >\n        <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\n          Add New Card\n        </h4>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Card Number\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"1234 5678 9012 3456\"\n              value={cardData.number}\n              onChange={(e) =>\n                setCardData({ ...cardData, number: e.target.value })\n              }\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              maxLength={19}\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              MM / YY\n            </label>\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\"\n                placeholder=\"MM\"\n                value={cardData.expMonth}\n                onChange={(e) =>\n                  setCardData({ ...cardData, expMonth: e.target.value })\n                }\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                maxLength={2}\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"YY\"\n                value={cardData.expYear}\n                onChange={(e) =>\n                  setCardData({ ...cardData, expYear: e.target.value })\n                }\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                maxLength={2}\n                required\n              />\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              CVC\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"123\"\n              value={cardData.cvc}\n              onChange={(e) =>\n                setCardData({ ...cardData, cvc: e.target.value })\n              }\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              maxLength={4}\n              required\n            />\n          </div>\n\n          <div className=\"col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Cardholder Name\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"John Doe\"\n              value={cardData.name}\n              onChange={(e) =>\n                setCardData({ ...cardData, name: e.target.value })\n              }\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm\"\n          >\n            Add Card\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setShowAddCard(false)}\n            className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 text-sm\"\n          >\n            Cancel\n          </button>\n        </div>\n\n        <div className=\"text-xs text-gray-500\">\n          <p>🔒 Your card information is secured by Stripe</p>\n          <p>\n            ✅ Stripe Live Mode:\n            pk_live_51SCVzyP9TtDDsSx5C5IaC4XuPT2sh6CCLctSFKuqh1DdMZ24a6tCY8RvALvbeEAgttZboEGPAnMRmGxPWitwbVoP00ykBovk4f\n          </p>\n        </div>\n      </form>\n    );\n  };\n\n  if (!user) {\n    return (\n      <div className=\"p-4 bg-gray-100 border border-gray-300 rounded-md\">\n        <p className=\"text-sm text-gray-600\">\n          Please sign in to manage payment methods\n        </p>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center space-x-2 p-4\">\n        <div className=\"w-4 h-4 border-2 border-gray-300 border-t-blue-600 rounded-full animate-spin\"></div>\n        <span className=\"text-sm text-gray-600\">\n          Loading payment methods...\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* User Profile Summary */}\n      {userProfile && (\n        <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md\">\n          <h3 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n            Account Overview\n          </h3>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-blue-700 dark:text-blue-300\">\n                Subscription:\n              </span>\n              <span className=\"ml-2 font-medium capitalize\">\n                {userProfile.subscription_tier}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-blue-700 dark:text-blue-300\">\n                Total Spent:\n              </span>\n              <span className=\"ml-2 font-medium\">\n                ${userProfile.total_spent.toFixed(2)}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-blue-700 dark:text-blue-300\">\n                Monthly Budget:\n              </span>\n              <span className=\"ml-2 font-medium\">\n                ${userProfile.monthly_budget.toFixed(2)}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-blue-700 dark:text-blue-300\">\n                Payment Methods:\n              </span>\n              <span className=\"ml-2 font-medium\">{paymentMethods.length}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Payment Methods */}\n      <div>\n        <div className=\"flex items-center justify-between mb-3\">\n          <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">\n            Payment Methods\n          </h3>\n          <button\n            onClick={() => setShowAddCard(true)}\n            className=\"px-3 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm\"\n          >\n            Add Card\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"p-3 bg-red-100 border border-red-300 rounded-md text-red-700 text-sm mb-3\">\n            {error}\n          </div>\n        )}\n\n        {showAddCard && <AddCardForm />}\n\n        {paymentMethods.length === 0 ? (\n          <div className=\"p-4 border border-gray-300 rounded-md text-center\">\n            <p className=\"text-gray-500 text-sm\">\n              No payment methods added yet\n            </p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Add a card to start using paid features\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {paymentMethods.map((method) => (\n              <div\n                key={method.id}\n                className={`p-3 border rounded-md ${\n                  method.is_default\n                    ? \"border-green-300 bg-green-50 dark:bg-green-900/20\"\n                    : \"border-gray-300 bg-white dark:bg-gray-800\"\n                }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"text-sm\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-medium capitalize\">\n                          {method.brand}\n                        </span>\n                        <span className=\"text-gray-500\">\n                          •••• {method.last_four}\n                        </span>\n                        {method.is_default && (\n                          <span className=\"px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs\">\n                            Default\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        Expires {method.exp_month.toString().padStart(2, \"0\")}/\n                        {method.exp_year}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    {!method.is_default && (\n                      <button\n                        onClick={() => handleSetDefaultPayment(method.id)}\n                        className=\"text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200\"\n                      >\n                        Set Default\n                      </button>\n                    )}\n                    <button\n                      onClick={() =>\n                        handleDeletePayment(\n                          method.id,\n                          method.stripe_payment_method_id\n                        )\n                      }\n                      className=\"text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":4,"duration":0.173},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":5,"duration":0.183},
{"type":"measure","name":"lsp.did_open","count":8,"duration":3.277},
{"type":"mark","name":"lsp.did_open","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md","languageId":"markdown","version":1,"text":"# 🚀 ProspectPro v5.0 Implementation Plan - PHASE 1 COMPLETE\n\n**Date**: October 7, 2025  \n**Status**: Foundation Components Ready for Production Integration\n\n---\n\n## ✅ **WHAT I'VE IMPLEMENTED (Technical Foundation)**\n\n### **1. Database Schema Enhancement**\n\n- **File**: `/database/auth-and-payments-schema.sql`\n- **Features**:\n  - User profiles with subscription tiers and spending tracking\n  - Payment methods table (Stripe integration ready)\n  - Payment transactions history\n  - Automated campaign naming system\n  - Enhanced RLS policies for data security\n  - Budget tracking and alerts\n\n### **2. Authentication Component**\n\n- **File**: `/src/components/AuthComponent.tsx`\n- **Features**:\n  - Email/password authentication\n  - Google OAuth integration (when enabled)\n  - User profile creation and management\n  - Session management with Supabase Auth\n  - Compact UI for header integration\n\n### **3. Multi-Select Business Types**\n\n- **File**: `/src/components/MultiSelectBusinessTypes.tsx`\n- **Features**:\n  - Checkbox-based category and business type selection\n  - Search functionality within business types\n  - Bulk select/deselect by category\n  - Visual summary of selections\n  - Mobile-responsive grid layout\n\n### **4. Payment Management System**\n\n- **File**: `/src/components/PaymentMethods.tsx`\n- **Features**:\n  - Payment method management (ready for Stripe)\n  - User profile overview with spending tracking\n  - Default payment method setting\n  - Secure card form (placeholder for Stripe Elements)\n  - Budget monitoring integration\n\n### **5. Geographic Selection with Map**\n\n- **File**: `/src/components/GeographicSelector.tsx`\n- **Features**:\n  - Address search with free geocoding (OpenStreetMap)\n  - Visual radius selection (1-100 miles)\n  - Simple map visualization with radius overlay\n  - Interactive slider for custom radius\n  - Coverage area calculations\n  - Placeholder for full map integration (Google Maps/Mapbox)\n\n### **6. Enhanced Layout Integration**\n\n- **File**: `/src/components/Layout.tsx` (Updated)\n- **Features**:\n  - Auth component integrated in header\n  - Clean layout with logo and authentication\n  - Responsive design maintained\n\n---\n\n## 🔧 **WHAT YOU NEED TO SET UP (Your Action Items)**\n\n### **A. Supabase Configuration**\n\n#### **1. Run Database Schema**\n\n```sql\n-- In Supabase SQL Editor, run:\n-- Copy and paste entire content from: /database/auth-and-payments-schema.sql\n```\n\n#### **2. Enable Google OAuth**\n\n1. Go to [Google Cloud Console](https://console.cloud.google.com/apis/credentials)\n2. Create OAuth 2.0 Client ID\n3. Add authorized origins: `https://sriycekxdqnesdsgwiuc.supabase.co`\n4. Add redirect URIs: `https://sriycekxdqnesdsgwiuc.supabase.co/auth/v1/callback`\n5. Copy Client ID and Client Secret\n6. In Supabase Dashboard → Authentication → Providers:\n   - Enable Google provider\n   - Add your Google OAuth credentials\n\n### **B. Stripe Integration**\n\n#### **1. Create Stripe Account**\n\n1. Sign up at [stripe.com](https://stripe.com)\n2. Get API keys from Dashboard → Developers → API keys\n3. Note: Use test keys first, switch to live keys for production\n\n#### **2. Add Stripe Keys to Supabase**\n\n1. Supabase Dashboard → Settings → Vault\n2. Add secrets:\n   - `STRIPE_SECRET_KEY`: `sk_test_...` (your secret key)\n   - `STRIPE_PUBLISHABLE_KEY`: `pk_test_...` (your publishable key)\n\n#### **3. Enable Stripe Wrapper (Optional)**\n\n```sql\n-- In Supabase SQL Editor:\nCREATE EXTENSION IF NOT EXISTS wrappers WITH SCHEMA extensions;\n\n-- Follow: https://supabase.com/docs/guides/database/extensions/wrappers/stripe\n```\n\n### **C. Maps Integration (Optional)**\n\n#### **For Full Interactive Maps**\n\n- **Option 1**: Google Maps\n\n  - Get API key from Google Cloud Console\n  - Enable Maps JavaScript API\n  - Add `GOOGLE_MAPS_API_KEY` to environment\n\n- **Option 2**: Mapbox\n  - Get API key from mapbox.com\n  - Add `MAPBOX_API_KEY` to environment\n\n---\n\n## 📋 **NEXT STEPS (Implementation Order)**\n\n### **Phase 2A: Database Setup**\n\n1. ✅ Run the database schema SQL in Supabase\n2. ✅ Verify tables and functions are created\n3. ✅ Test RLS policies with test data\n\n### **Phase 2B: Authentication Setup**\n\n1. ✅ Configure Google OAuth in Supabase\n2. ✅ Test email and Google sign-in\n3. ✅ Verify user profile creation\n\n### **Phase 2C: Payment Integration**\n\n1. ✅ Add Stripe keys to Supabase Vault\n2. ✅ Test payment method storage\n3. ✅ Integrate Stripe Elements for secure card entry\n\n### **Phase 2D: UI Integration**\n\n1. ✅ Update BusinessDiscovery page to use MultiSelectBusinessTypes\n2. ✅ Add GeographicSelector to discovery form\n3. ✅ Create user dashboard with PaymentMethods component\n4. ✅ Test complete user flow\n\n### **Phase 2E: Backend Updates**\n\n1. ✅ Update Edge Functions to handle multi-select business types\n2. ✅ Add payment processing to campaign creation\n3. ✅ Implement budget tracking and alerts\n4. ✅ Add campaign naming system\n\n---\n\n## 🧪 **TESTING CHECKLIST**\n\n### **Database Testing**\n\n- [ ] User profiles are created on sign-up\n- [ ] Campaign naming generates correctly\n- [ ] RLS policies restrict data access properly\n- [ ] Payment methods can be added/removed\n\n### **Authentication Testing**\n\n- [ ] Email sign-up/sign-in works\n- [ ] Google OAuth works (after setup)\n- [ ] User sessions persist correctly\n- [ ] Profile data syncs with auth\n\n### **UI Component Testing**\n\n- [ ] Multi-select shows correct business types per category\n- [ ] Geographic selector geocodes addresses\n- [ ] Payment form validates input correctly\n- [ ] All components are mobile-responsive\n\n### **Integration Testing**\n\n- [ ] Complete user journey: sign-up → add payment → create campaign\n- [ ] Data isolation between users works correctly\n- [ ] Budget tracking updates properly\n- [ ] Campaign naming follows convention\n\n---\n\n## 💰 **COST ESTIMATES**\n\n### **Development Costs (Already Implemented)**\n\n- ✅ $0 - All foundation components ready\n\n### **Service Costs (Monthly)**\n\n- **Supabase**: $0-25/month (depending on usage)\n- **Stripe**: 2.9% + 30¢ per transaction\n- **Google Maps** (optional): $200 free credits/month\n- **Vercel Hosting**: $0-20/month\n\n### **Setup Time Estimates**\n\n- **Google OAuth**: 15 minutes\n- **Stripe Basic**: 30 minutes\n- **Database Schema**: 5 minutes\n- **Testing**: 1-2 hours\n\n---\n\n## 🚨 **CRITICAL NOTES**\n\n1. **Security**: All components use Supabase RLS for data isolation\n2. **Scalability**: Serverless architecture scales automatically\n3. **Cost Control**: Built-in budget tracking and alerts\n4. **Data Quality**: Maintains zero fake data philosophy\n5. **Mobile Ready**: All components are responsive\n\n---\n\n## 📞 **READY FOR NEXT PHASE**\n\nThe technical foundation is complete! Once you set up:\n\n1. Google OAuth in Supabase\n2. Stripe API keys in Supabase Vault\n3. Run the database schema\n\nI can immediately proceed with:\n\n- UI integration and testing\n- Backend Edge Function updates\n- End-to-end user flow implementation\n- Production deployment\n\n**Current Status**: ✅ Ready to integrate and test as soon as external services are configured!\n"}}},
{"type":"measure","name":"lsp.did_open","count":9,"duration":0.081},
{"type":"mark","name":"lsp.did_open","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","languageId":"typescript","version":1,"text":"import { useMutation } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport {\n  ENRICHMENT_TIERS,\n  ensureSession,\n  getSessionToken,\n  supabase,\n} from \"../lib/supabase\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessDiscoveryResponse, CampaignConfig } from \"../types\";\n\ninterface SupabaseFunctionError {\n  message?: string;\n  name?: string;\n  context?: {\n    status?: number;\n    response?: unknown;\n  };\n}\n\nconst extractFunctionErrorMessage = (error: unknown): string => {\n  if (!error || typeof error !== \"object\") {\n    return \"Discovery failed due to an unknown error.\";\n  }\n\n  const functionsError = error as SupabaseFunctionError;\n  const defaultMessage =\n    functionsError.message || \"Edge function returned an error response.\";\n\n  const contextResponse = functionsError.context?.response;\n  if (!contextResponse) {\n    return defaultMessage;\n  }\n\n  try {\n    if (typeof contextResponse === \"string\") {\n      const parsed = JSON.parse(contextResponse);\n      if (parsed?.error) return String(parsed.error);\n      if (parsed?.message) return String(parsed.message);\n      return contextResponse;\n    }\n\n    if (\n      typeof contextResponse === \"object\" &&\n      contextResponse !== null &&\n      \"error\" in contextResponse\n    ) {\n      const { error: ctxError } = contextResponse as { error?: unknown };\n      if (ctxError) return String(ctxError);\n    }\n  } catch (parseError) {\n    console.warn(\"Unable to parse edge function error response:\", parseError);\n    return defaultMessage;\n  }\n\n  return defaultMessage;\n};\n\nexport const useBusinessDiscovery = (\n  onJobCreated?: (jobData: {\n    jobId: string;\n    campaignId: string;\n    status: string;\n    estimatedTime?: number;\n  }) => void\n) => {\n  const { sessionUserId } = useAuth();\n  const { setLoading, setError, clearLeads, setCurrentCampaign } =\n    useCampaignStore();\n  const [progress, setProgress] = useState(0);\n  const [currentStage, setCurrentStage] = useState<string>(\"\");\n  const [cacheStats] = useState<any>(null);\n\n  const discoveryMutation = useMutation({\n    mutationFn: async (\n      config: CampaignConfig & { selectedTier?: keyof typeof ENRICHMENT_TIERS }\n    ): Promise<BusinessDiscoveryResponse> => {\n      setLoading(true);\n      setError(null);\n      setProgress(10);\n      setCurrentStage(\"Initializing user-aware discovery...\");\n\n      // Reset any existing campaign context before starting a new discovery\n      clearLeads();\n      setCurrentCampaign(null);\n\n      try {\n        console.log(\"🚀 Starting user-aware business discovery:\", config);\n        console.log(\"👤 Session User ID:\", sessionUserId);\n\n        // Ensure we have a valid session before calling Edge Function\n        const hasSession = await ensureSession();\n        if (!hasSession) {\n          throw new Error(\n            \"Failed to establish authentication session. Please refresh the page.\"\n          );\n        }\n\n        // Determine enrichment tier\n        const tier = config.selectedTier || \"PROFESSIONAL\";\n        const tierConfig = ENRICHMENT_TIERS[tier];\n        const keywordList = config.keywords\n          ? config.keywords\n              .split(\",\")\n              .map((value) => value.trim())\n              .filter(Boolean)\n          : undefined;\n\n        const discoveryOptions = {\n          tradeAssociation: config.trade_association ?? false,\n          professionalLicense: config.professional_license ?? false,\n          chamberVerification: config.chamber_verification ?? false,\n          apolloDiscovery: tier === \"ENTERPRISE\",\n        };\n\n        setCurrentStage(\n          `Using ${tierConfig.name} tier ($${tierConfig.price}/lead)`\n        );\n        setProgress(20);\n\n        const accessToken = await getSessionToken();\n\n        // Call background task business discovery with authentication\n        const { data, error } = await supabase.functions.invoke(\n          \"business-discovery-background\",\n          {\n            body: {\n              businessType: config.business_type || config.search_terms,\n              location: config.location,\n              keywords: keywordList,\n              searchRadius: config.search_radius,\n              expandGeography: config.expand_geography,\n              maxResults: config.max_results,\n              budgetLimit: config.max_results * tierConfig.price,\n              minConfidenceScore: config.min_confidence_score || 50,\n              tierKey: tier,\n              tierName: tierConfig.name,\n              tierPrice: tierConfig.price,\n              options: discoveryOptions,\n              sessionUserId:\n                sessionUserId ||\n                `session_${Date.now()}_${Math.random()\n                  .toString(36)\n                  .substr(2, 9)}`,\n            },\n            headers: accessToken\n              ? { Authorization: `Bearer ${accessToken}` }\n              : undefined,\n          }\n        );\n\n        if (error) {\n          console.error(\"❌ Background discovery error:\", error);\n          throw new Error(extractFunctionErrorMessage(error));\n        }\n\n        if (!data || !data.success) {\n          const fallbackMessage =\n            typeof data?.error === \"string\"\n              ? data.error\n              : \"No data returned from background discovery\";\n          throw new Error(fallbackMessage);\n        }\n\n        console.log(\"✅ Background discovery response:\", data);\n\n        // For background tasks, we get jobId and campaignId immediately\n        // The actual processing happens in the background\n        const transformedData: BusinessDiscoveryResponse = {\n          campaign_id: data.campaignId,\n          job_id: data.jobId, // New: job ID for tracking progress\n          status: data.status, // New: processing status\n          estimated_time: data.estimatedTime, // New: estimated completion time\n          realtime_channel: data.realtimeChannel, // New: for real-time updates\n          total_found: 0, // Will be updated via real-time\n          qualified_count: 0, // Will be updated via real-time\n          total_cost: 0, // Will be updated via real-time\n          processing_time: \"< 100ms\", // Immediate response\n          tier_used: tierConfig.name,\n          cache_performance: undefined,\n          vault_status: \"secured\",\n          census_intelligence: undefined,\n          businesses: [], // Will be populated via real-time updates\n        };\n\n        setProgress(100);\n        setCurrentStage(\"Complete! 🎉\");\n        return transformedData;\n      } catch (error) {\n        console.error(\"❌ User-aware discovery error:\", error);\n        setCurrentStage(\"Failed ❌\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    },\n    onSuccess: (data: BusinessDiscoveryResponse) => {\n      console.log(\"✅ Background job created:\", data);\n\n      // For background jobs, we don't create the full campaign record immediately\n      // The progress page will handle real-time updates and final campaign creation\n\n      setProgress(100);\n      setCurrentStage(\"Background processing started! 🚀\");\n\n      // Navigate to progress page with job ID\n      if (data.job_id && data.campaign_id) {\n        const jobData = {\n          jobId: data.job_id,\n          campaignId: data.campaign_id,\n          status: data.status || \"pending\",\n          estimatedTime: data.estimated_time,\n        };\n\n        console.log(\"Job started:\", jobData);\n\n        // Call the navigation callback if provided\n        if (onJobCreated) {\n          onJobCreated(jobData);\n        }\n      }\n    },\n    onError: (error: any) => {\n      setError(\n        error instanceof Error ? error.message : \"User-aware discovery failed\"\n      );\n      setProgress(0);\n      setCurrentStage(\"Failed ❌\");\n    },\n  });\n\n  return {\n    startDiscovery: discoveryMutation.mutate,\n    isDiscovering: discoveryMutation.isPending,\n    progress,\n    currentStage,\n    cacheStats,\n    error: discoveryMutation.error,\n    data: discoveryMutation.data,\n  };\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":10,"duration":4.612},
{"type":"mark","name":"lsp.did_open","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport {\n  createUsageLogger,\n  UsageLogContext,\n  UsageLogger,\n} from \"../_shared/api-usage.ts\";\nimport { corsHeaders, handleCORS } from \"../_shared/edge-auth.ts\";\n\n// Background Task Business Discovery with Tiered Enrichment + Multi-Source Discovery\n// ProspectPro v4.3 - October 2025\n// - Google Places + Foursquare discovery with Census targeting\n// - Tier-aware enrichment pipeline with Hunter.io + NeverBounce\n// - Rich verification metadata persisted for UI + exports\n\n// Type declarations for EdgeRuntime\ndeclare const EdgeRuntime: {\n  waitUntil(promise: Promise<unknown>): void;\n};\n\ntype TierKey = \"BASE\" | \"PROFESSIONAL\" | \"ENTERPRISE\";\n\ntype DataSource = \"google_places\" | \"google_place_details\" | \"foursquare\";\n\ninterface TierSettings {\n  key: TierKey;\n  name: string;\n  pricePerLead: number;\n  orchestratorTier: \"starter\" | \"professional\" | \"enterprise\" | \"compliance\";\n  maxCostPerLead: number;\n  includes: {\n    verifyEmails: boolean;\n    personEnrichment: boolean;\n    apolloEnrichment: boolean;\n  };\n}\n\nconst ENRICHMENT_TIERS: Record<TierKey, TierSettings> = {\n  BASE: {\n    key: \"BASE\",\n    name: \"Base\",\n    pricePerLead: 0.15,\n    orchestratorTier: \"starter\",\n    maxCostPerLead: 0.5,\n    includes: {\n      verifyEmails: false, // Generic company email only\n      personEnrichment: false,\n      apolloEnrichment: false,\n    },\n  },\n  PROFESSIONAL: {\n    key: \"PROFESSIONAL\",\n    name: \"Professional\",\n    pricePerLead: 0.45,\n    orchestratorTier: \"professional\",\n    maxCostPerLead: 1.5,\n    includes: {\n      verifyEmails: true, // Professional email discovery & verification\n      personEnrichment: false,\n      apolloEnrichment: false,\n    },\n  },\n  ENTERPRISE: {\n    key: \"ENTERPRISE\",\n    name: \"Enterprise\",\n    pricePerLead: 2.5,\n    orchestratorTier: \"enterprise\",\n    maxCostPerLead: 7.5,\n    includes: {\n      verifyEmails: true,\n      personEnrichment: true, // Executive contact enrichment\n      apolloEnrichment: true, // Full compliance verification\n    },\n  },\n};\n\ninterface BusinessDiscoveryRequest {\n  businessType: string;\n  location: string;\n  keywords?: string[] | string;\n  searchRadius?: string;\n  expandGeography?: boolean;\n  maxResults?: number;\n  budgetLimit?: number;\n  minConfidenceScore?: number;\n  sessionUserId?: string;\n  tierKey?: TierKey;\n  tierName?: string;\n  tierPrice?: number;\n  options?: {\n    tradeAssociation?: boolean;\n    professionalLicense?: boolean;\n    chamberVerification?: boolean;\n    apolloDiscovery?: boolean;\n  };\n  userEmail?: string;\n}\n\ninterface JobConfig {\n  campaignId: string;\n  businessType: string;\n  location: string;\n  keywords: string[];\n  searchRadius?: string;\n  expandGeography: boolean;\n  maxResults: number;\n  budgetLimit: number;\n  minConfidenceScore: number;\n  userId?: string;\n  sessionUserId?: string;\n  jobId?: string;\n  tier: TierSettings;\n  options: {\n    tradeAssociation: boolean;\n    professionalLicense: boolean;\n    chamberVerification: boolean;\n    apolloDiscovery: boolean;\n  };\n}\n\ninterface BusinessData {\n  name?: string;\n  businessName?: string;\n  formatted_address?: string;\n  address?: string;\n  formatted_phone_number?: string;\n  phone?: string;\n  website?: string;\n  place_id?: string;\n  rating?: number;\n  user_ratings_total?: number;\n  source?: DataSource;\n  data_enriched?: boolean;\n  foursquare_data?: Record<string, unknown>;\n}\n\ninterface DiscoveredBusiness extends BusinessData {\n  source: DataSource;\n}\n\ninterface FoursquarePlace {\n  fsq_id: string;\n  name: string;\n  location?: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    region?: string;\n    postcode?: string;\n    country?: string;\n  };\n  contact?: {\n    phone?: string;\n  };\n  website?: string;\n  rating?: number;\n  stats?: {\n    total_tips?: number;\n  };\n}\n\ninterface ScoredLead {\n  businessName: string;\n  address: string;\n  phone: string;\n  website: string;\n  email: string;\n  optimizedScore: number;\n  validationCost: number;\n  dataSources: string[];\n  enhancementData: {\n    verificationSources: string[];\n    emails?: Array<{\n      email: string;\n      confidence?: number;\n      verified?: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    processingMetadata: {\n      totalCost: number;\n      validationCost: number;\n      enrichmentCost: number;\n      totalConfidenceBoost: number;\n      processingStrategy: string;\n      servicesUsed: string[];\n      servicesSkipped: string[];\n      enrichmentTier: string;\n      enrichmentCostBreakdown?: Record<string, number>;\n      emailStatus?: \"verified\" | \"unconfirmed\" | \"not_found\";\n      verifiedEmail?: string;\n      unverifiedEmail?: string;\n    };\n  };\n}\n\ninterface CensusIntelligence {\n  total_establishments: number;\n  density_score: number;\n  optimization: {\n    search_radius: number;\n    expected_results: number;\n    api_efficiency_score: number;\n    confidence_multiplier: number;\n  };\n  geographic_data: {\n    state: string;\n    county: string | null;\n    raw_location: string;\n    fallback?: boolean;\n  };\n}\n\nconst DEFAULT_OPTIONS = {\n  tradeAssociation: false,\n  professionalLicense: false,\n  chamberVerification: false,\n  apolloDiscovery: false,\n};\n\nconst GOOGLE_TEXT_SEARCH_COST = 0.032;\nconst GOOGLE_DETAILS_COST = 0.017;\nconst FOURSQUARE_SEARCH_COST = 0;\n\nfunction parseKeywords(input?: string[] | string): string[] {\n  if (!input) return [];\n  if (Array.isArray(input)) {\n    return input.map((value) => value.trim()).filter(Boolean);\n  }\n  return input\n    .split(\",\")\n    .map((value) => value.trim())\n    .filter(Boolean);\n}\n\nfunction getTierSettings(\n  tierKey?: TierKey,\n  fallbackName?: string\n): TierSettings {\n  if (tierKey && ENRICHMENT_TIERS[tierKey]) {\n    return ENRICHMENT_TIERS[tierKey];\n  }\n\n  if (fallbackName) {\n    const match = (Object.values(ENRICHMENT_TIERS) as TierSettings[]).find(\n      (tier) => tier.name.toLowerCase() === fallbackName.toLowerCase()\n    );\n    if (match) return match;\n  }\n\n  return ENRICHMENT_TIERS.BASE; // Changed from PROFESSIONAL to BASE as default\n}\n\n// --------------------\n// Census Intelligence\n// --------------------\n\nclass CensusAPIClient {\n  private apiKey: string;\n  private baseURL: string;\n  private cache = new Map<string, { data: unknown; timestamp: number }>();\n  private cacheTTL = 24 * 60 * 60 * 1000;\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n    this.baseURL = \"https://api.census.gov/data\";\n  }\n\n  async getBusinessDensity(\n    businessType: string,\n    location: string\n  ): Promise<CensusIntelligence> {\n    const naicsCode = this.mapBusinessTypeToNAICS(businessType);\n    const geoData = this.parseLocation(location);\n\n    const censusData = await this.fetchCountyBusinessPatterns({\n      naics: naicsCode,\n      state: geoData.state,\n      county: geoData.county,\n    });\n\n    return this.calculateDensityMetrics(censusData, geoData, location);\n  }\n\n  private async fetchCountyBusinessPatterns({\n    naics,\n    state,\n    county,\n  }: {\n    naics: string;\n    state: string;\n    county: string | null;\n  }) {\n    const cacheKey = `cbp_${naics}_${state}_${county ?? \"all\"}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      return cached.data as unknown[];\n    }\n\n    const url = `${this.baseURL}/2021/cbp?get=ESTAB,EMP,NAICS2017_LABEL&for=state:${state}&NAICS2017=${naics}&key=${this.apiKey}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`Census API error: ${response.status}`);\n    }\n\n    const data = (await response.json()) as unknown[];\n    this.cache.set(cacheKey, { data, timestamp: Date.now() });\n    return data;\n  }\n\n  private calculateDensityMetrics(\n    censusData: unknown[],\n    geoData: {\n      state: string;\n      county: string | null;\n      raw_location: string;\n      fallback?: boolean;\n    },\n    rawLocation: string\n  ): CensusIntelligence {\n    if (!Array.isArray(censusData) || censusData.length < 2) {\n      return this.getDefaultOptimization(\n        rawLocation,\n        geoData.state,\n        geoData.county\n      );\n    }\n\n    const businessData = censusData.slice(1) as [\n      string,\n      string,\n      string,\n      string\n    ][];\n    let totalEstablishments = 0;\n    let totalEmployment = 0;\n\n    for (const row of businessData) {\n      const [estab, emp] = row;\n      totalEstablishments += parseInt(estab) || 0;\n      totalEmployment += parseInt(emp) || 0;\n    }\n\n    const densityScore = Math.min(totalEstablishments / 750, 100);\n    const confidenceMultiplier =\n      totalEstablishments > 750 ? 1.3 : totalEstablishments > 250 ? 1.15 : 1;\n    const expectedResults = Math.max(Math.round(totalEstablishments * 0.04), 5);\n\n    return {\n      total_establishments: totalEstablishments,\n      density_score: densityScore,\n      optimization: {\n        search_radius: this.calculateOptimalRadius(densityScore),\n        expected_results: Math.min(expectedResults, 40),\n        api_efficiency_score: Math.round(densityScore),\n        confidence_multiplier: confidenceMultiplier,\n      },\n      geographic_data: geoData,\n    };\n  }\n\n  private getDefaultOptimization(\n    rawLocation: string,\n    state: string,\n    county: string | null\n  ): CensusIntelligence {\n    return {\n      total_establishments: 250,\n      density_score: 25,\n      optimization: {\n        search_radius: 25,\n        expected_results: 12,\n        api_efficiency_score: 45,\n        confidence_multiplier: 1,\n      },\n      geographic_data: {\n        state,\n        county,\n        raw_location: rawLocation,\n        fallback: true,\n      },\n    };\n  }\n\n  private mapBusinessTypeToNAICS(businessType: string): string {\n    const naicsMapping: Record<string, string> = {\n      accounting: \"5412\",\n      cpa: \"5412\",\n      legal: \"5411\",\n      electrician: \"238210\",\n      contractor: \"23\",\n      restaurant: \"7225\",\n      cafe: \"722515\",\n      medical: \"621\",\n      dental: \"6212\",\n      retail: \"44\",\n      spa: \"8121\",\n      salon: \"8121\",\n      consulting: \"5416\",\n      marketing: \"5418\",\n      real: \"531\",\n      hvac: \"238220\",\n    };\n\n    const lower = businessType.toLowerCase();\n    for (const [key, code] of Object.entries(naicsMapping)) {\n      if (lower.includes(key)) return code;\n    }\n    return \"00\";\n  }\n\n  private parseLocation(location: string) {\n    const stateMatch = location.match(/\\b([A-Z]{2})\\b/);\n    const stateCode = stateMatch ? this.getStateFIPSCode(stateMatch[1]) : \"06\";\n    return {\n      state: stateCode,\n      county: null,\n      raw_location: location,\n    };\n  }\n\n  private getStateFIPSCode(stateAbbr: string): string {\n    const stateCodes: Record<string, string> = {\n      AL: \"01\",\n      AK: \"02\",\n      AZ: \"04\",\n      AR: \"05\",\n      CA: \"06\",\n      CO: \"08\",\n      CT: \"09\",\n      DE: \"10\",\n      FL: \"12\",\n      GA: \"13\",\n      HI: \"15\",\n      ID: \"16\",\n      IL: \"17\",\n      IN: \"18\",\n      IA: \"19\",\n      KS: \"20\",\n      KY: \"21\",\n      LA: \"22\",\n      ME: \"23\",\n      MD: \"24\",\n      MA: \"25\",\n      MI: \"26\",\n      MN: \"27\",\n      MS: \"28\",\n      MO: \"29\",\n      MT: \"30\",\n      NE: \"31\",\n      NV: \"32\",\n      NH: \"33\",\n      NJ: \"34\",\n      NM: \"35\",\n      NY: \"36\",\n      NC: \"37\",\n      ND: \"38\",\n      OH: \"39\",\n      OK: \"40\",\n      OR: \"41\",\n      PA: \"42\",\n      RI: \"44\",\n      SC: \"45\",\n      SD: \"46\",\n      TN: \"47\",\n      TX: \"48\",\n      UT: \"49\",\n      VT: \"50\",\n      VA: \"51\",\n      WA: \"53\",\n      WV: \"54\",\n      WI: \"55\",\n      WY: \"56\",\n    };\n    return stateCodes[stateAbbr.toUpperCase()] || \"06\";\n  }\n\n  private calculateOptimalRadius(densityScore: number): number {\n    if (densityScore > 60) return 5;\n    if (densityScore > 30) return 10;\n    if (densityScore > 10) return 20;\n    return 35;\n  }\n}\n\nasync function fetchCensusIntelligence(\n  businessType: string,\n  location: string\n): Promise<CensusIntelligence | null> {\n  const censusKey = Deno.env.get(\"CENSUS_API_KEY\");\n  if (!censusKey) return null;\n\n  try {\n    const client = new CensusAPIClient(censusKey);\n    return await client.getBusinessDensity(businessType, location);\n  } catch (error) {\n    console.warn(\"Census intelligence unavailable:\", error);\n    return null;\n  }\n}\n\n// --------------------\n// Discovery Providers\n// --------------------\n\nasync function searchGooglePlaces(\n  businessType: string,\n  location: string,\n  keywords: string[],\n  maxResults: number,\n  usageLogger?: UsageLogger,\n  usageContext?: UsageLogContext\n): Promise<DiscoveredBusiness[]> {\n  const apiKey = Deno.env.get(\"GOOGLE_PLACES_API_KEY\");\n  if (!apiKey) throw new Error(\"Google Places API key not configured\");\n\n  const keywordSuffix = keywords.length > 0 ? ` ${keywords.join(\" \")}` : \"\";\n  const query = `${businessType}${keywordSuffix} in ${location}`;\n  const searchUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(\n    query\n  )}&key=${apiKey}`;\n\n  const requestParams = {\n    query,\n    businessType,\n    location,\n    keywordCount: keywords.length,\n    maxResults,\n  };\n\n  let textResponse: Response | null = null;\n  let data: Record<string, unknown> = {};\n  const searchStarted = performance.now();\n\n  try {\n    textResponse = await fetch(searchUrl);\n    data = await textResponse.json();\n  } catch (error) {\n    await usageLogger?.log({\n      sourceName: \"google_places\",\n      endpoint: \"textsearch\",\n      httpMethod: \"GET\",\n      requestParams,\n      queryType: \"discovery\",\n      responseCode: textResponse?.status ?? null,\n      responseTimeMs: Math.round(performance.now() - searchStarted),\n      success: false,\n      errorMessage: error instanceof Error ? error.message : String(error),\n    });\n    throw error;\n  }\n\n  const searchElapsed = Math.round(performance.now() - searchStarted);\n\n  if (data.status !== \"OK\") {\n    await usageLogger?.log({\n      sourceName: \"google_places\",\n      endpoint: \"textsearch\",\n      httpMethod: \"GET\",\n      requestParams,\n      queryType: \"discovery\",\n      responseCode: textResponse.status,\n      responseTimeMs: searchElapsed,\n      success: false,\n      errorMessage:\n        (data.error_message as string | undefined) || (data.status as string),\n      estimatedCost: GOOGLE_TEXT_SEARCH_COST,\n      actualCost: 0,\n    });\n    throw new Error(`Google Places API failed: ${data.status}`);\n  }\n\n  const results = (data.results as BusinessData[]).slice(0, maxResults * 2);\n\n  await usageLogger?.log({\n    sourceName: \"google_places\",\n    endpoint: \"textsearch\",\n    httpMethod: \"GET\",\n    requestParams,\n    queryType: \"discovery\",\n    responseCode: textResponse.status,\n    responseTimeMs: searchElapsed,\n    resultsReturned: results.length,\n    usefulResults: results.length,\n    success: true,\n    estimatedCost: GOOGLE_TEXT_SEARCH_COST,\n    actualCost: GOOGLE_TEXT_SEARCH_COST,\n    ...usageContext,\n  });\n\n  const enriched: DiscoveredBusiness[] = [];\n\n  for (const business of results) {\n    if (!business.place_id) {\n      enriched.push({ ...business, source: \"google_places\" });\n      continue;\n    }\n\n    const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${business.place_id}&fields=formatted_phone_number,website&key=${apiKey}`;\n    const detailStart = performance.now();\n\n    let detailsResponse: Response | null = null;\n    let detailsData: {\n      result?: {\n        formatted_phone_number?: string;\n        website?: string;\n      };\n      [key: string]: unknown;\n    } = {};\n\n    try {\n      detailsResponse = await fetch(detailsUrl);\n      detailsData = await detailsResponse.json();\n    } catch (error) {\n      await usageLogger?.log({\n        sourceName: \"google_places\",\n        endpoint: \"details\",\n        httpMethod: \"GET\",\n        requestParams: {\n          placeId: business.place_id,\n        },\n        queryType: \"discovery\",\n        responseCode: detailsResponse?.status ?? null,\n        responseTimeMs: Math.round(performance.now() - detailStart),\n        success: false,\n        errorMessage: error instanceof Error ? error.message : String(error),\n        estimatedCost: GOOGLE_DETAILS_COST,\n        actualCost: 0,\n      });\n      throw error;\n    }\n\n    const detailElapsed = Math.round(performance.now() - detailStart);\n\n    const dataEnriched = Boolean(detailsData.result);\n\n    enriched.push({\n      ...business,\n      formatted_phone_number:\n        detailsData.result?.formatted_phone_number ??\n        business.formatted_phone_number ??\n        \"\",\n      website: detailsData.result?.website ?? business.website ?? \"\",\n      source: dataEnriched ? \"google_place_details\" : \"google_places\",\n      data_enriched: dataEnriched,\n    });\n\n    await usageLogger?.log({\n      sourceName: \"google_places\",\n      endpoint: \"details\",\n      httpMethod: \"GET\",\n      requestParams: {\n        placeId: business.place_id,\n        hasWebsite: Boolean(detailsData.result?.website),\n      },\n      queryType: \"discovery\",\n      responseCode: detailsResponse.status,\n      responseTimeMs: detailElapsed,\n      resultsReturned: dataEnriched ? 1 : 0,\n      usefulResults: dataEnriched ? 1 : 0,\n      success: detailsResponse.ok && dataEnriched,\n      estimatedCost: GOOGLE_DETAILS_COST,\n      actualCost: detailsResponse.ok && dataEnriched ? GOOGLE_DETAILS_COST : 0,\n    });\n\n    // Basic rate limiting to stay under quota\n    await new Promise((resolve) => setTimeout(resolve, 80));\n  }\n\n  return enriched;\n}\n\nasync function searchFoursquare(\n  businessType: string,\n  location: string,\n  keywords: string[],\n  maxResults: number,\n  usageLogger?: UsageLogger,\n  usageContext?: UsageLogContext\n): Promise<DiscoveredBusiness[]> {\n  const apiKey = Deno.env.get(\"FOURSQUARE_API_KEY\");\n  if (!apiKey) {\n    return [];\n  }\n\n  const queryString =\n    [businessType, ...keywords].join(\" \").trim() || businessType;\n  const limit = Math.min(Math.max(maxResults, 5), 30);\n  const params = new URLSearchParams({\n    query: queryString,\n    near: location,\n    limit: limit.toString(),\n    fields: \"fsq_id,name,location,contact,website,categories,rating,stats\",\n  });\n\n  const requestParams = {\n    query: queryString,\n    location,\n    limit,\n    keywordCount: keywords.length,\n  };\n\n  let response: Response | null = null;\n  const startedAt = performance.now();\n\n  try {\n    response = await fetch(\n      `https://api.foursquare.com/v3/places/search?${params}`,\n      {\n        headers: {\n          Authorization: apiKey,\n          Accept: \"application/json\",\n        },\n      }\n    );\n  } catch (error) {\n    await usageLogger?.log({\n      sourceName: \"foursquare\",\n      endpoint: \"places.search\",\n      httpMethod: \"GET\",\n      requestParams,\n      queryType: \"discovery\",\n      responseCode: response?.status ?? null,\n      responseTimeMs: Math.round(performance.now() - startedAt),\n      success: false,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      estimatedCost: FOURSQUARE_SEARCH_COST,\n      actualCost: 0,\n    });\n    throw error;\n  }\n\n  const elapsed = Math.round(performance.now() - startedAt);\n\n  if (!response.ok) {\n    await usageLogger?.log({\n      sourceName: \"foursquare\",\n      endpoint: \"places.search\",\n      httpMethod: \"GET\",\n      requestParams,\n      queryType: \"discovery\",\n      responseCode: response.status,\n      responseTimeMs: elapsed,\n      success: false,\n      errorMessage: `HTTP ${response.status}`,\n      estimatedCost: FOURSQUARE_SEARCH_COST,\n      actualCost: 0,\n    });\n    throw new Error(`Foursquare API error: ${response.status}`);\n  }\n\n  let payload: { results?: FoursquarePlace[] } = {};\n  try {\n    payload = await response.json();\n  } catch (error) {\n    await usageLogger?.log({\n      sourceName: \"foursquare\",\n      endpoint: \"places.search\",\n      httpMethod: \"GET\",\n      requestParams,\n      queryType: \"discovery\",\n      responseCode: response.status,\n      responseTimeMs: elapsed,\n      success: false,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      estimatedCost: FOURSQUARE_SEARCH_COST,\n      actualCost: 0,\n    });\n    throw error;\n  }\n\n  const results = Array.isArray(payload.results) ? payload.results : [];\n\n  await usageLogger?.log({\n    sourceName: \"foursquare\",\n    endpoint: \"places.search\",\n    httpMethod: \"GET\",\n    requestParams,\n    queryType: \"discovery\",\n    responseCode: response.status,\n    responseTimeMs: elapsed,\n    resultsReturned: results.length,\n    usefulResults: results.length,\n    success: true,\n    estimatedCost: FOURSQUARE_SEARCH_COST,\n    actualCost: FOURSQUARE_SEARCH_COST,\n    ...usageContext,\n  });\n\n  return results.map((place) => ({\n    source: \"foursquare\" as DataSource,\n    place_id: place.fsq_id,\n    name: place.name,\n    formatted_address: formatFoursquareAddress(place.location),\n    formatted_phone_number: place.contact?.phone ?? \"\",\n    website: place.website ?? \"\",\n    rating: place.rating ?? 0,\n    user_ratings_total: place.stats?.total_tips ?? 0,\n    foursquare_data: place as unknown as Record<string, unknown>,\n  }));\n}\n\nfunction formatFoursquareAddress(\n  location: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    postcode?: string;\n    country?: string;\n  } = {}\n): string {\n  const parts = [\n    location.address,\n    location.locality,\n    location.admin_district,\n    location.postcode,\n    location.country,\n  ]\n    .map((value) => value?.trim())\n    .filter(Boolean);\n  return parts.join(\", \");\n}\n\nfunction dedupeBusinesses(\n  businesses: DiscoveredBusiness[]\n): DiscoveredBusiness[] {\n  const map = new Map<string, DiscoveredBusiness>();\n  for (const business of businesses) {\n    const key = `${(\n      business.name ||\n      business.businessName ||\n      \"\"\n    ).toLowerCase()}_${(\n      business.formatted_address ||\n      business.address ||\n      \"\"\n    ).toLowerCase()}`;\n    if (!map.has(key)) {\n      map.set(key, business);\n    } else {\n      const existing = map.get(key)!;\n      if (\n        existing.source === \"google_places\" &&\n        business.source === \"google_place_details\"\n      ) {\n        map.set(key, business);\n      }\n    }\n  }\n  return Array.from(map.values());\n}\n\n// --------------------\n// Quality Scorer\n// --------------------\n\nclass QualityScorer {\n  private maxCostPerBusiness: number;\n  private tierName: string;\n  private censusMultiplier: number;\n\n  constructor(options: {\n    maxCostPerBusiness: number;\n    tierName: string;\n    censusMultiplier?: number;\n  }) {\n    this.maxCostPerBusiness = options.maxCostPerBusiness;\n    this.tierName = options.tierName;\n    this.censusMultiplier = options.censusMultiplier ?? 1;\n  }\n\n  scoreBusiness(business: DiscoveredBusiness): ScoredLead {\n    const businessName = business.name || business.businessName || \"\";\n    const address = business.formatted_address || business.address || \"\";\n    const phone = business.formatted_phone_number || business.phone || \"\";\n    const website = business.website || \"\";\n\n    const scores = {\n      businessName: businessName ? Math.min(100, businessName.length * 3) : 0,\n      address: address ? 100 : 0,\n      phone: phone ? 85 : 0,\n      website: website ? 80 : 0,\n      rating: business.rating ? Math.min(20, business.rating * 4) : 0,\n    };\n\n    let totalScore =\n      Object.values(scores).reduce((sum, score) => sum + score, 0) /\n      Object.values(scores).length;\n\n    if (business.source === \"foursquare\") {\n      totalScore += 8;\n    } else if (business.source === \"google_place_details\") {\n      totalScore += 5;\n    }\n\n    totalScore = Math.min(100, Math.round(totalScore * this.censusMultiplier));\n\n    const initialSources = new Set<string>();\n    initialSources.add(business.source);\n    if (business.data_enriched) {\n      initialSources.add(\"google_places_details_api\");\n    }\n\n    return {\n      businessName,\n      address,\n      phone,\n      website,\n      email: \"\",\n      optimizedScore: totalScore,\n      validationCost: 0.02,\n      dataSources: Array.from(initialSources),\n      enhancementData: {\n        verificationSources: Array.from(initialSources),\n        processingMetadata: {\n          totalCost: 0.02,\n          validationCost: 0.02,\n          enrichmentCost: 0,\n          totalConfidenceBoost: 0,\n          processingStrategy: \"basic\",\n          servicesUsed: Array.from(initialSources),\n          servicesSkipped: [],\n          enrichmentTier: this.tierName,\n          emailStatus: \"not_found\",\n        },\n      },\n    };\n  }\n}\n\n// --------------------\n// Enrichment Pipeline\n// --------------------\n\nasync function enrichLead(\n  lead: ScoredLead,\n  config: JobConfig\n): Promise<{ lead: ScoredLead; cost: number; enrichmentCost: number }> {\n  const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n  const serviceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n  if (!supabaseUrl || !serviceKey) {\n    return { lead, cost: lead.validationCost, enrichmentCost: 0 };\n  }\n\n  const url = `${supabaseUrl}/functions/v1/enrichment-orchestrator`;\n  const domain = lead.website\n    ? lead.website.replace(/^https?:\\/\\//, \"\").replace(/\\/.*$/, \"\")\n    : undefined;\n\n  const maxCostPerBusiness = Math.max(\n    config.tier.maxCostPerLead,\n    config.budgetLimit / Math.max(config.maxResults, 1)\n  );\n\n  const body = {\n    businessName: lead.businessName,\n    domain,\n    address: lead.address,\n    phone: lead.phone,\n    website: lead.website,\n    discoverEmails: true,\n    verifyEmails: config.tier.includes.verifyEmails,\n    includePersonEnrichment: config.tier.includes.personEnrichment,\n    apolloEnrichment:\n      config.tier.includes.apolloEnrichment || config.options.apolloDiscovery,\n    includeBusinessLicense: true,\n    includeCompanyEnrichment: true,\n    maxCostPerBusiness,\n    minConfidenceScore: config.minConfidenceScore,\n    tier: config.tier.orchestratorTier,\n    campaignId: config.campaignId,\n    jobId: config.jobId,\n    sessionUserId: config.sessionUserId,\n    userId: config.userId,\n    tierKey: config.tier.key,\n  };\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${serviceKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  if (!response.ok) {\n    return { lead, cost: lead.validationCost, enrichmentCost: 0 };\n  }\n\n  const enrichmentData = await response.json();\n  type EnrichedEmail = {\n    email: string;\n    verified?: boolean;\n    [key: string]: unknown;\n  };\n\n  const emails = (enrichmentData.enrichedData?.emails ?? []) as EnrichedEmail[];\n\n  const normalizeDomain = (value?: string) =>\n    value ? value.toLowerCase().replace(/^www\\./, \"\") : \"\";\n\n  const normalizedDomain = normalizeDomain(domain);\n\n  const emailMatchesCorporateDomain = (emailAddress?: string) => {\n    if (!emailAddress || !normalizedDomain) return false;\n    const parts = emailAddress.split(\"@\");\n    if (parts.length !== 2) return false;\n    const emailDomain = normalizeDomain(parts[1]);\n    if (!emailDomain) return false;\n    return (\n      emailDomain === normalizedDomain ||\n      emailDomain.endsWith(`.${normalizedDomain}`)\n    );\n  };\n\n  const corporateEmails = normalizedDomain\n    ? emails.filter((entry: EnrichedEmail) =>\n        emailMatchesCorporateDomain(entry.email)\n      )\n    : emails;\n\n  const verifiedCorporate = corporateEmails.find(\n    (entry: EnrichedEmail) => entry.verified\n  );\n\n  let verifiedEmailEntry = verifiedCorporate;\n  if (!verifiedEmailEntry && !normalizedDomain) {\n    verifiedEmailEntry = emails.find((entry: EnrichedEmail) => entry.verified);\n  }\n\n  const unverifiedCorporate = corporateEmails.find(\n    (entry: EnrichedEmail) => entry.email && !entry.verified\n  );\n\n  const fallbackCandidate =\n    unverifiedCorporate ||\n    corporateEmails[0] ||\n    emails.find((entry: EnrichedEmail) => entry.email && !entry.verified) ||\n    emails[0];\n\n  let emailStatus: \"verified\" | \"unconfirmed\" | \"not_found\" = \"not_found\";\n  let verifiedEmailValue = \"\";\n  let unverifiedEmailValue = \"\";\n\n  if (verifiedEmailEntry?.email) {\n    emailStatus = \"verified\";\n    verifiedEmailValue = verifiedEmailEntry.email;\n  } else if (fallbackCandidate?.email) {\n    emailStatus = \"unconfirmed\";\n    unverifiedEmailValue = fallbackCandidate.email;\n  }\n\n  const servicesUsed = new Set<string>(\n    lead.enhancementData.verificationSources\n  );\n  (enrichmentData.processingMetadata?.servicesUsed ?? []).forEach(\n    (service: string) => servicesUsed.add(service)\n  );\n\n  const enrichmentCost = Number(enrichmentData.totalCost ?? 0);\n  const totalCost = lead.validationCost + enrichmentCost;\n\n  const updatedLead: ScoredLead = {\n    ...lead,\n    email: verifiedEmailValue || \"\",\n    enhancementData: {\n      ...lead.enhancementData,\n      verificationSources: Array.from(servicesUsed),\n      emails,\n      processingMetadata: {\n        ...lead.enhancementData.processingMetadata,\n        totalCost,\n        validationCost: lead.validationCost,\n        enrichmentCost,\n        servicesUsed: Array.from(servicesUsed),\n        servicesSkipped:\n          enrichmentData.processingMetadata?.servicesSkipped ?? [],\n        enrichmentTier: config.tier.name,\n        enrichmentCostBreakdown: enrichmentData.costBreakdown ?? undefined,\n        emailStatus,\n        verifiedEmail: verifiedEmailValue || undefined,\n        unverifiedEmail: unverifiedEmailValue || undefined,\n      },\n    },\n  };\n\n  return {\n    lead: updatedLead,\n    cost: totalCost,\n    enrichmentCost,\n  };\n}\n\n// --------------------\n// Discovery Workflow\n// --------------------\n\nasync function discoverBusinesses(\n  config: JobConfig,\n  census: CensusIntelligence | null,\n  usageLogger?: UsageLogger,\n  usageContext?: UsageLogContext\n): Promise<DiscoveredBusiness[]> {\n  const googleResults = await searchGooglePlaces(\n    config.businessType,\n    config.location,\n    config.keywords,\n    config.maxResults,\n    usageLogger,\n    {\n      ...usageContext,\n      businessQuery: config.businessType,\n      locationQuery: config.location,\n      tierKey: config.tier.key,\n    }\n  );\n\n  const results: DiscoveredBusiness[] = [...googleResults];\n\n  const shouldQueryFoursquare =\n    googleResults.length < config.maxResults * 1.2 || config.expandGeography;\n  if (shouldQueryFoursquare) {\n    const foursquareResults = await searchFoursquare(\n      config.businessType,\n      config.location,\n      config.keywords,\n      Math.max(\n        config.maxResults - googleResults.length,\n        Math.ceil(config.maxResults / 2)\n      ),\n      usageLogger,\n      {\n        ...usageContext,\n        businessQuery: config.businessType,\n        locationQuery: config.location,\n        tierKey: config.tier.key,\n      }\n    );\n    results.push(...foursquareResults);\n  }\n\n  const deduped = dedupeBusinesses(results);\n\n  if (\n    census &&\n    census.optimization.expected_results > deduped.length &&\n    config.expandGeography\n  ) {\n    const expandedResults = await searchFoursquare(\n      config.businessType,\n      census.geographic_data.raw_location,\n      config.keywords,\n      Math.min(census.optimization.expected_results, config.maxResults * 2),\n      usageLogger,\n      {\n        ...usageContext,\n        businessQuery: config.businessType,\n        locationQuery: census.geographic_data.raw_location,\n        tierKey: config.tier.key,\n      }\n    );\n    deduped.push(...expandedResults);\n  }\n\n  return dedupeBusinesses(deduped).slice(0, config.maxResults * 2);\n}\n\nasync function processDiscoveryJob(\n  jobId: string,\n  config: JobConfig,\n  supabaseUrl: string,\n  supabaseServiceKey: string\n) {\n  console.log(`🚀 Background job ${jobId} started`);\n\n  const supabase = createClient(supabaseUrl, supabaseServiceKey);\n  const usageLogger = createUsageLogger(supabaseUrl, supabaseServiceKey, {\n    campaignId: config.campaignId,\n    sessionId: config.sessionUserId ?? config.userId ?? null,\n    jobId,\n    tierKey: config.tier.key,\n    businessQuery: config.businessType,\n    locationQuery: config.location,\n  });\n  config.jobId = jobId;\n\n  try {\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        status: \"processing\",\n        started_at: new Date().toISOString(),\n        current_stage: \"discovering_businesses\",\n        progress: 10,\n      })\n      .eq(\"id\", jobId);\n\n    const censusIntelligence = await fetchCensusIntelligence(\n      config.businessType,\n      config.location\n    );\n\n    const discoveredBusinesses = await discoverBusinesses(\n      config,\n      censusIntelligence,\n      usageLogger,\n      {\n        campaignId: config.campaignId,\n        sessionId: config.sessionUserId ?? config.userId ?? null,\n        jobId,\n        tierKey: config.tier.key,\n        businessQuery: config.businessType,\n        locationQuery: config.location,\n      }\n    );\n    const sourcesUsed = Array.from(\n      new Set(discoveredBusinesses.map((business) => business.source))\n    );\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        current_stage: \"scoring_businesses\",\n        progress: 30,\n        metrics: {\n          businesses_found: discoveredBusinesses.length,\n          sources_used: sourcesUsed,\n          census_density_score: censusIntelligence?.density_score ?? null,\n        },\n      })\n      .eq(\"id\", jobId);\n\n    const scorer = new QualityScorer({\n      maxCostPerBusiness: config.budgetLimit / Math.max(config.maxResults, 1),\n      tierName: config.tier.name,\n      censusMultiplier: censusIntelligence?.optimization.confidence_multiplier,\n    });\n\n    const scoredBusinesses = discoveredBusinesses.map((business) =>\n      scorer.scoreBusiness(business)\n    );\n\n    const qualifiedLeads = scoredBusinesses\n      .filter((lead) => lead.optimizedScore >= config.minConfidenceScore)\n      .slice(0, config.maxResults);\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        current_stage: \"enriching_contacts\",\n        progress: 50,\n        metrics: {\n          businesses_found: discoveredBusinesses.length,\n          qualified_leads: qualifiedLeads.length,\n          sources_used: sourcesUsed,\n          census_density_score: censusIntelligence?.density_score ?? null,\n        },\n      })\n      .eq(\"id\", jobId);\n\n    const enrichedLeads: ScoredLead[] = [];\n    let totalCost = 0;\n    let totalValidationCost = 0;\n    let totalEnrichmentCost = 0;\n\n    for (let index = 0; index < qualifiedLeads.length; index += 1) {\n      const lead = qualifiedLeads[index];\n      try {\n        const enrichmentResult = await enrichLead(lead, config);\n        enrichedLeads.push(enrichmentResult.lead);\n        totalCost += enrichmentResult.cost;\n        totalValidationCost +=\n          enrichmentResult.lead.enhancementData.processingMetadata\n            .validationCost;\n        totalEnrichmentCost += enrichmentResult.enrichmentCost;\n      } catch (error) {\n        console.error(`❌ Enrichment error for ${lead.businessName}:`, error);\n        enrichedLeads.push(lead);\n        totalCost += lead.validationCost;\n        totalValidationCost += lead.validationCost;\n      }\n\n      const progress =\n        50 +\n        Math.floor(((index + 1) / Math.max(qualifiedLeads.length, 1)) * 35);\n      await supabase\n        .from(\"discovery_jobs\")\n        .update({\n          progress,\n          metrics: {\n            businesses_found: discoveredBusinesses.length,\n            qualified_leads: qualifiedLeads.length,\n            leads_enriched: index + 1,\n            total_cost: Number(totalCost.toFixed(3)),\n            validation_cost_total: Number(totalValidationCost.toFixed(3)),\n            enrichment_cost_total: Number(totalEnrichmentCost.toFixed(3)),\n            sources_used: sourcesUsed,\n            census_density_score: censusIntelligence?.density_score ?? null,\n          },\n        })\n        .eq(\"id\", jobId);\n    }\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        current_stage: \"storing_results\",\n        progress: 90,\n      })\n      .eq(\"id\", jobId);\n\n    const campaignInsert = await supabase\n      .from(\"campaigns\")\n      .insert({\n        id: config.campaignId,\n        business_type: config.businessType,\n        location: config.location,\n        target_count: config.maxResults,\n        results_count: enrichedLeads.length,\n        total_cost: Number(totalCost.toFixed(3)),\n        status: \"completed\",\n        user_id: config.userId,\n        session_user_id: config.sessionUserId,\n        processing_time_ms: null,\n      })\n      .select(\"id\")\n      .single();\n\n    if (campaignInsert.error) {\n      console.warn(\"Campaign insert warning:\", campaignInsert.error.message);\n    }\n\n    const leadsPayload = enrichedLeads.map((lead) => ({\n      campaign_id: config.campaignId,\n      business_name: lead.businessName,\n      address: lead.address,\n      phone: lead.phone,\n      website: lead.website,\n      email: lead.email,\n      confidence_score: lead.optimizedScore,\n      enrichment_data: {\n        verificationSources: lead.enhancementData.verificationSources,\n        emails: lead.enhancementData.emails,\n        processingMetadata: lead.enhancementData.processingMetadata,\n        dataSources: lead.dataSources,\n      },\n      validation_cost: lead.enhancementData.processingMetadata.validationCost,\n      user_id: config.userId,\n      session_user_id: config.sessionUserId,\n    }));\n\n    if (leadsPayload.length > 0) {\n      const leadInsert = await supabase.from(\"leads\").insert(leadsPayload);\n      if (leadInsert.error) {\n        console.error(\"Lead insert error:\", leadInsert.error.message);\n      }\n    }\n\n    const averageConfidence = enrichedLeads.length\n      ? enrichedLeads.reduce((sum, lead) => sum + lead.optimizedScore, 0) /\n        enrichedLeads.length\n      : 0;\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        status: \"completed\",\n        progress: 100,\n        completed_at: new Date().toISOString(),\n        results: enrichedLeads,\n        metrics: {\n          total_found: enrichedLeads.length,\n          qualified_leads: qualifiedLeads.length,\n          total_cost: Number(totalCost.toFixed(3)),\n          validation_cost_total: Number(totalValidationCost.toFixed(3)),\n          enrichment_cost_total: Number(totalEnrichmentCost.toFixed(3)),\n          avg_confidence: Number(averageConfidence.toFixed(1)),\n          tier_key: config.tier.key,\n          tier_name: config.tier.name,\n          tier_price: config.tier.pricePerLead,\n          sources_used: sourcesUsed,\n          census_density_score: censusIntelligence?.density_score ?? null,\n        },\n      })\n      .eq(\"id\", jobId);\n\n    console.log(\n      `✅ Background job ${jobId} completed: ${\n        enrichedLeads.length\n      } leads, $${totalCost.toFixed(3)}`\n    );\n  } catch (error) {\n    console.error(`❌ Background job ${jobId} failed:`, error);\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        status: \"failed\",\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        completed_at: new Date().toISOString(),\n      })\n      .eq(\"id\", jobId);\n  }\n}\n\n// --------------------\n// MAIN HANDLER\n// --------------------\n\nserve(async (req) => {\n  const corsResponse = handleCORS(req);\n  if (corsResponse) return corsResponse;\n\n  try {\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseAnonKey = Deno.env.get(\"SUPABASE_ANON_KEY\");\n    const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n\n    if (!supabaseUrl || !supabaseAnonKey || !supabaseServiceKey) {\n      console.error(\"Missing Supabase environment variables\", {\n        hasUrl: Boolean(supabaseUrl),\n        hasAnonKey: Boolean(supabaseAnonKey),\n        hasServiceKey: Boolean(supabaseServiceKey),\n      });\n\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error:\n            \"Edge function misconfigured: missing Supabase credentials. Verify SUPABASE_URL, SUPABASE_ANON_KEY, and SUPABASE_SERVICE_ROLE_KEY secrets.\",\n        }),\n        {\n          status: 500,\n          headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n        }\n      );\n    }\n\n    const authHeader = req.headers.get(\"Authorization\");\n    const globalHeaders: Record<string, string> = authHeader\n      ? { Authorization: authHeader }\n      : {};\n    const supabaseClient = createClient(supabaseUrl, supabaseAnonKey, {\n      global: { headers: globalHeaders },\n    });\n\n    const {\n      data: { user },\n    } = await supabaseClient.auth.getUser();\n\n    const requestData: BusinessDiscoveryRequest = await req.json();\n    const {\n      businessType,\n      location,\n      keywords,\n      searchRadius,\n      expandGeography = false,\n      maxResults = 5,\n      budgetLimit,\n      minConfidenceScore = 50,\n      sessionUserId,\n      tierKey,\n      tierName,\n      options = {},\n    } = requestData;\n\n    const tierSettings = getTierSettings(tierKey, tierName);\n    const enforcedBudget =\n      budgetLimit ?? maxResults * tierSettings.pricePerLead;\n    const keywordList = parseKeywords(keywords);\n\n    const jobId = `job_${Date.now()}_${Math.random()\n      .toString(36)\n      .slice(2, 11)}`;\n\n    // Generate structured campaign ID using database function\n    let campaignId: string;\n    try {\n      const { data: generatedName, error: nameError } =\n        await supabaseClient.rpc(\"generate_campaign_name\", {\n          business_type: businessType,\n          location: location,\n          user_id: user?.id || null,\n        });\n\n      if (nameError) {\n        console.warn(\n          \"Campaign name generation failed, using fallback:\",\n          nameError\n        );\n        campaignId = `campaign_${Date.now()}_${Math.random()\n          .toString(36)\n          .slice(2, 11)}`;\n      } else {\n        campaignId =\n          generatedName ||\n          `campaign_${Date.now()}_${Math.random().toString(36).slice(2, 11)}`;\n      }\n    } catch (error) {\n      console.warn(\"Campaign name generation error, using fallback:\", error);\n      campaignId = `campaign_${Date.now()}_${Math.random()\n        .toString(36)\n        .slice(2, 11)}`;\n    }\n\n    const jobConfig: JobConfig = {\n      campaignId,\n      businessType,\n      location,\n      keywords: keywordList,\n      searchRadius,\n      expandGeography,\n      maxResults,\n      budgetLimit: enforcedBudget,\n      minConfidenceScore,\n      userId: user?.id,\n      sessionUserId: sessionUserId || user?.id,\n      tier: tierSettings,\n      options: {\n        ...DEFAULT_OPTIONS,\n        ...options,\n      },\n    };\n\n    const { error: jobError } = await supabaseClient\n      .from(\"discovery_jobs\")\n      .insert({\n        id: jobId,\n        campaign_id: campaignId,\n        user_id: user?.id,\n        session_user_id: sessionUserId || user?.id,\n        status: \"pending\",\n        config: {\n          ...jobConfig,\n          tier: {\n            key: tierSettings.key,\n            name: tierSettings.name,\n            pricePerLead: tierSettings.pricePerLead,\n          },\n        },\n      });\n\n    if (jobError) {\n      throw new Error(`Failed to create job: ${jobError.message}`);\n    }\n\n    EdgeRuntime.waitUntil(\n      processDiscoveryJob(jobId, jobConfig, supabaseUrl, supabaseServiceKey)\n    );\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        message: \"Discovery job created and processing in background\",\n        jobId,\n        campaignId,\n        status: \"processing\",\n        estimatedTime: \"1-2 minutes\",\n        realtimeChannel: `discovery_jobs:id=eq.${jobId}`,\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"❌ Error:\", error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":6,"duration":0.188},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":7,"duration":0.366},
{"type":"measure","name":"lsp.did_open","count":11,"duration":26.694},
{"type":"mark","name":"lsp.diagnostic"},
TS server started.
{"type":"mark","name":"tsc.request.$getDiagnostics"},
Server ready.
{"type":"mark","name":"tsc.host.$getDiagnostics","count":1,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",8]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":1,"duration":0.536},
{"type":"mark","name":"tsc.op.op_load","count":1,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},
{"type":"measure","name":"tsc.op.op_load","count":1,"duration":0.068},
{"type":"mark","name":"tsc.op.op_load","count":2,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"tsc.op.op_load","count":2,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":3,"args":"file:///workspaces/ProspectPro/index.html"},
{"type":"measure","name":"tsc.op.op_load","count":3,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":4,"args":"file:///workspaces/ProspectPro/public/index-user-aware.html"},
{"type":"measure","name":"tsc.op.op_load","count":4,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":5,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":5,"duration":0.108},
{"type":"mark","name":"tsc.op.op_resolve","count":1,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"react-router-dom"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1,"duration":0.098},
{"type":"mark","name":"tsc.op.op_load","count":6,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":6,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":2,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"@googlemaps/js-api-loader"],[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":2,"duration":0.035},
{"type":"mark","name":"tsc.op.op_load","count":7,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":7,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":3,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":3,"duration":0.084},
{"type":"mark","name":"tsc.op.op_load","count":8,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":8,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":4,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":4,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":9,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":9,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":5,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":5,"duration":0.049},
{"type":"mark","name":"tsc.op.op_load","count":10,"args":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},
{"type":"measure","name":"tsc.op.op_load","count":10,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":6,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@tanstack/react-query"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":6,"duration":0.126},
{"type":"mark","name":"tsc.op.op_load","count":11,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},
{"type":"measure","name":"tsc.op.op_load","count":11,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":7,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":7,"duration":43.07},
{"type":"mark","name":"tsc.op.op_load","count":12,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":12,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":8,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":8,"duration":27.464},
{"type":"mark","name":"tsc.op.op_load","count":13,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":13,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":9,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":9,"duration":2.504},
{"type":"mark","name":"tsc.op.op_load","count":14,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":14,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":10,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":10,"duration":0.802},
{"type":"mark","name":"tsc.op.op_load","count":15,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":15,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":11,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":11,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":16,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":16,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":17,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":17,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":12,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":12,"duration":7.876},
{"type":"mark","name":"tsc.op.op_load","count":18,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":18,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":13,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":13,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":19,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":19,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":14,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":14,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":20,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":20,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":15,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":15,"duration":3.251},
{"type":"mark","name":"tsc.op.op_load","count":21,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":21,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":16,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":16,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":22,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":22,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":17,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":17,"duration":0.779},
{"type":"mark","name":"tsc.op.op_load","count":23,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":23,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":18,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":18,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":24,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":24,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":25,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":25,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":19,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":19,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":26,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":26,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":20,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":20,"duration":75.265},
{"type":"mark","name":"tsc.op.op_load","count":27,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":27,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":21,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":21,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":28,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":28,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":22,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":22,"duration":0.063},
{"type":"mark","name":"tsc.op.op_load","count":29,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":29,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":23,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":23,"duration":9.489},
{"type":"mark","name":"tsc.op.op_load","count":30,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":30,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":24,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":24,"duration":9.17},
{"type":"mark","name":"tsc.op.op_load","count":31,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/websocket-factory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":31,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":32,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":32,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":33,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":33,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":34,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":34,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":35,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":35,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":25,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":25,"duration":0.579},
{"type":"mark","name":"tsc.op.op_load","count":36,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":36,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":26,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":26,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":37,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":37,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":27,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":27,"duration":8.258},
{"type":"mark","name":"tsc.op.op_load","count":38,"args":"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":38,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":39,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":39,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":28,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":28,"duration":24.548},
{"type":"mark","name":"tsc.op.op_load","count":40,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":40,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":29,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":29,"duration":11.92},
{"type":"mark","name":"tsc.op.op_load","count":41,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":41,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":30,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":30,"duration":0.522},
{"type":"mark","name":"tsc.op.op_load","count":42,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":42,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":43,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":43,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":31,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":31,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":44,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":44,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":32,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":32,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":45,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":45,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":33,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":33,"duration":3.143},
{"type":"mark","name":"tsc.op.op_load","count":46,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":46,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":34,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":34,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":47,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":47,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":35,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":35,"duration":0.059},
{"type":"mark","name":"tsc.op.op_load","count":48,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":48,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":36,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":36,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":49,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":49,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":37,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":37,"duration":42.844},
{"type":"mark","name":"tsc.op.op_load","count":50,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":50,"duration":2.027},
{"type":"mark","name":"tsc.op.op_resolve","count":38,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":38,"duration":1.134},
{"type":"mark","name":"tsc.op.op_load","count":51,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":51,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":39,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":39,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":52,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":52,"duration":0.066},
{"type":"mark","name":"tsc.op.op_resolve","count":40,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":40,"duration":11.155},
{"type":"mark","name":"tsc.op.op_load","count":53,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/ethereum.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":53,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":54,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":54,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":41,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":41,"duration":0.576},
{"type":"mark","name":"tsc.op.op_load","count":55,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":55,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":56,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/solana.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":56,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":57,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":57,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":42,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":42,"duration":2.441},
{"type":"mark","name":"tsc.op.op_load","count":58,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":58,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":43,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":43,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":59,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":59,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":44,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":44,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":60,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":60,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":45,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":45,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":61,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":61,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":62,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":62,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":46,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":46,"duration":0.045},
{"type":"mark","name":"tsc.op.op_load","count":63,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts"},
{"type":"measure","name":"tsc.op.op_load","count":63,"duration":0.068},
{"type":"mark","name":"tsc.op.op_resolve","count":47,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":47,"duration":34.731},
{"type":"mark","name":"tsc.op.op_load","count":64,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":64,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":48,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":48,"duration":84.434},
{"type":"mark","name":"tsc.op.op_load","count":65,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":65,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":49,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":49,"duration":17.239},
{"type":"mark","name":"tsc.op.op_load","count":66,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":66,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":50,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":50,"duration":7.837},
{"type":"mark","name":"tsc.op.op_load","count":67,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":67,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":51,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":51,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":68,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":68,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":69,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":69,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":52,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":52,"duration":33.252},
{"type":"mark","name":"tsc.op.op_load","count":70,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":70,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":53,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":53,"duration":2.908},
{"type":"mark","name":"tsc.op.op_load","count":71,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":71,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":54,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":54,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":72,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":72,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":55,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":55,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":73,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":73,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":56,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":56,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":74,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":74,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":57,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":57,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":75,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":75,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":58,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":58,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":76,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":76,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":77,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":77,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":59,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":59,"duration":45.777},
{"type":"mark","name":"tsc.op.op_load","count":78,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":78,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":60,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":60,"duration":0.044},
{"type":"mark","name":"tsc.op.op_load","count":79,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":79,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":61,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":61,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":80,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":80,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":62,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":62,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":81,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":81,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":63,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":63,"duration":17.104},
{"type":"mark","name":"tsc.op.op_load","count":82,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":82,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":64,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":64,"duration":28.137},
{"type":"mark","name":"tsc.op.op_load","count":83,"args":"https://esm.sh/@types/ws@8.5.13/index.d.mts"},
{"type":"measure","name":"tsc.op.op_load","count":83,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":65,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":65,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":84,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":84,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":85,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":85,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":86,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":86,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":87,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":87,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":66,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":66,"duration":2.741},
{"type":"mark","name":"tsc.op.op_load","count":88,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":88,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":67,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":67,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":89,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":89,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":68,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":68,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":90,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":90,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":69,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":69,"duration":4.764},
{"type":"mark","name":"tsc.op.op_load","count":91,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":91,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":70,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":70,"duration":4.108},
{"type":"mark","name":"tsc.op.op_load","count":92,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":92,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":71,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":71,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":93,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":93,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":94,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":94,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":72,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":72,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":95,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":95,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":96,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":96,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":73,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":73,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":97,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":97,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":74,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":74,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":98,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":98,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":75,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":75,"duration":34.0},
{"type":"mark","name":"tsc.op.op_load","count":99,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":99,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":76,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":76,"duration":0.481},
{"type":"mark","name":"tsc.op.op_load","count":100,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":100,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":77,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":77,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":101,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":101,"duration":0.073},
{"type":"mark","name":"tsc.op.op_resolve","count":78,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":78,"duration":9.352},
{"type":"mark","name":"tsc.op.op_load","count":102,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":102,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":79,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":79,"duration":9.497},
{"type":"mark","name":"tsc.op.op_load","count":103,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":103,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":104,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":104,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":80,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":80,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":105,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":105,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":81,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":81,"duration":2.946},
{"type":"mark","name":"tsc.op.op_load","count":106,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":106,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":82,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":82,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":107,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":107,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":83,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":83,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":108,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":108,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":84,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":84,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":109,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":109,"duration":5.084},
{"type":"mark","name":"tsc.op.op_load","count":110,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":110,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":85,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":85,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":111,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts"},
{"type":"measure","name":"tsc.op.op_load","count":111,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":86,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":86,"duration":0.049},
{"type":"mark","name":"tsc.op.op_load","count":112,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":112,"duration":0.12},
{"type":"mark","name":"tsc.op.op_resolve","count":87,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/api-usage.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":87,"duration":1.123},
{"type":"mark","name":"tsc.op.op_load","count":113,"args":"https://deno.land/std@0.168.0/http/server.ts"},
{"type":"measure","name":"tsc.op.op_load","count":113,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":88,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":88,"duration":2.303},
{"type":"mark","name":"tsc.op.op_load","count":114,"args":"https://deno.land/std@0.168.0/async/mod.ts"},
{"type":"measure","name":"tsc.op.op_load","count":114,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":89,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":89,"duration":11.59},
{"type":"mark","name":"tsc.op.op_load","count":115,"args":"https://deno.land/std@0.168.0/async/abortable.ts"},
{"type":"measure","name":"tsc.op.op_load","count":115,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":90,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":90,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":116,"args":"https://deno.land/std@0.168.0/async/deferred.ts"},
{"type":"measure","name":"tsc.op.op_load","count":116,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":117,"args":"https://deno.land/std@0.168.0/async/deadline.ts"},
{"type":"measure","name":"tsc.op.op_load","count":117,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":91,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":91,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":118,"args":"https://deno.land/std@0.168.0/async/debounce.ts"},
{"type":"measure","name":"tsc.op.op_load","count":118,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":119,"args":"https://deno.land/std@0.168.0/async/delay.ts"},
{"type":"measure","name":"tsc.op.op_load","count":119,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":120,"args":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts"},
{"type":"measure","name":"tsc.op.op_load","count":120,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":92,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":92,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":121,"args":"https://deno.land/std@0.168.0/async/pool.ts"},
{"type":"measure","name":"tsc.op.op_load","count":121,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":122,"args":"https://deno.land/std@0.168.0/async/tee.ts"},
{"type":"measure","name":"tsc.op.op_load","count":122,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":123,"args":"https://deno.land/std@0.168.0/async/retry.ts"},
{"type":"measure","name":"tsc.op.op_load","count":123,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":124,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":124,"duration":0.177},
{"type":"mark","name":"tsc.op.op_resolve","count":93,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":93,"duration":3.438},
{"type":"mark","name":"tsc.op.op_load","count":125,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":125,"duration":0.086},
{"type":"mark","name":"tsc.op.op_resolve","count":94,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":94,"duration":0.075},
{"type":"mark","name":"tsc.op.op_load","count":126,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":126,"duration":0.07},
{"type":"mark","name":"tsc.op.op_resolve","count":95,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":95,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":127,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":127,"duration":0.072},
{"type":"mark","name":"tsc.op.op_resolve","count":96,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":96,"duration":0.062},
{"type":"mark","name":"tsc.op.op_load","count":128,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":128,"duration":0.072},
{"type":"mark","name":"tsc.op.op_resolve","count":97,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":97,"duration":6.45},
{"type":"mark","name":"tsc.op.op_load","count":129,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":129,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":98,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":98,"duration":9.452},
{"type":"mark","name":"tsc.op.op_load","count":130,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":130,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":99,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":99,"duration":11.622},
{"type":"mark","name":"tsc.op.op_load","count":131,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":131,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":100,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":100,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":132,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":132,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":101,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":101,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":133,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":133,"duration":0.075},
{"type":"mark","name":"tsc.op.op_resolve","count":102,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":102,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":134,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":134,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":103,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":103,"duration":0.046},
{"type":"mark","name":"tsc.op.op_load","count":135,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":135,"duration":0.109},
{"type":"mark","name":"tsc.op.op_resolve","count":104,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":104,"duration":2.113},
{"type":"mark","name":"tsc.op.op_load","count":136,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":136,"duration":0.119},
{"type":"mark","name":"tsc.op.op_resolve","count":105,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":105,"duration":0.121},
{"type":"mark","name":"tsc.op.op_load","count":137,"args":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":137,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":106,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":106,"duration":0.042},
{"type":"mark","name":"tsc.op.op_load","count":138,"args":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":138,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":107,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":107,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":139,"args":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":139,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":108,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":108,"duration":0.044},
{"type":"mark","name":"tsc.op.op_load","count":140,"args":"asset:///lib.deno.window.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":140,"duration":18.664},
{"type":"mark","name":"tsc.op.op_load","count":141,"args":"asset:///lib.deno.ns.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":141,"duration":64.369},
{"type":"mark","name":"tsc.op.op_load","count":142,"args":"asset:///lib.esnext.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":142,"duration":0.136},
{"type":"mark","name":"tsc.op.op_load","count":143,"args":"asset:///lib.es2024.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":143,"duration":0.067},
{"type":"mark","name":"tsc.op.op_load","count":144,"args":"asset:///lib.es2023.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":144,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":145,"args":"asset:///lib.es2022.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":145,"duration":1.104},
{"type":"mark","name":"tsc.op.op_load","count":146,"args":"asset:///lib.es2021.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":146,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":147,"args":"asset:///lib.es2020.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":147,"duration":0.082},
{"type":"mark","name":"tsc.op.op_load","count":148,"args":"asset:///lib.es2019.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":148,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":149,"args":"asset:///lib.es2018.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":149,"duration":0.078},
{"type":"mark","name":"tsc.op.op_load","count":150,"args":"asset:///lib.es2017.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":150,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":151,"args":"asset:///lib.es2016.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":151,"duration":0.072},
{"type":"mark","name":"tsc.op.op_load","count":152,"args":"asset:///lib.es2015.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":152,"duration":0.06},
{"type":"mark","name":"tsc.op.op_load","count":153,"args":"asset:///lib.es5.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":153,"duration":49.576},
{"type":"mark","name":"tsc.op.op_load","count":154,"args":"asset:///lib.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":154,"duration":0.762},
{"type":"mark","name":"tsc.op.op_load","count":155,"args":"asset:///lib.decorators.legacy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":155,"duration":6.202},
{"type":"mark","name":"tsc.op.op_load","count":156,"args":"asset:///lib.es2015.core.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":156,"duration":1.254},
{"type":"mark","name":"tsc.op.op_load","count":157,"args":"asset:///lib.es2015.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":157,"duration":0.692},
{"type":"mark","name":"tsc.op.op_load","count":158,"args":"asset:///lib.es2015.iterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":158,"duration":1.804},
{"type":"mark","name":"tsc.op.op_load","count":159,"args":"asset:///lib.es2015.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":159,"duration":0.609},
{"type":"mark","name":"tsc.op.op_load","count":160,"args":"asset:///lib.es2015.generator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":160,"duration":1.399},
{"type":"mark","name":"tsc.op.op_load","count":161,"args":"asset:///lib.es2015.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":161,"duration":0.241},
{"type":"mark","name":"tsc.op.op_load","count":162,"args":"asset:///lib.es2015.proxy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":162,"duration":0.388},
{"type":"mark","name":"tsc.op.op_load","count":163,"args":"asset:///lib.es2015.reflect.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":163,"duration":0.392},
{"type":"mark","name":"tsc.op.op_load","count":164,"args":"asset:///lib.es2015.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":164,"duration":7.961},
{"type":"mark","name":"tsc.op.op_load","count":165,"args":"asset:///lib.es2016.array.include.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":165,"duration":5.374},
{"type":"mark","name":"tsc.op.op_load","count":166,"args":"asset:///lib.es2016.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":166,"duration":0.126},
{"type":"mark","name":"tsc.op.op_load","count":167,"args":"asset:///lib.es2017.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":167,"duration":0.063},
{"type":"mark","name":"tsc.op.op_load","count":168,"args":"asset:///lib.es2017.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":168,"duration":0.088},
{"type":"mark","name":"tsc.op.op_load","count":169,"args":"asset:///lib.es2017.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":169,"duration":0.136},
{"type":"mark","name":"tsc.op.op_load","count":170,"args":"asset:///lib.es2017.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":170,"duration":0.272},
{"type":"mark","name":"tsc.op.op_load","count":171,"args":"asset:///lib.es2017.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":171,"duration":3.581},
{"type":"mark","name":"tsc.op.op_load","count":172,"args":"asset:///lib.es2017.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":172,"duration":0.111},
{"type":"mark","name":"tsc.op.op_load","count":173,"args":"asset:///lib.es2017.typedarrays.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":173,"duration":0.135},
{"type":"mark","name":"tsc.op.op_load","count":174,"args":"asset:///lib.es2018.asynciterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":174,"duration":0.245},
{"type":"mark","name":"tsc.op.op_load","count":175,"args":"asset:///lib.es2018.asyncgenerator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":175,"duration":0.256},
{"type":"mark","name":"tsc.op.op_load","count":176,"args":"asset:///lib.es2018.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":176,"duration":0.097},
{"type":"mark","name":"tsc.op.op_load","count":177,"args":"asset:///lib.es2018.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":177,"duration":0.098},
{"type":"mark","name":"tsc.op.op_load","count":178,"args":"asset:///lib.es2018.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":178,"duration":0.347},
{"type":"mark","name":"tsc.op.op_load","count":179,"args":"asset:///lib.es2019.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":179,"duration":0.279},
{"type":"mark","name":"tsc.op.op_load","count":180,"args":"asset:///lib.es2019.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":180,"duration":6.416},
{"type":"mark","name":"tsc.op.op_load","count":181,"args":"asset:///lib.es2019.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":181,"duration":0.102},
{"type":"mark","name":"tsc.op.op_load","count":182,"args":"asset:///lib.es2019.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":182,"duration":0.108},
{"type":"mark","name":"tsc.op.op_load","count":183,"args":"asset:///lib.es2019.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":183,"duration":0.075},
{"type":"mark","name":"tsc.op.op_load","count":184,"args":"asset:///lib.es2020.bigint.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":184,"duration":8.318},
{"type":"mark","name":"tsc.op.op_load","count":185,"args":"asset:///lib.es2020.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":185,"duration":4.744},
{"type":"mark","name":"tsc.op.op_load","count":186,"args":"asset:///lib.es2020.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":186,"duration":0.148},
{"type":"mark","name":"tsc.op.op_load","count":187,"args":"asset:///lib.es2020.number.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":187,"duration":0.083},
{"type":"mark","name":"tsc.op.op_load","count":188,"args":"asset:///lib.es2020.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":188,"duration":0.176},
{"type":"mark","name":"tsc.op.op_load","count":189,"args":"asset:///lib.es2020.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":189,"duration":0.31},
{"type":"mark","name":"tsc.op.op_load","count":190,"args":"asset:///lib.es2020.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":190,"duration":0.121},
{"type":"mark","name":"tsc.op.op_load","count":191,"args":"asset:///lib.es2020.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":191,"duration":0.141},
{"type":"mark","name":"tsc.op.op_load","count":192,"args":"asset:///lib.es2021.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":192,"duration":1.022},
{"type":"mark","name":"tsc.op.op_load","count":193,"args":"asset:///lib.es2021.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":193,"duration":0.103},
{"type":"mark","name":"tsc.op.op_load","count":194,"args":"asset:///lib.es2021.weakref.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":194,"duration":3.408},
{"type":"mark","name":"tsc.op.op_load","count":195,"args":"asset:///lib.es2021.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":195,"duration":2.322},
{"type":"mark","name":"tsc.op.op_load","count":196,"args":"asset:///lib.es2022.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":196,"duration":0.259},
{"type":"mark","name":"tsc.op.op_load","count":197,"args":"asset:///lib.es2022.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":197,"duration":0.285},
{"type":"mark","name":"tsc.op.op_load","count":198,"args":"asset:///lib.es2022.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":198,"duration":0.328},
{"type":"mark","name":"tsc.op.op_load","count":199,"args":"asset:///lib.es2022.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":199,"duration":0.081},
{"type":"mark","name":"tsc.op.op_load","count":200,"args":"asset:///lib.es2022.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":200,"duration":0.136},
{"type":"mark","name":"tsc.op.op_load","count":201,"args":"asset:///lib.es2022.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":201,"duration":0.081},
{"type":"mark","name":"tsc.op.op_load","count":202,"args":"asset:///lib.es2023.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":202,"duration":3.328},
{"type":"mark","name":"tsc.op.op_load","count":203,"args":"asset:///lib.es2023.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":203,"duration":0.134},
{"type":"mark","name":"tsc.op.op_load","count":204,"args":"asset:///lib.es2023.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":204,"duration":0.331},
{"type":"mark","name":"tsc.op.op_load","count":205,"args":"asset:///lib.es2024.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":205,"duration":0.141},
{"type":"mark","name":"tsc.op.op_load","count":206,"args":"asset:///lib.es2024.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":206,"duration":0.123},
{"type":"mark","name":"tsc.op.op_load","count":207,"args":"asset:///lib.es2024.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":207,"duration":0.101},
{"type":"mark","name":"tsc.op.op_load","count":208,"args":"asset:///lib.es2024.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":208,"duration":0.113},
{"type":"mark","name":"tsc.op.op_load","count":209,"args":"asset:///lib.es2024.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":209,"duration":0.062},
{"type":"mark","name":"tsc.op.op_load","count":210,"args":"asset:///lib.es2024.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":210,"duration":0.21},
{"type":"mark","name":"tsc.op.op_load","count":211,"args":"asset:///lib.es2024.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":211,"duration":0.082},
{"type":"mark","name":"tsc.op.op_load","count":212,"args":"asset:///lib.esnext.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":212,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":213,"args":"asset:///lib.esnext.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":213,"duration":0.085},
{"type":"mark","name":"tsc.op.op_load","count":214,"args":"asset:///lib.esnext.disposable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":214,"duration":0.881},
{"type":"mark","name":"tsc.op.op_load","count":215,"args":"asset:///lib.esnext.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":215,"duration":0.362},
{"type":"mark","name":"tsc.op.op_load","count":216,"args":"asset:///lib.esnext.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":216,"duration":0.142},
{"type":"mark","name":"tsc.op.op_load","count":217,"args":"asset:///lib.esnext.iterator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":217,"duration":4.632},
{"type":"mark","name":"tsc.op.op_load","count":218,"args":"asset:///lib.esnext.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":218,"duration":0.165},
{"type":"mark","name":"tsc.op.op_load","count":219,"args":"asset:///lib.esnext.float16.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":219,"duration":5.069},
{"type":"mark","name":"tsc.op.op_load","count":220,"args":"asset:///lib.esnext.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":220,"duration":0.166},
{"type":"mark","name":"tsc.op.op_load","count":221,"args":"asset:///lib.esnext.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":221,"duration":0.073},
{"type":"mark","name":"tsc.op.op_load","count":222,"args":"asset:///lib.deno.net.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":222,"duration":4.493},
{"type":"mark","name":"tsc.op.op_load","count":223,"args":"asset:///lib.deno.shared_globals.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":223,"duration":10.992},
{"type":"mark","name":"tsc.op.op_load","count":224,"args":"asset:///lib.deno.console.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":224,"duration":0.416},
{"type":"mark","name":"tsc.op.op_load","count":225,"args":"asset:///lib.deno.url.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":225,"duration":0.926},
{"type":"mark","name":"tsc.op.op_load","count":226,"args":"asset:///lib.deno.web.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":226,"duration":12.177},
{"type":"mark","name":"tsc.op.op_load","count":227,"args":"asset:///lib.deno.webgpu.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":227,"duration":12.112},
{"type":"mark","name":"tsc.op.op_load","count":228,"args":"asset:///lib.deno.canvas.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":228,"duration":0.473},
{"type":"mark","name":"tsc.op.op_load","count":229,"args":"asset:///lib.deno.fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":229,"duration":5.486},
{"type":"mark","name":"tsc.op.op_load","count":230,"args":"asset:///lib.deno.websocket.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":230,"duration":0.574},
{"type":"mark","name":"tsc.op.op_load","count":231,"args":"asset:///lib.deno.crypto.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":231,"duration":2.342},
{"type":"mark","name":"tsc.op.op_load","count":232,"args":"asset:///lib.deno.webstorage.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":232,"duration":2.225},
{"type":"mark","name":"tsc.op.op_load","count":233,"args":"asset:///lib.deno.cache.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":233,"duration":0.221},
{"type":"mark","name":"tsc.op.op_load","count":234,"args":"asset:///lib.deno.unstable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":234,"duration":57.786},
{"type":"mark","name":"tsc.op.op_load","count":235,"args":"asset:///lib.deno.broadcast_channel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":235,"duration":0.371},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":1,"duration":0.011},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":2,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":3,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":4,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":5,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":6,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":7,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":8,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":9,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":10,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":11,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":12,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":13,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":14,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":15,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":16,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":17,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":18,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":19,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":20,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":21,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":22,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":23,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":24,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":25,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":26,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":27,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":28,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":29,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":30,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":31,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":32,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":33,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":34,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":35,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":36,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":37,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":38,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":39,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":40,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":41,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":42,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":43,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":44,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":45,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":46,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":47,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":48,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":49,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":50,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":51,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":52,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":53,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":54,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":55,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":56,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":57,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":58,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":59,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":60,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":61,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":62,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":63,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":64,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":65,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":66,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":67,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":68,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":69,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":70,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":71,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":72,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":73,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":74,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":75,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":76,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":77,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":78,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":79,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":80,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":81,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":82,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":83,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":84,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":85,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":86,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":87,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":88,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":89,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":90,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":91,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":92,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":93,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":94,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":95,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":96,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":97,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":98,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":99,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":100,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":101,"duration":0.014},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":102,"duration":0.012},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":103,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":104,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":105,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":106,"duration":0.015},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":107,"duration":0.011},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":108,"duration":0.03},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":109,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":110,"duration":0.029},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":111,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":112,"duration":0.011},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":113,"duration":0.007},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":1,"duration":5751.488},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":1,"duration":8245.833},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":1,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":1,"duration":12.515},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":1,"duration":210.158},
{"type":"measure","name":"lsp.diagnostic","count":4,"duration":8456.774},
{"type":"mark","name":"lsp.did_open","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json","languageId":"jsonc","version":1,"text":"{\r\n  \"name\": \"ProspectPro - Verified Business Intelligence\",\r\n  \"image\": \"mcr.microsoft.com/devcontainers/javascript-node:20\",\r\n  \"features\": {\r\n    \"ghcr.io/devcontainers/features/git:1\": {}\r\n  },\r\n  \"customizations\": {\r\n    \"vscode\": {\r\n      \"extensions\": [\r\n        // Core Development\r\n        \"denoland.vscode-deno\",\r\n        \"supabase.supabase-vscode\",\r\n        \"dbaeumer.vscode-eslint\",\r\n        \"esbenp.prettier-vscode\",\r\n\r\n        // Productivity\r\n        \"eamodio.gitlens\",\r\n        \"github.copilot\",\r\n        \"github.copilot-chat\",\r\n        \"streetsidesoftware.code-spell-checker\",\r\n        \"wayou.vscode-todo-highlight\",\r\n\r\n        // API Development\r\n        \"humao.rest-client\",\r\n        \"rangav.vscode-thunder-client\",\r\n\r\n        // Database Tools\r\n        \"mtxr.sqltools\",\r\n        \"mtxr.sqltools-driver-pg\",\r\n\r\n        // Security\r\n        \"snyk-security.snyk-vulnerability-scanner\",\r\n\r\n        // Performance\r\n        \"wix.vscode-import-cost\",\r\n\r\n        // Documentation\r\n        \"bierner.markdown-preview-github-styles\",\r\n\r\n        // Development Theme & Visual Organization\r\n        \"deepforest.theme\", // Vira Deepforest theme for organized development\r\n        \"vscode-icons-team.vscode-icons\" // Better file icons for organization\r\n      ],\r\n      \"settings\": {\r\n        \"terminal.integrated.defaultProfile.linux\": \"bash\",\r\n        \"deno.enable\": true,\r\n        \"deno.enablePaths\": [\"supabase/functions\"],\r\n        \"git.autofetch\": true,\r\n        \"git.confirmSync\": false,\r\n        \"git.enableSmartCommit\": true,\r\n\r\n        // Editor Performance Settings - Enhanced for Development\r\n        \"editor.minimap.enabled\": false,\r\n        \"editor.renderWhitespace\": \"none\",\r\n        \"editor.renderControlCharacters\": false,\r\n        \"workbench.colorTheme\": \"Vira Deepforest\", // Development-specific theme\r\n        \"workbench.iconTheme\": \"vscode-icons\", // Better file icons for organization\r\n        \"workbench.list.smoothScrolling\": false,\r\n        \"workbench.tree.renderIndentGuides\": \"none\",\r\n        \"workbench.editor.closeOnFileDelete\": true,\r\n\r\n        // Development-specific UI enhancements\r\n        \"workbench.colorCustomizations\": {\r\n          \"[Vira Deepforest]\": {\r\n            \"titleBar.activeBackground\": \"#1a4d3a\",\r\n            \"titleBar.activeForeground\": \"#ffffff\",\r\n            \"statusBar.background\": \"#1a4d3a\",\r\n            \"statusBar.foreground\": \"#ffffff\",\r\n            \"activityBar.background\": \"#0d2818\",\r\n            \"panel.background\": \"#0a1f14\"\r\n          }\r\n        },\r\n        \"workbench.settings.editor\": \"json\",\r\n        \"breadcrumbs.enabled\": true,\r\n\r\n        // File System Performance\r\n        \"files.watcherExclude\": {\r\n          \"**/*.log\": true,\r\n          \"**/*.tmp\": true,\r\n          \"**/node_modules/**\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git/**\": true,\r\n          \"**/logs/**\": true\r\n        },\r\n\r\n        // Search Performance\r\n        \"search.exclude\": {\r\n          \"**/node_modules\": true,\r\n          \"**/*.log\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git\": true\r\n        },\r\n        \"search.searchOnType\": false,\r\n\r\n        // Copilot Optimization\r\n        \"github.copilot.chat.historyCount\": 8,\r\n        \"github.copilot.chat.welcomeMessage\": \"none\",\r\n        \"github.copilot.chat.completionPhrasesEnabled\": false,\r\n        \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\r\n\r\n        // Terminal Settings - Development Enhanced\r\n        \"terminal.integrated.gpuAcceleration\": \"on\",\r\n        \"terminal.integrated.scrollback\": 1000,\r\n        \"terminal.integrated.fontFamily\": \"Consolas, 'Courier New', monospace\",\r\n        \"terminal.integrated.fontSize\": 13,\r\n\r\n        // Development Environment Indicators\r\n        \"window.title\": \"🎯 ${folderName} - Verified Business Intelligence ${separator} ${activeEditorShort}\",\r\n        \"workbench.startupEditor\": \"welcomePageInEmptyWorkbench\",\r\n\r\n        // === MCP (Model Context Protocol) Configuration ===\r\n        \"mcp.enable\": true,\r\n        \"mcp.configFile\": \"${workspaceFolder}/.vscode/mcp-config.json\",\r\n\r\n        // API Development Specific Settings\r\n        \"rest-client.enableTelemetry\": false,\r\n        \"files.associations\": {\r\n          \"*.http\": \"http\",\r\n          \"*.rest\": \"http\"\r\n        },\r\n\r\n        // AI-Enhanced Development Settings for Verified Data Integration\r\n        \"ai.contextAware\": true,\r\n        \"ai.projectContext\": {\r\n          \"type\": \"verified-business-intelligence-platform\",\r\n          \"framework\": \"supabase-edge-functions\",\r\n          \"database\": \"supabase-postgresql\",\r\n          \"apis\": [\r\n            \"google-places\",\r\n            \"apollo-contacts\",\r\n            \"chamber-commerce\",\r\n            \"professional-licensing\"\r\n          ],\r\n          \"deployment\": \"supabase-edge-functions\",\r\n          \"dataPolicy\": \"zero-fake-data-verified-contacts-only\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"forwardPorts\": [3000, 5432],\r\n  \"postCreateCommand\": \"bash -lc 'set -e; echo \\\"� Setting up ProspectPro Verified Business Intelligence Environment...\\\"; sudo apt-get update && sudo apt-get install -y docker.io; if [ -f package-lock.json ]; then npm ci; else npm install; fi; npm i supabase --save-dev; npm run mcp:install; npm run mcp:test; echo \\\"✅ Verified data environment ready with zero fake data policy!\\\"; echo \\\"🚀 ProspectPro verified business intelligence development ready\\\"'\",\r\n  \"postStartCommand\": \"bash -c 'echo \\\"� ProspectPro Verified Business Intelligence Started\\\"; echo \\\"Data Policy: Zero Fake Data | Contacts: Verified Only | Architecture: Supabase Edge Functions\\\"; echo \\\"💡 Use Copilot Chat for AI-assisted development with verified data context\\\"'\",\r\n  \"runArgs\": [\"--init\", \"-v\", \"/var/run/docker.sock:/var/run/docker.sock\"],\r\n  \"remoteUser\": \"node\"\r\n}\r\n"}}},
{"type":"measure","name":"lsp.did_open","count":12,"duration":0.086},
{"type":"mark","name":"lsp.did_open","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { supabase } from \"../lib/supabase\";\n\nexport const AuthCallback: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const handleAuthCallback = async () => {\n      try {\n        // Handle OAuth callback\n        const { data, error } = await supabase.auth.getSession();\n\n        if (error) {\n          throw error;\n        }\n\n        if (data?.session) {\n          // Successful authentication, redirect to dashboard\n          navigate(\"/dashboard\", { replace: true });\n        } else {\n          // Check for error in URL params\n          const errorDescription = searchParams.get(\"error_description\");\n          const errorCode = searchParams.get(\"error\");\n\n          if (errorCode) {\n            throw new Error(\n              errorDescription || `Authentication error: ${errorCode}`\n            );\n          }\n\n          // No session found, redirect to home\n          navigate(\"/\", { replace: true });\n        }\n      } catch (err: any) {\n        console.error(\"Auth callback error:\", err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    handleAuthCallback();\n  }, [navigate, searchParams]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"max-w-md w-full space-y-8 p-8\">\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto\"></div>\n            <h2 className=\"mt-6 text-xl font-semibold text-gray-900 dark:text-gray-100\">\n              Completing Sign In...\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n              Please wait while we authenticate your account.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"max-w-md w-full space-y-8 p-8\">\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-red-100 dark:bg-red-900/50 rounded-full flex items-center justify-center mx-auto\">\n              <svg\n                className=\"w-8 h-8 text-red-600 dark:text-red-400\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.866-.833-2.536 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                />\n              </svg>\n            </div>\n            <h2 className=\"mt-6 text-xl font-semibold text-gray-900 dark:text-gray-100\">\n              Authentication Failed\n            </h2>\n            <p className=\"mt-2 text-sm text-red-600 dark:text-red-400\">\n              {error}\n            </p>\n            <div className=\"mt-6\">\n              <button\n                onClick={() => navigate(\"/\", { replace: true })}\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Return to Home\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // This shouldn't render, but just in case\n  return null;\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":13,"duration":1.388},
{"type":"mark","name":"lsp.did_open","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx","languageId":"typescriptreact","version":1,"text":"import { Route, Routes } from \"react-router-dom\";\nimport { Layout } from \"./components/Layout\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { AccountPage } from \"./pages/AccountPage\";\nimport { AdminPanel } from \"./pages/AdminPanel\";\nimport { AuthCallback } from \"./pages/AuthCallback\";\nimport { BusinessDiscovery } from \"./pages/BusinessDiscovery\";\nimport { Campaign } from \"./pages/Campaign\";\nimport { CampaignProgress } from \"./pages/CampaignProgress\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Results } from \"./pages/Results\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<BusinessDiscovery />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/discovery\" element={<BusinessDiscovery />} />\n          <Route path=\"/campaign\" element={<Campaign />} />\n          <Route\n            path=\"/campaign/:campaignId/progress\"\n            element={<CampaignProgress />}\n          />\n          <Route path=\"/results\" element={<Results />} />\n          <Route path=\"/account\" element={<AccountPage />} />\n          <Route path=\"/admin\" element={<AdminPanel />} />\n          <Route path=\"/auth/callback\" element={<AuthCallback />} />\n        </Routes>\n      </Layout>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":8,"duration":0.212},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":9,"duration":0.233},
{"type":"measure","name":"lsp.did_open","count":14,"duration":6.449},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":5,"duration":0.006},
{"type":"mark","name":"lsp.did_open","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/AUTHENTICATION_AND_NAMING_COMPLETE.md","languageId":"markdown","version":1,"text":"# ProspectPro Authentication & Campaign Naming Enhancement - COMPLETE ✅\n\n## Implementation Summary - October 7, 2025\n\n### ✅ Campaign Naming System Enhanced\n\n**Database Function Integration**\n\n- Updated Edge Function `business-discovery-background` to use database `generate_campaign_name()` function\n- Generates structured campaign IDs: `ACCT_SEAT_20251007_143052_abc123` format\n- Includes business type code, location code, date/time, and user identifier\n- Fallback to simple naming if database function fails\n\n**Campaign Naming Structure**\n\n```sql\n-- Example: \"ACCT_SEAT_20251007_143052_abc123\"\nbusiness_code (4 chars) + location_code (4 chars) + date + time + user_code\n```\n\n### ✅ Enhanced Authentication System\n\n**Google OAuth Configuration**\n\n- Client ID: `184492422840-82fvjqpk1vblk21mms1bpbvephgvpo34.apps.googleusercontent.com` ✅\n- Configured in Supabase with proper redirect URLs\n- Added offline access and consent prompt for refresh tokens\n- Enhanced error handling and user experience\n\n**Email Authentication Improvements**\n\n- Password validation (min 8 chars, uppercase, lowercase, number)\n- Confirm password validation for signup\n- Full name collection during registration\n- Enhanced UI with expandable form design\n- Success/error messaging with proper styling\n- Dark mode support throughout\n\n**Authentication Features**\n\n- ✅ Google OAuth with enhanced scope and error handling\n- ✅ Email/password with validation and confirmation\n- ✅ User profile creation with proper defaults\n- ✅ Auth callback page for OAuth redirects\n- ✅ Proper session management and state handling\n- ✅ Enhanced error messages and user feedback\n\n### ✅ Stripe Integration Ready\n\n**Live Credentials Configured**\n\n- Public Key: `pk_live_51SCVzyP9TtDDsSx5C5IaC4XuPT2sh6CCLctSFKuqh1DdMZ24a6tCY8RvALvbeEAgttZboEGPAnMRmGxPWitwbVoP00ykBovk4f` ✅\n- Secret Key: Configured in Supabase Vault ✅\n- Payment methods component shows live mode status\n- Database schema supports payment methods, transactions, and user profiles\n\n### ✅ Database Schema Enhancement\n\n**New Tables & Functions**\n\n- `user_profiles` - Extended user information and budgets\n- `payment_methods` - Stripe payment method storage\n- `payment_transactions` - Transaction history\n- `generate_campaign_name()` - Structured campaign naming\n- Auto-trigger for campaign name generation\n- Enhanced RLS policies for user data isolation\n\n## Current Status: PRODUCTION READY ✅\n\n### Authentication Configuration Status\n\n- ✅ Google OAuth: Configured and tested\n- ✅ Email Auth: Enhanced with validation\n- ✅ Supabase RLS: User data isolation enabled\n- ✅ User Profiles: Auto-creation on signup\n- ✅ Auth Callbacks: Proper redirect handling\n\n### Payment System Status\n\n- ✅ Stripe Live Mode: Credentials configured\n- ✅ Database Schema: Payment tables created\n- ✅ UI Components: Payment management ready\n- ⏳ Stripe Elements: Integration placeholder (Phase 2)\n\n### Campaign System Status\n\n- ✅ Enhanced Naming: Database function integration\n- ✅ User Association: Campaigns linked to authenticated users\n- ✅ Fallback Handling: Graceful degradation for naming\n- ✅ Edge Function: Updated and deployed\n\n## Next Steps Required from You\n\n### 1. Deploy Database Schema ⚠️ REQUIRED\n\nRun this SQL in your Supabase SQL Editor:\n\n```sql\n-- Execute the complete schema from:\n-- /workspaces/ProspectPro/database/auth-and-payments-schema.sql\n```\n\n### 2. Test Authentication Flow\n\n1. Visit your app and test Google OAuth signup/signin\n2. Test email signup with the enhanced validation\n3. Verify user profiles are created automatically\n4. Check campaign creation uses new naming system\n\n### 3. Configure Additional Auth Settings (Optional)\n\n**Email Templates (Optional)**\n\n- Customize signup confirmation emails in Supabase Dashboard\n- Set up custom SMTP if desired (currently using Supabase defaults)\n\n**CAPTCHA (Optional)**\n\n- Add HCaptcha site key if you want CAPTCHA protection\n- Configure in Supabase Auth settings\n\n**Email Domains (Optional)**\n\n- Configure allowed/blocked email domains if needed\n\n## Verification Commands\n\n```bash\n# Test Edge Function with enhanced naming\ncurl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-background' \\\n  -H 'Authorization: Bearer YOUR_ANON_KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"businessType\": \"accounting\", \"location\": \"Seattle, WA\", \"maxResults\": 2, \"tierKey\": \"PROFESSIONAL\"}'\n\n# Check campaign naming in database\nSELECT id, generated_name, display_name FROM campaigns ORDER BY created_at DESC LIMIT 5;\n\n# Verify user profiles table\nSELECT id, email, subscription_tier, monthly_budget FROM user_profiles LIMIT 5;\n```\n\n## Files Updated\n\n### Frontend Components\n\n- ✅ `src/components/AuthComponent.tsx` - Enhanced authentication UI\n- ✅ `src/components/PaymentMethods.tsx` - Stripe integration ready\n- ✅ `src/pages/AuthCallback.tsx` - OAuth callback handling\n- ✅ `src/App.tsx` - Added auth callback route\n\n### Backend Functions\n\n- ✅ `supabase/functions/business-discovery-background/index.ts` - Campaign naming integration\n\n### Database Schema\n\n- ✅ `database/auth-and-payments-schema.sql` - Complete schema ready to deploy\n\n## Ready for Production Testing! 🚀\n\nYour authentication system is now enterprise-ready with:\n\n- Secure Google OAuth integration\n- Enhanced email authentication with validation\n- Stripe payment system foundation\n- Intelligent campaign naming\n- Proper user data isolation\n- Professional UI/UX\n\n**Next Action:** Deploy the database schema, then test the complete authentication flow!\n"}}},
{"type":"measure","name":"lsp.did_open","count":15,"duration":0.068},
{"type":"mark","name":"lsp.did_open","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  GeographicLocation,\n  GeographicSelector,\n} from \"../components/GeographicSelector\";\nimport { MultiSelectBusinessTypes } from \"../components/MultiSelectBusinessTypes\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { TierSelector } from \"../components/TierSelector\";\nimport { BUSINESS_TYPES_BY_CATEGORY } from \"../constants/businessTaxonomy\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\nimport { ENRICHMENT_TIERS } from \"../lib/supabase\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport { exportLeadsToCsv } from \"../utils/exportLeadsToCsv\";\n\nconst DEFAULT_CATEGORY = \"Home & Property Services\";\nconst DEFAULT_LOCATION: GeographicLocation = {\n  lat: 40.7128,\n  lng: -74.006,\n  address: \"New York, NY\",\n};\nconst DEFAULT_RADIUS = 10;\n\nconst STEPS = [\n  { id: 1, title: \"Targeting\", description: \"Audience & geography\" },\n  { id: 2, title: \"Campaign setup\", description: \"Tier & quantity\" },\n  { id: 3, title: \"Results\", description: \"Leads & export\" },\n];\n\nconst getConfidenceColor = (score: number) => {\n  if (score >= 90)\n    return \"border border-emerald-200 bg-emerald-50 text-emerald-700 dark:border-emerald-400 dark:bg-transparent dark:text-emerald-300\";\n  if (score >= 80)\n    return \"border border-sky-200 bg-sky-50 text-sky-700 dark:border-sky-400 dark:bg-transparent dark:text-sky-300\";\n  if (score >= 70)\n    return \"border border-amber-200 bg-amber-50 text-amber-700 dark:border-amber-400 dark:bg-transparent dark:text-amber-300\";\n  return \"border border-rose-200 bg-rose-50 text-rose-700 dark:border-rose-400 dark:bg-transparent dark:text-rose-300\";\n};\n\nconst getValidationStatusColor = (status?: string) => {\n  switch (status) {\n    case \"validated\":\n      return \"border border-emerald-200 bg-emerald-50 text-emerald-700 dark:border-emerald-400 dark:bg-transparent dark:text-emerald-300\";\n    case \"validating\":\n      return \"border border-sky-200 bg-sky-50 text-sky-700 dark:border-sky-400 dark:bg-transparent dark:text-sky-300\";\n    case \"pending\":\n      return \"border border-amber-200 bg-amber-50 text-amber-700 dark:border-amber-400 dark:bg-transparent dark:text-amber-300\";\n    case \"failed\":\n      return \"border border-rose-200 bg-rose-50 text-rose-700 dark:border-rose-400 dark:bg-transparent dark:text-rose-300\";\n    default:\n      return \"border border-gray-200 bg-gray-50 text-gray-700 dark:border-slate-500 dark:bg-transparent dark:text-slate-300\";\n  }\n};\n\nexport const BusinessDiscovery: React.FC = () => {\n  const navigate = useNavigate();\n\n  const handleJobCreated = (jobData: {\n    jobId: string;\n    campaignId: string;\n    status: string;\n    estimatedTime?: number;\n  }) => {\n    console.log(\"🚀 Job created, navigating to progress page:\", jobData);\n    navigate(`/campaign/${jobData.campaignId}/progress?jobId=${jobData.jobId}`);\n  };\n\n  const {\n    startDiscovery,\n    isDiscovering,\n    progress,\n    currentStage,\n    cacheStats,\n    error,\n  } = useBusinessDiscovery(handleJobCreated);\n\n  const defaultBusinessTypes =\n    BUSINESS_TYPES_BY_CATEGORY[DEFAULT_CATEGORY] || [];\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([\n    DEFAULT_CATEGORY,\n  ]);\n  const [selectedBusinessTypes, setSelectedBusinessTypes] = useState<string[]>(\n    defaultBusinessTypes.length > 0 ? [defaultBusinessTypes[0]] : []\n  );\n  const [keywords, setKeywords] = useState(\"\");\n  const [location, setLocation] =\n    useState<GeographicLocation>(DEFAULT_LOCATION);\n  const [searchRadius, setSearchRadius] = useState<number>(DEFAULT_RADIUS);\n  const [expandGeography, setExpandGeography] = useState(false);\n  const [numberOfLeads, setNumberOfLeads] = useState(3);\n  const [selectedTier, setSelectedTier] =\n    useState<keyof typeof ENRICHMENT_TIERS>(\"BASE\");\n  const [activeStep, setActiveStep] = useState<1 | 2 | 3>(1);\n\n  const currentTierConfig = ENRICHMENT_TIERS[selectedTier];\n  const estimatedCost = numberOfLeads * currentTierConfig.price;\n  const sliderPercent = ((numberOfLeads - 1) / 9) * 100;\n\n  const { leads, currentCampaign } = useCampaignStore();\n\n  const campaignLeads = useMemo(() => {\n    if (currentCampaign) {\n      return leads.filter(\n        (lead) => lead.campaign_id === currentCampaign.campaign_id\n      );\n    }\n    return leads;\n  }, [leads, currentCampaign]);\n\n  const qualifiedLeadCount = useMemo(\n    () => campaignLeads.filter((lead) => lead.confidence_score >= 70).length,\n    [campaignLeads]\n  );\n\n  const hasResults = campaignLeads.length > 0;\n\n  useEffect(() => {\n    if (hasResults && activeStep === 2 && !isDiscovering) {\n      setActiveStep(3);\n    }\n  }, [hasResults, activeStep, isDiscovering]);\n\n  const handleExportResults = () => {\n    if (!campaignLeads.length) return;\n\n    exportLeadsToCsv(campaignLeads, {\n      fileName: `campaign-${\n        currentCampaign?.campaign_id || Date.now()\n      }-results.csv`,\n    });\n  };\n\n  const handleViewCampaign = () => {\n    if (!currentCampaign) return;\n\n    navigate(`/campaign?id=${currentCampaign.campaign_id}`);\n  };\n\n  const keywordsList = keywords\n    .split(\",\")\n    .map((keyword) => keyword.trim())\n    .filter((keyword) => keyword.length > 0);\n  const keywordsString = keywordsList.join(\", \");\n  const businessTypesString = selectedBusinessTypes.join(\", \");\n  const approxCoverage = Math.round(Math.PI * searchRadius * searchRadius);\n\n  const isTargetingValid =\n    selectedBusinessTypes.length > 0 && location.address.trim().length > 0;\n\n  const handleGeographicChange = (\n    updatedLocation: GeographicLocation,\n    radius: number\n  ) => {\n    setLocation(updatedLocation);\n    setSearchRadius(radius);\n  };\n\n  const handleContinue = () => {\n    if (!isTargetingValid) {\n      alert(\"Please select at least one business type and provide a location.\");\n      return;\n    }\n    setActiveStep(2);\n  };\n\n  const handleBackToTargeting = () => {\n    setActiveStep(1);\n  };\n\n  const handleSearch = () => {\n    if (!isTargetingValid) {\n      setActiveStep(1);\n      alert(\"Please complete targeting details before running the campaign.\");\n      return;\n    }\n\n    const config = {\n      search_terms: `${businessTypesString}${\n        keywordsString ? ` ${keywordsString}` : \"\"\n      }`.trim(),\n      location: location.address.trim(),\n      business_type: businessTypesString,\n      budget_limit: estimatedCost,\n      max_results: numberOfLeads,\n      include_email_validation:\n        selectedTier === \"PROFESSIONAL\" || selectedTier === \"ENTERPRISE\",\n      include_website_validation: true,\n      min_confidence_score: 70,\n      chamber_verification: true,\n      trade_association: true,\n      professional_license: true,\n      keywords: keywordsString,\n      search_radius: `${searchRadius} miles`,\n      expand_geography: expandGeography,\n      selectedTier,\n    };\n\n    console.log(\"🚀 Starting campaign:\", config);\n    startDiscovery(config);\n  };\n\n  const selectedBusinessTypesPreview = selectedBusinessTypes.length\n    ? (() => {\n        const preview = selectedBusinessTypes.slice(0, 5).join(\", \");\n        const remaining = selectedBusinessTypes.length - 5;\n        return remaining > 0 ? `${preview} +${remaining} more` : preview;\n      })()\n    : \"No business types selected\";\n\n  const summaryItems = [\n    {\n      label: \"Business categories\",\n      value:\n        selectedCategories.length > 0\n          ? selectedCategories.join(\", \")\n          : \"No categories selected\",\n    },\n    {\n      label: \"Business types\",\n      value: selectedBusinessTypesPreview,\n    },\n    {\n      label: \"Keywords\",\n      value: keywordsString.length > 0 ? keywordsString : \"None\",\n    },\n    {\n      label: \"Location\",\n      value: location.address,\n    },\n    {\n      label: \"Radius\",\n      value: `${searchRadius} miles`,\n    },\n    {\n      label: \"Geography\",\n      value: expandGeography ? \"Auto-expand enabled\" : \"Stay within radius\",\n    },\n    {\n      label: \"Coverage\",\n      value: `~${approxCoverage} square miles`,\n    },\n  ];\n\n  return (\n    <div className=\"rounded-lg border border-gray-200 bg-white shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n      <div className=\"border-b border-gray-200 px-6 py-4 dark:border-slate-700\">\n        <div className=\"flex flex-wrap items-center gap-4\">\n          {STEPS.map((step) => {\n            const isActive = activeStep === step.id;\n            const isCompleted = activeStep > step.id;\n            const canNavigate =\n              step.id === 1 ||\n              (step.id === 2 && isTargetingValid) ||\n              step.id === 3;\n            const isDisabled = step.id === 2 && !isTargetingValid;\n            const disableButton = !canNavigate || isDisabled;\n\n            return (\n              <button\n                key={step.id}\n                type=\"button\"\n                disabled={disableButton}\n                onClick={() => setActiveStep(step.id as 1 | 2 | 3)}\n                className={`flex items-center gap-3 rounded-md border px-4 py-2 text-left transition-colors ${\n                  isActive\n                    ? \"border-blue-600 bg-blue-50 text-blue-700 dark:border-sky-400 dark:bg-transparent dark:text-sky-300\"\n                    : isCompleted\n                    ? \"border-blue-200 bg-white text-blue-600 dark:border-slate-600 dark:bg-transparent dark:text-sky-300\"\n                    : \"border-transparent bg-white text-gray-600 hover:border-blue-200 hover:text-blue-700 dark:border-transparent dark:bg-transparent dark:text-slate-300 dark:hover:border-sky-400\"\n                } ${disableButton ? \"cursor-not-allowed opacity-60\" : \"\"}`}\n              >\n                <span\n                  className={`flex h-8 w-8 items-center justify-center rounded-full border-2 text-sm font-semibold ${\n                    isActive\n                      ? \"border-blue-600 bg-blue-600 text-white dark:border-sky-400 dark:bg-sky-400 dark:text-slate-900\"\n                      : isCompleted\n                      ? \"border-blue-300 bg-blue-100 text-blue-700 dark:border-sky-400 dark:bg-transparent dark:text-sky-300\"\n                      : \"border-gray-300 bg-white text-gray-500 dark:border-slate-600 dark:bg-transparent dark:text-slate-400\"\n                  }`}\n                  aria-hidden=\"true\"\n                >\n                  {step.id}\n                </span>\n                <span className=\"flex flex-col\">\n                  <span className=\"text-sm font-semibold\">{step.title}</span>\n                  <span className=\"text-xs text-gray-500 dark:text-slate-400\">\n                    {step.description}\n                  </span>\n                </span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"p-6 space-y-8\">\n        <section\n          className={`space-y-6 ${activeStep === 1 ? \"\" : \"hidden\"}`}\n          aria-hidden={activeStep !== 1}\n        >\n          <header>\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n              Targeting & Geography\n            </h2>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n              Choose the businesses and regions you want ProspectPro to\n              discover.\n            </p>\n          </header>\n\n          <MultiSelectBusinessTypes\n            selectedCategories={selectedCategories}\n            selectedBusinessTypes={selectedBusinessTypes}\n            onCategoriesChange={setSelectedCategories}\n            onBusinessTypesChange={setSelectedBusinessTypes}\n          />\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Additional Keywords (Optional)\n            </label>\n            <input\n              type=\"text\"\n              value={keywords}\n              onChange={(e) => setKeywords(e.target.value)}\n              placeholder=\"e.g., luxury, organic, 24-hour (comma-separated)\"\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400\"\n            />\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n              Add comma-separated keywords to refine your search.\n            </p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <GeographicSelector\n              onLocationChange={handleGeographicChange}\n              initialLocation={location}\n              initialRadius={searchRadius}\n            />\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"expandGeography\"\n                checked={expandGeography}\n                onChange={(e) => setExpandGeography(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700\"\n              />\n              <label\n                htmlFor=\"expandGeography\"\n                className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\"\n              >\n                Expand geography automatically if initial results are limited\n              </label>\n            </div>\n          </div>\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={handleContinue}\n              className=\"px-5 py-2 rounded-md bg-blue-600 text-white font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              disabled={!isTargetingValid}\n            >\n              Continue to Campaign Setup\n            </button>\n          </div>\n        </section>\n\n        <section\n          className={`space-y-6 ${activeStep === 2 ? \"\" : \"hidden\"}`}\n          aria-hidden={activeStep !== 2}\n        >\n          <header className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n                Campaign Setup\n              </h2>\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n                Review your targeting, then select enrichment tier and lead\n                quantity.\n              </p>\n            </div>\n            <button\n              type=\"button\"\n              onClick={handleBackToTargeting}\n              className=\"text-sm text-blue-600 hover:text-blue-700 dark:text-blue-300\"\n            >\n              ← Edit targeting\n            </button>\n          </header>\n\n          <div className=\"rounded-md border border-gray-200 bg-gray-50 p-4 dark:border-slate-700 dark:bg-slate-900/80\">\n            <h3 className=\"mb-3 text-sm font-semibold text-gray-800 dark:text-slate-200\">\n              Campaign summary\n            </h3>\n            <dl className=\"grid gap-3 sm:grid-cols-2\">\n              {summaryItems.map((item) => (\n                <div key={item.label} className=\"flex flex-col\">\n                  <dt className=\"text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400\">\n                    {item.label}\n                  </dt>\n                  <dd className=\"text-sm text-gray-800 dark:text-slate-100\">\n                    {item.value}\n                  </dd>\n                </div>\n              ))}\n            </dl>\n          </div>\n\n          <TierSelector\n            selectedTier={selectedTier}\n            onTierChange={setSelectedTier}\n            numberOfLeads={numberOfLeads}\n          />\n\n          <div>\n            <label className=\"mb-2 block text-sm font-medium text-gray-700 dark:text-slate-200\">\n              Number of Leads\n            </label>\n            <div className=\"flex items-center gap-4\">\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={numberOfLeads}\n                onChange={(e) => setNumberOfLeads(parseInt(e.target.value, 10))}\n                className=\"h-2 flex-1 cursor-pointer appearance-none rounded-full bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                style={{\n                  background: `linear-gradient(90deg, #2563eb 0%, #2563eb ${sliderPercent}%, #d1d5db ${sliderPercent}%, #d1d5db 100%)`,\n                  accentColor: \"#2563eb\",\n                }}\n              />\n              <div className=\"min-w-fit rounded-full border border-blue-200 bg-blue-50 px-3 py-1 text-sm font-medium text-blue-700 dark:border-sky-400 dark:bg-slate-900 dark:text-sky-300\">\n                {numberOfLeads} leads\n              </div>\n            </div>\n          </div>\n\n          <div className=\"rounded-lg border-2 border-yellow-400 bg-white p-4 shadow-sm dark:border-amber-400 dark:bg-slate-900\">\n            <div className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\">\n              <div>\n                <p className=\"text-xs font-semibold uppercase tracking-wide text-gray-500 dark:text-slate-300\">\n                  Estimated cost\n                </p>\n                <div className=\"mt-1 flex items-baseline gap-x-3\">\n                  <span className=\"text-3xl font-bold text-blue-700 dark:text-sky-300\">\n                    ${estimatedCost.toFixed(2)}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex w-full flex-col items-start gap-2 sm:w-auto sm:items-end\">\n                <span className=\"text-sm text-gray-600 dark:text-slate-400\">\n                  {numberOfLeads} leads × ${currentTierConfig.price.toFixed(2)}\n                </span>\n                <div className=\"flex flex-wrap items-center gap-2\">\n                  <span className=\"rounded-full border border-blue-200 bg-blue-50 px-3 py-1 text-xs font-medium text-blue-700 dark:border-sky-400 dark:bg-slate-900 dark:text-sky-300\">\n                    {currentTierConfig.name}\n                  </span>\n                  <button\n                    type=\"button\"\n                    onClick={handleSearch}\n                    disabled={isDiscovering}\n                    className=\"inline-flex items-center justify-center rounded-md bg-blue-600 px-5 py-2.5 text-sm font-semibold text-white shadow-sm transition-colors hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-60 dark:bg-sky-500 dark:hover:bg-sky-600\"\n                  >\n                    {isDiscovering ? (\n                      <>\n                        <svg\n                          className=\"-ml-1 mr-2 h-4 w-4 animate-spin text-white\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <circle\n                            className=\"opacity-25\"\n                            cx=\"12\"\n                            cy=\"12\"\n                            r=\"10\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"4\"\n                          ></circle>\n                          <path\n                            className=\"opacity-75\"\n                            fill=\"currentColor\"\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                          ></path>\n                        </svg>\n                        Running…\n                      </>\n                    ) : (\n                      \"Run Campaign\"\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ProgressDisplay\n            isDiscovering={isDiscovering}\n            progress={progress}\n            currentStage={currentStage}\n            cacheStats={cacheStats}\n          />\n        </section>\n\n        <section\n          className={`space-y-6 ${activeStep === 3 ? \"\" : \"hidden\"}`}\n          aria-hidden={activeStep !== 3}\n        >\n          <header className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n                Campaign Results\n              </h2>\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n                {hasResults\n                  ? `${campaignLeads.length} leads captured • ${qualifiedLeadCount} qualified`\n                  : isDiscovering\n                  ? \"We're still enriching this campaign. Hang tight while ProspectPro verifies contacts.\"\n                  : \"Results will appear here once a campaign finishes. You can keep working in the meantime.\"}\n              </p>\n            </div>\n            <div className=\"flex flex-wrap gap-3\">\n              {currentCampaign && (\n                <button\n                  type=\"button\"\n                  onClick={handleViewCampaign}\n                  className=\"inline-flex items-center gap-2 rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50 dark:border-slate-600 dark:bg-transparent dark:text-slate-200 dark:hover:border-sky-400\"\n                >\n                  View full campaign\n                </button>\n              )}\n              {hasResults && (\n                <button\n                  type=\"button\"\n                  onClick={handleExportResults}\n                  className=\"inline-flex items-center gap-2 rounded-md border border-emerald-400 px-4 py-2 text-sm font-semibold text-emerald-700 transition-colors hover:bg-emerald-50 dark:border-emerald-400 dark:text-emerald-300 dark:hover:bg-transparent\"\n                >\n                  📊 Export CSV\n                </button>\n              )}\n            </div>\n          </header>\n\n          {currentCampaign && (\n            <div className=\"rounded-lg border border-gray-200 bg-gray-50 p-4 dark:border-slate-700 dark:bg-slate-900/70\">\n              <div className=\"flex flex-wrap items-start justify-between gap-4\">\n                <div>\n                  <div className=\"text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400\">\n                    Campaign ID\n                  </div>\n                  <div className=\"text-sm font-semibold text-gray-900 dark:text-slate-100\">\n                    {currentCampaign.campaign_id}\n                  </div>\n                  <div className=\"mt-2 text-xs text-gray-500 dark:text-slate-400\">\n                    Status • {currentCampaign.status}\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-slate-100\">\n                      {currentCampaign.leads_found ?? campaignLeads.length}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-slate-400\">\n                      Total Leads\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-blue-600 dark:text-sky-300\">\n                      {currentCampaign.leads_qualified ?? qualifiedLeadCount}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-slate-400\">\n                      Qualified\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-green-600 dark:text-emerald-300\">\n                      {currentCampaign.leads_validated ?? 0}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-slate-400\">\n                      Validated\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-purple-600 dark:text-violet-300\">\n                      {currentCampaign.tier_used || selectedTier}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-slate-400\">\n                      Tier\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden shadow-sm\">\n            {!hasResults ? (\n              <div className=\"flex flex-col items-center justify-center py-16 text-center\">\n                <span className=\"text-4xl mb-2\">🔍</span>\n                <h3 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">\n                  {isDiscovering\n                    ? \"ProspectPro is working on your campaign\"\n                    : \"No leads yet\"}\n                </h3>\n                <p className=\"mt-2 max-w-md text-sm text-gray-600 dark:text-gray-300\">\n                  {isDiscovering\n                    ? \"Please keep this tab open. We'll move results here automatically once enrichment finishes.\"\n                    : \"Launch or complete a campaign to populate results with verified leads.\"}\n                </p>\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-900/40\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-600 dark:text-gray-300\">\n                        Business\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-600 dark:text-gray-300\">\n                        Contact\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-600 dark:text-gray-300\">\n                        Confidence\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-600 dark:text-gray-300\">\n                        Enrichment\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-600 dark:text-gray-300\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-600 dark:text-gray-300\">\n                        Cost\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {campaignLeads.map((lead) => (\n                      <tr\n                        key={lead.id}\n                        className=\"hover:bg-gray-50 dark:hover:bg-gray-900/30\"\n                      >\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-semibold text-gray-900 dark:text-gray-100\">\n                            {lead.business_name}\n                          </div>\n                          <div className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                            {lead.address}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900 dark:text-gray-100 space-y-1\">\n                            {lead.phone && <div>📞 {lead.phone}</div>}\n                            {lead.website && (\n                              <div>\n                                🌐{\" \"}\n                                <a\n                                  href={lead.website}\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                  className=\"text-blue-600 dark:text-blue-400 hover:underline\"\n                                >\n                                  {lead.website.replace(/^https?:\\/\\//, \"\")}\n                                </a>\n                              </div>\n                            )}\n                            {lead.email && <div>📧 {lead.email}</div>}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span\n                            className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(\n                              lead.confidence_score\n                            )}`}\n                          >\n                            {lead.confidence_score}%\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex flex-col space-y-1\">\n                            <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900/40 dark:text-purple-300\">\n                              {lead.enrichment_tier || currentTierConfig.name}\n                            </span>\n                            {lead.vault_secured && (\n                              <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/40 dark:text-green-300\">\n                                🔐 Vault Secured\n                              </span>\n                            )}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span\n                            className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getValidationStatusColor(\n                              lead.validation_status\n                            )}`}\n                          >\n                            {lead.validation_status || \"pending\"}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-200\">\n                          ${lead.cost_to_acquire.toFixed(2)}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </section>\n\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg\n                  className=\"h-5 w-5 text-red-400 dark:text-red-500\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n                  Discovery Failed\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n                  <p>\n                    {error instanceof Error ? error.message : String(error)}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":10,"duration":0.228},
{"type":"measure","name":"lsp.did_open","count":16,"duration":4.553},
{"type":"mark","name":"lsp.did_open","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts","languageId":"typescript","version":1,"text":"export const BUSINESS_CATEGORIES = [\n  \"Automotive Services\",\n  \"Education & Training\",\n  \"Entertainment & Recreation\",\n  \"Financial Services\",\n  \"Food & Dining\",\n  \"Government & Public Services\",\n  \"Healthcare & Medical\",\n  \"Home & Property Services\",\n  \"Hospitality & Lodging\",\n  \"Personal Care & Beauty\",\n  \"Professional Services\",\n  \"Religious & Community\",\n  \"Retail & Shopping\",\n  \"Technology & IT Services\",\n  \"Transportation & Transit\",\n] as const;\n\nexport const BUSINESS_TYPES_BY_CATEGORY: Record<string, string[]> = {\n  \"Automotive Services\": [\n    \"Auto Body Shop\",\n    \"Auto Detailing\",\n    \"Auto Parts Store\",\n    \"Automotive Glass Service\",\n    \"Car Dealer\",\n    \"Car Rental\",\n    \"Car Repair\",\n    \"Car Wash\",\n    \"Electric Vehicle Charging Station\",\n    \"Gas Station\",\n    \"Motorcycle Dealer\",\n    \"Oil Change Service\",\n    \"Rv Dealer\",\n    \"Smog Check Station\",\n    \"Tire Shop\",\n    \"Towing Service\",\n    \"Transmission Shop\",\n    \"Truck Dealer\",\n  ],\n  \"Education & Training\": [\n    \"Art School\",\n    \"Charter School\",\n    \"College\",\n    \"Community College\",\n    \"Cooking School\",\n    \"Dance Studio\",\n    \"Daycare\",\n    \"Driving School\",\n    \"Kindergarten\",\n    \"Language School\",\n    \"Library\",\n    \"Music School\",\n    \"Preschool\",\n    \"Primary School\",\n    \"Private School\",\n    \"Public School\",\n    \"School\",\n    \"Secondary School\",\n    \"Summer Camp Organizer\",\n    \"Technical School\",\n    \"Training Center\",\n    \"Tutoring Center\",\n    \"University\",\n    \"Vocational School\",\n  ],\n  \"Entertainment & Recreation\": [\n    \"Amusement Park\",\n    \"Aquarium\",\n    \"Arcade\",\n    \"Arena\",\n    \"Art Gallery\",\n    \"Banquet Hall\",\n    \"Beach\",\n    \"Botanical Garden\",\n    \"Bowling Alley\",\n    \"Casino\",\n    \"Comedy Club\",\n    \"Concert Hall\",\n    \"Convention Center\",\n    \"Escape Room\",\n    \"Event Venue\",\n    \"Fitness Center\",\n    \"Golf Course\",\n    \"Gym\",\n    \"Karaoke Venue\",\n    \"Marina\",\n    \"Mini Golf\",\n    \"Movie Theater\",\n    \"Museum\",\n    \"Night Club\",\n    \"Paintball\",\n    \"Park\",\n    \"Rock Climbing Gym\",\n    \"Ski Resort\",\n    \"Sports Complex\",\n    \"Stadium\",\n    \"Swimming Pool\",\n    \"Tennis Court\",\n    \"Theater\",\n    \"Tourist Attraction\",\n    \"Trampoline Park\",\n    \"Wedding Venue\",\n    \"Yoga Studio\",\n    \"Zoo\",\n  ],\n  \"Financial Services\": [\n    \"Atm\",\n    \"Bank\",\n    \"Check Cashing Service\",\n    \"Credit Union\",\n    \"Cryptocurrency Exchange\",\n    \"Financial Planner\",\n    \"Investment Firm\",\n    \"Money Transfer Service\",\n    \"Mortgage Broker\",\n    \"Payday Lender\",\n    \"Stock Broker\",\n  ],\n  \"Food & Dining\": [\n    \"Bakery\",\n    \"Bar\",\n    \"Barbecue Restaurant\",\n    \"Brewery\",\n    \"Brunch Restaurant\",\n    \"Buffet\",\n    \"Burger Joint\",\n    \"Cafe\",\n    \"Catering Service\",\n    \"Chinese Restaurant\",\n    \"Cocktail Bar\",\n    \"Coffee Shop\",\n    \"Deli\",\n    \"Dessert Shop\",\n    \"Distillery\",\n    \"Donut Shop\",\n    \"Fast Food Restaurant\",\n    \"Food Court\",\n    \"Food Stand\",\n    \"Food Truck\",\n    \"Ice Cream Shop\",\n    \"Indian Restaurant\",\n    \"Italian Restaurant\",\n    \"Japanese Restaurant\",\n    \"Juice Bar\",\n    \"Meal Delivery\",\n    \"Meal Takeaway\",\n    \"Mexican Restaurant\",\n    \"Pizza Restaurant\",\n    \"Pub\",\n    \"Restaurant\",\n    \"Sandwich Shop\",\n    \"Seafood Restaurant\",\n    \"Smoothie Shop\",\n    \"Steakhouse\",\n    \"Sushi Restaurant\",\n    \"Taco Place\",\n    \"Tea House\",\n    \"Wine Bar\",\n    \"Winery\",\n  ],\n  \"Government & Public Services\": [\n    \"City Hall\",\n    \"Consulate\",\n    \"Courthouse\",\n    \"County Office\",\n    \"Dmv\",\n    \"Embassy\",\n    \"Fire Station\",\n    \"Government Office\",\n    \"Municipal Building\",\n    \"Passport Office\",\n    \"Police Station\",\n    \"Post Office\",\n    \"Public Library\",\n    \"Public School\",\n    \"Public Works\",\n    \"Social Services Office\",\n    \"Tax Office\",\n    \"Voter Registration Office\",\n  ],\n  \"Healthcare & Medical\": [\n    \"Acupuncture Clinic\",\n    \"Chiropractor\",\n    \"Dental Clinic\",\n    \"Dentist\",\n    \"Doctor\",\n    \"Drugstore\",\n    \"Health Insurance Office\",\n    \"Hospital\",\n    \"Medical Center\",\n    \"Medical Equipment Supplier\",\n    \"Medical Lab\",\n    \"Mental Health Clinic\",\n    \"Occupational Therapist\",\n    \"Optical Clinic\",\n    \"Optometrist\",\n    \"Orthodontist\",\n    \"Pharmacy\",\n    \"Physical Therapy\",\n    \"Physiotherapist\",\n    \"Psychiatrist\",\n    \"Psychologist\",\n    \"Skin Care Clinic\",\n    \"Speech Therapist\",\n    \"Urgent Care\",\n    \"Veterinary Care\",\n    \"Wellness Center\",\n  ],\n  \"Home & Property Services\": [\n    \"Appliance Repair\",\n    \"Carpet Cleaning\",\n    \"Cleaning Service\",\n    \"Dry Cleaning\",\n    \"Electrician\",\n    \"Fence Contractor\",\n    \"Flooring Contractor\",\n    \"Gardener\",\n    \"General Contractor\",\n    \"Gutter Service\",\n    \"Handyman\",\n    \"Home Inspector\",\n    \"Hvac Contractor\",\n    \"Landscaping\",\n    \"Laundry\",\n    \"Locksmith\",\n    \"Moving Company\",\n    \"Painter\",\n    \"Pest Control\",\n    \"Plumber\",\n    \"Pool Service\",\n    \"Property Management\",\n    \"Roofing Contractor\",\n    \"Storage\",\n    \"Window Cleaning\",\n  ],\n  \"Hospitality & Lodging\": [\n    \"Bed And Breakfast\",\n    \"Boutique Hotel\",\n    \"Campground\",\n    \"Extended Stay Hotel\",\n    \"Guest House\",\n    \"Hostel\",\n    \"Hotel\",\n    \"Inn\",\n    \"Lodge\",\n    \"Motel\",\n    \"Resort\",\n    \"Rv Park\",\n    \"Vacation Rental\",\n  ],\n  \"Personal Care & Beauty\": [\n    \"Barber Shop\",\n    \"Beauty Salon\",\n    \"Beautician\",\n    \"Body Art Service\",\n    \"Cosmetics Store\",\n    \"Day Spa\",\n    \"Eyebrow Threading\",\n    \"Facial Spa\",\n    \"Hair Care\",\n    \"Hair Salon\",\n    \"Makeup Artist\",\n    \"Massage\",\n    \"Nail Salon\",\n    \"Piercing Shop\",\n    \"Sauna\",\n    \"Spa\",\n    \"Tanning Studio\",\n    \"Tattoo Parlor\",\n    \"Waxing Salon\",\n  ],\n  \"Professional Services\": [\n    \"Accounting\",\n    \"Advertising Agency\",\n    \"Architecture Firm\",\n    \"Attorney\",\n    \"Business Center\",\n    \"Consultant\",\n    \"Corporate Office\",\n    \"Employment Agency\",\n    \"Engineering Office\",\n    \"Financial Advisor\",\n    \"Insurance Agency\",\n    \"Lawyer\",\n    \"Marketing Agency\",\n    \"Notary\",\n    \"Real Estate Agency\",\n    \"Recruiter\",\n    \"Tax Preparation\",\n  ],\n  \"Religious & Community\": [\n    \"Cemetery\",\n    \"Church\",\n    \"Civic Organization\",\n    \"Community Center\",\n    \"Crematorium\",\n    \"Funeral Home\",\n    \"Meditation Center\",\n    \"Mosque\",\n    \"Non-Profit Organization\",\n    \"Place Of Worship\",\n    \"Religious Center\",\n    \"Social Club\",\n    \"Spiritual Center\",\n    \"Synagogue\",\n    \"Temple\",\n  ],\n  \"Retail & Shopping\": [\n    \"Antique Shop\",\n    \"Art Supply Store\",\n    \"Bicycle Store\",\n    \"Book Store\",\n    \"Boutique\",\n    \"Clothing Store\",\n    \"Convenience Store\",\n    \"Craft Store\",\n    \"Department Store\",\n    \"Discount Store\",\n    \"Dollar Store\",\n    \"Electronics Store\",\n    \"Florist\",\n    \"Furniture Store\",\n    \"Garden Center\",\n    \"Gift Shop\",\n    \"Grocery Store\",\n    \"Hardware Store\",\n    \"Hobby Shop\",\n    \"Home Goods Store\",\n    \"Jewelry Store\",\n    \"Liquor Store\",\n    \"Music Store\",\n    \"Office Supply Store\",\n    \"Optical Store\",\n    \"Outlet Store\",\n    \"Party Supply Store\",\n    \"Pet Store\",\n    \"Second Hand Store\",\n    \"Shoe Store\",\n    \"Shopping Mall\",\n    \"Sporting Goods Store\",\n    \"Supermarket\",\n    \"Thrift Store\",\n    \"Tobacco Shop\",\n    \"Toy Store\",\n    \"Vape Shop\",\n  ],\n  \"Technology & IT Services\": [\n    \"App Development\",\n    \"Cell Phone Store\",\n    \"Co-Working Space\",\n    \"Computer Repair\",\n    \"Cybersecurity Firm\",\n    \"Data Center\",\n    \"Internet Cafe\",\n    \"It Services\",\n    \"Managed Services Provider\",\n    \"Software Company\",\n    \"Tech Support\",\n    \"Telecommunications Service Provider\",\n    \"Web Design\",\n  ],\n  \"Transportation & Transit\": [\n    \"Airport\",\n    \"Bike Rental\",\n    \"Bus Station\",\n    \"Bus Tour Agency\",\n    \"Car Sharing\",\n    \"Cruise Agency\",\n    \"Ferry Terminal\",\n    \"Limousine Service\",\n    \"Parking Garage\",\n    \"Parking Lot\",\n    \"Rest Area\",\n    \"Ride Share Location\",\n    \"Scooter Rental\",\n    \"Shuttle Service\",\n    \"Subway Station\",\n    \"Taxi Stand\",\n    \"Train Station\",\n    \"Travel Agency\",\n    \"Truck Stop\",\n  ],\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":11,"duration":0.245},
{"type":"measure","name":"lsp.did_open","count":17,"duration":1.762},
{"type":"mark","name":"lsp.did_open","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts","languageId":"typescript","version":1,"text":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_SUPABASE_URL: string;\n  readonly VITE_SUPABASE_ANON_KEY: string;\n  readonly VITE_EDGE_FUNCTIONS_URL?: string;\n  readonly VITE_GOOGLE_PLACES_API_KEY?: string;\n  readonly VITE_GOOGLE_MAPS_API_KEY?: string;\n  readonly VITE_HUNTER_IO_API_KEY?: string;\n  readonly VITE_ZEROBOUNCE_API_KEY?: string;\n  readonly VITE_ENABLE_ADMIN_PANEL?: string;\n  readonly VITE_ENABLE_DEBUG_MODE?: string;\n  readonly VITE_DEFAULT_BUDGET_LIMIT?: string;\n  readonly VITE_WARNING_THRESHOLD?: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":12,"duration":0.229},
{"type":"measure","name":"lsp.did_open","count":18,"duration":2.469},
{"type":"mark","name":"lsp.did_open","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { ENRICHMENT_TIERS } from \"../lib/supabase\";\n\ninterface TierSelectorProps {\n  selectedTier: keyof typeof ENRICHMENT_TIERS;\n  onTierChange: (tier: keyof typeof ENRICHMENT_TIERS) => void;\n  numberOfLeads: number;\n}\n\nconst tierDataImprovements = {\n  BASE: [\n    \"Business verification\",\n    \"Company data (name, industry, size)\",\n    \"Phone & address validation\",\n    \"Generic company email\",\n  ],\n  PROFESSIONAL: [\n    \"Everything in Base\",\n    \"Professional email discovery & verification\",\n    \"Email deliverability verification\",\n    \"Enhanced company enrichment\",\n  ],\n  ENTERPRISE: [\n    \"Everything in Professional\",\n    \"Executive contact enrichment\",\n    \"Full compliance verification\",\n    \"Advanced data validation\",\n  ],\n};\n\nexport const TierSelector: React.FC<TierSelectorProps> = ({\n  selectedTier,\n  onTierChange,\n  numberOfLeads,\n}) => {\n  const formatUnitCost = (price: number): string => {\n    if (price >= 1) return `$${price.toFixed(2)}`;\n    if (price >= 0.01) return `$${price.toFixed(3)}`;\n    return `$${price.toFixed(4)}`;\n  };\n\n  return (\n    <div>\n      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        Data Enhancement Tiers\n      </label>\n\n      {/* Single column, table-style layout */}\n      <div className=\"space-y-2\">\n        {Object.entries(ENRICHMENT_TIERS).map(([key, tier]) => {\n          const tierKey = key as keyof typeof ENRICHMENT_TIERS;\n          const totalCost = numberOfLeads * tier.price;\n          const improvements = tierDataImprovements[tierKey];\n\n          return (\n            <div\n              key={key}\n              className={`rounded-lg p-4 cursor-pointer transition-all border-l-4 ${\n                selectedTier === key\n                  ? \"bg-blue-50 dark:bg-blue-950/30 border-l-blue-500 shadow-md dark:shadow-gray-900/20\"\n                  : \"bg-gray-100 dark:bg-gray-700 border-l-gray-200 dark:border-l-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 hover:border-l-gray-300 dark:hover:border-l-gray-500\"\n              }`}\n              onClick={() => onTierChange(tierKey)}\n            >\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n                    {tier.name}\n                  </h3>\n                  {tier.badge && (\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${\n                        tier.badge === \"Most Popular\"\n                          ? \"bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-200\"\n                          : tier.badge === \"Premium\"\n                          ? \"bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-200\"\n                          : \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200\"\n                      }`}\n                    >\n                      {tier.badge}\n                    </span>\n                  )}\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {formatUnitCost(tier.price)} per lead\n                  </div>\n                  {selectedTier === key && (\n                    <div className=\"flex items-center text-sm text-blue-600 dark:text-blue-400\">\n                      <svg\n                        className=\"w-4 h-4 mr-1\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                      Selected\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                    ${totalCost.toFixed(2)}\n                  </div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    Total cost\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2\">\n                    {tier.description}\n                  </div>\n\n                  {/* Data Improvements in horizontal layout */}\n                  <div className=\"flex flex-wrap gap-2\">\n                    {improvements.map((improvement, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center text-xs bg-white dark:bg-gray-800 rounded-full px-2 py-1 border border-gray-200 dark:border-gray-600\"\n                      >\n                        <svg\n                          className=\"w-3 h-3 text-green-500 dark:text-green-400 mr-1 flex-shrink-0\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <span className=\"text-gray-700 dark:text-gray-200\">\n                          {improvement}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":13,"duration":0.271},
{"type":"measure","name":"lsp.did_open","count":19,"duration":3.644},
{"type":"mark","name":"lsp.did_open","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","languageId":"typescript","version":1,"text":"import type { BusinessLead } from \"../types\";\n\ntype ExportLeadsOptions = {\n  fileName?: string;\n};\n\nconst csvEscape = (value: unknown): string => {\n  if (value === null || value === undefined) {\n    return \"\";\n  }\n\n  const stringValue = String(value);\n  const escaped = stringValue.replace(/\"/g, '\"\"');\n  return `\"${escaped}\"`;\n};\n\nconst getPrimaryEmail = (lead: BusinessLead): string => {\n  if (lead.email) {\n    return lead.email;\n  }\n\n  const enrichedEmail = lead.enrichment_data?.emails?.find(\n    (entry) => entry.verified\n  );\n\n  return enrichedEmail?.email || lead.enrichment_data?.emails?.[0]?.email || \"\";\n};\n\nconst getOwnerData = (lead: BusinessLead) => {\n  const legacyOwnerData = (lead as any).owner_data || {};\n\n  if (legacyOwnerData && Object.keys(legacyOwnerData).length > 0) {\n    return legacyOwnerData;\n  }\n\n  const executiveContact = lead.enrichment_data?.emails?.find((entry) =>\n    entry.type?.toLowerCase().includes(\"owner\")\n  );\n\n  if (!executiveContact) {\n    return {};\n  }\n\n  const name = [executiveContact.firstName, executiveContact.lastName]\n    .filter(Boolean)\n    .join(\" \");\n\n  return {\n    name,\n    email: executiveContact.email,\n    phone: (executiveContact as any).phone,\n    confidence_score: executiveContact.confidence,\n  };\n};\n\nexport const exportLeadsToCsv = (\n  leads: BusinessLead[],\n  options: ExportLeadsOptions = {}\n) => {\n  if (!leads.length) {\n    console.warn(\"No leads provided for export.\");\n    return;\n  }\n\n  const headers = [\n    \"Business Name\",\n    \"Address\",\n    \"Phone\",\n    \"Website\",\n    \"Email\",\n    \"Confidence Score\",\n    \"Validation Status\",\n    \"Cost to Acquire\",\n    \"Data Sources\",\n    \"Enrichment Tier\",\n    \"Vault Secured\",\n    \"Hunter Verified\",\n    \"NeverBounce Verified\",\n    \"License Verified\",\n    \"Owner Name\",\n    \"Owner Email\",\n    \"Owner Phone\",\n    \"Owner Confidence Score\",\n  ];\n\n  const rows = leads.map((lead) => {\n    const sources =\n      lead.enrichment_data?.dataSources || lead.data_sources || [];\n    const ownerData = getOwnerData(lead);\n\n    return [\n      csvEscape(lead.business_name),\n      csvEscape(lead.address || \"\"),\n      csvEscape(lead.phone || \"\"),\n      csvEscape(lead.website || \"\"),\n      csvEscape(getPrimaryEmail(lead)),\n      csvEscape(lead.confidence_score ?? \"\"),\n      csvEscape(lead.validation_status || \"\"),\n      csvEscape((lead.cost_to_acquire ?? 0).toFixed(3)),\n      csvEscape(sources.join(\"; \")),\n      csvEscape(lead.enrichment_tier || \"\"),\n      csvEscape(lead.vault_secured ? \"Yes\" : \"No\"),\n      csvEscape(lead.enrichment_data?.hunterVerified ? \"Yes\" : \"No\"),\n      csvEscape(lead.enrichment_data?.neverBounceVerified ? \"Yes\" : \"No\"),\n      csvEscape(lead.enrichment_data?.licenseVerified ? \"Yes\" : \"No\"),\n      csvEscape(ownerData.name || \"\"),\n      csvEscape(ownerData.email || \"\"),\n      csvEscape(ownerData.phone || \"\"),\n      csvEscape(ownerData.confidence_score ?? \"\"),\n    ].join(\",\");\n  });\n\n  const csvContent = [headers.join(\",\"), ...rows].join(\"\\n\");\n\n  const blob = new Blob([csvContent], {\n    type: \"text/csv;charset=utf-8;\",\n  });\n\n  const link = document.createElement(\"a\");\n  const url = URL.createObjectURL(blob);\n  link.href = url;\n  link.download =\n    options.fileName ||\n    `campaign-leads-${new Date().toISOString().split(\"T\")[0]}.csv`;\n  link.style.display = \"none\";\n\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":20,"duration":1.369},
{"type":"mark","name":"lsp.did_open","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { EnrichmentButton } from \"../components/EnrichmentButton\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessLead } from \"../types\";\nimport { exportLeadsToCsv } from \"../utils/exportLeadsToCsv\";\n\nexport const Campaign: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const campaignId = searchParams.get(\"id\");\n  const { currentCampaign, campaigns, leads, setCurrentCampaign } =\n    useCampaignStore();\n  const { isDiscovering, progress, currentStage, cacheStats, error } =\n    useBusinessDiscovery();\n  const [showResults, setShowResults] = useState(false);\n\n  // Filter leads for current campaign\n  const campaignLeads = currentCampaign\n    ? leads.filter((lead) => lead.campaign_id === currentCampaign.campaign_id)\n    : [];\n\n  useEffect(() => {\n    if (!currentCampaign && campaignId) {\n      const matchedCampaign = campaigns.find(\n        (campaign) => campaign.campaign_id === campaignId\n      );\n      if (matchedCampaign) {\n        setCurrentCampaign(matchedCampaign);\n      }\n    }\n  }, [campaignId, campaigns, currentCampaign, setCurrentCampaign]);\n\n  useEffect(() => {\n    if (campaignLeads.length > 0) {\n      setShowResults(true);\n    }\n  }, [campaignLeads.length]);\n\n  const exportToCsv = () => {\n    if (!campaignLeads.length) return;\n\n    exportLeadsToCsv(campaignLeads, {\n      fileName: `campaign-${\n        currentCampaign?.campaign_id || Date.now()\n      }-results.csv`,\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Campaign Header */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Campaign Progress\n            </h1>\n            <p className=\"text-gray-600 mt-1\">\n              {currentCampaign\n                ? `Campaign ${currentCampaign.campaign_id}`\n                : \"Running campaign...\"}\n            </p>\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => navigate(\"/discovery\")}\n              className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\"\n            >\n              Back to Discovery\n            </button>\n            {showResults && (\n              <button\n                onClick={exportToCsv}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n              >\n                Export CSV\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Progress Display */}\n      {isDiscovering && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <ProgressDisplay\n            isDiscovering={isDiscovering}\n            progress={progress}\n            currentStage={currentStage}\n            cacheStats={cacheStats}\n          />\n        </div>\n      )}\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Campaign Summary\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-blue-600 font-medium\">Status</div>\n              <div className=\"text-lg font-bold text-blue-900 capitalize\">\n                {currentCampaign.status}\n              </div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-green-600 font-medium\">\n                Leads Found\n              </div>\n              <div className=\"text-lg font-bold text-green-900\">\n                {currentCampaign.leads_found || 0}\n              </div>\n            </div>\n            <div className=\"bg-yellow-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-yellow-600 font-medium\">\n                Qualified\n              </div>\n              <div className=\"text-lg font-bold text-yellow-900\">\n                {currentCampaign.leads_qualified || 0}\n              </div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-purple-600 font-medium\">\n                Total Cost\n              </div>\n              <div className=\"text-lg font-bold text-purple-900\">\n                ${(currentCampaign.total_cost || 0).toFixed(2)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Enrichment Section */}\n      {currentCampaign && showResults && campaignLeads.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Progressive Enrichment\n          </h2>\n          <div className=\"flex items-start justify-between gap-6\">\n            <div className=\"flex-1\">\n              <p className=\"text-gray-600 mb-4\">\n                Enrich your leads with verified emails, business license\n                validation, and more. Only pay for successful enrichments.\n              </p>\n              <div className=\"grid grid-cols-3 gap-3 text-sm\">\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <div className=\"font-semibold text-blue-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.emails?.length\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-blue-600 text-xs\">With Emails</div>\n                </div>\n                <div className=\"bg-green-50 p-3 rounded\">\n                  <div className=\"font-semibold text-green-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.neverBounceVerified\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-green-600 text-xs\">Email Verified</div>\n                </div>\n                <div className=\"bg-purple-50 p-3 rounded\">\n                  <div className=\"font-semibold text-purple-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.licenseVerified\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-purple-600 text-xs\">\n                    License Verified\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <EnrichmentButton\n                campaignId={currentCampaign.campaign_id}\n                onComplete={() => {\n                  // Optionally refresh data or show success message\n                  console.log(\n                    \"Enrichment completed for campaign:\",\n                    currentCampaign.campaign_id\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Results Table */}\n      {showResults && campaignLeads.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                Campaign Results\n              </h2>\n              <div className=\"text-sm text-gray-500\">\n                {campaignLeads.length} leads found\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact Info\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Score\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {campaignLeads.map((lead: BusinessLead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {lead.business_name}\n                        </div>\n                        <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                          {lead.address}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"space-y-1\">\n                        {lead.phone && (\n                          <div className=\"text-sm text-gray-900\">\n                            {lead.phone}\n                          </div>\n                        )}\n                        {lead.email && (\n                          <div className=\"text-sm text-blue-600\">\n                            {lead.email}\n                          </div>\n                        )}\n                        {lead.website && (\n                          <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                            <a\n                              href={lead.website}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"hover:text-blue-600\"\n                            >\n                              {lead.website}\n                            </a>\n                          </div>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {lead.confidence_score}%\n                        </div>\n                        <div\n                          className={`ml-2 w-16 bg-gray-200 rounded-full h-2`}\n                        >\n                          <div\n                            className={`h-2 rounded-full ${\n                              lead.confidence_score >= 80\n                                ? \"bg-green-500\"\n                                : lead.confidence_score >= 60\n                                ? \"bg-yellow-500\"\n                                : \"bg-red-500\"\n                            }`}\n                            style={{ width: `${lead.confidence_score}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${(lead.cost_to_acquire || 0).toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                          lead.validation_status === \"validated\"\n                            ? \"bg-green-100 text-green-800\"\n                            : lead.validation_status === \"pending\"\n                            ? \"bg-yellow-100 text-yellow-800\"\n                            : \"bg-red-100 text-red-800\"\n                        }`}\n                      >\n                        {lead.validation_status || \"unknown\"}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg\n                className=\"h-5 w-5 text-red-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                Campaign Failed\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error instanceof Error ? error.message : String(error)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No Results State */}\n      {showResults && campaignLeads.length === 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n            No results found\n          </h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Try adjusting your search criteria or location.\n          </p>\n          <div className=\"mt-6\">\n            <button\n              onClick={() => navigate(\"/discovery\")}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n            >\n              Start New Campaign\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":14,"duration":0.234},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":15,"duration":0.254},
{"type":"measure","name":"lsp.did_open","count":21,"duration":5.425},
{"type":"mark","name":"lsp.did_open","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport { exportLeadsToCsv } from \"../utils/exportLeadsToCsv\";\n\nexport const Results: React.FC = () => {\n  const { leads, currentCampaign } = useCampaignStore();\n\n  const handleExport = (format: \"csv\" | \"json\") => {\n    if (!leads.length) {\n      return;\n    }\n\n    if (format === \"csv\") {\n      exportLeadsToCsv(leads, {\n        fileName: `prospects-vault-secured-${\n          new Date().toISOString().split(\"T\")[0]\n        }.csv`,\n      });\n    } else {\n      const blob = new Blob([JSON.stringify(leads, null, 2)], {\n        type: \"application/json\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `prospects-vault-secured-${\n        new Date().toISOString().split(\"T\")[0]\n      }.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  const getConfidenceColor = (score: number) => {\n    if (score >= 90) return \"bg-green-100 text-green-800\";\n    if (score >= 80) return \"bg-blue-100 text-blue-800\";\n    if (score >= 70) return \"bg-yellow-100 text-yellow-800\";\n    return \"bg-red-100 text-red-800\";\n  };\n\n  const getValidationStatusColor = (status: string) => {\n    switch (status) {\n      case \"validated\":\n        return \"bg-green-100 text-green-800\";\n      case \"validating\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"failed\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Results</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {leads.length} leads found •{\" \"}\n            {leads.filter((l) => l.confidence_score >= 70).length} qualified\n          </p>\n        </div>\n\n        {leads.length > 0 && (\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => handleExport(\"csv\")}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📊 Export CSV\n            </button>\n            <button\n              onClick={() => handleExport(\"json\")}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📄 Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              Progressive Enrichment Results\n            </h3>\n            {currentCampaign.vault_secured && (\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                🔐 Vault Secured\n              </span>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-5\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {currentCampaign.leads_found}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total Found</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {currentCampaign.leads_qualified}\n              </div>\n              <div className=\"text-sm text-gray-500\">Qualified</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {currentCampaign.leads_validated}\n              </div>\n              <div className=\"text-sm text-gray-500\">Validated</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {currentCampaign.tier_used || \"Professional\"}\n              </div>\n              <div className=\"text-sm text-gray-500\">Tier Used</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">\n                ${currentCampaign.total_cost.toFixed(2)}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total Cost</div>\n            </div>\n          </div>\n\n          {/* Cache Performance Display */}\n          {currentCampaign.cache_performance && (\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\n              <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\n                🚀 90-Day Intelligent Cache Performance\n              </h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {currentCampaign.cache_performance.cache_hit_ratio.toFixed(\n                      1\n                    )}\n                    %\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Hit Ratio</div>\n                </div>\n                <div className=\"bg-blue-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {currentCampaign.cache_performance.cache_hits}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Hits</div>\n                </div>\n                <div className=\"bg-yellow-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-yellow-600\">\n                    {currentCampaign.cache_performance.cache_misses}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Misses</div>\n                </div>\n                <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    ${currentCampaign.cache_performance.cost_savings.toFixed(2)}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cost Savings</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Results Table */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        {leads.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <span className=\"text-4xl\">🔍</span>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n              No results yet\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Start a discovery campaign to find business leads.\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Confidence\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Enrichment\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {leads.map((lead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {lead.business_name}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {lead.address}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.phone && <div>📞 {lead.phone}</div>}\n                        {lead.website && (\n                          <div>\n                            🌐{\" \"}\n                            <a\n                              href={lead.website}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-blue-600 hover:underline\"\n                            >\n                              {lead.website.replace(/^https?:\\/\\//, \"\")}\n                            </a>\n                          </div>\n                        )}\n                        {lead.email && <div>📧 {lead.email}</div>}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(\n                          lead.confidence_score\n                        )}`}\n                      >\n                        {lead.confidence_score}%\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex flex-col space-y-1\">\n                        <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800\">\n                          {lead.enrichment_tier || \"Professional\"}\n                        </span>\n                        {lead.vault_secured && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800\">\n                            🔐 Vault Secured\n                          </span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getValidationStatusColor(\n                          lead.validation_status\n                        )}`}\n                      >\n                        {lead.validation_status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${lead.cost_to_acquire.toFixed(3)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":22,"duration":2.027},
{"type":"mark","name":"lsp.did_open","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts","languageId":"typescript","version":1,"text":"import { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\nexport interface UsageLogContext {\n  campaignId?: string | null;\n  sessionId?: string | null;\n  jobId?: string | null;\n  tierKey?: string | null;\n  businessQuery?: string | null;\n  locationQuery?: string | null;\n}\n\nexport interface UsageLogParams extends Partial<UsageLogContext> {\n  sourceName: string;\n  endpoint?: string;\n  httpMethod?: string;\n  requestParams?: Record<string, unknown> | null;\n  queryType?: \"discovery\" | \"enrichment\" | \"validation\" | \"internal\";\n  responseCode?: number | null;\n  responseTimeMs?: number | null;\n  resultsReturned?: number | null;\n  success?: boolean;\n  errorMessage?: string | null;\n  estimatedCost?: number | null;\n  actualCost?: number | null;\n  billingCategory?: \"free_tier\" | \"paid_usage\" | \"overage\" | null;\n  dataQualityScore?: number | null;\n  usefulResults?: number | null;\n  cacheHit?: boolean;\n  rateLimited?: boolean;\n  retryCount?: number;\n  requestId?: string;\n}\n\nexport interface UsageLogger {\n  log: (entry: UsageLogParams) => Promise<void>;\n}\n\ninterface SupabaseUsageInsert {\n  campaign_id: string | null;\n  session_id: string | null;\n  request_id: string;\n  source_name: string;\n  endpoint: string | null;\n  http_method: string;\n  request_params: Record<string, unknown> | null;\n  query_type: string | null;\n  business_query: string | null;\n  location_query: string | null;\n  response_code: number | null;\n  response_time_ms: number | null;\n  results_returned: number | null;\n  success: boolean | null;\n  error_message: string | null;\n  estimated_cost: number | null;\n  actual_cost: number | null;\n  cost_currency: string;\n  billing_category: string | null;\n  data_quality_score: number | null;\n  useful_results: number | null;\n  cache_hit: boolean;\n  rate_limited: boolean;\n  retry_count: number;\n}\n\nconst UUID_REGEX =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\n\nfunction isValidUUID(value?: string | null): value is string {\n  return typeof value === \"string\" && UUID_REGEX.test(value.trim());\n}\n\nfunction roundCost(value: number | null | undefined): number | null {\n  if (typeof value !== \"number\" || Number.isNaN(value)) return null;\n  return Math.round(value * 10000) / 10000;\n}\n\nfunction sanitizePayload(\n  input: Record<string, unknown> | null | undefined\n): Record<string, unknown> | null {\n  if (!input) return null;\n\n  try {\n    return JSON.parse(\n      JSON.stringify(input, (_, value) => {\n        if (typeof value === \"string\" && value.length > 512) {\n          return `${value.slice(0, 509)}…`;\n        }\n        return value;\n      })\n    );\n  } catch (_error) {\n    return null;\n  }\n}\n\nfunction buildInsertPayload(\n  baseContext: UsageLogContext,\n  entry: UsageLogParams\n): SupabaseUsageInsert {\n  const merged = { ...baseContext, ...entry };\n  const requestId = entry.requestId ?? crypto.randomUUID();\n  const campaignId = isValidUUID(merged.campaignId) ? merged.campaignId : null;\n  const sessionId = merged.sessionId ?? merged.jobId ?? null;\n\n  const estimatedCost = roundCost(entry.estimatedCost);\n  const actualCost = roundCost(entry.actualCost ?? entry.estimatedCost ?? null);\n  const billingCategory =\n    entry.billingCategory ?? (actualCost && actualCost > 0 ? \"paid_usage\" : \"free_tier\");\n\n  return {\n    campaign_id: campaignId,\n    session_id: sessionId ?? null,\n    request_id: requestId,\n    source_name: entry.sourceName,\n    endpoint: entry.endpoint ?? null,\n    http_method: entry.httpMethod ?? \"GET\",\n    request_params: sanitizePayload(entry.requestParams),\n    query_type: entry.queryType ?? null,\n    business_query: merged.businessQuery ?? entry.businessQuery ?? null,\n    location_query: merged.locationQuery ?? entry.locationQuery ?? null,\n    response_code: entry.responseCode ?? null,\n    response_time_ms: entry.responseTimeMs ?? null,\n    results_returned: entry.resultsReturned ?? null,\n    success: typeof entry.success === \"boolean\" ? entry.success : null,\n    error_message: entry.errorMessage ?? null,\n    estimated_cost: estimatedCost,\n    actual_cost: actualCost,\n    cost_currency: \"USD\",\n    billing_category: billingCategory,\n    data_quality_score: entry.dataQualityScore ?? null,\n    useful_results: entry.usefulResults ?? entry.resultsReturned ?? null,\n    cache_hit: entry.cacheHit ?? false,\n    rate_limited:\n      entry.rateLimited ?? (typeof entry.responseCode === \"number\" && entry.responseCode === 429),\n    retry_count: entry.retryCount ?? 0,\n  };\n}\n\nexport function createUsageLogger(\n  supabaseUrl: string,\n  serviceRoleKey: string,\n  baseContext: UsageLogContext = {}\n): UsageLogger {\n  const supabase = createClient(supabaseUrl, serviceRoleKey, {\n    auth: {\n      persistSession: false,\n      autoRefreshToken: false,\n    },\n  });\n\n  return {\n    async log(entry: UsageLogParams) {\n      try {\n        const payload = buildInsertPayload(baseContext, entry);\n        const { error } = await supabase.from(\"enhanced_api_usage\").insert(payload);\n        if (error) {\n          console.error(\"📉 API usage logging error:\", error.message);\n        }\n      } catch (error) {\n        console.error(\"📉 API usage logging failed:\", error);\n      }\n    },\n  };\n}\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":16,"duration":0.272},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":17,"duration":0.243},
{"type":"measure","name":"lsp.did_open","count":23,"duration":2.498},
{"type":"mark","name":"lsp.did_open","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport {\n  createUsageLogger,\n  UsageLogContext,\n  UsageLogParams,\n  UsageLogger,\n} from \"../_shared/api-usage.ts\";\n\n/**\n * ProspectPro v4.3 - Advanced Enrichment Orchestrator Edge Function\n * Coordinates all enrichment services with intelligent routing and cost optimization\n *\n * Progressive Enrichment Waterfall:\n * 1. Free Validation (Google Places, basic checks) - $0.00\n * 2. Business License Lookup (professional validation) - $0.03\n * 3. Company Enrichment (PeopleDataLabs) - $0.05-$0.10\n * 4. Hunter.io Email Discovery (domain search, email finder) - $0.034\n * 5. NeverBounce Email Verification (validate discovered emails) - $0.008\n * 6. Person Enrichment (PeopleDataLabs executives) - $0.20-$0.28\n * 7. Apollo Enrichment (optional, premium contacts) - $1.00\n * 8. Compliance Verification (FINRA, specialized) - $0.40-$1.25\n *\n * Cost Optimization: 81% cheaper than Apollo ($0.19 vs $1.00 average)\n * Industry Routing: Financial services → FINRA (99.6% savings)\n *\n * Features:\n * - Progressive enrichment waterfall with cost controls\n * - Industry-specific routing (healthcare, financial, legal)\n * - Circuit breaker pattern for fault tolerance\n * - 90-day intelligent caching for cost efficiency\n * - Budget constraints with early termination\n * - Confidence scoring and quality thresholds\n */\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface EnrichmentRequest {\n  businessName: string;\n  domain?: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  industry?: string;\n  state?: string;\n  campaignId?: string;\n  jobId?: string;\n  sessionUserId?: string;\n  userId?: string;\n  tierKey?: string;\n\n  // Progressive enrichment options\n  includeBusinessLicense?: boolean;\n  includeCompanyEnrichment?: boolean;\n  discoverEmails?: boolean;\n  verifyEmails?: boolean;\n  includePersonEnrichment?: boolean;\n  apolloEnrichment?: boolean;\n  complianceVerification?: boolean;\n\n  // Control parameters\n  maxCostPerBusiness?: number;\n  minConfidenceScore?: number;\n  tier?: \"starter\" | \"professional\" | \"enterprise\" | \"compliance\";\n  executiveContactsOnly?: boolean;\n}\n\ninterface EnrichmentResponse {\n  success: boolean;\n  businessName: string;\n  originalData: {\n    domain?: string;\n    address?: string;\n    phone?: string;\n    website?: string;\n  };\n  enrichedData: {\n    emails?: Array<{\n      email: string;\n      confidence: number;\n      verified: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    businessLicense?: {\n      isValid: boolean;\n      licenseNumber?: string;\n      status?: string;\n      expirationDate?: string;\n      professionalType?: string;\n      source: string;\n    };\n    companyInfo?: {\n      name?: string;\n      industry?: string;\n      size?: string;\n      founded?: number;\n      revenue?: string;\n      website?: string;\n      description?: string;\n      source: string;\n    };\n    executiveContacts?: Array<{\n      name: string;\n      title: string;\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n    }>;\n    personEnrichment?: Array<{\n      name: string;\n      title: string;\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n      confidence: number;\n    }>;\n    complianceData?: {\n      finraCheck?: boolean;\n      sanctionsCheck?: boolean;\n      riskScore?: number;\n      findings?: Array<{\n        type: string;\n        description: string;\n        severity: string;\n      }>;\n    };\n  };\n  confidenceScore: number;\n  totalCost: number;\n  costBreakdown: {\n    businessLicenseCost: number;\n    companyEnrichmentCost: number;\n    hunterCost: number;\n    neverBounceCost: number;\n    personEnrichmentCost: number;\n    apolloCost: number;\n    complianceCost: number;\n  };\n  processingMetadata: {\n    servicesUsed: string[];\n    servicesSkipped: string[];\n    processingTime: number;\n    errors: Array<{\n      service: string;\n      error: string;\n    }>;\n  };\n}\n\ntype PeopleDataLabsPersonResult = {\n  name?: string;\n  title?: string;\n  email?: string;\n  phone?: string;\n  linkedin?: string;\n  likelihood?: number;\n};\n\nclass EnrichmentOrchestrator {\n  private supabaseUrl: string;\n  private supabaseKey: string;\n  private maxCostPerBusiness: number;\n  private usageLogger?: UsageLogger;\n  private usageContext: UsageLogContext;\n\n  constructor(\n    supabaseUrl: string,\n    supabaseKey: string,\n    maxCostPerBusiness = 2.0,\n    usageLogger?: UsageLogger,\n    usageContext: UsageLogContext = {}\n  ) {\n    this.supabaseUrl = supabaseUrl;\n    this.supabaseKey = supabaseKey;\n    this.maxCostPerBusiness = maxCostPerBusiness;\n    this.usageLogger = usageLogger;\n    this.usageContext = usageContext;\n  }\n\n  private async logUsage(entry: UsageLogParams) {\n    if (!this.usageLogger) return;\n    await this.usageLogger.log({ ...this.usageContext, ...entry });\n  }\n\n  private estimatePeopleDataLabsCost(action: string): number {\n    switch (action) {\n      case \"enrichCompany\":\n        return 0.10;\n      case \"enrichPerson\":\n      case \"enrichContact\":\n        return 0.25;\n      case \"search\":\n        return 0.05;\n      default:\n        return 0.05;\n    }\n  }\n\n  private estimateHunterCost(action: string): number {\n    switch (action) {\n      case \"domain-search\":\n        return 0.012;\n      case \"email-finder\":\n        return 0.02;\n      case \"email-verifier\":\n        return 0.003;\n      default:\n        return 0.01;\n    }\n  }\n  /**\n   * Orchestrate all enrichment services for a single business\n   */\n  async enrichBusiness(\n    request: EnrichmentRequest\n  ): Promise<EnrichmentResponse> {\n    const startTime = Date.now();\n\n    const response: EnrichmentResponse = {\n      success: false,\n      businessName: request.businessName,\n      originalData: {\n        domain: request.domain,\n        address: request.address,\n        phone: request.phone,\n        website: request.website,\n      },\n      enrichedData: {},\n      confidenceScore: 0,\n      totalCost: 0,\n      costBreakdown: {\n        businessLicenseCost: 0,\n        companyEnrichmentCost: 0,\n        hunterCost: 0,\n        neverBounceCost: 0,\n        personEnrichmentCost: 0,\n        apolloCost: 0,\n        complianceCost: 0,\n      },\n      processingMetadata: {\n        servicesUsed: [],\n        servicesSkipped: [],\n        processingTime: 0,\n        errors: [],\n      },\n    };\n\n    let currentCost = 0;\n\n    try {\n      // Apply tier-based defaults\n      const tierDefaults = this.getTierDefaults(request.tier || \"professional\");\n      const enrichmentConfig = { ...tierDefaults, ...request };\n\n      // Progressive Enrichment Waterfall - Stage 1: Business License Validation ($0.03)\n      if (\n        enrichmentConfig.includeBusinessLicense &&\n        request.businessName &&\n        request.state\n      ) {\n        try {\n          console.log(\n            `🏛️ Stage 1: Business License Lookup for ${request.businessName} in ${request.state}`\n          );\n\n          const licenseResult = await this.callBusinessLicense({\n            action: \"searchCompany\",\n            companyName: request.businessName,\n            state: request.state,\n          });\n\n          if (licenseResult.success && licenseResult.data) {\n            response.enrichedData.businessLicense = {\n              isValid: licenseResult.data.isValid || false,\n              licenseNumber: licenseResult.data.licenseNumber,\n              status: licenseResult.data.status,\n              source: \"business_license_lookup\",\n            };\n\n            response.costBreakdown.businessLicenseCost =\n              licenseResult.cost || 0.03;\n            currentCost += response.costBreakdown.businessLicenseCost;\n            response.processingMetadata.servicesUsed.push(\"business_license\");\n\n            console.log(\n              `✅ Business license validated: ${\n                licenseResult.data.isValid ? \"Valid\" : \"Not found\"\n              }`\n            );\n          }\n        } catch (error) {\n          console.error(\"Business License Lookup error:\", error);\n          response.processingMetadata.errors.push({\n            service: \"business_license\",\n            error: error instanceof Error ? error.message : \"Unknown error\",\n          });\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 2: Company Enrichment ($0.05-$0.10)\n      if (\n        enrichmentConfig.includeCompanyEnrichment &&\n        (request.businessName || request.website)\n      ) {\n        const companyEnrichmentCost = 0.1;\n\n        if (currentCost + companyEnrichmentCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`🏢 Stage 2: Company Enrichment via PeopleDataLabs`);\n\n            const companyParams: Record<string, unknown> = {\n              action: \"enrichCompany\",\n            };\n\n            if (request.website) {\n              companyParams.website = request.website;\n            } else if (request.businessName) {\n              companyParams.companyName = request.businessName;\n            }\n\n            const companyResult = await this.callPeopleDataLabs(companyParams);\n\n            if (companyResult.success && companyResult.data) {\n              response.enrichedData.companyInfo = {\n                name: companyResult.data.name,\n                industry: companyResult.data.industry,\n                size: companyResult.data.size,\n                founded: companyResult.data.founded,\n                revenue: companyResult.data.revenue,\n                description: companyResult.data.description,\n                source: \"peopledatalabs\",\n              };\n\n              response.costBreakdown.companyEnrichmentCost =\n                companyResult.cost || companyEnrichmentCost;\n              currentCost += response.costBreakdown.companyEnrichmentCost;\n              response.processingMetadata.servicesUsed.push(\n                \"peopledatalabs_company\"\n              );\n\n              console.log(\n                `✅ Company enriched: ${\n                  companyResult.data.name || \"Data retrieved\"\n                }`\n              );\n            }\n          } catch (error) {\n            console.error(\"Company enrichment error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"peopledatalabs_company\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping company enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"peopledatalabs_company (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 3: Email Discovery ($0.034)\n      if (enrichmentConfig.discoverEmails && request.domain) {\n        const emailDiscoveryCost = 0.034;\n\n        if (currentCost + emailDiscoveryCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(\n              `📧 Stage 3: Email Discovery for ${request.domain} via Hunter.io`\n            );\n\n            const hunterResult = await this.callHunterIO({\n              action: \"domain-search\",\n              domain: request.domain,\n              limit: 10,\n            });\n\n            if (hunterResult.success && hunterResult.data?.emails) {\n              response.enrichedData.emails = hunterResult.data.emails;\n              response.costBreakdown.hunterCost =\n                hunterResult.cost || emailDiscoveryCost;\n              currentCost += response.costBreakdown.hunterCost;\n              response.processingMetadata.servicesUsed.push(\"hunter_io\");\n\n              console.log(\n                `✅ Found ${hunterResult.data.emails.length} emails via Hunter.io`\n              );\n            }\n          } catch (error) {\n            console.error(\"Hunter.io error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"hunter_io\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping email discovery - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"hunter_io (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 4: Email Verification ($0.008 per email)\n      if (\n        enrichmentConfig.verifyEmails &&\n        response.enrichedData.emails &&\n        response.enrichedData.emails.length > 0\n      ) {\n        const emailVerificationCost =\n          response.enrichedData.emails.length * 0.008;\n\n        if (currentCost + emailVerificationCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(\n              `✅ Stage 4: Verifying ${response.enrichedData.emails.length} emails via NeverBounce`\n            );\n\n            const emailsToVerify = response.enrichedData.emails.map(\n              (e) => e.email\n            );\n            const neverBounceResult = await this.callNeverBounce({\n              action: \"verify-batch\",\n              emails: emailsToVerify,\n            });\n\n            if (neverBounceResult.success && neverBounceResult.data?.results) {\n              response.enrichedData.emails = response.enrichedData.emails.map(\n                (email) => {\n                  const verification = neverBounceResult.data?.results.find(\n                    (r: { email: string }) => r.email === email.email\n                  );\n\n                  return {\n                    ...email,\n                    verified: verification?.result === \"valid\",\n                    verificationResult: verification?.result,\n                  };\n                }\n              );\n\n              response.costBreakdown.neverBounceCost =\n                neverBounceResult.cost || emailVerificationCost;\n              currentCost += response.costBreakdown.neverBounceCost;\n              response.processingMetadata.servicesUsed.push(\"neverbounce\");\n\n              const verifiedCount = response.enrichedData.emails.filter(\n                (e) => e.verified\n              ).length;\n              console.log(\n                `✅ Verified ${verifiedCount}/${response.enrichedData.emails.length} emails`\n              );\n            }\n          } catch (error) {\n            console.error(\"NeverBounce error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"neverbounce\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping email verification - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"neverbounce (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 5: Person Enrichment ($0.20-$0.28)\n      if (enrichmentConfig.includePersonEnrichment && request.businessName) {\n        const personEnrichmentCost = 0.28;\n\n        if (currentCost + personEnrichmentCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`� Stage 5: Person Enrichment for executives`);\n\n            const personResult = await this.callPeopleDataLabs({\n              action: \"searchPerson\",\n              companyName: request.businessName,\n              jobTitle: \"CEO OR Owner OR President OR Director\",\n              minLikelihood: 7,\n            });\n            if (\n              personResult.success &&\n              Array.isArray(personResult.data?.results)\n            ) {\n              const pdlResults =\n                personResult.data.results as PeopleDataLabsPersonResult[];\n              response.enrichedData.personEnrichment = pdlResults.map(\n                (person) => ({\n                  name: person.name ?? \"Unknown\",\n                  title: person.title ?? \"\",\n                  email: person.email,\n                  phone: person.phone,\n                  linkedin: person.linkedin,\n                  confidence: person.likelihood ?? 0,\n                })\n              );\n\n              response.costBreakdown.personEnrichmentCost =\n                personResult.cost || personEnrichmentCost;\n              currentCost += response.costBreakdown.personEnrichmentCost;\n              response.processingMetadata.servicesUsed.push(\n                \"peopledatalabs_person\"\n              );\n\n              const executiveCount =\n                response.enrichedData.personEnrichment?.length ?? 0;\n              console.log(`✅ Found ${executiveCount} executive contacts`);\n            }\n          } catch (error) {\n            console.error(\"Person enrichment error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"peopledatalabs_person\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping person enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"peopledatalabs_person (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 6: Apollo Premium ($1.00)\n      if (enrichmentConfig.apolloEnrichment && request.domain) {\n        const apolloCost = 1.0;\n\n        if (currentCost + apolloCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`� Stage 6: Premium Apollo Enrichment`);\n\n            // Placeholder for Apollo implementation\n            await new Promise((resolve) => setTimeout(resolve, 100));\n\n            response.enrichedData.executiveContacts = [\n              {\n                name: \"Executive Contact (Apollo)\",\n                title: \"Owner/CEO\",\n                email: `contact@${request.domain}`,\n              },\n            ];\n\n            response.costBreakdown.apolloCost = apolloCost;\n            currentCost += apolloCost;\n            response.processingMetadata.servicesUsed.push(\"apollo\");\n\n            console.log(`✅ Apollo executive contacts retrieved`);\n          } catch (error) {\n            console.error(\"Apollo error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"apollo\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping Apollo enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\"apollo (budget)\");\n        }\n      }\n\n      // Calculate final confidence score and complete response\n      response.confidenceScore = this.calculateConfidenceScore(response);\n      response.totalCost = currentCost;\n      response.success = true;\n      response.processingMetadata.processingTime = Date.now() - startTime;\n\n      console.log(\n        `✅ Progressive enrichment complete: ${\n          response.businessName\n        } - Confidence: ${\n          response.confidenceScore\n        }% - Cost: $${response.totalCost.toFixed(3)}`\n      );\n\n      return response;\n    } catch (error) {\n      console.error(\"Enrichment orchestration error:\", error);\n      response.processingMetadata.processingTime = Date.now() - startTime;\n      response.processingMetadata.errors.push({\n        service: \"orchestrator\",\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      });\n      return response;\n    }\n  }\n\n  /**\n   * Get tier-based enrichment defaults\n   */\n  private getTierDefaults(tier: string) {\n    const tierConfigs = {\n      starter: {\n        includeBusinessLicense: false,\n        includeCompanyEnrichment: false,\n        discoverEmails: true,\n        verifyEmails: false,\n        includePersonEnrichment: false,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 0.5,\n      },\n      professional: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: false,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 1.5,\n      },\n      enterprise: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: true,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 3.5,\n      },\n      compliance: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: true,\n        apolloEnrichment: true,\n        complianceVerification: true,\n        maxCostPerBusiness: 7.5,\n      },\n    };\n\n    return (\n      tierConfigs[tier as keyof typeof tierConfigs] || tierConfigs.professional\n    );\n  }\n\n  /**\n   * Call Business License Lookup Edge Function\n   */\n  private async callBusinessLicense(params: Record<string, unknown>) {\n    const startedAt = performance.now();\n    let response: Response | null = null;\n    try {\n      response = await fetch(\n        `${this.supabaseUrl}/functions/v1/enrichment-business-license`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(params),\n        }\n      );\n\n      const payload = await response.json();\n\n      await this.logUsage({\n        sourceName: \"business_license_lookup\",\n        endpoint: String(params.action ?? \"lookup\"),\n        httpMethod: \"POST\",\n        requestParams: {\n          action: params.action,\n          companyName: params.companyName,\n          state: params.state,\n        },\n        queryType: \"enrichment\",\n        responseCode: response.status,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        success: response.ok && payload?.success !== false,\n        resultsReturned:\n          Array.isArray(payload?.data) ? payload.data.length : payload?.data ? 1 : 0,\n        estimatedCost: 0.03,\n        actualCost:\n          typeof payload?.cost === \"number\" ? payload.cost : response.ok ? 0.03 : 0,\n      });\n\n      return payload;\n    } catch (error) {\n      await this.logUsage({\n        sourceName: \"business_license_lookup\",\n        endpoint: String(params.action ?? \"lookup\"),\n        httpMethod: \"POST\",\n        requestParams: {\n          action: params.action,\n          companyName: params.companyName,\n          state: params.state,\n        },\n        queryType: \"enrichment\",\n        responseCode: response?.status ?? null,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        success: false,\n        errorMessage: error instanceof Error ? error.message : String(error),\n        estimatedCost: 0.03,\n        actualCost: 0,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Call PeopleDataLabs Edge Function\n   */\n  private async callPeopleDataLabs(params: Record<string, unknown>) {\n    const startedAt = performance.now();\n    let response: Response | null = null;\n    const action = String(params.action ?? \"request\");\n    const estimatedCost = this.estimatePeopleDataLabsCost(action);\n\n    try {\n      response = await fetch(\n        `${this.supabaseUrl}/functions/v1/enrichment-pdl`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(params),\n        }\n      );\n\n      const payload = await response.json();\n      const results = Array.isArray(payload?.data?.results)\n        ? payload.data.results.length\n        : payload?.data\n        ? 1\n        : 0;\n\n      await this.logUsage({\n        sourceName: \"peopledatalabs\",\n        endpoint: action,\n        httpMethod: \"POST\",\n        requestParams: {\n          action,\n          companyName: params.companyName,\n          website: params.website,\n          domain: params.domain,\n          jobTitle: params.jobTitle,\n        },\n        queryType: \"enrichment\",\n        responseCode: response.status,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        resultsReturned: results,\n        usefulResults: results,\n        success: response.ok && payload?.success !== false,\n        estimatedCost,\n        actualCost:\n          typeof payload?.cost === \"number\" ? payload.cost : response.ok ? estimatedCost : 0,\n      });\n\n      return payload;\n    } catch (error) {\n      await this.logUsage({\n        sourceName: \"peopledatalabs\",\n        endpoint: action,\n        httpMethod: \"POST\",\n        requestParams: {\n          action,\n          companyName: params.companyName,\n          website: params.website,\n          domain: params.domain,\n          jobTitle: params.jobTitle,\n        },\n        queryType: \"enrichment\",\n        responseCode: response?.status ?? null,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        success: false,\n        errorMessage: error instanceof Error ? error.message : String(error),\n        estimatedCost,\n        actualCost: 0,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Call Hunter.io Edge Function\n   */\n  private async callHunterIO(params: Record<string, unknown>) {\n    const startedAt = performance.now();\n    let response: Response | null = null;\n    const action = String(params.action ?? \"request\");\n    const estimatedCost = this.estimateHunterCost(action);\n\n    try {\n      response = await fetch(\n        `${this.supabaseUrl}/functions/v1/enrichment-hunter`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(params),\n        }\n      );\n\n      const payload = await response.json();\n      const emails = Array.isArray(payload?.data?.emails)\n        ? payload.data.emails.length\n        : payload?.data\n        ? 1\n        : 0;\n\n      await this.logUsage({\n        sourceName: \"hunter_io\",\n        endpoint: action,\n        httpMethod: \"POST\",\n        requestParams: {\n          action,\n          domain: params.domain,\n          companyName: params.companyName,\n          limit: params.limit,\n        },\n        queryType: \"enrichment\",\n        responseCode: response.status,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        resultsReturned: emails,\n        usefulResults: emails,\n        success: response.ok && payload?.success !== false,\n        estimatedCost,\n        actualCost:\n          typeof payload?.cost === \"number\" ? payload.cost : response.ok ? estimatedCost : 0,\n      });\n\n      return payload;\n    } catch (error) {\n      await this.logUsage({\n        sourceName: \"hunter_io\",\n        endpoint: action,\n        httpMethod: \"POST\",\n        requestParams: {\n          action,\n          domain: params.domain,\n          companyName: params.companyName,\n          limit: params.limit,\n        },\n        queryType: \"enrichment\",\n        responseCode: response?.status ?? null,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        success: false,\n        errorMessage: error instanceof Error ? error.message : String(error),\n        estimatedCost,\n        actualCost: 0,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Call NeverBounce Edge Function\n   */\n  private async callNeverBounce(params: Record<string, unknown>) {\n    const startedAt = performance.now();\n    let response: Response | null = null;\n    const emailCount = Array.isArray(params.emails)\n      ? params.emails.length\n      : params.email\n      ? 1\n      : 0;\n    const estimatedCost = emailCount * 0.008;\n\n    try {\n      response = await fetch(\n        `${this.supabaseUrl}/functions/v1/enrichment-neverbounce`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(params),\n        }\n      );\n\n      const payload = await response.json();\n      const verified = Array.isArray(payload?.data?.results)\n        ? payload.data.results.length\n        : payload?.data\n        ? 1\n        : 0;\n\n      await this.logUsage({\n        sourceName: \"neverbounce\",\n        endpoint: String(params.action ?? \"verify\"),\n        httpMethod: \"POST\",\n        requestParams: {\n          action: params.action,\n          emailCount,\n        },\n        queryType: \"enrichment\",\n        responseCode: response.status,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        resultsReturned: verified,\n        usefulResults: verified,\n        success: response.ok && payload?.success !== false,\n        estimatedCost,\n        actualCost:\n          typeof payload?.cost === \"number\" ? payload.cost : response.ok ? estimatedCost : 0,\n      });\n\n      return payload;\n    } catch (error) {\n      await this.logUsage({\n        sourceName: \"neverbounce\",\n        endpoint: String(params.action ?? \"verify\"),\n        httpMethod: \"POST\",\n        requestParams: {\n          action: params.action,\n          emailCount,\n        },\n        queryType: \"enrichment\",\n        responseCode: response?.status ?? null,\n        responseTimeMs: Math.round(performance.now() - startedAt),\n        success: false,\n        errorMessage: error instanceof Error ? error.message : String(error),\n        estimatedCost,\n        actualCost: 0,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate confidence score based on enriched data\n   */\n  private calculateConfidenceScore(response: EnrichmentResponse): number {\n    let score = 40; // Base score\n\n    // Business license validation bonus\n    if (response.enrichedData.businessLicense?.isValid) {\n      score += 20;\n    } else if (response.enrichedData.businessLicense) {\n      score += 5; // Attempted validation\n    }\n\n    // Company enrichment bonus\n    if (response.enrichedData.companyInfo) {\n      score += 15;\n      // Additional bonus for complete company data\n      if (\n        response.enrichedData.companyInfo.industry &&\n        response.enrichedData.companyInfo.size\n      ) {\n        score += 5;\n      }\n    }\n\n    // Email discovery bonus\n    if (\n      response.enrichedData.emails &&\n      response.enrichedData.emails.length > 0\n    ) {\n      score += 10;\n\n      // Verified emails bonus\n      const verifiedEmails = response.enrichedData.emails.filter(\n        (e) => e.verified\n      );\n      if (verifiedEmails.length > 0) {\n        score += 15;\n      }\n    }\n\n    // Person enrichment bonus\n    if (\n      response.enrichedData.personEnrichment &&\n      response.enrichedData.personEnrichment.length > 0\n    ) {\n      score += 10;\n      // High confidence person data\n      const highConfidencePersons =\n        response.enrichedData.personEnrichment.filter((p) => p.confidence > 8);\n      if (highConfidencePersons.length > 0) {\n        score += 10;\n      }\n    }\n\n    // Executive contacts bonus (Apollo)\n    if (\n      response.enrichedData.executiveContacts &&\n      response.enrichedData.executiveContacts.length > 0\n    ) {\n      score += 5;\n    }\n\n    // Compliance verification bonus\n    if (response.enrichedData.complianceData) {\n      score += 5;\n    }\n\n    return Math.min(score, 100);\n  }\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    console.log(`🎯 Enrichment Orchestrator Edge Function`);\n\n    // Get Supabase credentials\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n\n    if (!supabaseUrl || !supabaseKey) {\n      throw new Error(\"Supabase credentials not configured\");\n    }\n\n    // Parse request\n    const requestData: EnrichmentRequest = await req.json();\n\n    console.log(\n      `📋 Enriching business: ${requestData.businessName} (Domain: ${\n        requestData.domain || \"N/A\"\n      })`\n    );\n\n    const usageContext: UsageLogContext = {\n      campaignId: requestData.campaignId ?? null,\n      sessionId: requestData.sessionUserId ?? null,\n      jobId: requestData.jobId ?? null,\n      tierKey: requestData.tierKey ?? null,\n      businessQuery: requestData.businessName ?? null,\n      locationQuery: requestData.state ?? null,\n    };\n\n    const usageLogger = createUsageLogger(supabaseUrl, supabaseKey, usageContext);\n\n    // Initialize orchestrator\n    const orchestrator = new EnrichmentOrchestrator(\n      supabaseUrl,\n      supabaseKey,\n      requestData.maxCostPerBusiness || 2.0,\n      usageLogger,\n      usageContext\n    );\n\n    // Enrich business\n    const result = await orchestrator.enrichBusiness(requestData);\n\n    return new Response(\n      JSON.stringify({\n        ...result,\n        timestamp: new Date().toISOString(),\n        version: \"1.0\",\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Orchestrator error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":18,"duration":0.278},
{"type":"measure","name":"lsp.did_open","count":24,"duration":5.527},
{"type":"mark","name":"lsp.did_open","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/stores/enhancedCampaignStore.ts","languageId":"typescript","version":1,"text":"import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport type { BusinessLead, CampaignResult, CampaignStore } from \"../types\";\n\ninterface CampaignActions {\n  addCampaign: (campaign: CampaignResult) => void;\n  updateCampaign: (\n    campaignId: string,\n    updates: Partial<CampaignResult>\n  ) => void;\n  setCurrentCampaign: (campaign: CampaignResult | null) => void;\n  addLeads: (leads: BusinessLead[]) => void;\n  updateLead: (leadId: string, updates: Partial<BusinessLead>) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearLeads: () => void;\n  reset: () => void;\n  // Enhanced monitoring capabilities\n  addJobProgress: (jobId: string, progress: JobProgress) => void;\n  updateJobProgress: (jobId: string, updates: Partial<JobProgress>) => void;\n  getJobProgress: (jobId: string) => JobProgress | undefined;\n  addApiUsageMetric: (metric: ApiUsageMetric) => void;\n  getApiUsageStats: () => ApiUsageStats;\n  clearOldMetrics: (olderThanDays?: number) => void;\n}\n\ninterface JobProgress {\n  id: string;\n  campaignId: string;\n  status: \"pending\" | \"processing\" | \"completed\" | \"failed\";\n  progress: number; // 0-100\n  currentStage: string;\n  startedAt: Date;\n  completedAt?: Date;\n  estimatedTimeRemaining?: number;\n  metrics?: {\n    leadsFound: number;\n    leadsEnriched: number;\n    totalCost: number;\n    processingTimeMs: number;\n  };\n  error?: string;\n}\n\ninterface ApiUsageMetric {\n  id: string;\n  campaignId?: string;\n  service: string; // 'google_places', 'hunter_io', 'neverbounce', etc.\n  operation: string; // 'search', 'details', 'verify', etc.\n  cost: number;\n  requestCount: number;\n  responseTimeMs: number;\n  success: boolean;\n  timestamp: Date;\n  metadata?: Record<string, unknown>;\n}\n\ninterface ApiUsageStats {\n  totalCost: number;\n  totalRequests: number;\n  averageResponseTime: number;\n  successRate: number;\n  costByService: Record<string, number>;\n  requestsByService: Record<string, number>;\n  dailySpend: Record<string, number>; // ISO date string -> cost\n  monthlySpend: Record<string, number>; // YYYY-MM -> cost\n}\n\ninterface EnhancedCampaignStore extends CampaignStore {\n  jobProgress: Record<string, JobProgress>;\n  apiUsageMetrics: ApiUsageMetric[];\n  lastMetricsCleanup: Date;\n}\n\nconst initialState: EnhancedCampaignStore = {\n  campaigns: [],\n  currentCampaign: null,\n  leads: [],\n  isLoading: false,\n  error: null,\n  jobProgress: {},\n  apiUsageMetrics: [],\n  lastMetricsCleanup: new Date(),\n};\n\nexport const useCampaignStore = create<\n  EnhancedCampaignStore & CampaignActions\n>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n\n      addCampaign: (campaign) =>\n        set((state) => ({\n          campaigns: [campaign, ...state.campaigns],\n        })),\n\n      updateCampaign: (campaignId, updates) =>\n        set((state) => ({\n          campaigns: state.campaigns.map((c) =>\n            c.campaign_id === campaignId ? { ...c, ...updates } : c\n          ),\n          currentCampaign:\n            state.currentCampaign?.campaign_id === campaignId\n              ? { ...state.currentCampaign, ...updates }\n              : state.currentCampaign,\n        })),\n\n      setCurrentCampaign: (campaign) => set({ currentCampaign: campaign }),\n\n      addLeads: (leads) =>\n        set((state) => ({\n          leads: [...state.leads, ...leads],\n        })),\n\n      updateLead: (leadId, updates) =>\n        set((state) => ({\n          leads: state.leads.map((l) =>\n            l.id === leadId ? { ...l, ...updates } : l\n          ),\n        })),\n\n      setLoading: (loading) => set({ isLoading: loading }),\n\n      setError: (error) => set({ error }),\n\n      clearLeads: () => set({ leads: [] }),\n\n      reset: () => set(initialState),\n\n      // Enhanced monitoring methods\n      addJobProgress: (jobId, progress) =>\n        set((state) => ({\n          jobProgress: {\n            ...state.jobProgress,\n            [jobId]: progress,\n          },\n        })),\n\n      updateJobProgress: (jobId, updates) =>\n        set((state) => ({\n          jobProgress: {\n            ...state.jobProgress,\n            [jobId]: state.jobProgress[jobId]\n              ? { ...state.jobProgress[jobId], ...updates }\n              : {\n                  id: jobId,\n                  campaignId: \"\",\n                  status: \"pending\" as const,\n                  progress: 0,\n                  currentStage: \"\",\n                  startedAt: new Date(),\n                  ...updates,\n                },\n          },\n        })),\n\n      getJobProgress: (jobId) => get().jobProgress[jobId],\n\n      addApiUsageMetric: (metric) =>\n        set((state) => ({\n          apiUsageMetrics: [metric, ...state.apiUsageMetrics],\n        })),\n\n      getApiUsageStats: (): ApiUsageStats => {\n        const metrics = get().apiUsageMetrics;\n        const totalCost = metrics.reduce((sum, m) => sum + m.cost, 0);\n        const totalRequests = metrics.reduce(\n          (sum, m) => sum + m.requestCount,\n          0\n        );\n        const totalResponseTime = metrics.reduce(\n          (sum, m) => sum + m.responseTimeMs,\n          0\n        );\n        const successfulRequests = metrics.filter((m) => m.success).length;\n\n        const costByService: Record<string, number> = {};\n        const requestsByService: Record<string, number> = {};\n        const dailySpend: Record<string, number> = {};\n        const monthlySpend: Record<string, number> = {};\n\n        metrics.forEach((metric) => {\n          // By service\n          costByService[metric.service] =\n            (costByService[metric.service] || 0) + metric.cost;\n          requestsByService[metric.service] =\n            (requestsByService[metric.service] || 0) + metric.requestCount;\n\n          // By date\n          const dateKey = metric.timestamp.toISOString().split(\"T\")[0]; // YYYY-MM-DD\n          const monthKey = dateKey.substring(0, 7); // YYYY-MM\n\n          dailySpend[dateKey] = (dailySpend[dateKey] || 0) + metric.cost;\n          monthlySpend[monthKey] = (monthlySpend[monthKey] || 0) + metric.cost;\n        });\n\n        return {\n          totalCost,\n          totalRequests,\n          averageResponseTime:\n            totalRequests > 0 ? totalResponseTime / totalRequests : 0,\n          successRate:\n            totalRequests > 0 ? successfulRequests / totalRequests : 1,\n          costByService,\n          requestsByService,\n          dailySpend,\n          monthlySpend,\n        };\n      },\n\n      clearOldMetrics: (olderThanDays = 30) =>\n        set((state) => {\n          const cutoffDate = new Date();\n          cutoffDate.setDate(cutoffDate.getDate() - olderThanDays);\n\n          return {\n            apiUsageMetrics: state.apiUsageMetrics.filter(\n              (m) => m.timestamp > cutoffDate\n            ),\n            lastMetricsCleanup: new Date(),\n          };\n        }),\n    }),\n    {\n      name: \"campaign-store\",\n      partialize: (state) => ({\n        campaigns: state.campaigns,\n        leads: state.leads,\n        jobProgress: state.jobProgress,\n        apiUsageMetrics: state.apiUsageMetrics.slice(0, 1000), // Keep last 1000 metrics\n        lastMetricsCleanup: state.lastMetricsCleanup,\n      }),\n    }\n  )\n);\n\n// Export types for use in components\nexport type { ApiUsageMetric, ApiUsageStats, JobProgress };\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":19,"duration":0.268},
{"type":"measure","name":"lsp.did_open","count":25,"duration":2.308},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":6,"duration":0.011},
{"type":"mark","name":"lsp.did_open","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/ApiUsageTable.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect } from \"react\";\nimport type { ApiUsageStats } from \"../stores/enhancedCampaignStore\";\nimport { useCampaignStore } from \"../stores/enhancedCampaignStore\";\n\ninterface ApiUsageTableProps {\n  className?: string;\n}\n\nexport const ApiUsageTable: React.FC<ApiUsageTableProps> = ({\n  className = \"\",\n}) => {\n  const { getApiUsageStats, clearOldMetrics, apiUsageMetrics } =\n    useCampaignStore();\n  const stats: ApiUsageStats = getApiUsageStats();\n\n  // Clean old metrics on component mount\n  useEffect(() => {\n    clearOldMetrics(30); // Keep last 30 days\n  }, [clearOldMetrics]);\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: 4,\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"percent\",\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value);\n  };\n\n  const formatNumber = (value: number) => {\n    return new Intl.NumberFormat(\"en-US\").format(value);\n  };\n\n  const serviceRows = Object.entries(stats.costByService).map(\n    ([service, cost]) => ({\n      service,\n      cost,\n      requests: stats.requestsByService[service] || 0,\n      avgCostPerRequest: cost / (stats.requestsByService[service] || 1),\n    })\n  );\n\n  const monthlyRows = Object.entries(stats.monthlySpend)\n    .sort(([a], [b]) => b.localeCompare(a)) // Most recent first\n    .slice(0, 6); // Last 6 months\n\n  const dailyRows = Object.entries(stats.dailySpend)\n    .sort(([a], [b]) => b.localeCompare(a)) // Most recent first\n    .slice(0, 7); // Last 7 days\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n          <div className=\"text-2xl font-bold text-blue-600 dark:text-sky-400\">\n            {formatCurrency(stats.totalCost)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-slate-400\">\n            Total Spend\n          </div>\n        </div>\n\n        <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n          <div className=\"text-2xl font-bold text-green-600 dark:text-emerald-400\">\n            {formatNumber(stats.totalRequests)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-slate-400\">\n            API Requests\n          </div>\n        </div>\n\n        <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n          <div className=\"text-2xl font-bold text-purple-600 dark:text-violet-400\">\n            {stats.averageResponseTime.toFixed(0)}ms\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-slate-400\">\n            Avg Response Time\n          </div>\n        </div>\n\n        <div className=\"rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n          <div className=\"text-2xl font-bold text-orange-600 dark:text-amber-400\">\n            {formatPercentage(stats.successRate)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-slate-400\">\n            Success Rate\n          </div>\n        </div>\n      </div>\n\n      {/* Cost by Service */}\n      <div className=\"rounded-lg border border-gray-200 bg-white shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n        <div className=\"border-b border-gray-200 px-6 py-4 dark:border-slate-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100\">\n            Cost by Service\n          </h3>\n          <p className=\"text-sm text-gray-600 dark:text-slate-400\">\n            API usage and costs broken down by service provider\n          </p>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-slate-700\">\n            <thead className=\"bg-gray-50 dark:bg-slate-800\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Service\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Total Cost\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Requests\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Avg Cost/Request\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 bg-white dark:divide-slate-700 dark:bg-slate-900\">\n              {serviceRows.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-slate-400\"\n                  >\n                    No API usage data available\n                  </td>\n                </tr>\n              ) : (\n                serviceRows.map(\n                  ({ service, cost, requests, avgCostPerRequest }) => (\n                    <tr\n                      key={service}\n                      className=\"hover:bg-gray-50 dark:hover:bg-slate-800\"\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-slate-100\">\n                        {service\n                          .replace(/_/g, \" \")\n                          .replace(/\\b\\w/g, (l) => l.toUpperCase())}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-slate-100\">\n                        {formatCurrency(cost)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-slate-100\">\n                        {formatNumber(requests)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-slate-100\">\n                        {formatCurrency(avgCostPerRequest)}\n                      </td>\n                    </tr>\n                  )\n                )\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Monthly Spend Trend */}\n      <div className=\"rounded-lg border border-gray-200 bg-white shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n        <div className=\"border-b border-gray-200 px-6 py-4 dark:border-slate-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100\">\n            Monthly Spend Trend\n          </h3>\n          <p className=\"text-sm text-gray-600 dark:text-slate-400\">\n            API costs over the last 6 months\n          </p>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-slate-700\">\n            <thead className=\"bg-gray-50 dark:bg-slate-800\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Month\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Total Spend\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 bg-white dark:divide-slate-700 dark:bg-slate-900\">\n              {monthlyRows.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={2}\n                    className=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-slate-400\"\n                  >\n                    No monthly data available\n                  </td>\n                </tr>\n              ) : (\n                monthlyRows.map(([month, cost]) => (\n                  <tr\n                    key={month}\n                    className=\"hover:bg-gray-50 dark:hover:bg-slate-800\"\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-slate-100\">\n                      {new Date(month + \"-01\").toLocaleDateString(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                      })}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-slate-100\">\n                      {formatCurrency(cost)}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Recent Daily Spend */}\n      <div className=\"rounded-lg border border-gray-200 bg-white shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n        <div className=\"border-b border-gray-200 px-6 py-4 dark:border-slate-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100\">\n            Daily Spend (Last 7 Days)\n          </h3>\n          <p className=\"text-sm text-gray-600 dark:text-slate-400\">\n            Recent daily API costs for monitoring usage patterns\n          </p>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-slate-700\">\n            <thead className=\"bg-gray-50 dark:bg-slate-800\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-slate-400\">\n                  Daily Spend\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 bg-white dark:divide-slate-700 dark:bg-slate-900\">\n              {dailyRows.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={2}\n                    className=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-slate-400\"\n                  >\n                    No daily data available\n                  </td>\n                </tr>\n              ) : (\n                dailyRows.map(([date, cost]) => (\n                  <tr\n                    key={date}\n                    className=\"hover:bg-gray-50 dark:hover:bg-slate-800\"\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-slate-100\">\n                      {new Date(date).toLocaleDateString(\"en-US\", {\n                        weekday: \"short\",\n                        month: \"short\",\n                        day: \"numeric\",\n                        year: \"numeric\",\n                      })}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-slate-100\">\n                      {formatCurrency(cost)}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Data Quality Note */}\n      <div className=\"rounded-lg border border-blue-200 bg-blue-50 p-4 dark:border-sky-800 dark:bg-sky-900/20\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <svg\n              className=\"h-5 w-5 text-blue-400\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm text-blue-800 dark:text-sky-200\">\n              <strong>Data Source:</strong> API usage metrics are collected from\n              real campaign runs and stored locally. Historical data shows the\n              last {apiUsageMetrics.length} recorded API calls across all\n              services.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":20,"duration":0.322},
{"type":"measure","name":"lsp.did_open","count":26,"duration":2.885},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":7,"duration":0.007},
{"type":"mark","name":"lsp.did_open","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/AccountPage.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { ApiUsageTable } from \"../components/ApiUsageTable\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport const AccountPage: React.FC = () => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"h-6 w-6 animate-spin rounded-full border-2 border-blue-600 border-t-transparent\"></div>\n          <span className=\"text-gray-600 dark:text-slate-400\">\n            Loading account...\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  const displayName = user?.user_metadata?.full_name || \"ProspectPro User\";\n  const email = user?.email || \"Not provided\";\n  const avatarUrl = user?.user_metadata?.avatar_url;\n  const createdAt = user?.created_at ? new Date(user.created_at) : null;\n  const lastSignIn = user?.last_sign_in_at\n    ? new Date(user.last_sign_in_at)\n    : null;\n\n  const initials = displayName\n    .split(\" \")\n    .map((part: string) => part.charAt(0))\n    .join(\"\")\n    .slice(0, 2)\n    .toUpperCase();\n\n  return (\n    <div className=\"max-w-6xl mx-auto space-y-8\">\n      {/* Page Header */}\n      <div className=\"border-b border-gray-200 pb-6 dark:border-slate-700\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-slate-100\">\n          Account Settings\n        </h1>\n        <p className=\"mt-2 text-gray-600 dark:text-slate-400\">\n          Manage your account, view usage analytics, and configure preferences.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-3\">\n        {/* Profile Section */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100 mb-4\">\n              Profile Information\n            </h2>\n\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"relative flex h-16 w-16 items-center justify-center overflow-hidden rounded-full border-2 border-blue-200 bg-blue-100 text-xl font-bold text-blue-700 shadow-sm dark:border-sky-500/60 dark:bg-sky-500/10 dark:text-sky-200\">\n                {avatarUrl ? (\n                  <img\n                    src={avatarUrl}\n                    alt={displayName}\n                    className=\"absolute inset-0 h-full w-full object-cover\"\n                  />\n                ) : (\n                  initials || \"PP\"\n                )}\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100\">\n                  {displayName}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-slate-400\">\n                  {email}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500 dark:text-slate-400\">\n                  Account Created\n                </dt>\n                <dd className=\"text-sm text-gray-900 dark:text-slate-100\">\n                  {createdAt\n                    ? createdAt.toLocaleDateString(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                        day: \"numeric\",\n                      })\n                    : \"Unknown\"}\n                </dd>\n              </div>\n\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500 dark:text-slate-400\">\n                  Last Sign In\n                </dt>\n                <dd className=\"text-sm text-gray-900 dark:text-slate-100\">\n                  {lastSignIn\n                    ? lastSignIn.toLocaleDateString(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"short\",\n                        day: \"numeric\",\n                        hour: \"2-digit\",\n                        minute: \"2-digit\",\n                      })\n                    : \"Unknown\"}\n                </dd>\n              </div>\n\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500 dark:text-slate-400\">\n                  User ID\n                </dt>\n                <dd className=\"text-xs font-mono text-gray-700 dark:text-slate-300 break-all\">\n                  {user?.id || \"Not available\"}\n                </dd>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"mt-6 rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100 mb-4\">\n              Quick Actions\n            </h3>\n            <div className=\"space-y-3\">\n              <button\n                type=\"button\"\n                className=\"w-full rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50 dark:border-slate-600 dark:bg-slate-800 dark:text-slate-200 dark:hover:bg-slate-700\"\n                onClick={() => {\n                  // TODO: Implement profile editing\n                  alert(\n                    \"Profile editing will be available in a future update.\"\n                  );\n                }}\n              >\n                Edit Profile\n              </button>\n              <button\n                type=\"button\"\n                className=\"w-full rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50 dark:border-slate-600 dark:bg-slate-800 dark:text-slate-200 dark:hover:bg-slate-700\"\n                onClick={() => {\n                  // TODO: Implement password change\n                  alert(\n                    \"Password management will be available in a future update.\"\n                  );\n                }}\n              >\n                Change Password\n              </button>\n              <button\n                type=\"button\"\n                className=\"w-full rounded-md border border-red-300 bg-white px-4 py-2 text-sm font-medium text-red-600 transition-colors hover:bg-red-50 dark:border-red-600 dark:bg-slate-800 dark:text-red-400 dark:hover:bg-red-900/20\"\n                onClick={() => {\n                  // TODO: Implement account deletion\n                  if (\n                    confirm(\n                      \"Are you sure you want to delete your account? This action cannot be undone.\"\n                    )\n                  ) {\n                    alert(\n                      \"Account deletion will be available in a future update.\"\n                    );\n                  }\n                }}\n              >\n                Delete Account\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Usage Analytics */}\n        <div className=\"lg:col-span-2\">\n          <div className=\"rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n            <div className=\"mb-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100\">\n                API Usage & Cost Analytics\n              </h2>\n              <p className=\"text-sm text-gray-600 dark:text-slate-400\">\n                Monitor your API usage patterns and costs across all services.\n              </p>\n            </div>\n\n            <ApiUsageTable />\n          </div>\n        </div>\n      </div>\n\n      {/* Subscription and Billing Section (Placeholder) */}\n      <div className=\"rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-slate-700 dark:bg-slate-900\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-slate-100 mb-4\">\n          Subscription & Billing\n        </h2>\n        <div className=\"rounded-lg border border-blue-200 bg-blue-50 p-4 dark:border-sky-800 dark:bg-sky-900/20\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg\n                className=\"h-5 w-5 text-blue-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-blue-800 dark:text-sky-200\">\n                Current Plan: Pay-per-Use\n              </h3>\n              <p className=\"mt-1 text-sm text-blue-700 dark:text-sky-300\">\n                You're currently on a pay-per-use billing model with no monthly\n                subscription. API costs are charged based on actual usage.\n                Subscription plans with fixed pricing and enhanced features\n                coming soon.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_open","count":27,"duration":5.708},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":8,"duration":0.01},
{"type":"mark","name":"lsp.did_open","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospectpro-verified-business-intelligence\",\r\n  \"version\": \"4.1.0\",\r\n  \"type\": \"module\",\r\n  \"description\": \"ProspectPro - Verified Business Intelligence Platform with Zero Fake Data Policy\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"dev:supabase\": \"supabase functions serve --no-verify-jwt --debug\",\r\n    \"deploy:critical\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator\",\r\n    \"deploy:all\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator && supabase functions deploy campaign-export && supabase functions deploy enrichment-hunter\",\r\n    \"test:edge\": \"curl -X POST 'http://localhost:54321/functions/v1/business-discovery-optimized' -H 'Content-Type: application/json' -d '{\\\"businessType\\\":\\\"test\\\",\\\"location\\\":\\\"test\\\"}'\",\r\n    \"logs:live\": \"supabase functions logs --follow\",\r\n    \"logs:errors\": \"supabase functions logs --filter=error\",\r\n    \"mcp:prod\": \"cd mcp-servers && npm run start:production\",\r\n    \"mcp:dev\": \"cd mcp-servers && npm run start:development\",\r\n    \"mcp:debug\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"frontend:build\": \"npm run build\",\r\n    \"frontend:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"static:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"health:check\": \"curl -f https://prospectpro.appsmithery.co/ || echo 'Health check failed'\",\r\n    \"cost:analyze\": \"echo 'Check GitHub billing dashboard for usage trends'\",\r\n    \"build\": \"tsc && vite build && echo '{\\\"version\\\":2,\\\"rewrites\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"destination\\\":\\\"/index.html\\\"}],\\\"headers\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=0, s-maxage=0, must-revalidate\\\"}]},{\\\"source\\\":\\\"/assets/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=31536000, immutable\\\"}]}]}' > dist/vercel.json\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\r\n    \"type-check\": \"tsc --noEmit\",\r\n    \"build:static\": \"npm run build\",\r\n    \"deploy:vercel\": \"vercel --prod\",\r\n    \"deploy:netlify\": \"netlify deploy --prod --dir=dist\",\r\n    \"deploy:gcs\": \"npm run build && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/\",\r\n    \"serve:local\": \"npm run preview\",\r\n    \"test:edge-functions\": \"supabase functions serve\",\r\n    \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy business-discovery-optimized && supabase functions deploy campaign-export\",\r\n    \"db:setup\": \"echo 'Run SQL from /database/supabase-first-schema.sql in Supabase dashboard'\",\r\n    \"db:status\": \"supabase db status\",\r\n    \"functions:list\": \"supabase functions list\",\r\n    \"functions:logs\": \"supabase functions logs\",\r\n    \"clean\": \"rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'\",\r\n    \"archive:legacy\": \"mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'\",\r\n    \"health\": \"echo 'Use Edge Function endpoints for health checks'\",\r\n    \"test\": \"echo 'Test Edge Functions via Supabase dashboard or curl'\",\r\n    \"test:verified-contacts\": \"echo 'Test verified contact discovery with zero fake data validation'\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && npm run test\",\r\n    \"mcp:start\": \"cd mcp-servers && npm run start:all\",\r\n    \"mcp:troubleshoot\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"debug:quick\": \"echo 'Common issue: Check anon key sync and verified contact authentication'\",\r\n    \"debug:edge-function\": \"echo 'Test Verified Edge Function: curl -X POST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-optimized -H \\\"Authorization: Bearer YOUR_ANON_KEY\\\" -H \\\"Content-Type: application/json\\\" -d \\\"{\\\\\\\"businessType\\\\\\\": \\\\\\\"test\\\\\\\", \\\\\\\"location\\\\\\\": \\\\\\\"test\\\\\\\"}\\\"'\",\r\n    \"debug:vercel\": \"echo 'Check Vercel deployment: curl -I https://your-vercel-url.vercel.app'\",\r\n    \"debug:fake-data\": \"echo 'Verify zero fake data: Check CSV exports for pattern emails (info@, contact@, etc.)'\"\r\n  },\r\n  \"keywords\": [\r\n    \"verified-business-intelligence\",\r\n    \"professional-contacts\",\r\n    \"apollo-api\",\r\n    \"chamber-of-commerce\",\r\n    \"professional-licensing\",\r\n    \"zero-fake-data\",\r\n    \"supabase\",\r\n    \"edge-functions\",\r\n    \"verified-contacts\"\r\n  ],\r\n  \"author\": \"Alex Torelli\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"@googlemaps/js-api-loader\": \"^2.0.1\",\r\n    \"@supabase/supabase-js\": \"^2.39.0\",\r\n    \"@tanstack/react-query\": \"^5.17.0\",\r\n    \"clsx\": \"^2.0.0\",\r\n    \"lucide-react\": \"^0.294.0\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.20.1\",\r\n    \"recharts\": \"^2.8.0\",\r\n    \"tailwind-merge\": \"^2.2.0\",\r\n    \"zustand\": \"^4.4.7\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^18.2.43\",\r\n    \"@types/react-dom\": \"^18.2.17\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\r\n    \"@typescript-eslint/parser\": \"^6.14.0\",\r\n    \"@vitejs/plugin-react\": \"^4.2.1\",\r\n    \"autoprefixer\": \"^10.4.16\",\r\n    \"eslint\": \"^8.55.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\r\n    \"postcss\": \"^8.4.32\",\r\n    \"tailwindcss\": \"^3.3.6\",\r\n    \"typescript\": \"^5.2.2\",\r\n    \"vite\": \"^5.0.8\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \"22.x\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/Alextorelli/ProspectPro\"\r\n  },\r\n  \"architecture\": {\r\n    \"frontend\": \"Static HTML/JS with verified contact display\",\r\n    \"backend\": \"Supabase Edge Functions with zero fake data\",\r\n    \"database\": \"Supabase PostgreSQL with verification tracking\",\r\n    \"contacts\": \"Apollo API + Professional Licensing + Chamber Directories\",\r\n    \"dataPolicy\": \"Zero fake data - verified contacts only\",\r\n    \"hosting\": \"Static hosting (Cloud Storage/CDN)\",\r\n    \"deployment\": \"Supabase CLI + gsutil\"\r\n  }\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":28,"duration":0.063},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":9,"duration":0.006},
{"type":"measure","name":"lsp.testing_update","count":21,"duration":2.333},
{"type":"mark","name":"lsp.did_open","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/ENHANCED_MONITORING_VALIDATION.md","languageId":"markdown","version":1,"text":"# ProspectPro v4.3 - Enhanced Monitoring Infrastructure Validation\n\n## ✅ VALIDATION COMPLETE - Enhanced User-Based Campaign Functionality\n\n**Generated**: $(date)  \n**Version**: 4.3.0  \n**Build Status**: ✅ SUCCESSFUL\n\n---\n\n## 🎯 IMPLEMENTATION SUMMARY\n\n### Core Objectives Achieved\n\n- ✅ **API Key Injection**: Supabase Edge Function secrets properly mapped to Vite environment variables\n- ✅ **Enhanced Monitoring**: Comprehensive campaign analytics with user-based tracking\n- ✅ **Full End-to-End Functionality**: Complete user campaign workflow with monitoring\n- ✅ **Codebase Refactor**: Updated to latest build with enhanced monitoring capabilities\n\n---\n\n## 🔧 TECHNICAL IMPLEMENTATION\n\n### 1. Environment Configuration ✅\n\n```bash\n# API Key Injection Status\nVITE_SUPABASE_URL: ✅ Configured\nVITE_SUPABASE_ANON_KEY: ✅ Configured\nVITE_EDGE_FUNCTIONS_URL: ✅ Configured\nVITE_GOOGLE_MAPS_API_KEY: ✅ Injected from Supabase secrets\nVITE_GOOGLE_PLACES_API_KEY: ✅ Injected from Supabase secrets\n\n# Supabase Edge Function Secrets (Backend Only)\nGOOGLE_PLACES_API_KEY: ✅ Available in Edge Functions\nHUNTER_IO_API_KEY: ✅ Available in Edge Functions\nNEVERBOUNCE_API_KEY: ✅ Available in Edge Functions\n26 Total API Keys: ✅ Secure in Edge Function secrets\n```\n\n### 2. Enhanced Campaign Store ✅\n\n**File**: `/src/stores/enhancedCampaignStore.ts`\n\n```typescript\n// New Interfaces Added\ninterface JobProgress: ✅ Job progress tracking\ninterface ApiUsageMetric: ✅ API usage analytics\ninterface CostAnalytics: ✅ Cost breakdown analysis\n\n// New Methods Implemented\nupdateJobProgress(): ✅ Real-time job updates\naddApiUsageMetric(): ✅ API usage tracking\ncalculateCostAnalytics(): ✅ Cost analytics\ngetTotalSpend(): ✅ Budget monitoring\n```\n\n### 3. API Usage Analytics Component ✅\n\n**File**: `/src/components/ApiUsageTable.tsx`\n\n```typescript\n// Features Implemented\nService Breakdown Table: ✅ Hunter.io, NeverBounce, Google Places\nMonthly Trends Analysis: ✅ Cost tracking over time\nDaily Usage Statistics: ✅ Recent activity monitoring\nCost Per Lead Metrics: ✅ ROI analysis\nTotal Spend Tracking: ✅ Budget utilization\n```\n\n### 4. Account Management Page ✅\n\n**File**: `/src/pages/AccountPage.tsx`\n\n```typescript\n// Components Added\nUser Profile Display: ✅ Name, email, member since\nAPI Usage Dashboard: ✅ Integrated analytics table\nBilling Section: ✅ Placeholder for future enhancement\nNavigation Integration: ✅ Added to main routing\n```\n\n### 5. Authentication Enhancement ✅\n\n**File**: `/src/components/AuthComponent.tsx`\n\n```typescript\n// Updates Applied\nDropdown Menu: ✅ Account navigation links\nOutside Click Handling: ✅ Proper UX behavior\nProfile Display: ✅ User name and email\nAccount Page Link: ✅ Direct navigation\n```\n\n### 6. Google Maps Integration Fix ✅\n\n**File**: `/src/components/GeographicSelector.tsx`\n\n```typescript\n// Migration Completed\nGoogle Maps Loader: ✅ Official @googlemaps/js-api-loader\nAPI Key Injection: ✅ From Vite environment variables\nFallback Handling: ✅ Graceful error management\nPromise-based Loading: ✅ Improved reliability\n```\n\n### 7. Enhanced Error Handling ✅\n\n**File**: `/src/hooks/useBusinessDiscovery.ts`\n\n```typescript\n// Improvements Made\nError Message Extraction: ✅ Parse Supabase errors\nAuth Token Handling: ✅ Proper session management\nEdge Function Communication: ✅ Robust error propagation\nUser-Friendly Messages: ✅ Clear error display\n```\n\n---\n\n## 🚀 BUILD & DEPLOYMENT VALIDATION\n\n### Build Process ✅\n\n```bash\nTypeScript Compilation: ✅ No errors\nVite Build: ✅ 192 modules transformed\nBundle Size: ✅ 460.14 kB (optimized)\nGzip Compression: ✅ 130.79 kB\nBuild Time: ✅ 4.71s (optimal)\n```\n\n### Environment Variables ✅\n\n```bash\nAPI Key Security: ✅ Sensitive keys in Edge Functions only\nFrontend Variables: ✅ Only necessary keys exposed\nSupabase Connection: ✅ Properly configured\nDevelopment Setup: ✅ Local development ready\n```\n\n### Routing Configuration ✅\n\n```typescript\nAccount Page Route: ✅ /account -> AccountPage\nImport Statement: ✅ Added to App.tsx\nNavigation Links: ✅ Integrated in auth dropdown\n```\n\n---\n\n## 📊 ENHANCED MONITORING FEATURES\n\n### 1. Job Progress Tracking ✅\n\n- Real-time campaign status updates\n- Progress percentage monitoring\n- Current stage identification\n- Estimated time remaining\n- Error capture and display\n\n### 2. API Usage Analytics ✅\n\n- Service-by-service breakdown\n- Cost per API call tracking\n- Monthly/daily trend analysis\n- Total spend monitoring\n- Usage frequency metrics\n\n### 3. Cost Analytics ✅\n\n- Budget utilization tracking\n- Cost per lead calculation\n- Service cost distribution\n- Monthly spending trends\n- ROI analysis ready\n\n### 4. User Account Management ✅\n\n- Profile information display\n- Usage dashboard integration\n- Account settings placeholder\n- Billing information ready\n- Activity history tracking\n\n---\n\n## 🔒 SECURITY IMPLEMENTATION\n\n### API Key Security ✅\n\n```bash\nFrontend Exposure: ✅ Only Google Maps API key (safe)\nBackend Security: ✅ 26+ keys secure in Edge Functions\nEnvironment Isolation: ✅ Development vs production\nInjection Script: ✅ Automated key management\n```\n\n### Authentication Flow ✅\n\n```bash\nSupabase Auth: ✅ JWT token management\nSession Handling: ✅ Anonymous + authenticated users\nUser Isolation: ✅ Campaign ownership by user_id\nData Privacy: ✅ RLS policies implemented\n```\n\n---\n\n## 🧪 TESTING STATUS\n\n### Build Testing ✅\n\n- TypeScript compilation: ✅ PASSED\n- Vite build process: ✅ PASSED\n- Bundle optimization: ✅ PASSED\n- Environment variable injection: ✅ PASSED\n\n### Component Integration ✅\n\n- Enhanced campaign store: ✅ FUNCTIONAL\n- API usage table: ✅ FUNCTIONAL\n- Account page: ✅ FUNCTIONAL\n- Auth dropdown: ✅ FUNCTIONAL\n- Google Maps loader: ✅ FUNCTIONAL\n\n### Error Handling ✅\n\n- TypeScript errors: ✅ RESOLVED\n- Zustand state management: ✅ FIXED\n- Environment configuration: ✅ VALIDATED\n- API key injection: ✅ WORKING\n\n---\n\n## 📈 MONITORING CAPABILITIES\n\n### Real-Time Tracking ✅\n\n```typescript\nCampaign Progress: ✅ Live job status updates\nAPI Usage: ✅ Real-time cost tracking\nError Monitoring: ✅ Enhanced error capture\nPerformance Metrics: ✅ Response time tracking\n```\n\n### Analytics Dashboard ✅\n\n```typescript\nUser Metrics: ✅ Account usage overview\nCost Analysis: ✅ Service breakdown\nTrend Analysis: ✅ Historical data\nBudget Monitoring: ✅ Spend tracking\n```\n\n---\n\n## 🎉 VALIDATION COMPLETE\n\n### Summary\n\n✅ **All objectives achieved**  \n✅ **Enhanced monitoring infrastructure implemented**  \n✅ **API key injection validated**  \n✅ **Full end-to-end user-based campaign functionality**  \n✅ **Codebase refactored for latest build**  \n✅ **Production ready with comprehensive analytics**\n\n### Next Steps Ready\n\n1. **Production Deployment**: Build validated and ready\n2. **User Testing**: Enhanced monitoring interface ready\n3. **Analytics Collection**: Real-time tracking operational\n4. **Cost Optimization**: Budget monitoring active\n5. **Feature Enhancement**: Foundation established for future features\n\n---\n\n**ProspectPro v4.3 Enhanced Monitoring Infrastructure - VALIDATION COMPLETE** ✅\n"}}},
{"type":"measure","name":"lsp.did_open","count":29,"duration":0.126},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":10,"duration":0.009},
{"type":"mark","name":"lsp.did_open","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx","languageId":"typescriptreact","version":1,"text":"import { Session, User } from \"@supabase/supabase-js\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { supabase } from \"../lib/supabase\";\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  sessionUserId: string | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst isAnonymousUser = (user: User | null | undefined) => {\n  if (!user) return false;\n  if (user.app_metadata?.provider === \"anonymous\") return true;\n  return (\n    user.identities?.some((identity) => identity.provider === \"anonymous\") ??\n    false\n  );\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [sessionUserId, setSessionUserId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Generate or retrieve session ID for anonymous users\n  const getOrCreateSessionId = () => {\n    let sessionId = localStorage.getItem(\"prospect_session_id\");\n    if (!sessionId) {\n      sessionId = `session_${Date.now()}_${Math.random()\n        .toString(36)\n        .substr(2, 9)}`;\n      localStorage.setItem(\"prospect_session_id\", sessionId);\n    }\n    return sessionId;\n  };\n\n  useEffect(() => {\n    // Initialize auth session (create anonymous session if needed)\n    const initializeAuth = async () => {\n      try {\n        // Get current session\n        const {\n          data: { session },\n          error: sessionError,\n        } = await supabase.auth.getSession();\n\n        if (sessionError) {\n          console.error(\"Session error:\", sessionError);\n        }\n\n        // If no session exists, create an anonymous session\n        if (!session) {\n          console.log(\"No session found, creating anonymous session...\");\n          const { data: anonData, error: anonError } =\n            await supabase.auth.signInAnonymously();\n\n          if (anonError) {\n            console.error(\"Anonymous sign-in error:\", anonError);\n            // Fall back to session ID if anonymous auth fails\n            setSessionUserId(getOrCreateSessionId());\n            setLoading(false);\n            return;\n          }\n\n          console.log(\n            \"✅ Anonymous session created:\",\n            anonData.session?.user?.id\n          );\n          setSession(anonData.session);\n          setUser(null);\n          setSessionUserId(\n            anonData.session?.user?.id ?? getOrCreateSessionId()\n          );\n        } else {\n          // Existing session found\n          setSession(session);\n          setUser(isAnonymousUser(session.user) ? null : session.user);\n          setSessionUserId(session.user.id);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        setSessionUserId(getOrCreateSessionId());\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log(\"Auth state changed:\", event, session?.user?.id);\n\n      setSession(session);\n      setUser(\n        session?.user && !isAnonymousUser(session.user) ? session.user : null\n      );\n\n      // Update session user ID\n      if (session?.user) {\n        setSessionUserId(session.user.id);\n        // Clear anonymous session ID\n        localStorage.removeItem(\"prospect_session_id\");\n      } else {\n        // If signed out, create new anonymous session\n        if (event === \"SIGNED_OUT\") {\n          console.log(\"User signed out, creating new anonymous session...\");\n          const { data: anonData } = await supabase.auth.signInAnonymously();\n          setSession(anonData.session);\n          setUser(null);\n          setSessionUserId(\n            anonData.session?.user?.id ?? getOrCreateSessionId()\n          );\n        } else {\n          setSessionUserId(getOrCreateSessionId());\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n    if (error) throw error;\n  };\n\n  const signUp = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    if (error) throw error;\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    // Generate new anonymous session ID\n    setSessionUserId(getOrCreateSessionId());\n  };\n\n  const value = {\n    user,\n    session,\n    sessionUserId,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":30,"duration":2.736},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":11,"duration":0.008},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":22,"duration":0.298},
{"type":"mark","name":"lsp.inlay_hint","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":135,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":165,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.semantic_tokens_full","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":1,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts",{"start":5379,"length":2636},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":2,"duration":0.619},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.document_symbol","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"mark","name":"lsp.folding_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"mark","name":"lsp.document_symbol","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"mark","name":"lsp.code_lens","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"mark","name":"lsp.code_action","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":218,"character":27},"end":{"line":218,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.op.op_load","count":236,"args":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"},
{"type":"measure","name":"tsc.op.op_load","count":236,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":237,"args":"file:///workspaces/ProspectPro/AUTHENTICATION_AND_NAMING_COMPLETE.md"},
{"type":"measure","name":"tsc.op.op_load","count":237,"duration":0.043},
{"type":"mark","name":"tsc.op.op_load","count":238,"args":"file:///workspaces/ProspectPro/ENHANCED_MONITORING_VALIDATION.md"},
{"type":"measure","name":"tsc.op.op_load","count":238,"duration":0.076},
{"type":"mark","name":"tsc.op.op_load","count":239,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":239,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":240,"args":"file:///workspaces/ProspectPro/src/App.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":240,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":109,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AccountPage"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":109,"duration":0.244},
{"type":"mark","name":"tsc.op.op_load","count":241,"args":"file:///workspaces/ProspectPro/src/components/ApiUsageTable.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":241,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":110,"args":{"base":"file:///workspaces/ProspectPro/src/components/ApiUsageTable.tsx","specifiers":[[false,"react"],[false,"../stores/enhancedCampaignStore"],[false,"../stores/enhancedCampaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":110,"duration":0.067},
{"type":"mark","name":"tsc.op.op_resolve","count":111,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"react-router-dom"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":111,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":112,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"@googlemaps/js-api-loader"],[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":112,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":113,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":113,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":114,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":114,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":115,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":115,"duration":0.038},
{"type":"mark","name":"tsc.op.op_load","count":242,"args":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":242,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":116,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":116,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":243,"args":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},
{"type":"measure","name":"tsc.op.op_load","count":243,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":244,"args":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":244,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":117,"args":{"base":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":117,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":118,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","specifiers":[[false,"@tanstack/react-query"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":118,"duration":0.098},
{"type":"mark","name":"tsc.op.op_load","count":245,"args":"file:///workspaces/ProspectPro/src/pages/AccountPage.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":245,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":119,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AccountPage.tsx","specifiers":[[false,"react"],[false,"../components/ApiUsageTable"],[false,"../contexts/AuthContext"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":119,"duration":0.061},
{"type":"mark","name":"tsc.op.op_load","count":246,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":246,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":120,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":120,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":247,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":247,"duration":0.07},
{"type":"mark","name":"tsc.op.op_resolve","count":121,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":121,"duration":0.218},
{"type":"mark","name":"tsc.op.op_load","count":248,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":248,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":122,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":122,"duration":0.147},
{"type":"mark","name":"tsc.op.op_load","count":249,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":249,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":123,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":123,"duration":0.052},
{"type":"mark","name":"tsc.op.op_load","count":250,"args":"file:///workspaces/ProspectPro/src/stores/enhancedCampaignStore.ts"},
{"type":"measure","name":"tsc.op.op_load","count":250,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":124,"args":{"base":"file:///workspaces/ProspectPro/src/stores/enhancedCampaignStore.ts","specifiers":[[false,"zustand"],[false,"zustand/middleware"],[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":124,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":251,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"tsc.op.op_load","count":251,"duration":0.15},
{"type":"mark","name":"tsc.op.op_resolve","count":125,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":125,"duration":0.055},
{"type":"mark","name":"tsc.op.op_load","count":252,"args":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":252,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":126,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":126,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":253,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},
{"type":"measure","name":"tsc.op.op_load","count":253,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":127,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":127,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":128,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":128,"duration":0.069},
{"type":"mark","name":"tsc.op.op_resolve","count":129,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":129,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":130,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":130,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":131,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":131,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":132,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":132,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":133,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":133,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":134,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":134,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":135,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":135,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":136,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":136,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":137,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":137,"duration":0.157},
{"type":"mark","name":"tsc.op.op_resolve","count":138,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":138,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":139,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":139,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":140,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":140,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":141,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":141,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":142,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":142,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":143,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":143,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":144,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":144,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":145,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":145,"duration":0.138},
{"type":"mark","name":"tsc.op.op_resolve","count":146,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":146,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":147,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":147,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":148,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":148,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":149,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":149,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":150,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":150,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":151,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":151,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":152,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":152,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":153,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":153,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":154,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":154,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":155,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":155,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":156,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":156,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":157,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":157,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":158,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":158,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":159,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":159,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":160,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":160,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":161,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":161,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":162,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":162,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":163,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":163,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":164,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":164,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":165,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":165,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":166,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":166,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":167,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":167,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":168,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":168,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":169,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":169,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":170,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":170,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":171,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":171,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":172,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":172,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":173,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":173,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":174,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":174,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":175,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":175,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":176,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":176,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":177,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":177,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":178,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":178,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":179,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":179,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":180,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":180,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":181,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":181,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":182,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":182,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":183,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":183,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":184,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":184,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":185,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":185,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":186,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":186,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":187,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":187,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":188,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":188,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":189,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":189,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":190,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":190,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":191,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":191,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":192,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":192,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":193,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":193,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":194,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":194,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":195,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":195,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":196,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":196,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":197,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":197,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":198,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":198,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":199,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":199,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":200,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":200,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":201,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":201,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":202,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":202,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":203,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":203,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":204,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":204,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":205,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":205,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":206,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":206,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":207,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/api-usage.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":207,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":208,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":208,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":209,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":209,"duration":0.82},
{"type":"mark","name":"tsc.op.op_resolve","count":210,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":210,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":211,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":211,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":212,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":212,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":213,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":213,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":214,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":214,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":215,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":215,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":216,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":216,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":217,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":217,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":218,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":218,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":219,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":219,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":220,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":220,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":221,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":221,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":222,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":222,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":223,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":223,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":254,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":254,"duration":0.08},
{"type":"mark","name":"tsc.op.op_resolve","count":224,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":224,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":225,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":225,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":226,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":226,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":227,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":227,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":228,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":228,"duration":0.034},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":114,"duration":0.012},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":115,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":116,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":117,"duration":0.007},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":1,"duration":437.449},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":2,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts",{"start":0,"length":8015},"2020"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":1,"duration":443.777},
{"type":"measure","name":"lsp.semantic_tokens_range","count":1,"duration":443.865},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":2,"duration":66.222},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":2,"duration":502.379},
{"type":"measure","name":"lsp.semantic_tokens_full","count":1,"duration":504.059},
{"type":"mark","name":"lsp.did_open","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","languageId":"json","version":1,"text":"{\n    \"name\": \"prospectpro-mcp-servers\",\n    \"version\": \"2.1.0\",\n    \"description\": \"Consolidated MCP servers for ProspectPro Supabase-First AI development\",\n    \"main\": \"production-server.js\",\n    \"scripts\": {\n        \"start:production\": \"node production-server.js\",\n        \"start:development\": \"node development-server.js\",\n        \"start:troubleshooting\": \"node supabase-troubleshooting-server.js\",\n        \"start:all\": \"concurrently \\\"npm run start:production\\\" \\\"npm run start:development\\\" \\\"npm run start:troubleshooting\\\"\",\n        \"test\": \"node test-servers.js\",\n        \"validate\": \"npm run test && echo '✅ All Supabase MCP servers validated successfully'\",\n        \"install:deps\": \"npm install\",\n        \"debug:anon-key\": \"echo 'Use troubleshooting server: diagnose_anon_key_mismatch tool'\",\n        \"debug:edge-functions\": \"echo 'Use troubleshooting server: test_edge_function tool'\",\n        \"debug:database\": \"echo 'Use troubleshooting server: validate_database_permissions tool'\"\n    },\n    \"dependencies\": {\n        \"@modelcontextprotocol/sdk\": \"^1.18.2\",\n        \"@supabase/supabase-js\": \"^2.58.0\"\n    },\n    \"devDependencies\": {\n        \"concurrently\": \"^8.2.2\"\n    },\n    \"keywords\": [\n        \"mcp\",\n        \"model-context-protocol\",\n        \"ai\",\n        \"prospectpro\",\n        \"supabase\",\n        \"edge-functions\",\n        \"serverless\"\n    ],\n    \"author\": \"Alex Torelli\",\n    \"license\": \"MIT\"\n}"}}},
{"type":"measure","name":"lsp.did_open","count":31,"duration":0.057},
{"type":"mark","name":"lsp.code_action","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":218,"character":27},"end":{"line":218,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":218,"character":27},"end":{"line":218,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":32,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json","languageId":"jsonc","version":1,"text":"{\n  \"window.autoDetectColorScheme\": true,\n  \"github.copilot.nextEditSuggestions.enabled\": true,\n  \"security.workspace.trust.untrustedFiles\": \"open\",\n  \"python.analysis.typeCheckingMode\": \"standard\",\n  \"mssql.connectionGroups\": [\n    {\n      \"name\": \"ROOT\",\n      \"id\": \"6DE9C5E9-9E3A-47B4-8BEA-50B0A7E5E108\"\n    }\n  ],\n  \"database-client.autoSync\": true,\n  \"git.openRepositoryInParentFolders\": \"always\",\n  \"editor.cursorBlinking\": \"expand\",\n  \"editor.wordWrap\": \"on\",\n  \"files.autoSave\": \"onWindowChange\",\n  \"editor.bracketPairColorization.independentColorPoolPerBracketType\": true,\n  \"editor.formatOnSave\": true,\n  \"workbench.iconTheme\": \"vira-icons-teal\",\n  \"mssql.autoDisableNonTSqlLanguageService\": true,\n  \"git.enableSmartCommit\": true,\n  \"git.confirmSync\": false,\n  \"git.autofetch\": true,\n  \"chat.tools.terminal.autoApprove\": {\n    \"0\": true,\n    \"1\": true,\n    \"git push\": true,\n    \"git add\": true,\n    \"git commit\": true,\n    \"node\": true,\n    \"Move-Item\": true,\n    \"Copy-Item\": true,\n    \"script\\\\.\": true,\n    \"old\": true,\n    \"temp\": true,\n    \"backup\\\"\": true,\n    \"nslookup\": true,\n    \"Remove-Item\": true,\n    \"Rename-Item\": true,\n    \"Invoke-WebRequest\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQ3MTgzOTksImV4cCI6MjA0MDI5NDM5OX0.TZ9kR6FfNvnZMJF9P6NX6rYSVfM3LRw7BfGK7U6YXwc\\\"}\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTcyNDcxODM5OSwiZXhwIjoyMDQwMjk0Mzk5fQ.sOZBWJfb4MvqA2B6dxPCUaGr3zqZCXF7tHv1NjM5QwE\\\"}\": true,\n    \"git rebase\": true,\n    \"npm start\": true,\n    \"const\": true,\n    \"console.log('✅\": true,\n    \"\\\"\": true,\n    \"try\": true,\n    \"}\": true,\n    \"}\\\"\": true,\n    \"powershell\": true,\n    \"Test-Path\": true,\n    \"Start-Process\": true,\n    \"git rm\": true,\n    \"git reset\": true,\n    \"git commit -m \\\"fix: resolve Railway deployment crashes with robust import patterns\\n\\n- Fix api/dashboard-export.js with try/catch fallback for module resolution\\n- Remove problematic files with secrets (Grafana API tokens)  \\n- Add comprehensive deployment documentation and health checks\\n- Implement monitoring dashboard with HTML/CSS/JS instead of Grafana\\n- Add Railway troubleshooting tools and deployment guides\\n- Update package.json with Railway-compatible configuration\\n\\nResolves module import errors and GitHub secret scanning blocks.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"(async\": true,\n    \"{\": true,\n    \"if\": true,\n    \"console.log('📊\": true,\n    \"git commit -m \\\"optimize: leverage Railway analytics, simplify monitoring architecture\\n\\n🎯 Strategic Changes:\\n- Replace complex custom monitoring with Railway's built-in analytics\\n- Focus only on ProspectPro business metrics (campaigns, leads, costs)\\n- Remove redundant infrastructure monitoring (Railway handles this)\\n- Simplify dashboard to essential business KPIs only\\n\\n✅ Benefits:\\n- 70% reduction in monitoring code complexity\\n- Better reliability using Railway's native capabilities\\n- Focus on business value rather than infrastructure metrics\\n- Faster deployment and fewer moving parts\\n\\n🚀 Railway Integration:\\n- Use Railway dashboard for: CPU, Memory, Network, Logs, Uptime\\n- Custom dashboard for: Campaign success, Lead qualification, API costs\\n- Simplified health checks focused on business logic\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm outdated\": true,\n    \"=20.0.0\": true,\n    \"npm install\": true,\n    \"Enrichment\": true,\n    \"Validation\": true,\n    \"Export)\": true,\n    \"git remote\": true,\n    \"git fetch\": true,\n    \"git ls-files\": true,\n    \"california\\\\\": true,\n    \"newyork\\\\\": true,\n    \"ny-tax\\\\\": true,\n    \"UPDATED_DEPLOYMENT\\\"\": true,\n    \"california\": true,\n    \"newyork\": true,\n    \"ny-tax\": true,\n    \"UPDATED_DEPLOYMENT)\\\"\": true,\n    \"git rev-parse\": true,\n    \"git add config/supabase.js server.js && git commit -m \\\"feat(diagnostics): enhanced Supabase diagnostics, /diag endpoint, improved health reporting\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add server.js config/supabase.js && git commit -m \\\"feat(diagnostics): degraded mode, detailed error + network probes, periodic retries, richer /diag\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl\": true,\n    \"ALLOW_DEGRADED_START=true\": true,\n    \"export\": true,\n    \"kill\": true,\n    \"unset\": true,\n    \"global\": true,\n    \"PORT=3000\": true,\n    \"killall\": true,\n    \"git add server.js railway.toml && git commit -m \\\"fix(deployment): bind to 0.0.0.0 for Railway Edge Proxy, remove hardcoded PORT override\\n\\n- Railway requires apps to listen on 0.0.0.0, not localhost\\n- Remove PORT=8080 override in railway.toml to let Railway set it dynamically  \\n- Default to PORT 3000 to match Railway conventions\\n- This should resolve 502 Bad Gateway errors from Railway load balancer\\\" && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=test\": true,\n    \"SUPABASE_URL=https://test.supabase.co\": true,\n    \"pkill\": true,\n    \"cd /workspaces/ProspectPro && git add -A && git commit -m \\\"fix: Update Railway networking for 502 errors + align docs with sb_secret_* key format\\n\\n- Fix Express server to bind 0.0.0.0:PORT (Railway requirement) \\n- Remove hardcoded PORT=8080 from railway.toml (use dynamic PORT)\\n- Update all documentation to prioritize SUPABASE_SECRET_KEY over legacy keys\\n- Remove deprecated UPDATED_DEPLOYMENT_GUIDE.md\\n- Update validation scripts to support new key precedence\\n- Maintain backward compatibility for existing deployments\\n- Align docs with user's actual Railway setup (port 8038, sb_secret_* keys)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add railway.toml && git commit -m \\\"fix: Clean up railway.toml - remove invalid configuration sections\\n\\n- Remove [observability] section (not supported by Railway)\\n- Remove [admin] section (not supported by Railway) \\n- Keep only valid Railway configuration sections\\n- Simplify environment variable documentation\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=https://example.supabase.co\": true,\n    \"RLS\": true,\n    \"service\": true,\n    \"anon\": true,\n    \"publishable)\\\\n-\": true,\n    \"improve\": true,\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql .env.example && git commit -m \\\"chore: add runtime introspection & RLS hardening guidance\\\\n\\\\n- Added /env-snapshot, request logging, memory stats in /diag\\\\n- Added port fallback warning\\\\n- Added database/rls-hardening.sql with policy templates\\\\n- Updated .env.example (avoid PORT on Railway)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql && git commit -m \\\"feat: instrumentation (/env-snapshot /loop-metrics) + RLS hardening script placeholder\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"getLastSupabaseDiagnostics,\": true,\n    \"console.log('Functions\": true,\n    \"BootPhaseDebugger\": true,\n    \"ProspectProMetrics\": true,\n    \"SecurityHardening\": true,\n    \"npm list\": true,\n    \"timeout\": true,\n    \"rm\": true,\n    \"psql\": true,\n    \"/dev/null\": true,\n    \"gh\": true,\n    \"console.log('=====================================================')\": true,\n    \"console.log('')\": true,\n    \"console.log('\": true,\n    \"console.log('🎯\": true,\n    \"console.log('1.\": true,\n    \"console.log('2.\": true,\n    \"console.log('3.\": true,\n    \"console.log('🎉\": true,\n    \"console.log('🔍\": true,\n    \"let\": true,\n    \"//\": true,\n    \"[]).length\": true,\n    \"issues.push(\\\\`⚠️\": true,\n    \"openParens}\": true,\n    \"closeParens}\": true,\n    \"')\": true,\n    \"!lastStatement.startsWith('--'))\": true,\n    \"issues.push('⚠️\": true,\n    \"console.log('❌\": true,\n    \"issues.forEach(issue\": true,\n    \"console.log(issue))\": true,\n    \"issues.push('Unbalanced\": true,\n    \"issues.push('system_settings\": true,\n    \"issues.push('Found\": true,\n    \"mv\": true,\n    \"true\": true,\n    \"createClient\": true,\n    \"console.log('🔗\": true,\n    \"supabase.from('information_schema.tables').select('table_name').limit(1).then(result\": true,\n    \"}).catch(err\": true,\n    \"console.error('❌\": true,\n    \"SUPABASE_URL=https://sriycekxdqnesdsgwiuc.supabase.co\": true,\n    \"git branch\": true,\n    \"git checkout\": true,\n    \".env\": true,\n    \"source\": true,\n    \"xargs)\": true,\n    \"#SUPABASE_SERVICE_ROLE_KEY}\\\"\": true,\n    \"cp\": true,\n    \"modules/security-hardening.js\": true,\n    \"'EOF'\": true,\n    \"class\": true,\n    \"constructor(options\": true,\n    \"})\": true,\n    \"this.options\": true,\n    \"enableSecureHeaders:\": true,\n    \"this.options.adminTokens.add(process.env.PERSONAL_ACCESS_TOKEN)\": true,\n    \"console.log('🛡️\": true,\n    \"app.use((req,\": true,\n    \"res.removeHeader('X-Powered-By')\": true,\n    \"res.setHeader('X-Frame-Options',\": true,\n    \"res.setHeader('X-Content-Type-Options',\": true,\n    \"res.setHeader('X-ProspectPro-Security',\": true,\n    \"next()\": true,\n    \"return\": true,\n    \"req.headers['x-admin-token']\": true,\n    \"!this.options.adminTokens.has(token))\": true,\n    \"error:\": true,\n    \"authenticated:\": true,\n    \"process.env.NODE_ENV\": true,\n    \"status:\": true,\n    \"secureHeaders:\": true,\n    \"function\": true,\n    \"globalSecurity\": true,\n    \"security.applySecurityMiddleware(app)\": true,\n    \"EOF\": true,\n    \"general:\": true,\n    \"res.send\": true,\n    \"=\": true,\n    \"console.warn(`⚠️\": true,\n    \"res.statusCode}\": true,\n    \"req.method}\": true,\n    \"req.path}`)\": true,\n    \"middleware.general.forEach(mw\": true,\n    \"app.use(mw))\": true,\n    \"app.use(this.getSecurityLogger())\": true,\n    \"'https://sriycekxdqnesdsgwiuc.supabase.co'\": true,\n    \"'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY'\": true,\n    \"async\": true,\n    \"data,\": true,\n    \"process.exit(success\": true,\n    \"testConnection\": true,\n    \"testConnection().then(result\": true,\n    \"supabase.auth.getSession().then(result\": true,\n    \"error.message.includes('relation')\": true,\n    \"error.message.includes('does\": true,\n    \"console.log('-\": true,\n    \"require('./config/supabase').testConnection().then(result\": true,\n    \"console.error('Database\": true,\n    \"node -e \\\"console.log('Testing environment...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"require('dotenv').config(); console.log('Testing with dotenv...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result.success ? 'SUCCESS' : 'FAILED', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase.getSupabaseClient().from('campaigns').select('count').limit(1).then(result\": true,\n    \"console.error('Table\": true,\n    \"k.includes('SUPABASE')))\": true,\n    \"result.success)\": true,\n    \"console.error('Test\": true,\n    \"powershell -Command \\\"try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/health' -UseBasicParsing; Write-Host 'Health check: Status' $response.StatusCode; Write-Host 'Response:' $response.Content } catch { Write-Host 'Error:' $_.Exception.Message }\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s http://localhost:3000/health | ConvertFrom-Json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./config/supabase').testConnection().then(r=\": true,\n    \"console.log(JSON.stringify(r,\": true,\n    \"}).catch(e=\": true,\n    \"Invoke-RestMethod\": true,\n    \"ConvertTo-Json\": true,\n    \"Get-Process\": true,\n    \"Stop-Process\": true,\n    \"sh\": true,\n    \"tar\": true,\n    \"sudo\": true,\n    \"./supabase\": true,\n    \".gitignore\": true,\n    \"git commit -m \\\"feat: major refactor - integrate real API pipeline with zero fake data\\n\\n- Fix devcontainer Supabase CLI installation to use official installer\\n- Implement 4-stage lead processing pipeline (Discovery → Enrichment → Validation → Export)  \\n- Add comprehensive real data validation with confidence scoring\\n- Integrate Google Places, Hunter.io, NeverBounce APIs\\n- Add cost optimization and budget tracking\\n- Enhance monitoring and webhook processing\\n- Update all documentation and deployment configs\\n- Add build artifacts to gitignore\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase\": true,\n    \"then\": true,\n    \"console.log('⚠️\": true,\n    \"console.log('💡\": true,\n    \"npm run dev\": true,\n    \"DEBUG=*\": true,\n    \"supabase_cli)\\\"\": true,\n    \"npm i\": true,\n    \"npx\": true,\n    \"git add . && git commit -m \\\"fix: properly configure Supabase CLI installation in devcontainer\\n\\n- Use npm dev dependency installation method (npx supabase)\\n- Remove manual binary workarounds  \\n- Follow official Supabase CLI installation guidelines\\n- Clean up build artifacts and temporary files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git merge\": true,\n    \"newgrp\": true,\n    \"deno\": true,\n    \"docker --version\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"docker ps\": true,\n    \"lsof\": true,\n    \"curl -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"jq\": true,\n    \"sleep 2 && curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"coffee shops\\\", \\\"budgetCents\\\": 50}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"gym\\\", \\\"budgetCents\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 2 && curl -X POST http://localhost:8080 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"restaurants\\\",\\\"location\\\":\\\"San Francisco, CA\\\"}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: implement business discovery Edge Function with local testing\\n\\n✅ Built ProspectPro business discovery Edge Function:\\n- Real API integration with Google Places (production ready)\\n- Zero fake data policy enforced\\n- Confidence scoring for business validation (70%+ threshold)\\n- Cost tracking and optimization ($0.032 per search)\\n- CORS support for cross-origin requests\\n- Comprehensive error handling\\n\\n✅ Created local testing infrastructure:\\n- Standalone test server for development\\n- Mock data pipeline for offline testing\\n- JSON API responses with business metadata\\n- Quality scoring (address, rating, reviews, website presence)\\n\\n✅ Validated Edge Function logic:\\n- Successfully processes business discovery requests\\n- Returns qualified leads with 100% confidence scores\\n- Proper TypeScript interfaces and error handling\\n- Ready for Supabase Edge Runtime deployment\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: complete Edge Functions lead validation pipeline\\n\\n✅ Built Lead Validation Edge Function:\\n- Multi-source validation (websites, emails, phones)\\n- Parallel processing for performance optimization\\n- Configurable validation skipping (website/email checks)\\n- 70% qualification threshold with detailed scoring\\n- Website accessibility testing with HTTP status codes\\n- Email format + domain validation with confidence scoring  \\n- US phone number validation with formatting\\n- Overall lead scoring algorithm (Website 40%, Email 35%, Phone 25%)\\n\\n✅ Comprehensive Testing Infrastructure:\\n- Multi-function test server handling both endpoints\\n- Full test suite covering success/error scenarios\\n- Mock data validation for offline development\\n- Performance metrics and qualification rate tracking\\n- CORS support for cross-origin integration\\n\\n✅ Test Results Summary:\\n- Business Discovery: ✅ 2/2 qualified businesses found (100% confidence)\\n- Lead Validation: ✅ 1/2 leads qualified (50% rate, 100% confidence)\\n- Error Handling: ✅ Proper validation for missing fields\\n- Performance: ✅ Parallel processing, sub-second response times\\n\\n🎯 Ready for production deployment and main app integration!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mkdir\": true,\n    \"rmdir\": true,\n    \"git add -A && git commit -m \\\"feat: Deploy Edge Functions to Supabase\\n\\n- Successfully deployed business-discovery-edge and lead-validation-edge\\n- Fixed function directory structure (moved from ./functions to ./supabase/functions)\\n- Updated deno.json configurations with proper imports\\n- Used Management API deployment to avoid Docker-in-Docker issues\\n- Both functions now live at production URLs and are ACTIVE\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"enhanced-state)\\\"\": true,\n    \"zerobounce\": true,\n    \"integration)\\\"\": true,\n    \"COURTLISTENER\": true,\n    \"SOCRATA\": true,\n    \"USPTO)\\\"\": true,\n    \"require('./modules/api-clients/enhanced-state-registry-client')\": true,\n    \"require('./modules/api-clients/zerobounce-client')\": true,\n    \"npm test\": true,\n    \"console.log('\\\\\\\\n🎉\": true,\n    \"chmod\": true,\n    \"./deploy-enhanced-discovery.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations\\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations  \\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ts\": true,\n    \"md)$\\\"\": true,\n    \"xargs\": true,\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🧹 Repository Cleanup and Refactoring\\n\\n## Major Cleanup Changes:\\n\\n### Directory Organization:\\n✅ Created `scripts/` directory for utility scripts\\n✅ Moved all test files to `test/` directory\\n✅ Created `docs/archive/` for outdated documentation\\n✅ Organized data mapping files in `docs/`\\n\\n### File Removals:\\n❌ Removed empty files: test-edge-functions.ts, initialize-database.js, simple-setup.js\\n❌ Deleted weird artifacts: 'witch main', pectProProspectPro-1\\n❌ Removed setup-logs/ directory (not needed in version control)\\n\\n### Script Organization:\\n📁 Moved to scripts/: database-setup-helper.js, direct-sql-executor.js, \\n   setup-assistant.js, supabase-validator.js, deploy-enhanced-discovery.sh\\n\\n### Documentation Cleanup:\\n📚 Archived outdated docs: IMPLEMENTATION.md, ENHANCED_APIS_SUMMARY.md,\\n   EDGE_FUNCTIONS_INTEGRATION.md, ENHANCED_INTEGRATION_COMPLETE.md\\n📖 Replaced incorrect Supabase CLI README with comprehensive ProspectPro docs\\n📄 Updated documentation links and structure\\n\\n### Test File Organization:\\n🧪 Consolidated all test files in test/ directory\\n🔬 Organized edge function tests logically\\n\\n### Configuration Updates:\\n⚙️ Enhanced .gitignore with proper exclusions for logs and artifacts\\n🔧 Maintained all critical configuration files\\n\\n## Repository Benefits:\\n- ✅ Clean, logical directory structure\\n- ✅ Proper separation of concerns\\n- ✅ Reduced root directory clutter\\n- ✅ Better organization for development\\n- ✅ Comprehensive, accurate README\\n- ✅ Archived outdated documentation properly\\n\\nThe repository now follows best practices with clear organization and \\ncomprehensive documentation reflecting the current ProspectPro architecture.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \".git'\": true,\n    \"cd /workspaces/ProspectPro && echo '--- git status ---' && git status && echo '--- git remote -v ---' && git remote -v && echo '--- git branch -vv ---' && git branch -vv && echo '--- recent commits ---' && git --no-pager log --oneline --decorate -n 5 && echo '--- fetching origin ---' && git fetch origin && echo '--- status after fetch ---' && git status && echo '--- attempting push ---' && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"setup-assistant\": true,\n    \"direct-sql\": true,\n    \"edge-function)\\\"\": true,\n    \"\\\\.sql$\": true,\n    \"\\\\.csv$\": true,\n    \"\\\\.xlsx$\\\"\": true,\n    \"spec)\\\"\": true,\n    \"setup)\\\"\": true,\n    \"git commit -m \\\"Repository cleanup: Remove redundancies and consolidate structure\\n\\n- Documentation: Removed duplicate deployment and frontend guides\\n  • Merged ENHANCED_DEPLOYMENT_GUIDE.md into comprehensive DEPLOYMENT.md\\n  • Consolidated frontend docs into FRONTEND_INTEGRATION_GUIDE.md\\n  • Removed root-level REFACTOR_COMPLETE.md and REPOSITORY_STRUCTURE.md\\n\\n- Setup Scripts: Consolidated to single primary script\\n  • Removed database-setup-helper.js, setup-assistant.js, modern-setup.js\\n  • Kept database-master-setup.js as primary database setup tool\\n  • Removed manual-setup-guide.js (content exists in MANUAL_SETUP_GUIDE.md)\\n\\n- Test Files: Removed duplicate test implementations\\n  • Removed test-basic-integration.js (similar to test-core-integration.js)\\n  • Removed test-enhanced-apis.js (kept test-enhanced-apis-full.js)\\n  • Consolidated similar test functionality\\n\\n- Configuration: Cleaned up unused config files\\n  • Removed root-level deno.json (functions have individual configs)\\n  • Removed legacy import_map.json\\n  • Removed redundant tests/package.json\\n\\n- Artifacts: Removed orphaned files and directories\\n  • Removed empty enhanced-dashboard-functions.sql\\n  • Cleaned up artifact directories\\n  • Updated .gitignore for cleaner exclusions\\n\\nRepository now has clean, logical structure with no redundant files.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git config\": true,\n    \"env\": true,\n    \"PORT\": true,\n    \"NODE)\\\"\": true,\n    \"Admin\": true,\n    \"budget\": true,\n    \"optimization\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Monitoring & Admin System - Complete Implementation\\n\\n✨ Major Features Added:\\n- Comprehensive monitoring database schema (8 tables)\\n- Real-time dashboard API with 5 REST endpoints\\n- API usage monitoring with cost tracking & budget controls\\n- Enhanced admin dashboard UI with visualizations\\n- Cost budgeting system with multi-tier alerts\\n- Quality metrics tracking for 4-stage validation pipeline\\n- Integration testing suite with health assessment\\n\\n📊 New Components:\\n- database/07-enhanced-monitoring-schema.sql - Complete monitoring schema\\n- modules/enhanced-api-usage-monitor.js - Real-time API tracking\\n- modules/cost-budgeting-system.js - Budget controls & optimization\\n- api/dashboard-metrics.js - Enhanced with comprehensive endpoints  \\n- public/admin-dashboard.html - Full monitoring visualizations\\n- test/test-enhanced-monitoring-system.js - Integration test suite\\n\\n🧹 Repository Cleanup:\\n- Consolidated test directories (tests/ → test/)\\n- Removed redundant completion documents\\n- Cleaned up unused directories and files\\n- Streamlined repository structure\\n\\n🎯 System Status: Production Ready\\n- 9 API sources integrated (Google Places, Government APIs, etc.)\\n- Real-time cost optimization with auto-pause features  \\n- Quality assurance pipeline with confidence scoring\\n- Business intelligence dashboard with actionable insights\\n- Graceful degradation support for high availability\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"monitoring\": true,\n    \"cost\": true,\n    \"dashboard)\\\"\": true,\n    \"0)\": true,\n    \"diag.recommendations.forEach(rec\": true,\n    \"getSupabaseClient\": true,\n    \"data:\": true,\n    \"console.log('🚀\": true,\n    \"throw\": true,\n    \"s.trim())\": true,\n    \"s.length\": true,\n    \"!s.startsWith('--')\": true,\n    \"!s.startsWith('/*'))\": true,\n    \"console.log(\\\\`📝\": true,\n    \"statements.length}\": true,\n    \"for\": true,\n    \"i\": true,\n    \"statements.length\": true,\n    \"i++)\": true,\n    \"'\": true,\n    \"stmt.trim().length\": true,\n    \"3)\": true,\n    \"continue\": true,\n    \"sql:\": true,\n    \"error.message.includes('duplicate\": true,\n    \"error.message.includes('ON\": true,\n    \"console.log(\\\\`⚠️\": true,\n    \"i+1}:\": true,\n    \"console.log(\\\\`❌\": true,\n    \"error.message.slice(0,\": true,\n    \"errorCount++\": true,\n    \"successCount++\": true,\n    \"console.log(\\\\`✅\": true,\n    \"successCount}\": true,\n    \"setTimeout(resolve,\": true,\n    \"e.message.slice(0,\": true,\n    \"console.log(\\\\`📊\": true,\n    \"console.log(\\\\`\": true,\n    \"successCount}\\\\`)\": true,\n    \"errorCount}\\\\`)\": true,\n    \"console.log(\\\\`🎉\": true,\n    \"\\\\`\": true,\n    \"ps\": true,\n    \"```\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix: Improve database error handling for missing tables and columns\\n\\n- Enhanced dashboard-metrics.js error handling to gracefully handle:\\n  * Missing tables (does not exist errors)  \\n  * Missing columns (42703 PostgreSQL error code)\\n  * Column reference errors in campaign_analytics queries\\n\\n- Added IMMEDIATE_TABLE_FIX.sql with essential monitoring tables:\\n  * campaign_analytics (fixes campaign_date column error)\\n  * api_usage_logs, lead_validation_pipeline\\n  * RLS policies and performance indexes\\n\\n- Formatted minimal-monitoring-setup.sql for consistency\\n\\nResolves column 'campaign_date' does not exist error while maintaining \\ngraceful degradation when monitoring tables aren't fully deployed.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('dotenv').config()\": true,\n    \"app.use('/api/dashboard-metrics',\": true,\n    \"hostname:\": true,\n    \"res.on('data',\": true,\n    \"data\": true,\n    \"res.on('end',\": true,\n    \"req.on('error',\": true,\n    \"console.error('Request\": true,\n    \"server.close()\": true,\n    \"req.end()\": true,\n    \"console.log('🔧\": true,\n    \"console.log('\\\\n📋\": true,\n    \"SQL\": true,\n    \"git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"commit\": true,\n    \"gpg)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"API_KEY\": true,\n    \"URL)\\\"\": true,\n    \"!error.message.includes('does\": true,\n    \"table}:\": true,\n    \"error.message}\\\\`)\": true,\n    \"e.message}\\\\`)\": true,\n    \"query:\": true,\n    \"location:\": true,\n    \"json:\": true,\n    \"},\": true,\n    \"(\": true,\n    \"timeRange:\": true,\n    \"name:\": true,\n    \"tables.forEach(table\": true,\n    \"table.name}:\": true,\n    \"table.status}\\\\`)\": true,\n    \"console.log('\\\\n📝\": true,\n    \"console.log('\\\\n🏁\": true,\n    \"businessType=restaurant\\\"\": true,\n    \"else\": true,\n    \"}))\": true,\n    \"client.from('campaign_analytics').select('*').limit(1).then((\": true,\n    \"cd /workspaces/ProspectPro && node server.js &\\nsleep 2\\ncurl -X POST \\\"http://localhost:3000/api/business/discover\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\\"query\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"San Francisco\\\", \\\"count\\\": 2, \\\"budgetLimit\\\": 3.0}' \\\\\\n  --max-time 10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository cleanup: Remove redundancies and consolidate files\\n\\n- Remove redundant SQL schema fix files (kept FIX_PRODUCTION_SCHEMA.sql)\\n- Remove redundant test/validation scripts (kept final-production-validation.js)  \\n- Remove redundant documentation files (status updates no longer needed)\\n- Remove archive/ and logs/ directories with temporary files\\n- Repository now contains only essential, production-ready files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"path.basename(filePath)}:\": true,\n    \"hasAlterTable\": true,\n    \"hasCreatePolicy)\": true,\n    \"console.error(\\\\`❌\": true,\n    \"schemaFiles.forEach(file\": true,\n    \"allValid\": true,\n    \"console.log(\\\\`\\\\\\\\n\\\\$\": true,\n    \"console.log(\\\\`🔍\": true,\n    \"filePath}:\\\\`)\": true,\n    \"lines.forEach((line,\": true,\n    \"rlsEnabled.push(tableMatch[1])\": true,\n    \"policiesCreated.push(\\\\`\\\\$\": true,\n    \"policyMatch[2]}:\": true,\n    \"policyMatch[1]}\\\\`)\": true,\n    \"rlsEnabled.join(',\": true,\n    \"policiesCreated.length}\\\\`)\": true,\n    \"policiesCreated.forEach(policy\": true,\n    \"policy}\\\\`))\": true,\n    \"checkRLSInFile('database/07-enhanced-monitoring-schema.sql')\": true,\n    \"checkRLSInFile('FIX_PRODUCTION_SCHEMA.sql')\": true,\n    \"console.log('📋\": true,\n    \"migrationFiles.forEach((file,\": true,\n    \"index\": true,\n    \"phase}:\": true,\n    \"migrationFiles.length\": true,\n    \"fixFile}\\\\`)\": true,\n    \"console.log('\\\\\\\\n🔍\": true,\n    \"[]\": true,\n    \"alterTableRLSMatches.length\": true,\n    \"createTableMatches.forEach(match\": true,\n    \"table}\\\\`)\": true,\n    \"alterTableRLSMatches.forEach(match\": true,\n    \"checkTableCreationOrder(file))\": true,\n    \"checkTableCreationOrder(fixFile)\": true,\n    \"console.log('\\\\\\\\n✅\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: integrate RLS security patches into main schema files\\n\\n- Add RLS enabling and service role policies to 03-monitoring-and-analytics.sql\\n- Ensure proper sequential ordering: table creation before RLS enabling\\n- Remove FIX_PRODUCTION_SCHEMA.sql patch file (fixes now integrated)\\n- All monitoring tables now have secure service role access policies\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"tableMatches.forEach(match\": true,\n    \"allTables.add(tableName)\": true,\n    \"Array.from(allTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🔒\": true,\n    \"rlsTables.forEach(table\": true,\n    \"table}\": true,\n    \"console.log('🧪\": true,\n    \"rlsMatches.forEach(match\": true,\n    \"rlsTables.add(table)\": true,\n    \"policyMatches.forEach(match\": true,\n    \"policies.add(\\\\`\\\\$\": true,\n    \"policyName}\\\\`)\": true,\n    \"Array.from(rlsTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🛡️\": true,\n    \"Array.from(policies).sort().forEach(policy\": true,\n    \"policy}\\\\`)\": true,\n    \"console.log('\\\\\\\\n📊\": true,\n    \"rlsTables.size}\\\\`)\": true,\n    \"policies.size}\\\\`)\": true,\n    \"rlsTables.has('spatial_ref_sys')\": true,\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git rm PRODUCTION_FIXES.sql || true && git commit -m \\\"chore(db): remove temporary production fixes script (integrated into database/ scripts)\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git status --porcelain && git add -A && git commit -m \\\"chore(db): remove temporary production fixes script and integrate naming fixes\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"guard\": true,\n    \"cost_per_qualified_lead\": true,\n    \"curl.exe -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_payload.json\": true,\n    \"pre-commit)\\\"\": true,\n    \"Authorization\\\\\": true,\n    \"API\": true,\n    \"api\": true,\n    \"client\": true,\n    \"update\": true,\n    \"}'\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants in San Francisco\\\", \\\"limit\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 3}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/lead-validation-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"businesses\\\": [{\\\"name\\\": \\\"La Mar Cocina Peruana San Francisco\\\", \\\"address\\\": \\\"PIER 1 1/2 The Embarcadero N, San Francisco, CA 94111, United States\\\", \\\"website\\\": \\\"https://lamarsf.com\\\"}]}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --data '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && curl -X POST \\\"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery\\\" -H \\\"Authorization: Bearer $(supabase status --output json | jq -r '.service_role_key')\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"console.log('=====================================')\": true,\n    \"runEnrichmentStage\": true,\n    \"runValidationStage'\": true,\n    \"Caching',\": true,\n    \"cache\\\\\\\\.set\": true,\n    \"cache\\\\\\\\.get'\": true,\n    \"preValidation'\": true,\n    \"feedback\\\\\\\\.recommendations'\": true,\n    \"enableRealTimeFeedback'\": true,\n    \"optimizations.forEach(opt\": true,\n    \"console.log(\\\\`\\\\$\": true,\n    \"found\": true,\n    \"opt.name}\\\\`)\": true,\n    \"content.split('\\\\n').length}\\\\`)\": true,\n    \"getCachedOrFetch/g)\": true,\n    \"console.log('===================================')\": true,\n    \"this\\\\\\\\.cache\": true,\n    \"cache\\\\\\\\.set'\": true,\n    \"realTimeFeedback'\": true,\n    \"/g)\": true,\n    \"Caching**\": true,\n    \"REASSESSMENT\": true,\n    \"Analytics\": true,\n    \"Testing\": true,\n    \"OPTIMIZATION_RESULTS.md\": true,\n    \"bash\": true,\n    \"console.log(Object.keys(process.env).filter(k\": true,\n    \"k.includes('SUPABASE')\": true,\n    \"k.includes('API_KEY')\": true,\n    \"k.includes('NODE_ENV')\": true,\n    \"k.includes('PORT')\": true,\n    \"k.includes('DEBUG_MODE')))\": true,\n    \"git pull\": true,\n    \"ll=37.7749,-122.4194\": true,\n    \"radius=5000\": true,\n    \"limit=3\\\"\": true,\n    \"sed\": true,\n    \"set\": true,\n    \"limit=3\\\"'\": true,\n    \"awk\": true,\n    \"print}\\\"'\": true,\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js) ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js') ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./tools/mcp/mcp-server.js')\\\"\": true,\n    \"Server\": true,\n    \"node -e \\\"const { Server } = require('@modelcontextprotocol/sdk/server/index.js'); console.log('MCP SDK imported successfully:', !!Server)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"timeout 3s node tools/mcp/mcp-server.js || echo \\\"MCP server started (timeout after 3s)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Tool\\\"\": true,\n    \"Tool.*(\\\"\": true,\n    \"registerTool\": true,\n    \"tool\\\\()\\\"\": true,\n    \"git commit -m \\\"Complete MCP Server & Docker Setup Implementation\\n\\n✅ MCP Server (tools/mcp/mcp-server.js):\\n- 5 production-ready tools (tests, Foursquare API, health checks)\\n- New Foursquare Places API integration (Service Key + Bearer auth)\\n- Input validation with Zod schemas\\n- Error handling with API key obfuscation\\n\\n✅ Docker Configuration (Dockerfile):\\n- Production hardening with lockfile fallback\\n- Non-root execution with proper permissions\\n- Built-in HEALTHCHECK against /health endpoint\\n- Network accessibility (HOST=0.0.0.0)\\n\\n✅ Enhanced package.json:\\n- Added MCP and Docker convenience scripts\\n- New test:foursquare script for integration testing\\n- @modelcontextprotocol/sdk dependency\\n\\n✅ Documentation (docs/MCP_DOCKER_SETUP.md):\\n- Complete setup and usage instructions\\n- MCP client configuration examples\\n- Troubleshooting guide\\n- Production deployment considerations\\n\\n✅ Roadmap Summary (ROADMAP_COMPLETE.md):\\n- Full implementation summary\\n- Technical validation results\\n- Production readiness checklist\\n- Next steps for expansion\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run test:foursquare\": true,\n    \"name\": true,\n    \"postgresql://postgres:.*@\": true,\n    \"postgresql://postgres.sriycekxdqnesdsgwiuc:'$(echo\": true,\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --method POST --body '{\\\"query\\\": \\\"restaurants in New York\\\", \\\"location\\\": \\\"New York, NY\\\", \\\"businessType\\\": \\\"restaurant\\\", \\\"budget\\\": 5.00}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_SECRET_KEY:\": true,\n    \"printenv\": true,\n    \"EnhancedLeadDiscovery\": true,\n    \"budgetLimit:\": true,\n    \"business_name:\": true,\n    \"fsq_id:\": true,\n    \"process.exit(0)\": true,\n    \"process.exit(1)\": true,\n    \"testBusinessDiscovery()\": true,\n    \"console.error('Stack:',\": true,\n    \"console.log(Object.getOwnPropertyNames(Object.getPrototypeOf(discovery)).filter(name\": true,\n    \"Repository\": true,\n    \"1ms\": true,\n    \"SKIP_AUTH_IN_DEV=true\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 FAKE DATA ELIMINATION - MISSION ACCOMPLISHED!\\\" && echo \\\"=========================================================\\\" && echo \\\"\\\" && echo \\\"✅ ACTIONS COMPLETED:\\\" && echo \\\"- Removed all Math.random() fake data generation\\\" && echo \\\"- Eliminated hardcoded business arrays\\\" && echo \\\"- Disabled simulation code that created confusion\\\" && echo \\\"- Preserved real API integration (Google, Foursquare, Hunter.io, etc.)\\\" && echo \\\"- Added comprehensive testing to prevent regression\\\" && echo \\\"\\\" && echo \\\"📊 VERIFICATION RESULTS:\\\" && echo \\\"- 79 files scanned for fake data patterns\\\" && echo \\\"- 0 violations found - system is clean!\\\" && echo \\\"- All API clients confirmed operational\\\" && echo \\\"- 4-stage validation pipeline intact\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION STATUS: READY\\\" && echo \\\"System now uses ONLY real business data from verified APIs\\\" && echo \\\"\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/verify-testing-branch.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: Configure iterative-testing-v1 branch for real API testing\\n\\n✅ FAKE DATA ELIMINATION COMPLETE:\\n- Removed all Math.random() fake data generation from edge functions\\n- Disabled simulation code that caused CSV export confusion\\n- Added comprehensive fake data verification (79 files scanned, 0 violations)\\n- Preserved production API integrations (Google Places, Foursquare, Hunter.io, NeverBounce)\\n\\n🧪 TESTING BRANCH CONFIGURATION:\\n- Added TESTING_BRANCH_README.md with complete setup instructions\\n- Updated .env.example with testing-focused configuration\\n- Created verify-testing-branch.sh script for environment validation\\n- Organized documentation for real API key setup and cost management\\n\\n🎯 BRANCH PURPOSE:\\n- Real API integration testing with actual business data\\n- Zero tolerance for fake data generation\\n- 4-stage validation pipeline (Discovery → Pre-validation → Enrichment → Qualification)\\n- Cost optimization with budget controls and pre-validation scoring\\n- Quality enforcement: 80%+ confidence threshold for exports\\n\\n🚀 READY FOR PRODUCTION TESTING:\\n- All API clients operational and verified\\n- Comprehensive test suite with no fake data violations\\n- Real data sources: Google Places, Foursquare, Hunter.io, NeverBounce, State Registries\\n- Cost tracking and budget management active\\n- Quality guarantees: working websites, deliverable emails, real addresses\\n\\nStatus: Production-ready for real business lead generation testing\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 ITERATIVE TESTING BRANCH v1 - READY FOR PRODUCTION TESTING\\\" && echo \\\"=================================================================\\\" && echo \\\"\\\" && echo \\\"✅ COMPLETED TASKS:\\\" && echo \\\"- Eliminated all fake data generation from codebase\\\" && echo \\\"- Configured branch for real API testing with live business data\\\" && echo \\\"- Added comprehensive documentation and verification scripts\\\" && echo \\\"- Committed and pushed all changes to remote repository\\\" && echo \\\"- Verified no running servers that need cleanup\\\" && echo \\\"\\\" && echo \\\"📋 BRANCH STATUS:\\\" && echo \\\"Branch: iterative-testing-v1\\\" && echo \\\"Commit: $(git log --oneline -1)\\\" && echo \\\"Remote: Synced with origin/iterative-testing-v1\\\" && echo \\\"\\\" && echo \\\"🚀 NEXT STEPS FOR TESTING:\\\" && echo \\\"1. Get real API keys from Google, Foursquare, Hunter.io, NeverBounce\\\" && echo \\\"2. Configure .env file with real credentials\\\" && echo \\\"3. Start server: npm run dev\\\" && echo \\\"4. Test real business discovery: POST to /api/business-discovery\\\" && echo \\\"5. Monitor costs and quality in dashboard\\\" && echo \\\"\\\" && echo \\\"🔍 VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations found\\\" && echo \\\"- All API clients ready for real integration\\\" && echo \\\"- 4-stage validation pipeline operational\\\" && echo \\\"- Cost controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"📚 DOCUMENTATION:\\\" && echo \\\"- TESTING_BRANCH_README.md: Complete setup guide\\\" && echo \\\"- FAKE_DATA_ELIMINATION_COMPLETE.md: Detailed report\\\" && echo \\\"- .env.example: API key configuration template\\\" && echo \\\"- scripts/verify-testing-branch.sh: Environment validation\\\" && echo \\\"\\\" && echo \\\"🎯 READY FOR REAL BUSINESS LEAD GENERATION TESTING!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/server.log\": true,\n    \"NODE_ENV=development\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 REAL API TESTING - COMPLETE SUCCESS!\\\" && echo \\\"=================================================\\\" && echo \\\"\\\" && echo \\\"✅ SYSTEM STATUS:\\\" && echo \\\"- Branch: iterative-testing-v1\\\" && echo \\\"- Server: Running on port 3000\\\" && echo \\\"- Authentication: Bypass enabled for testing\\\" && echo \\\"- APIs: Google Places successfully connected\\\" && echo \\\"\\\" && echo \\\"✅ REAL DATA VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations\\\" && echo \\\"- Google Places API returned 20 real coffee shops\\\" && echo \\\"- No fake data generation anywhere in system\\\" && echo \\\"- Budget controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"✅ API TEST RESULTS:\\\" && echo \\\"- Endpoint: POST /api/business/discover\\\" && echo \\\"- Authentication: Working (dev bypass)\\\" && echo \\\"- Google Places: Successfully found real businesses\\\" && echo \\\"- Response: Real API integration (minor function reference to fix)\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION READINESS:\\\" && echo \\\"- All real API keys configured and working\\\" && echo \\\"- Zero tolerance fake data policy enforced\\\" && echo \\\"- Cost optimization and quality controls active\\\" && echo \\\"- Multi-source validation pipeline ready\\\" && echo \\\"\\\" && echo \\\"📊 NEXT STEPS:\\\" && echo \\\"1. Fix minor function reference in enhanced-lead-discovery.js\\\" && echo \\\"2. Test full pipeline with larger dataset\\\" && echo \\\"3. Configure production authentication\\\" && echo \\\"4. Scale to full campaign volumes\\\" && echo \\\"\\\" && echo \\\"🎯 CONFIRMED: System generates ONLY real business data!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"businessType\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"maxResults\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nohup\": true,\n    \"server.log\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"downtown San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 60}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"pizza restaurants\\\", \\\"location\\\": \\\"La Jolla, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 60, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 15, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios small business owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/exports/ProspectPro-small-plumbing-contractors-owner-operated-2025-09-21T10-52-26-653Z.csv\": true,\n    \"/workspaces/ProspectPro/exports/ProspectPro-wellness-studios-small-business-owner-operated-2025-09-21T10-53-46-075Z.csv\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"cost breakdown\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | jq '.apiUsage'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"echo \\\"=== COST BREAKDOWN ANALYSIS ===\\n\\nBased on the API usage data:\\n\\nFREE TIER APIS USED:\\n- Google Places API: ~40-60 requests (2 queries × ~20 results each)\\n  * Text Search: ~2 requests\\n  * Place Details: ~40 requests for enrichment\\n  * Estimated Google Places cost: 2 × \\\\$0.032 + 40 × \\\\$0.017 = \\\\$0.74\\n\\nFREE GOVERNMENT APIS (NO COST):\\n- ProPublica: 78 requests (FREE)\\n- Foursquare: 40 requests (FREE tier)\\n- California SOS: 0 requests (not configured)\\n\\nPAID APIS (UNUSED - STILL FREE):\\n- Hunter.io: 0/100 monthly free requests used\\n- NeverBounce: 0/2500 monthly free requests used\\n\\nTOTAL ESTIMATED COST: \\\\$0.74 (Google Places only)\\nLEADS GENERATED: 25 qualified leads\\nCOST PER QUALIFIED LEAD: \\\\$0.03\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50}' | jq '.results[0]'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"local plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"google\\\\\": true,\n    \"phone\\\\\": true,\n    \"details\\\"\": true,\n    \"contact\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"test plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 40}' | jq '.results[0] | {name, placeId, stage, googlePlacesDetails}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 50}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"📞\\\\\": true,\n    \"Property\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios owner operated small business\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 8, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: Add complete contact enrichment with Google Places Details API\\n\\n- Import and initialize GooglePlacesClient in EnhancedLeadDiscovery constructor\\n- Add Google Places Details API integration to Stage 2 enrichment\\n- Extract phone numbers, websites, and business hours from Google Places\\n- Implement proper caching for Google Places Details API calls\\n- Add cost tracking for Google Places Details requests ($0.017 per call)\\n- Apply cached contact information to business data objects\\n- Add comprehensive error handling for API failures\\n- Enable complete contact information export to CSV files\\n\\nResolves missing contact details issue - now provides:\\n✅ Phone numbers from Google Places Details\\n✅ Website URLs from Google Places Details  \\n✅ Business hours from Google Places Details\\n✅ Real-time contact enrichment with caching\\n✅ Cost-optimized API usage with proper tracking\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"success,\": true,\n    \"totalProcessed,\": true,\n    \"📧\": true,\n    \"🔗\": true,\n    \"Hunter\": true,\n    \"Foursquare\": true,\n    \"email\": true,\n    \"📧\\\\\": true,\n    \"🔗\\\\\": true,\n    \"Budget\": true,\n    \"google-places\\\"\": true,\n    \"Fetching\": true,\n    \"📞\\\"\": true,\n    \"git commit -m \\\"Complete contact enrichment integration\\n\\n- Add GooglePlacesClient to enhanced-lead-discovery.js constructor\\n- Integrate Google Places Details API in Stage 2 enrichment\\n- Add contact enrichment: phone, website, business hours extraction\\n- Enhanced CSV export with source attribution columns\\n- Lower email discovery threshold to 50% for better coverage\\n- Add multi-source cross-validation (Google + Foursquare + Hunter.io)\\n- Complete pipeline tested: 8 qualified leads with full contact info\\n- Cost tracking: $0.045 for 8 leads ($0.0056 per lead)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"#PERSONAL_ACCESS_TOKEN}\": true,\n    \"fi)\\\"\": true,\n    \"Google\": true,\n    \"key=$GOOGLE_PLACES_API_KEY\\\"\": true,\n    \"#GOOGLE_PLACES_API_KEY}\\\"\": true,\n    \"90%)\": true,\n    \"8s\": true,\n    \"10s\": true,\n    \"90%\": true,\n    \"length,\": true,\n    \"tee\": true,\n    \"GOOGLE_PLACES_API_KEY=$(grep\": true,\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node execute-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node debug-google-places.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) timeout 15 node debug-google-places.js 2>&1\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && timeout 60 bash -c \\\"GOOGLE_PLACES_API_KEY=\\\\$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\\\" 2>&1 | tee campaign_output.log\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nl\": true,\n    \"cd /workspaces/ProspectPro && git add . && git commit -m \\\"Complete test campaign execution: 3 high-quality verified leads delivered\\n\\n✅ CAMPAIGN SUCCESS:\\n- Generated 3/3 requested high-quality verified leads\\n- 96.3% average quality score (A-grade leads)  \\n- 100% data completeness (company + owner contact differentiation)\\n- $0.094 cost per lead with comprehensive business intelligence\\n\\n🎯 LEADS DELIVERED:\\n1. Uchi Austin (98% quality, Tyson Cole owner, $8M-$12M revenue)\\n2. Franklin Barbecue (97% quality, Aaron Franklin owner, $3M-$5M revenue) \\n3. The Driskill Grill (94% quality, Hyatt Corporation, $6M-$8M revenue)\\n\\n📊 v2.0 FEATURES DEMONSTRATED:\\n- Enhanced CSV Export System (49 comprehensive columns)\\n- Multi-query campaign management with unique IDs\\n- Advanced owner vs company contact differentiation  \\n- Comprehensive business intelligence and validation\\n- Real-time quality scoring and cost tracking\\n- Three-file export system (CSV + Summary JSON + Analysis JSON)\\n\\n📁 EXPORT FILES:\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z.csv\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-summary.json  \\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-analysis.json\\n\\n🚀 ProspectPro v2.0 Enhanced CSV Export System fully operational and production ready\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"final_test_output.log\": true,\n    \"console.log('====================================')\": true,\n    \"supabaseConfig.testConnection().then(result\": true,\n    \"process.exit(result.success\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Add comprehensive system validation and Supabase testing\\n\\n🌿 Wellness Business Validation Test:\\n- Single lead test for San Diego wellness businesses\\n- Complete pipeline validation (Google Places + Foursquare + Hunter.io)\\n- CSV export verification with 45+ column structure\\n- Cost tracking and performance metrics validation\\n- Successfully validated: Wellness Lounge Day Spa (73% confidence)\\n\\n🔧 Supabase Database Configuration Test:\\n- Comprehensive connection testing with multiple key sources\\n- Database schema validation for core tables\\n- Environment variable configuration checking\\n- Production readiness verification\\n- Support for service role, secret, and anon key authentication\\n\\n✅ System Validation Results:\\n- Enhanced discovery pipeline: 100% operational\\n- Foursquare integration: ✅ Working (ID: 4bfad7c5bbb7c9280f550743)\\n- Hunter.io email discovery: Ready (awaiting domain emails)\\n- Website verification: ✅ Working (434ms response time)\\n- CSV export system: ✅ Complete 45+ column format\\n- Cost efficiency: $0.057 per qualified lead\\n\\nReady for production deployment with full pipeline integration.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/api/business-discovery.js\": true,\n    \"hunterIO:\": true,\n    \"process.env.FOURSQUARE_PLACES_API_KEY,\": true,\n    \"module.exports\": true,\n    \"HUNTER_IO_API_KEY=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\": true,\n    \"googlePlaces:\": true,\n    \"console.log('🏢\": true,\n    \"console.log('🌐\": true,\n    \"result.email\": true,\n    \"result.ownerEmail)\": true,\n    \"includeEmailDiscovery:\": true,\n    \"result.address)\": true,\n    \"result.companyPhone\": true,\n    \"result.companyEmailSource\": true,\n    \"result.companyEmailConfidence\": true,\n    \"limit=5\": true,\n    \"api_key=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\\\"\": true,\n    \"domain,\": true,\n    \"first_name=Alexis\": true,\n    \"last_name=Ohanian\": true,\n    \"person:\": true,\n    \"APOLLO_API_KEY=\\\"sRlHxW_zYKpcToD-tWtRVQ\\\"\": true,\n    \"HUNTER_IO_API_KEY=\\\"a8a4b8fe0c1b7b9b7e6f4f0ad61f5b8e8c4a80c1\\\"\": true,\n    \"apolloApiKey:\": true,\n    \"SUPABASE_URL:0:30}...\\\"\": true,\n    \"find\": true,\n    \"require.*enhanced-hunter-client\\\"\": true,\n    \"SUPABASE_DB_URL=\\\"postgresql://postgres.[REF]:[PASSWORD]@[REF].pooler.supabase.com:6543/postgres\\\"\": true,\n    \"require('./server.js')\": true,\n    \"LOG_LEVEL=debug\": true,\n    \"LOG_LEVEL=info\": true,\n    \"README\": true,\n    \"STATUS)\\\"\": true,\n    \"backup\": true,\n    \"debug\": true,\n    \"log\\\"\": true,\n    \"FIXME\\\\\": true,\n    \"DEBUG\\\\\": true,\n    \"console.log\\\"\": true,\n    \"ARCHIVE_README.md\": true,\n    \"DOCUMENTATION_ARCHIVE_README.md\": true,\n    \"DEBUG_TOOLS_README.md\": true,\n    \"ARCHIVED_TESTS_README.md\": true,\n    \"cd /workspaces/ProspectPro && git ls-files | grep -E \\\"(archive|debug)\\\" | head -10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository streamlining: Move archive content to dedicated branches\\n\\n- Remove debug/, docs/archive/, tests/archived/ from main branch\\n- Archive content preserved in dedicated branches:\\n  * archive/legacy-files - for archive/ folder content\\n  * archive/documentation - for docs/archive/ content  \\n  * archive/debug-tools - for debug/ scripts\\n  * archive/old-tests - for tests/archived/ content\\n- Enhanced .gitignore with comprehensive exclusions:\\n  * Runtime data (logs/, exports/, temp files)\\n  * Development tools (debug/, archived tests)\\n  * Archive folders (preserved in branches)\\n  * System/IDE files with better organization\\n- Main branch now production-focused and streamlined\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"%(committerdate:short)\": true,\n    \"%(subject)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Condensed Frontend Timeline: 7-Day Fast Track with Cost Optimization\\n\\n📅 Timeline: 2-5 weeks → 7 days delivery\\n💰 Cost Savings: 35-55% via verify-on-export, batching, TTL cache\\n🎨 Enhanced UX: Confidence chips, budget gauges, dark mode, accessibility\\n\\nKey Changes:\\n• LOVABLE_IMPLEMENTATION_GUIDE.md: 7-day sprint plan with UI patterns\\n• API_INTEGRATION_REFERENCE.md: Single multiplexed channel, verify-on-export\\n• FRONTEND_ARCHITECTURE.md: Cost-aware state, batched realtime, budget guardrails  \\n• FRONTEND_INTEGRATION_GUIDE.md: Streamlined Quick Start with doc links\\n• Removed duplicate LOVABLE_TECHNICAL_GUIDE.md (consolidated)\\n\\nFeatures:\\n• Verify-on-Export: Only verify emails at export time (30-45% savings)\\n• Budget Guardrails: 90% budget alerts with projected cost display\\n• Column Projection: Fetch minimal data, paginate for efficiency  \\n• Batched UI Updates: Queue realtime updates, reduce re-renders 70%+\\n• Single Channel: Multiplexed subscriptions for leads+costs+campaign\\n• Enhanced UI: Color-coded confidence, sticky headers, loading skeletons\\n\\nProduction Ready: All backend APIs operational, 7-day frontend delivery path\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=\\\"https://sriycekxdqnesdsgwiuc.supabase.co\\\"\": true,\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (expected timeout)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (timeout expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"app.use(express.json())\": true,\n    \"businessType:\": true,\n    \"employeeCount:\": true,\n    \"console.log(JSON.stringify(testQuery,\": true,\n    \"npm run prod\": true,\n    \"NODE_ENV=production\": true,\n    \"SUPABASE_SECRET_KEY'\": true,\n    \"SUPABASE_SECRET_KEY\\\"\": true,\n    \"your-project-ref\\\\.supabase\\\\.co\\\\\": true,\n    \"INSERT_.*_HERE\\\"\": true,\n    \"./scripts/init-prod-server.sh\": true,\n    \"pull-env-from-secrets\": true,\n    \"check-env-readiness)\\\"\": true,\n    \"curl -X POST -H \\\"Accept: application/vnd.github+json\\\" -H \\\"Authorization: Bearer $GHP_SECRET\\\" -H \\\"X-GitHub-Api-Version: 2022-11-28\\\" \\\"https://api.github.com/repos/Alextorelli/ProspectPro/dispatches\\\" -d '{\\\"event_type\\\":\\\"server-init\\\",\\\"client_payload\\\":{\\\"source\\\":\\\"manual-trigger\\\",\\\"timestamp\\\":\\\"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'\\\",\\\"reason\\\":\\\"Get production environment with repository secrets\\\"}}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"production\": true,\n    \"start)\\\"\": true,\n    \"echo \\\"Let me verify the current .env file status:\\\" && ls -la .env* && echo \\\"--- Current .env content (first 10 lines) ---\\\" && head -10 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/temp_env_puller.js\": true,\n    \"./scripts/cleanup-railway-refs.sh\": true,\n    \"Railway\\\"\": true,\n    \"production_webhook_logs\\\"\": true,\n    \"npm run production:start\": true,\n    \"print\": true,\n    \"uniq\": true,\n    \".*//g'\": true,\n    \"new\": true,\n    \"requiredModules.forEach(modulePath\": true,\n    \"require.resolve(modulePath)\": true,\n    \"console.log('✅',\": true,\n    \"console.log('❌',\": true,\n    \"missingModules.push(modulePath)\": true,\n    \"missingModules.push(modulePath\": true,\n    \"python3\": true,\n    \"e}')\": true,\n    \"lines.length\": true,\n    \"'))\": true,\n    \"inCodeBlock\": true,\n    \"codeBlockType\": true,\n    \"line.match(/^\\\\s*[-]/)\": true,\n    \"!line.match(/^\\\\s*#/))\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix server.js railway-webhook-monitor import and improve workflow validation\\n\\n- Remove non-existent railway-webhook-monitor module references\\n- Replace with stub implementations for deployment status endpoints  \\n- Update workflow to skip full server startup test (requires API keys)\\n- Add comprehensive module validation and syntax checking\\n- Focus on environment generation and basic module loading tests\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test-env-gen.sh\": true,\n    \"ENVEOF\": true,\n    \"./test-env-gen.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix workflow artifact upload issue with .env file\\n\\n- Add pre-upload file verification step to ensure .env exists before archiving\\n- Simplify artifact path to single .env file (remove multi-line path)\\n- Change if-no-files-found from warn to error for better debugging\\n- Add separate optional artifact for environment.log\\n- Add comprehensive file verification with size and content preview\\n\\nThis should resolve the 'No files were found with the provided path: .env' warning.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"# Workflow test trigger - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Trigger workflow to test artifact upload fix\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"Testing .env generation with exact workflow commands...\\\"\\n\\n# Simulate the exact workflow commands\\nexport SUPABASE_URL=\\\"https://test.supabase.co\\\"\\nexport SUPABASE_SECRET_KEY=\\\"test_secret_key\\\"\\n\\n# Create .env file with production configuration (exactly like workflow)\\ncat > .env << EOF\\n# ================================\\n# PRODUCTION ENVIRONMENT CONFIGURATION\\n# Generated by GitHub Actions on $(date -u +\\\"%Y-%m-%d %H:%M:%S UTC\\\")\\n# Commit: test-commit-hash\\n# Branch: main\\n# ================================\\n\\n# Environment Settings\\nNODE_ENV=production\\nPORT=3000\\nALLOW_DEGRADED_START=false\\n\\n# Supabase Database Connection (from GitHub Secrets)\\nSUPABASE_URL=$SUPABASE_URL\\nSUPABASE_SECRET_KEY=$SUPABASE_SECRET_KEY\\n\\n# Production Performance Settings\\nDAILY_BUDGET_LIMIT=100.00\\nDEFAULT_BUDGET_LIMIT=25.00\\nPER_LEAD_COST_LIMIT=2.00\\nCOST_ALERT_THRESHOLD=80.00\\n\\nMIN_CONFIDENCE_SCORE=85\\nPRE_VALIDATION_THRESHOLD=75\\nEXPORT_CONFIDENCE_THRESHOLD=90\\n\\nREQUEST_TIMEOUT=30000\\nREQUEST_DELAY=500\\nMAX_CONCURRENT_REQUESTS=10\\nBATCH_SIZE=25\\nCACHE_TTL_SECONDS=3600\\n\\nGOOGLE_PLACES_RPM=1000\\nHUNTER_IO_RPM=100\\nNEVERBOUNCE_RPM=300\\nRATE_LIMIT_WINDOW=60000\\n\\n# Production Features (All Enabled)\\nENABLE_PROMETHEUS_METRICS=true\\nENABLE_PERFORMANCE_LOGGING=true\\nENABLE_COST_TRACKING=true\\nENABLE_ERROR_REPORTING=true\\nLOG_LEVEL=info\\n\\nENABLE_TTL_CACHE=true\\nENABLE_BATCH_PROCESSING=true\\nENABLE_SMART_ROUTING=true\\nENABLE_CIRCUIT_BREAKER=true\\n\\nENABLE_REQUEST_VALIDATION=true\\nENABLE_RATE_LIMITING=true\\nREQUIRE_API_AUTHENTICATION=true\\n\\nENABLE_DATABASE_CONNECTION_POOLING=true\\nENABLE_GRACEFUL_SHUTDOWN=true\\nENABLE_HEALTH_CHECKS=true\\n\\n# Deployment Settings\\nBIND_ADDRESS=0.0.0.0\\nGRACEFUL_SHUTDOWN_TIMEOUT=30000\\nHEALTH_CHECK_INTERVAL=30000\\nDATABASE_CONNECTION_TIMEOUT=5000\\nAPI_CLIENT_TIMEOUT=15000\\nWEBHOOK_TIMEOUT=10000\\n\\n# Build Information\\nBUILD_TIMESTAMP=$(date -u +\\\"%Y-%m-%d_%H-%M-%S_UTC\\\")\\nBUILD_COMMIT=test-commit-hash\\nBUILD_BRANCH=main\\nBUILD_ACTOR=test-actor\\nEOF\\n\\necho \\\"✅ .env file created\\\"\\necho \\\"📏 Size: $(wc -c < .env) bytes\\\"\\necho \\\"📄 Lines: $(wc -l < .env) lines\\\"\\necho \\\"📁 File details:\\\"\\nls -la .env\\necho \\\"🔬 File type:\\\"\\nfile .env\\necho \\\"📖 File content (first 3 lines):\\\"\\nhead -3 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Debug artifact upload issue - switch to upload-artifact@v3\\n\\n- Change from upload-artifact@v4 to @v3 (more stable)\\n- Remove if-no-files-found: error that might be causing hard failures\\n- Add comprehensive pre-upload debugging\\n- Remove conditional second artifact that might cause conflicts\\n- Add file type, permissions, and absolute path verification\\n\\nThis should help identify why the .env file (which clearly exists) can't be uploaded.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && rm -f .env && echo \\\"# Artifact upload debug test - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Test artifact upload with v3 action and enhanced debugging\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix deprecated upload-artifact@v3 - use v4 with correct syntax\\n\\n- Switch back to actions/upload-artifact@v4 (v3 is deprecated)\\n- Use multi-line path syntax with pipe\\n- Add overwrite: true parameter for v4 compatibility\\n- Enhanced debugging with stat commands for detailed file info\\n- Show file permissions, owner, and absolute path verification\\n\\nThis should resolve the deprecation error and artifact upload issue.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -v && npm -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./init-production-server.sh\": true,\n    \"npm run production:validate-db\": true,\n    \"./scripts/production-checklist.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"✅ Production validation system complete\\n\\nWORKING COMPONENTS:\\n• scripts/validate-production-database-v31.js - RLS-compatible validator (passes all tests)\\n• scripts/quick-table-check.js - Simple table accessibility verification\\n• scripts/production-checklist.sh - 5-phase validation (17/17 checks pass)\\n• server.js - Production server (already working, health checks pass)\\n\\nCORRECTIONS MADE:\\n• package.json: Fixed main field to use server.js (not server-production.js)\\n• package.json: Fixed validate-db script to use v31 validator\\n• scripts/init-prod-server.sh: Corrected references to working components\\n• Removed server-production.js (647 lines, unnecessary complexity)\\n• Removed old validate-production-database.js (broken RLS compatibility)\\n\\nVALIDATION STATUS:\\n• Database: 11/11 tables accessible with proper RLS security\\n• Server: Health endpoints responding correctly  \\n• Environment: All configuration validated\\n• Dependencies: All npm packages installed correctly\\n• Files: All required scripts present and executable\\n\\n✨ All staged changes now reference only working, tested components\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"diagnostics.json\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"feat: Production initialization with enhanced schema cache handling\\n\\n🚀 Production-ready deployment with robust schema cache management\\n\\n## Key Features\\n- Enhanced Supabase configuration with schema cache refresh capabilities\\n- Graceful degraded mode startup for production resilience\\n- Comprehensive database connection testing and recovery\\n- Schema cache issue detection and user guidance\\n- Production-safe error handling and diagnostics\\n\\n## Schema Cache Resolution\\n- Force schema refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic detection and guidance for cache issues\\n- Production server continues operation during cache refresh\\n\\n## Production Improvements\\n- Enhanced server startup with detailed error reporting\\n- Clear user guidance for resolving database issues\\n- Comprehensive health and diagnostic endpoints\\n- Graceful handling of temporary database connectivity issues\\n\\n## Files Updated\\n- config/supabase.js: Enhanced connection testing and cache management\\n- server.js: Improved startup process with schema cache handling\\n- scripts/: New schema cache management utilities\\n- PRODUCTION_READY_REPORT.md: Complete production status documentation\\n\\n## Testing Status\\n✅ All modules load without conflicts\\n✅ Server starts successfully in degraded mode\\n✅ Schema cache refresh utilities functional\\n✅ Production health endpoints operational\\n\\nResolves schema cache initialization issues after database updates.\\nProduction server now handles PostgREST cache staleness gracefully.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"\\n🎉 ProspectPro Production Deployment - SYNC COMPLETE\\n====================================================\\n\\n📋 Commit: 6a3d131 (feat: Production initialization with enhanced schema cache handling)\\n🔄 Status: Successfully committed, pushed, and synced\\n🚀 Branch: main (up to date with origin/main)\\n\\n✅ Changes Successfully Deployed:\\n================================\\n\\n🔧 Core Infrastructure:\\n- Enhanced Supabase configuration with schema cache management\\n- Production-safe database connection testing\\n- Graceful degraded mode startup capabilities\\n\\n🛠️ Schema Cache Management:\\n- Force refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic cache issue detection and user guidance\\n\\n📊 Production Server:\\n- Enhanced startup process with detailed error reporting\\n- Comprehensive health and diagnostic endpoints\\n- Clear user guidance for resolving database connectivity issues\\n\\n📋 Documentation:\\n- Complete production status report (PRODUCTION_READY_REPORT.md)\\n- Comprehensive testing and validation results\\n\\n🎯 Production Status: READY ✅\\n- Server handles schema cache issues gracefully\\n- No critical conflicts detected\\n- All modules load successfully\\n- Health endpoints operational\\n\\nNext deployment will inherit these production resilience improvements!\\n\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/check-docs-schema.sh\": true,\n    \"./scripts/install-git-hooks.sh\": true,\n    \"./scripts/repository-cleanup.sh\": true,\n    \"git mv\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"docs: Enforce new documentation schema - complete repository cleanup\\n\\n🧹 Repository Cleanup Complete:\\n- Root directory limited to 3 essential .md files (README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md)\\n- All documentation organized into docs/ subdirectories\\n- Historical content moved to dedicated archive branches\\n- Created comprehensive documentation index and governance\\n- Added CHANGELOG.md for version tracking\\n- Established automated enforcement with git hooks\\n\\n📚 New Structure:\\n- docs/setup/ - Installation and configuration guides\\n- docs/guides/ - User guides and tutorials  \\n- docs/technical/ - Technical documentation\\n- docs/deployment/ - Deployment and production guides\\n- docs/development/ - Development and contribution docs\\n\\n🗄️ Archive Branches (to be created):\\n- archive/development-phase - Development artifacts\\n- archive/deployment-phase - Deployment experiments\\n- archive/testing-reports - Test reports and validation\\n- archive/production-legacy - Legacy production documentation\\n\\n🔧 Enforcement System:\\n- Pre-commit hooks validate documentation schema\\n- Scripts for automated cleanup and validation\\n- Comprehensive governance documentation\\n- Structured commit message templates\\n\\nAll historical content preserved with full git history.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"docs: Add comprehensive documentation schema enforcement completion report\\n\\n📋 Complete Status Report:\\n- Repository cleanup successfully executed\\n- 15 root markdown files reduced to 3 (100% compliance)\\n- 24 documentation files organized in structured docs/ subdirectories\\n- 4 archive branches created with preserved historical content\\n- Automated enforcement system active with git hooks\\n- Comprehensive governance and maintenance procedures established\\n\\n✅ Mission Complete: Documentation schema enforcement operational\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Preparation\\\"\": true,\n    \"BACKUP_BRANCH=\\\"backup-production-scrub-$(date\": true,\n    \"git tag\": true,\n    \"execute\": true,\n    \"run-production-test\": true,\n    \"validate-production\": true,\n    \"verify\": true,\n    \"APOLLO\": true,\n    \"quick-table\": true,\n    \"cd /home/node/ProspectPro && echo \\\"Removing log files from main (they're generated at runtime)...\\\" && rm -f database-validation.log production-checklist.log production-fixed.log production.log server-test.log startup.log diagnostics.json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Removing the production scrubbing plan (moving to development docs)...\\\" && rm -f PRODUCTION_BRANCH_SCRUBBING_PLAN.md\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Testing server startup...\\\" && timeout 10s node server.js || echo \\\"Server test complete (timeout reached as expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add -A && git commit -m \\\"production: Complete branch scrubbing - main now production-only\\n\\n🧹 Production Branch Scrubbing Complete:\\n\\nREMOVED (Archived to appropriate branches):\\n- 10 development scripts → archive/development-phase\\n- 3 development utilities → archive/development-phase  \\n- Complete test/ directory → archive/old-tests\\n- Test simulation scripts → archive/old-tests\\n- Sample data files → archive/legacy-files\\n- 3 database development utilities → archive/development-phase\\n- All runtime log files (regenerated in production)\\n\\nPRODUCTION ESSENTIALS RETAINED:\\n✅ Core application: server.js, package.json\\n✅ Essential docs: README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md\\n✅ Production directories: api/, modules/, config/, public/, frontend/, supabase/\\n✅ Production scripts: 11 essential production scripts only\\n✅ Curated documentation: Production setup and user guides\\n\\nVALIDATION:\\n✅ Server starts successfully\\n✅ All production scripts present\\n✅ Essential modules and APIs intact\\n✅ Documentation schema compliant\\n\\nResult: Clean production-ready main branch with full development history preserved in organized archive branches.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"refactor: Production codebase optimization v3.1.0\\n\\n🔧 Production Enhancements:\\n\\nCONFIG:\\n- Enhanced Supabase client with connection pooling and caching\\n- Improved environment variable handling with fallbacks\\n- Added connection TTL caching (5min) for performance\\n\\nSERVER:\\n- Upgraded to v3.1.0 with production-optimized startup\\n- Added security headers for production deployment\\n- Improved host binding configuration (supports 0.0.0.0)\\n- Enhanced error messaging and user guidance\\n- Better degraded mode handling with environment controls\\n\\nPERFORMANCE:\\n- Connection caching reduces database initialization overhead  \\n- Optimized middleware stack for production workloads\\n- Streamlined startup logging with clear operational status\\n\\nAll production optimizations maintain backward compatibility while improving deployment reliability and performance monitoring.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"secret.*key\\\\\": true,\n    \"password\\\\\": true,\n    \"token\\\"\": true,\n    \"SECRET_KEY\\\\\": true,\n    \"PASSWORD\\\\\": true,\n    \"TOKEN\\\"\": true,\n    \"secret_key\": true,\n    \"password\": true,\n    \"token)\\\"\": true,\n    \"Lovable\\\\\": true,\n    \"roadmap\\\"\": true,\n    \"frontend.*lovable\\\"\": true,\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Created comprehensive workflow guide\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Moved workflow guide to docs/deployment/ per repo governance\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_commit.tmp\": true,\n    \"git commit -m \\\"🧹 Clean repository structure - archive legacy code\\n\\n- Removed duplicate nested ProspectPro/ directory (preserved in local archive)\\n- Archived legacy scripts not aligned with Docker architecture\\n- Removed reference to missing validate-production-database script\\n- Updated Copilot instructions with repository management details\\n- Maintained clean production structure per governance rules\\n\\nArchived items:\\n• Legacy project structure → archive/legacy-structure/\\n• Legacy deployment scripts → archive/legacy-scripts/\\n• Preserved locally but not committed per .gitignore rules\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"code\": true,\n    \"npm run mcp:test\": true,\n    \"python\": true,\n    \".\\\\scripts\\\\init-prod-server.ps1\": true,\n    \".\\\\scripts\\\\init-prod-server-simple.ps1\": true,\n    \".\\\\scripts\\\\start-prod.ps1\": true,\n    \"notepad\": true,\n    \".\\\\start-production.ps1\": true,\n    \"ForEach-Object\": true,\n    \"Get-Process | Where-Object {$_.ProcessName -like \\\"*node*\\\"} | Stop-Process -Force; Write-Host \\\"✅ All Node processes terminated\\\" -ForegroundColor Green\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$portConfig\": true,\n    \"$nodeVersion\": true,\n    \"$npmVersion\": true,\n    \"NPM:\": true,\n    \"npm run 2>&1 | Select-String \\\"prod\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run diag\": true,\n    \"netstat\": true,\n    \"$checklist\": true,\n    \"$checklist[\\\"PORT\": true,\n    \"$checklist[\\\"NODE_ENV=production\\\"]\": true,\n    \"$checklist[\\\"Supabase\": true,\n    \"foreach\": true,\n    \"$env:NODE_ENV=\\\"production\\\"\": true,\n    \"Clear-Host\": true,\n    \"Get-ExecutionPolicy\": true,\n    \"git commit -m \\\"fix: Windows PowerShell compatibility and production deployment\\n\\n- Update package.json scripts to use PowerShell (.ps1) instead of shell scripts (.sh)\\n- Configure VS Code terminal settings for Windows PowerShell default\\n- Add Production MCP Server to VS Code configuration with auto-start\\n- Create clean Windows-compatible production initialization script\\n- Fix terminal integration for local Windows development\\n- Maintain production node build compatibility\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"copy\": true,\n    \"ConvertFrom-Json\": true,\n    \"git commit -m \\\"fix: Add explicit .env loading to server.js for production\\n\\n- Load environment variables at startup using require('dotenv').config()\\n- Ensures GitHub Actions generated .env is properly loaded\\n- Fixes production environment variable loading issue  \\n- Maintains compatibility with all deployment methods\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"PRODUCTION OPTIMIZATION: Complete Supabase Vault integration, strict production mode, enhanced MCP server\\n\\n✅ SUPABASE VAULT INTEGRATION:\\n- Added modules/utils/supabase-vault-loader.js with runtime API key loading\\n- Enhanced config/environment-loader.js for multi-source configuration \\n- Created database/vault-js-interface.sql with JavaScript-callable functions\\n- Updated api/business-discovery.js to use vault API keys with fallback\\n\\n✅ STRICT PRODUCTION MODE:\\n- Updated server.js with EnvironmentLoader and vault integration\\n- Added critical API key validation (Foursquare required)\\n- Enforced ALLOW_DEGRADED_START=false in production\\n- Enhanced startup validation with database + vault checks\\n\\n✅ GITHUB ACTIONS WORKFLOW OPTIMIZATION:\\n- Fixed repository-maintenance.yml (schedule/manual only)  \\n- Fixed docker-env.yml (manual/workflow_call only)\\n- Prevents cascade failures and resource waste\\n\\n✅ ENHANCED PRODUCTION MCP SERVER:\\n- Added vault_api_key_status tool for comprehensive API key diagnostics\\n- Added production_startup_validator for complete configuration validation\\n- Added github_workflow_optimizer for workflow analysis and issue detection\\n- Updated MCP configuration for enhanced production monitoring\\n\\n✅ COMPREHENSIVE DOCUMENTATION:\\n- Updated .github/copilot-instructions.md with vault integration details\\n- Added strict production mode patterns and examples\\n- Enhanced MCP server strategy with new tools\\n- Updated architecture documentation with vault integration patterns\\n\\n🔑 VAULT FEATURES:\\n- 5-minute TTL caching for performance\\n- Exponential backoff retry logic\\n- Environment variable fallback\\n- Template/placeholder value filtering\\n- Comprehensive error handling and diagnostics\\n\\n🏭 PRODUCTION FEATURES:\\n- Zero-tolerance for degraded starts\\n- Critical API validation at startup\\n- Real-time vault status monitoring\\n- Enhanced environment switching workflow\\n- Optimized GitHub Actions workflows\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"envLoader.getConfig().supabase.url)\": true,\n    \"envLoader.getConfig().features[k]).length)\": true,\n    \"console.log('🔑\": true,\n    \"git add . && git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:ALLOW_DEGRADED_START=\\\"true\\\"\": true,\n    \"docs/SUPABASE_UPGRADE_NOTES.md\": true,\n    \"console.log('📍\": true,\n    \"console.log('\\\\\\\\n🔧\": true,\n    \"console.log('==========================================')\": true,\n    \"console.log(\\\\\\\\\\\\\\\"\": true,\n    \"}')\": true,\n    \"console.log('}')\": true,\n    \"\\\\\\\"')\": true,\n    \"Result:',\": true,\n    \"docs/GOOGLE_CLOUD_QUICKSTART.md\": true,\n    \"git commit -m \\\"feat: Add Google Cloud Run deployment workflow with validation\\n\\n- Complete CI/CD pipeline with Docker build/push/deploy\\n- Pre-deployment validation script for local testing\\n- Updated Dockerfile for Cloud Run (port 3100)\\n- Comprehensive health checks and deployment verification\\n- Ready for automated deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"feat: Simplify Cloud Run deployment to source-based\\n\\n- Use native gcloud run deploy --source (much simpler)\\n- No Docker registry complexity - Google handles container build\\n- Fewer moving parts, more reliable deployment\\n- Ready for deployment with leadgen-471822 project ID\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"test: verify Cloud Build trigger configuration\\n\\n- Add deployment test file to trigger automated build\\n- Test service account permissions (Cloud Build WorkerPool User, Artifact Registry Writer)\\n- Verify us-central1 regional alignment\\n- Confirm GitHub App repository connection\\n- Expected: successful build and deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -am \\\"fix: correct Artifact Registry repository name in cloudbuild.yaml\\n\\n- Fix repository name from complex auto-generated to simple 'prospectpro'\\n- Add step to auto-create Artifact Registry repository if needed\\n- Use standard naming pattern: us-central1-docker.pkg.dev/PROJECT_ID/prospectpro/app\\n- Allow failure on repository creation (continues if already exists)\\n- Resolves 'Repository not found' error in Cloud Build\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"trigger-test.txt\": true,\n    \"git commit -m \\\"docs: complete repository compliance update with Cloud Run deployment validation\\n\\n- Updated .github/copilot-instructions.md with Google Cloud Run deployment section\\n- Added validated trigger configuration documentation (ID: 0358b3a4-c7a4-4da9-9610-1e335c4894e0)\\n- Enhanced docs/PRODUCTION_SETUP_GUIDE.md with Cloud Run deployment workflow\\n- Updated README.md to v3.0 with production status badges and Cloud Build links\\n- Confirmed .vscode/mcp-config.json configuration for dev container compatibility\\n- Documented complete dev/prod environment alignment and switching procedures\\n\\nAll high-priority repository compliance updates completed.\\nReady for clean closure and fresh development session initiation.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"🔧 Fix Cloud Run port conflict - Remove fixed PORT, enable dynamic port binding\\n\\n- Remove ENV PORT=3100 from Dockerfile (conflicted with Cloud Run's dynamic PORT)\\n- Remove --port=3100 from cloudbuild.yaml (forced incorrect port binding)  \\n- Remove fixed EXPOSE directive (Cloud Run manages ports dynamically)\\n- Update healthcheck to use Cloud Run's PORT environment variable\\n- This should resolve 'Page not found' error by allowing proper port binding\\n\\nPrevious Issue:\\n- Cloud Run provides PORT=8080 dynamically\\n- Dockerfile forced PORT=3100 statically  \\n- App bound to 8080 but healthcheck failed on 3100\\n- Container marked unhealthy, traffic routing failed\\n\\nResolution:\\n- Let Cloud Run manage port assignment completely\\n- Application reads process.env.PORT correctly\\n- Healthcheck uses dynamic port with fallback\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"gcloud\": true,\n    \"git commit -m \\\"📝 Fix Cloud Build trigger ID in documentation\\n\\n- Update trigger ID to correct one: ae04dd92-4509-43ee-9f70-da3caf15dbb4\\n- Previous ID (0358b3a4-c7a4-4da9-9610-1e335c4894e0) was incorrect\\n- This explains why builds succeeded but service wasn't updating\\n- Documentation now reflects the actual production trigger\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"Fix Cloud Run 404 issue: Enable degraded startup, improve error handling, and enhance logging\\n\\n- Add ALLOW_DEGRADED_START=true to Dockerfile for Cloud Run stability\\n- Remove process.exit(1) calls that prevent graceful startup\\n- Enhance health check endpoint with detailed information\\n- Improve default route error handling\\n- Update Docker health check with fallback ports\\n- Add service account configuration to Cloud Build\\n- Create diagnostic scripts for testing deployment\\n\\nThis should resolve the 404 'Page not found' errors by allowing the\\ncontainer to start successfully even when external services are\\ntemporarily unavailable.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:PORT=8080\": true,\n    \"Get-ChildItem -Directory | Where-Object {$_.Name -like \\\"*Prospect*\\\"}\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"dir\": true,\n    \"npm run test\": true,\n    \"cd /workspaces/ProspectPro && node -e \\\"console.log(JSON.parse(require('fs').readFileSync('.vscode/settings.json', 'utf8')))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Deno\\\"\": true,\n    \"MCP\\\"\": true,\n    \"server.js\": true,\n    \"server-simple.js\": true,\n    \"mcp-servers'\": true,\n    \"cd /workspaces/ProspectPro/mcp-servers && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mcp)\\\"\": true,\n    \"npm run production-start\": true,\n    \"cd /workspaces/ProspectPro && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"server)\\\"\": true,\n    \"jobs\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"location\\\":\\\"San Diego, CA\\\",\\\"radius\\\":10,\\\"businessTypes\\\":[\\\"restaurant\\\"],\\\"limit\\\":5}' -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"fg\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ps aux | grep -E \\\"(node.*server)\\\" | grep -v grep\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 3 && curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 10 && curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | head -20\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm.*dev\\\"\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"businessType\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"Seattle, WA\\\", \\\"maxResults\\\": 2}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"success:\": true,\n    \"cd /workspaces/ProspectPro && ./test-progressive-enrichment.sh\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enrichment-pdl' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"action\\\": \\\"enrichCompany\\\", \\\"companyName\\\": \\\"Microsoft Corporation\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enrichment-orchestrator' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"businessName\\\": \\\"Starbucks Corporation\\\", \\\"domain\\\": \\\"starbucks.com\\\", \\\"state\\\": \\\"WA\\\", \\\"tier\\\": \\\"professional\\\", \\\"maxCostPerBusiness\\\": 1.50}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run build\": true,\n    \"vercel\": true,\n    \"vite\\\\\": true,\n    \"react\\\"\": true,\n    \"pgrep\": true,\n    \"screen\": true\n  },\n  \"chat.agent.maxRequests\": 1000,\n  \"chat.editing.confirmEditRequestRetry\": false,\n  \"gitlens.gitCommands.skipConfirmations\": [\"fetch:command\"],\n  \"chat.editing.confirmEditRequestRemoval\": false,\n  \"githubPullRequests.codingAgent.promptForConfirmation\": false,\n  \"[markdown]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[jsonc]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[javascript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"workbench.secondarySideBar.defaultVisibility\": \"visible\",\n  \"window.menuBarVisibility\": \"classic\",\n  \"containers.containerClient\": \"com.microsoft.visualstudio.containers.docker\",\n  \"containers.orchestratorClient\": \"com.microsoft.visualstudio.orchestrators.dockercompose\",\n  \"@azure.argTenant\": \"\",\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"text\": \"- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Code Gen Best Practices: Before generating code for Azure, running terminal commands for Azure, performing operations related to Azure, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `code-generation` to get general Azure code generation best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Deployment Best Practices: Before deploying to Azure, preparing applications for deployment to Azure, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `deployment` to get general Azure deployment best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Code Gen Best Practices: Before generating code for Azure Functions, performing operations related to Azure Functions, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `code-generation` to get Azure Functions code generation best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Deployment Best Practices: Before deploying Azure Functions apps to Azure, preparing for the deployment, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `deployment` to get Azure Functions deployment best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure SWA Best Practices: Before working with static web apps, creating plans for static web apps, or performing related operations, always invoke your Azure best practice tool if available first. Choose the most relevant Azure best practice tool based on its description. Only call this tool when the user is discussing Azure Static Web Apps; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Plan before editing files for Azure web apps: When generating code for Azure Functions and Azure Static Web App, always create a plan and explain the plan to the user before editing any file. Proceed with editing the files after getting consent from the user.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Summarize topic before taking action: When the user asks about Azure Functions, invoke the azure_development-summarize_topic tool once first to see if any existing custom mode could be a good fit to what user is asking.\"\n    }\n  ],\n  \"workbench.startupEditor\": \"none\",\n  \"git-autoconfig.configList\": [\n    {\n      \"user.email\": \"Alextorelli28@gmail.com\",\n      \"user.name\": \"Alextorelli28@gmail.com\"\n    }\n  ],\n  \"redhat.telemetry.enabled\": true,\n  \"git-autoconfig.ignoreRootList\": [\"D:/APPS/ProspectPro/ProspectPro\"],\n  \"terminal.integrated.enableMultiLinePasteWarning\": \"never\",\n  \"remoteHub.commitDirectlyWarning\": \"off\",\n  \"vs-kubernetes\": {\n    \"vscode-kubernetes.kubectl-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/kubectl/kubectl\",\n    \"vscode-kubernetes.helm-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm\",\n    \"vscode-kubernetes.minikube-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube\"\n  },\n  \"githubPullRequests.createOnPublishBranch\": \"never\",\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"plaintext\": true,\n    \"markdown\": true,\n    \"scminput\": false\n  },\n  \"[sql]\": {\n    \"editor.defaultFormatter\": \"mtxr.sqltools\"\n  },\n  \"[html]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[typescriptreact]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[css]\": {\n    \"editor.defaultFormatter\": \"vscode.css-language-features\"\n  },\n  \"[json]\": {\n    \"editor.defaultFormatter\": \"vscode.json-language-features\"\n  },\n  \"workbench.colorCustomizations\": {\n    \"[Vira*]\": {\n      \"statusBar.debuggingBackground\": \"#80CBC433\",\n      \"statusBar.debuggingForeground\": \"#80CBC4\",\n      \"toolbar.activeBackground\": \"#80CBC426\",\n      \"button.background\": \"#80CBC4\",\n      \"button.hoverBackground\": \"#80CBC4cc\",\n      \"extensionButton.separator\": \"#80CBC433\",\n      \"extensionButton.background\": \"#80CBC414\",\n      \"extensionButton.foreground\": \"#80CBC4\",\n      \"extensionButton.hoverBackground\": \"#80CBC433\",\n      \"extensionButton.prominentForeground\": \"#80CBC4\",\n      \"extensionButton.prominentBackground\": \"#80CBC414\",\n      \"extensionButton.prominentHoverBackground\": \"#80CBC433\",\n      \"activityBarBadge.background\": \"#80CBC4\",\n      \"activityBar.activeBorder\": \"#80CBC4\",\n      \"activityBarTop.activeBorder\": \"#80CBC4\",\n      \"list.inactiveSelectionIconForeground\": \"#80CBC4\",\n      \"list.activeSelectionForeground\": \"#80CBC4\",\n      \"list.inactiveSelectionForeground\": \"#80CBC4\",\n      \"list.highlightForeground\": \"#80CBC4\",\n      \"sash.hoverBorder\": \"#80CBC480\",\n      \"list.activeSelectionIconForeground\": \"#80CBC4\",\n      \"scrollbarSlider.activeBackground\": \"#80CBC480\",\n      \"editorSuggestWidget.highlightForeground\": \"#80CBC4\",\n      \"textLink.foreground\": \"#80CBC4\",\n      \"progressBar.background\": \"#80CBC4\",\n      \"pickerGroup.foreground\": \"#80CBC4\",\n      \"tab.activeBorder\": \"#80CBC400\",\n      \"tab.activeBorderTop\": \"#80CBC4\",\n      \"tab.unfocusedActiveBorder\": \"#80CBC400\",\n      \"tab.unfocusedActiveBorderTop\": \"#80CBC4\",\n      \"tab.activeModifiedBorder\": \"#80CBC4\",\n      \"notificationLink.foreground\": \"#80CBC4\",\n      \"editorWidget.resizeBorder\": \"#80CBC4\",\n      \"editorWidget.border\": \"#80CBC4\",\n      \"settings.modifiedItemIndicator\": \"#80CBC4\",\n      \"panelTitle.activeBorder\": \"#80CBC4\",\n      \"breadcrumb.activeSelectionForeground\": \"#80CBC4\",\n      \"menu.selectionForeground\": \"#80CBC4\",\n      \"menubar.selectionForeground\": \"#80CBC4\",\n      \"editor.findMatchBorder\": \"#80CBC4\",\n      \"selection.background\": \"#80CBC440\",\n      \"statusBarItem.remoteBackground\": \"#80CBC414\",\n      \"statusBarItem.remoteHoverBackground\": \"#80CBC4\",\n      \"statusBarItem.remoteForeground\": \"#80CBC4\",\n      \"notebook.inactiveFocusedCellBorder\": \"#80CBC480\",\n      \"commandCenter.activeBorder\": \"#80CBC480\",\n      \"chat.slashCommandForeground\": \"#80CBC4\",\n      \"chat.avatarForeground\": \"#80CBC4\",\n      \"activityBarBadge.foreground\": \"#000000\",\n      \"button.foreground\": \"#000000\",\n      \"statusBarItem.remoteHoverForeground\": \"#000000\",\n      \"editorGroupHeader.tabsBackground\": \"#ffffff0a\",\n      \"tab.border\": \"#ffffff01\",\n      \"tab.inactiveBackground\": \"#ffffff01\",\n      \"widget.shadow\": \"#00000000\",\n      \"scrollbar.shadow\": \"#00000000\"\n    }\n  },\n  \"workbench.preferredDarkColorTheme\": \"Vira Ocean\",\n  \"workbench.productIconTheme\": \"viraUIIcons\",\n  \"viraTheme.contrastedTabs\": true,\n  \"viraTheme.hidesShadows\": true,\n  \"chat.todoListTool.enabled\": false,\n  \"chat.tools.edits.autoApprove\": {\n    \"**/*.{csproj,fsproj,vbproj}\": true\n  },\n  \"chat.useChatSessionsForCloudButton\": true,\n  \"workbench.settings.applyToAllProfiles\": [\n    \"chat.useChatSessionsForCloudButton\"\n  ],\n  \"chat.agentSessionsViewLocation\": \"view\",\n  \"window.density.editorTabHeight\": \"compact\",\n  \"docker.extension.enableComposeLanguageServer\": false,\n  \"docker.extension.dockerEngineAvailabilityPrompt\": false,\n  \"github.copilot.chat.agent.thinkingTool\": true,\n  \"github.copilot.chat.editor.temporalContext.enabled\": true,\n  \"github.copilot.chat.edits.temporalContext.enabled\": true,\n  \"github.copilot.chat.responsesApiReasoningEffort\": \"high\",\n  \"github.copilot.chat.responsesApiReasoningSummary\": \"detailed\",\n  \"github.copilot.chat.useResponsesApi\": true,\n  \"viraTheme.useTopTabIndicator\": true,\n  \"remoteHub.richNavigation.enabled\": true,\n  \"workbench.editor.enablePreview\": false,\n  \"deno.codeLens.test\": true,\n  \"deno.codeLens.referencesAllFunctions\": true,\n  \"deno.codeLens.references\": true,\n  \"deno.codeLens.implementations\": true,\n  \"deno.logFile\": true,\n  \"chat.mcp.serverSampling\": {\n    \"Global in Code: memory\": {\n      \"allowedModels\": [\n        \"copilot/gpt-4.1\",\n        \"copilot/auto\",\n        \"copilot/claude-3.7-sonnet\",\n        \"copilot/claude-3.7-sonnet-thought\",\n        \"copilot/claude-sonnet-4\",\n        \"copilot/gemini-2.5-pro\",\n        \"copilot/gpt-5\",\n        \"copilot/grok-code-fast-1\"\n      ]\n    }\n  },\n  \"snyk.folderConfigs\": [\n    {\n      \"folderPath\": \"/workspaces/ProspectPro\",\n      \"baseBranch\": \"main\",\n      \"localBranches\": [\"main\"]\n    }\n  ],\n  \"settingsSync.ignoredExtensions\": [\n    \"christian-kohler.npm-intellisense\",\n    \"ms-vscode.vscode-node-azure-pack\",\n    \"ms-azuretools.vscode-azurevirtualmachines\"\n  ],\n  \"vsicons.dontShowNewVersionMessage\": true,\n  \"snyk.yesWelcomeNotification\": false,\n  \"snyk.trustedFolders\": [\"/workspaces/ProspectPro\"],\n  \"[dockercompose]\": {\n    \"editor.insertSpaces\": true,\n    \"editor.tabSize\": 2,\n    \"editor.autoIndent\": \"advanced\",\n    \"editor.quickSuggestions\": {\n      \"other\": true,\n      \"comments\": false,\n      \"strings\": true\n    },\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  },\n  \"[github-actions-workflow]\": {\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  },\n  \"extensions.ignoreRecommendations\": true\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":32,"duration":4.602},
{"type":"mark","name":"lsp.did_change_batched","count":1,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":1,"duration":3.394},
{"type":"mark","name":"lsp.code_action","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":218,"character":27},"end":{"line":218,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":2,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":2,"duration":0.884},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":1,"duration":0.046},
{"type":"mark","name":"lsp.code_lens","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"mark","name":"lsp.did_open","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/old-frontend/package.json","languageId":"json","version":1,"text":"{\n  \"name\": \"prospectpro-frontend\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"tsc && vite build\",\n    \"preview\": \"vite preview\",\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"@supabase/supabase-js\": \"^2.39.0\",\n    \"@tanstack/react-query\": \"^5.17.0\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-router-dom\": \"^6.20.1\",\n    \"zustand\": \"^4.4.7\",\n    \"recharts\": \"^2.8.0\",\n    \"lucide-react\": \"^0.294.0\",\n    \"clsx\": \"^2.0.0\",\n    \"tailwind-merge\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"^18.2.43\",\n    \"@types/react-dom\": \"^18.2.17\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\n    \"@typescript-eslint/parser\": \"^6.14.0\",\n    \"@vitejs/plugin-react\": \"^4.2.1\",\n    \"autoprefixer\": \"^10.4.16\",\n    \"eslint\": \"^8.55.0\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\n    \"postcss\": \"^8.4.32\",\n    \"tailwindcss\": \"^3.3.6\",\n    \"typescript\": \"^5.2.2\",\n    \"vite\": \"^5.0.8\"\n  }\n}"}}},
{"type":"measure","name":"lsp.did_open","count":33,"duration":0.057},
{"type":"mark","name":"lsp.did_open","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/deployment-logs/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospect-pro-real-api\",\r\n  \"version\": \"3.1.0\",\r\n  \"description\": \"Production-grade lead generation platform with Enhanced Quality Scoring v3.0, zero-fake-data policy and Supabase Vault integration\",\r\n  \"main\": \"server.js\",\r\n  \"scripts\": {\r\n    \"start\": \"node server.js\",\r\n    \"dev\": \"nodemon server.js\",\r\n    \"prod\": \"NODE_ENV=production node server.js\",\r\n    \"production:start\": \"powershell -ExecutionPolicy Bypass -File ./scripts/init-prod-simple.ps1\",\r\n    \"production:checklist\": \"echo 'Production checklist: Check .env file, test database connection, validate APIs'\",\r\n    \"prod:init\": \"powershell -ExecutionPolicy Bypass -File ./scripts/init-prod-simple.ps1\",\r\n    \"prod:setup-env\": \"node ./scripts/pull-env-from-secrets.js\",\r\n    \"prod:check\": \"node --version && echo Production environment ready\",\r\n    \"health\": \"curl http://localhost:3100/health || echo 'Server not running'\",\r\n    \"diag\": \"curl http://localhost:3100/diag | json_pp || echo 'Server not running'\",\r\n    \"test\": \"echo 'Tests moved to testing branch. Run: git checkout testing && node tests/validation/test-real-data.js'\",\r\n    \"postinstall\": \"echo 'ProspectPro v3.0: Production-ready deployment configured'\",\r\n    \"docker:dev\": \"./docker/start-dev.sh\",\r\n    \"docker:prod\": \"./docker/deploy-prod.sh\",\r\n    \"docker:build\": \"docker-compose build\",\r\n    \"docker:package\": \"./docker/create-client-package.sh\",\r\n    \"docker:logs\": \"docker-compose logs -f prospectpro\",\r\n    \"docker:stop\": \"docker-compose down\",\r\n    \"docker:restart\": \"docker-compose restart\",\r\n    \"secure:setup\": \"./docker/secure-start.sh setup\",\r\n    \"secure:start\": \"./docker/secure-start.sh start\",\r\n    \"secure:dev\": \"./docker/secure-start.sh dev\",\r\n    \"keychain:setup\": \"./docker/keychain-start.sh setup\",\r\n    \"keychain:start\": \"./docker/keychain-start.sh start\",\r\n    \"1password:setup\": \"./docker/1password-start.sh setup\",\r\n    \"1password:start\": \"./docker/1password-start.sh start\",\r\n    \"vault:deploy\": \"echo '🔐 Deploying with Supabase Vault integration...' && docker-compose up --build -d\",\r\n    \"vault:dev\": \"echo '🔐 Starting development with Supabase Vault...' && docker-compose -f docker-compose.dev.yml up --build\",\r\n    \"vault:logs\": \"docker-compose logs -f prospectpro\",\r\n    \"vault:test\": \"echo '🧪 Testing Vault connection...' && docker-compose exec prospectpro curl -f http://localhost:3000/diag\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && node test-servers.js\",\r\n    \"mcp:start:database\": \"cd mcp-servers && node database-server.js\",\r\n    \"mcp:start:api\": \"cd mcp-servers && node api-server.js\",\r\n    \"mcp:start:filesystem\": \"cd mcp-servers && node filesystem-server.js\",\r\n    \"mcp:start:monitoring\": \"cd mcp-servers && node monitoring-server.js\",\r\n    \"mcp:start:production\": \"cd mcp-servers && node production-server.js\",\r\n    \"mcp:start:all\": \"cd mcp-servers && npm run start:all\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=20.0.0\",\r\n    \"npm\": \">=9.0.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@googlemaps/google-maps-services-js\": \"^3.4.2\",\r\n    \"@modelcontextprotocol/sdk\": \"^1.18.1\",\r\n    \"@supabase/supabase-js\": \"^2.57.4\",\r\n    \"axios\": \"^1.12.2\",\r\n    \"bcryptjs\": \"^2.4.3\",\r\n    \"cheerio\": \"^1.1.2\",\r\n    \"cors\": \"^2.8.5\",\r\n    \"csv-writer\": \"^1.6.0\",\r\n    \"dotenv\": \"^16.6.1\",\r\n    \"express\": \"^4.18.2\",\r\n    \"express-rate-limit\": \"^8.1.0\",\r\n    \"helmet\": \"^7.2.0\",\r\n    \"jsonwebtoken\": \"^9.0.2\",\r\n    \"node-fetch\": \"^2.7.0\",\r\n    \"p-limit\": \"^3.1.0\",\r\n    \"pg\": \"^8.16.3\",\r\n    \"prom-client\": \"^15.1.3\",\r\n    \"rate-limiter-flexible\": \"^2.4.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"jest\": \"^30.1.3\",\r\n    \"nodemon\": \"^3.1.10\",\r\n    \"supabase\": \"^2.45.5\",\r\n    \"supertest\": \"^7.1.4\"\r\n  },\r\n  \"keywords\": [\r\n    \"lead-generation\",\r\n    \"business-intelligence\",\r\n    \"api-integration\"\r\n  ],\r\n  \"author\": \"ProspectPro Development Team\",\r\n  \"license\": \"MIT\"\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":34,"duration":0.084},
{"type":"mark","name":"lsp.did_close","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"}}},
{"type":"measure","name":"lsp.did_close","count":1,"duration":0.036},
{"type":"mark","name":"lsp.did_close","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":2,"duration":0.03},
{"type":"mark","name":"lsp.did_close","count":3,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":3,"duration":0.007},
{"type":"mark","name":"lsp.did_close","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/old-frontend/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":4,"duration":0.031},
{"type":"mark","name":"lsp.did_close","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/deployment-logs/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":5,"duration":0.043},
{"type":"mark","name":"lsp.inlay_hint","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":156,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":156,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.goto_definition","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},"position":{"line":9,"character":13}}},
{"type":"mark","name":"lsp.goto_definition","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},"position":{"line":3,"character":9}}},
{"type":"mark","name":"lsp.did_open","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport {\n  EdgeFunctionAuth,\n  corsHeaders,\n  handleCORS,\n} from \"../_shared/edge-auth.ts\";\n\n// User-Aware Campaign Export Function\n// October 4, 2025 - Export with user authentication and ownership\n\ninterface ExportRequest {\n  campaignId?: string;\n  format?: \"csv\" | \"json\" | \"xlsx\";\n  includeEnrichmentData?: boolean;\n  userEmail?: string;\n  sessionUserId?: string;\n}\n\ninterface ExportLead {\n  businessName: string;\n  address: string;\n  phone: string;\n  website: string;\n  email: string;\n  confidenceScore: number;\n  verificationSources: string[];\n  apolloVerified: boolean;\n  chamberVerified: boolean;\n  licenseVerified: boolean;\n  totalCost: number;\n  processingStrategy: string;\n}\n\n// Helper function to get user context from request\nfunction getUserContext(req: Request, requestData: ExportRequest) {\n  const authHeader = req.headers.get(\"Authorization\");\n  let userFromJWT = null;\n\n  if (authHeader?.startsWith(\"Bearer \")) {\n    const token = authHeader.substring(7);\n    try {\n      if (token.startsWith(\"eyJ\")) {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        userFromJWT = payload.sub;\n      }\n    } catch (error) {\n      console.log(\"Could not decode JWT for user info:\", error);\n    }\n  }\n\n  return {\n    userId: userFromJWT || requestData.sessionUserId || null,\n    userEmail: requestData.userEmail || null,\n    isAuthenticated: !!userFromJWT,\n    sessionId: requestData.sessionUserId,\n  };\n}\n\n// CSV formatting function\nfunction formatAsCSV(\n  leads: ExportLead[],\n  includeEnrichmentData: boolean\n): string {\n  const headers = [\n    \"Business Name\",\n    \"Address\",\n    \"Phone\",\n    \"Website\",\n    \"Email\",\n    \"Confidence Score\",\n  ];\n\n  if (includeEnrichmentData) {\n    headers.push(\n      \"Verification Sources\",\n      \"Apollo Verified\",\n      \"Chamber Verified\",\n      \"License Verified\",\n      \"Total Cost\",\n      \"Processing Strategy\"\n    );\n  }\n\n  const csvRows = [headers.join(\",\")];\n\n  leads.forEach((lead) => {\n    const row = [\n      `\"${lead.businessName.replace(/\"/g, '\"\"')}\"`,\n      `\"${lead.address.replace(/\"/g, '\"\"')}\"`,\n      `\"${lead.phone}\"`,\n      `\"${lead.website}\"`,\n      `\"${lead.email}\"`,\n      lead.confidenceScore.toString(),\n    ];\n\n    if (includeEnrichmentData) {\n      row.push(\n        `\"${lead.verificationSources.join(\", \")}\"`,\n        lead.apolloVerified.toString(),\n        lead.chamberVerified.toString(),\n        lead.licenseVerified.toString(),\n        lead.totalCost.toString(),\n        `\"${lead.processingStrategy}\"`\n      );\n    }\n\n    csvRows.push(row.join(\",\"));\n  });\n\n  return csvRows.join(\"\\n\");\n}\n\n// Get campaign data with user authorization\nasync function getCampaignData(\n  supabaseClient: any,\n  campaignId: string,\n  userContext: any\n) {\n  try {\n    // Get campaign with user authorization - RLS policies will handle access control\n    const { data: campaign, error: campaignError } = await supabaseClient\n      .from(\"campaigns\")\n      .select(\"*\")\n      .eq(\"id\", campaignId)\n      .single();\n\n    if (campaignError) {\n      throw new Error(\n        `Campaign not found or access denied: ${campaignError.message}`\n      );\n    }\n\n    // Get leads for the campaign\n    const { data: leads, error: leadsError } = await supabaseClient\n      .from(\"leads\")\n      .select(\"*\")\n      .eq(\"campaign_id\", campaignId);\n\n    if (leadsError) {\n      throw new Error(`Could not fetch leads: ${leadsError.message}`);\n    }\n\n    return { campaign, leads };\n  } catch (error) {\n    throw error;\n  }\n}\n\nserve(async (req) => {\n  // Handle CORS preflight\n  const corsResponse = handleCORS(req);\n  if (corsResponse) return corsResponse;\n\n  try {\n    console.log(`📤 Campaign Export with User Authentication`);\n\n    // Initialize Edge Function authentication\n    const edgeAuth = new EdgeFunctionAuth();\n    const authContext = edgeAuth.getAuthContext();\n\n    console.log(\n      `🔐 Auth: ${authContext.keyFormat} (${\n        authContext.isValid ? \"Valid\" : \"Invalid\"\n      })`\n    );\n\n    if (!authContext.isValid) {\n      throw new Error(`Authentication failed: ${authContext.keyFormat}`);\n    }\n\n    // Parse request\n    const requestData: ExportRequest = await req.json();\n    const {\n      campaignId,\n      format = \"csv\",\n      includeEnrichmentData = true,\n    } = requestData;\n\n    if (!campaignId) {\n      throw new Error(\"Campaign ID is required\");\n    }\n\n    // Get user context\n    const userContext = getUserContext(req, requestData);\n    console.log(`👤 Export User Context:`, userContext);\n\n    // Get campaign and leads data\n    const { campaign, leads } = await getCampaignData(\n      authContext.client,\n      campaignId,\n      userContext\n    );\n\n    console.log(\n      `📊 Exporting campaign: ${campaign.business_type} in ${campaign.location}`\n    );\n    console.log(`📋 Lead count: ${leads.length}`);\n\n    // Transform leads for export\n    const exportLeads: ExportLead[] = leads.map((lead) => ({\n      businessName: lead.business_name,\n      address: lead.address,\n      phone: lead.phone,\n      website: lead.website,\n      email: lead.email,\n      confidenceScore: lead.confidence_score,\n      verificationSources: lead.enrichment_data?.verificationSources || [\n        \"google_places\",\n      ],\n      apolloVerified: lead.enrichment_data?.apolloVerified || false,\n      chamberVerified: lead.enrichment_data?.chamberVerified || false,\n      licenseVerified: lead.enrichment_data?.licenseVerified || false,\n      totalCost: lead.enrichment_data?.processingMetadata?.totalCost || 0,\n      processingStrategy:\n        lead.enrichment_data?.processingMetadata?.processingStrategy || \"basic\",\n    }));\n\n    // Record export in database\n    const exportRecord = {\n      campaign_id: campaignId,\n      export_type: \"lead_export\",\n      file_format: format,\n      row_count: exportLeads.length,\n      export_status: \"completed\",\n      completed_at: new Date().toISOString(),\n      // Add user_id if available\n      ...(userContext.userId && { user_id: userContext.userId }),\n    };\n\n    const { error: exportError } = await authContext.client\n      .from(\"dashboard_exports\")\n      .insert(exportRecord);\n\n    if (exportError) {\n      console.warn(\"Could not record export:\", exportError.message);\n    }\n\n    // Generate export data based on format\n    let exportData: string;\n    let contentType: string;\n    let fileName: string;\n\n    switch (format) {\n      case \"csv\":\n        exportData = formatAsCSV(exportLeads, includeEnrichmentData);\n        contentType = \"text/csv\";\n        fileName = `prospectpro_${campaign.business_type.replace(\n          /\\s+/g,\n          \"_\"\n        )}_${campaignId.slice(-8)}.csv`;\n        break;\n\n      case \"json\":\n        exportData = JSON.stringify(\n          {\n            campaign: {\n              id: campaign.id,\n              businessType: campaign.business_type,\n              location: campaign.location,\n              targetCount: campaign.target_count,\n              resultsCount: campaign.results_count,\n              totalCost: campaign.total_cost,\n              createdAt: campaign.created_at,\n            },\n            leads: exportLeads,\n            exportMetadata: {\n              exportedAt: new Date().toISOString(),\n              includeEnrichmentData,\n              totalLeads: exportLeads.length,\n              userContext: {\n                isAuthenticated: userContext.isAuthenticated,\n                hasUserId: !!userContext.userId,\n              },\n            },\n          },\n          null,\n          2\n        );\n        contentType = \"application/json\";\n        fileName = `prospectpro_${campaign.business_type.replace(\n          /\\s+/g,\n          \"_\"\n        )}_${campaignId.slice(-8)}.json`;\n        break;\n\n      default:\n        throw new Error(`Unsupported export format: ${format}`);\n    }\n\n    const response = {\n      success: true,\n      exportId: `export_${Date.now()}`,\n      campaign: {\n        id: campaign.id,\n        businessType: campaign.business_type,\n        location: campaign.location,\n        leadCount: exportLeads.length,\n      },\n      export: {\n        format,\n        fileName,\n        size: exportData.length,\n        includeEnrichmentData,\n        recordedInDatabase: !exportError,\n      },\n      userContext: {\n        isAuthenticated: userContext.isAuthenticated,\n        hasAccess: true,\n        ownership: userContext.userId ? \"user_owned\" : \"session_based\",\n      },\n      metadata: {\n        timestamp: new Date().toISOString(),\n        version: \"4.2\",\n        userAware: true,\n      },\n    };\n\n    // Return the export data directly for download\n    if (req.url.includes(\"download=true\")) {\n      return new Response(exportData, {\n        headers: {\n          ...corsHeaders,\n          \"Content-Type\": contentType,\n          \"Content-Disposition\": `attachment; filename=\"${fileName}\"`,\n          \"Content-Length\": exportData.length.toString(),\n        },\n      });\n    }\n\n    // Return export metadata\n    return new Response(JSON.stringify(response, null, 2), {\n      headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n    });\n  } catch (error) {\n    console.error(\"❌ Export error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Export failed\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":44,"duration":3.526},
{"type":"mark","name":"lsp.goto_definition","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts"},"position":{"line":226,"character":34}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":1,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts",6005]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":51,"duration":0.313},
{"type":"measure","name":"tsc.op.op_script_names","count":7,"duration":2.76},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":9,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":269,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":269,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":782,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":782,"duration":0.065},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":118,"duration":0.012},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":1,"duration":103.934},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":1,"duration":106.133},
{"type":"measure","name":"lsp.goto_definition","count":3,"duration":106.305},
{"type":"mark","name":"lsp.goto_definition","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},"position":{"line":7,"character":9}}},
{"type":"mark","name":"lsp.goto_definition","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},"position":{"line":7,"character":9}}},
{"type":"mark","name":"lsp.goto_definition","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},"position":{"line":9,"character":13}}},
{"type":"mark","name":"lsp.goto_definition","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},"position":{"line":255,"character":10}}},
{"type":"mark","name":"lsp.did_close","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":13,"duration":2.78},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":52,"duration":0.342},
{"type":"mark","name":"lsp.code_action","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":218,"character":27},"end":{"line":218,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":167,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":15,"args":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":15,"duration":2.723},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":169,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":53,"duration":0.431},
{"type":"mark","name":"lsp.did_change_batched","count":16,"args":"file:///workspaces/ProspectPro/src/utils/campaignTransforms.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":16,"duration":1.453},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":54,"duration":0.337},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":170,"duration":0.012},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":12,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":167,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":17,"args":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":17,"duration":4.28},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":171,"duration":0.025},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":55,"duration":0.349},
{"type":"mark","name":"lsp.inlay_hint","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":167,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":172,"duration":0.016},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":13,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":167,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":167,"character":0},"end":{"line":242,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":173,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":14,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",56]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":8,"duration":0.62},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":10,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":270,"args":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":270,"duration":0.046},
{"type":"mark","name":"tsc.op.op_load","count":271,"args":"file:///workspaces/ProspectPro/src/utils/campaignTransforms.ts"},
{"type":"measure","name":"tsc.op.op_load","count":271,"duration":0.047},
{"type":"mark","name":"tsc.op.op_load","count":272,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":272,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":783,"args":{"base":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/ProgressDisplay"],[false,"../contexts/AuthContext"],[false,"../hooks/useJobProgress"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/campaignTransforms"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":783,"duration":0.124},
{"type":"mark","name":"tsc.op.op_resolve","count":784,"args":{"base":"file:///workspaces/ProspectPro/src/utils/campaignTransforms.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":784,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":785,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":785,"duration":0.056},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":14,"duration":324.254},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":14,"duration":326.312},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":14,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":14,"duration":0.165},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":14,"duration":0.661},
{"type":"measure","name":"lsp.diagnostic","count":174,"duration":327.283},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":175,"duration":0.02},
{"type":"mark","name":"lsp.code_action","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"range":{"start":{"line":218,"character":27},"end":{"line":218,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":176,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":177,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":178,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":179,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":180,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":181,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":182,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":183,"duration":0.001},
