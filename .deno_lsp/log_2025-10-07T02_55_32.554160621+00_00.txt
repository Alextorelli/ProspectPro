Starting Deno language server...
{"type":"mark","name":"lsp.initialize","count":1,"args":{"processId":11825,"rootPath":"/workspaces/ProspectPro","rootUri":"file:///workspaces/ProspectPro","initializationOptions":{"enable":true,"cacheOnSave":true,"disablePaths":[],"enablePaths":["supabase/functions"],"path":null,"env":{},"envFile":null,"cache":null,"certificateStores":null,"codeLens":{"implementations":true,"references":true,"referencesAllFunctions":true,"test":true,"testArgs":["--allow-all","--no-check"]},"config":null,"documentPreloadLimit":1000,"future":false,"importMap":null,"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"maxTsServerMemory":3072,"suggest":{"autoImports":true,"completeFunctionCalls":false,"names":true,"paths":true,"imports":{"autoDiscover":true,"hosts":{"https://deno.land":true}}},"trace":{"server":"off"},"testing":{"args":["--allow-all","--no-check"]},"tlsCertificate":null,"unsafelyIgnoreCertificateErrors":null,"unstable":true,"lint":true,"internalDebug":false,"internalInspect":false,"logFile":true,"defaultTaskCommand":"open","javascript":{"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"validate":{"enable":true},"suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"preferGoToSourceDefinition":false,"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":true,"names":true,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"shortest","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false}}},"typescript":{"tsdk":"","disableAutomaticTypeAcquisition":false,"enablePromptUseWorkspaceTsdk":false,"referencesCodeLens":{"enabled":false,"showOnAllFunctions":false},"implementationsCodeLens":{"enabled":false,"showOnInterfaceMethods":false},"experimental":{"useTsgo":false},"reportStyleChecksAsWarnings":true,"validate":{"enable":true},"tsc":{"autoDetect":"on"},"locale":"auto","suggestionActions":{"enabled":true},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"workspaceSymbols":{"scope":"allOpenProjects","excludeLibrarySymbols":true},"preferGoToSourceDefinition":false,"tsserver":{"enableRegionDiagnostics":true,"nodePath":"","web":{"projectWideIntellisense":{"enabled":true,"suppressSemanticErrors":false},"typeAcquisition":{"enabled":true}},"useSyntaxServer":"auto","maxTsServerMemory":3072,"experimental":{"enableProjectDiagnostics":false},"watchOptions":"vscode","enableTracing":false,"log":"off","pluginPaths":[]},"updateImportsOnPaste":{"enabled":true},"suggest":{"enabled":true,"autoImports":false,"completeFunctionCalls":false,"paths":true,"completeJSDocs":true,"jsdoc":{"generateReturns":true},"includeAutomaticOptionalChainCompletions":true,"includeCompletionsForImportStatements":true,"classMemberSnippets":{"enabled":true},"objectLiteralMethodSnippets":{"enabled":true}},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"shortest","importModuleSpecifierEnding":"auto","jsxAttributeCompletionStyle":"auto","includePackageJsonAutoImports":"auto","autoImportFileExcludePatterns":[],"autoImportSpecifierExcludeRegexes":[],"preferTypeOnlyAutoImports":false,"useAliasesForRenames":true,"renameMatchingJsxTags":true,"organizeImports":{}},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"insertSpaceAfterTypeAssertion":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false,"semicolons":"ignore","indentSwitchCase":true},"inlayHints":{"parameterNames":{"enabled":"none","suppressWhenArgumentMatchesName":true},"parameterTypes":{"enabled":false},"variableTypes":{"enabled":false,"suppressWhenTypeMatchesName":true},"propertyDeclarationTypes":{"enabled":false},"functionLikeReturnTypes":{"enabled":false},"enumMemberValues":{"enabled":false}},"npm":"","check":{"npmIsInstalled":true}},"enableBuiltinCommands":true},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"willCreate":true,"didRename":true,"willRename":true,"didDelete":true,"willDelete":true},"inlineValue":{"refreshSupport":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"insertTextMode":2,"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]}},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.move","refactor.rewrite","source","source.organizeImports","notebook"]}},"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit","command"]},"honorsChangeAnnotations":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false,"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true,"foldingRangeKind":{"valueSet":["comment","imports","region"]},"foldingRange":{"collapsedText":false}},"selectionRange":{"dynamicRegistration":true},"linkedEditingRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"requests":{"range":true,"full":{"delta":true}},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"overlappingTokenSupport":false,"multilineTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"typeHierarchy":{"dynamicRegistration":true},"inlineValue":{"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false}},"notebookDocument":{"synchronization":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true}},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"},"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"positionEncodings":["utf-16"]},"experimental":{"testingApi":true}},"trace":"off","workspaceFolders":[{"uri":"file:///workspaces/ProspectPro","name":"ProspectPro"}],"clientInfo":{"name":"Visual Studio Code","version":"1.104.3"},"locale":"en"}},
  version: 2.5.2 (release, x86_64-unknown-linux-gnu)
  executable: /usr/local/share/npm-global/lib/node_modules/deno/deno
Connected to "Visual Studio Code" 1.104.3
{"type":"measure","name":"lsp.initialize","count":1,"duration":0.283},
{"type":"mark","name":"lsp.update_global_cache"},
Enabling import suggestions for: https://deno.land
{"type":"measure","name":"lsp.update_global_cache","count":1,"duration":14.352},
Refreshing configuration tree...
{"type":"mark","name":"lsp.update_cache"},
{"type":"measure","name":"lsp.update_cache","count":1,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html","languageId":"html","version":1,"text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ProspectPro v4.2 - User-Aware Business Discovery</title>\n    <link rel=\"icon\" type=\"image/png\" href=\"/229328477.png\" />\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2\"></script>\n    <style>\n      .loading {\n        animation: spin 1s linear infinite;\n      }\n      @keyframes spin {\n        to {\n          transform: rotate(360deg);\n        }\n      }\n      .fade-in {\n        animation: fadeIn 0.5s ease-in;\n      }\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n        }\n      }\n    </style>\n  </head>\n  <body class=\"bg-gray-50 min-h-screen\">\n    <!-- Header with User Authentication -->\n    <header class=\"shadow-sm border-b\" style=\"background-color: #f9ed69\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center py-4\">\n          <div>\n            <img src=\"/229328477.png\" alt=\"ProspectPro\" class=\"h-8\" />\n          </div>\n          <div id=\"authSection\" class=\"flex items-center space-x-4\">\n            <!-- Authentication UI will be injected here -->\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <!-- Discovery Form -->\n        <div class=\"lg:col-span-2\">\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h2 class=\"text-xl font-semibold text-gray-900 mb-6\">\n              Business Discovery\n            </h2>\n\n            <form id=\"discoveryForm\" class=\"space-y-6\">\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label\n                    for=\"businessType\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Business Type\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"businessType\"\n                    name=\"businessType\"\n                    placeholder=\"e.g., coffee shop, restaurant, salon\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label\n                    for=\"location\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Location\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"location\"\n                    name=\"location\"\n                    placeholder=\"e.g., Seattle, WA\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div>\n                  <label\n                    for=\"maxResults\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Target Leads\n                  </label>\n                  <select\n                    id=\"maxResults\"\n                    name=\"maxResults\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"5\">5 leads</option>\n                    <option value=\"10\" selected>10 leads</option>\n                    <option value=\"15\">15 leads</option>\n                    <option value=\"25\">25 leads</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label\n                    for=\"budgetLimit\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Budget Limit\n                  </label>\n                  <select\n                    id=\"budgetLimit\"\n                    name=\"budgetLimit\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"25\">$25</option>\n                    <option value=\"50\" selected>$50</option>\n                    <option value=\"100\">$100</option>\n                    <option value=\"200\">$200</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label\n                    for=\"minConfidenceScore\"\n                    class=\"block text-sm font-medium text-gray-700 mb-2\"\n                  >\n                    Min Confidence\n                  </label>\n                  <select\n                    id=\"minConfidenceScore\"\n                    name=\"minConfidenceScore\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"30\">30%</option>\n                    <option value=\"50\" selected>50%</option>\n                    <option value=\"70\">70%</option>\n                    <option value=\"85\">85%</option>\n                  </select>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                id=\"submitBtn\"\n                class=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-md transition duration-200 flex items-center justify-center\"\n              >\n                <span id=\"submitText\">Start Discovery</span>\n                <div id=\"submitSpinner\" class=\"loading ml-2 hidden\">\n                  <div\n                    class=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full\"\n                  ></div>\n                </div>\n              </button>\n            </form>\n          </div>\n        </div>\n\n        <!-- User Dashboard -->\n        <div class=\"space-y-6\">\n          <!-- User Status -->\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">\n              User Status\n            </h3>\n            <div id=\"userStatus\" class=\"space-y-2 text-sm\">\n              <!-- Status will be injected here -->\n            </div>\n          </div>\n\n          <!-- Recent Campaigns -->\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">\n              Recent Campaigns\n            </h3>\n            <div id=\"recentCampaigns\" class=\"space-y-3\">\n              <!-- Campaigns will be injected here -->\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Results Section -->\n      <div id=\"resultsSection\" class=\"mt-8 hidden\">\n        <div class=\"bg-white rounded-lg shadow\">\n          <div\n            class=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\"\n          >\n            <h3 class=\"text-lg font-semibold text-gray-900\">\n              Discovery Results\n            </h3>\n            <button\n              id=\"exportBtn\"\n              class=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm transition duration-200\"\n            >\n              Export CSV\n            </button>\n          </div>\n          <div id=\"resultsContent\" class=\"p-6\">\n            <!-- Results will be injected here -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <script>\n      // ProspectPro v4.2 - User-Aware Frontend\n      // October 4, 2025 - Complete authentication integration\n\n      // Initialize Supabase with new API keys\n      const SUPABASE_URL = \"https://sriycekxdqnesdsgwiuc.supabase.co\";\n      const SUPABASE_ANON_KEY =\n        \"sb_publishable_GaGU6ZiyiO6ncO7kU2qAvA_SFuCyYaM\";\n      const EDGE_FUNCTION_JWT =\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI\";\n\n      const supabase = window.supabase.createClient(\n        SUPABASE_URL,\n        SUPABASE_ANON_KEY\n      );\n\n      // Global state\n      let currentUser = null;\n      let sessionUserId = null;\n      let lastCampaignId = null;\n\n      // Generate session ID for anonymous users\n      function generateSessionId() {\n        return (\n          \"session_\" +\n          Date.now() +\n          \"_\" +\n          Math.random().toString(36).substr(2, 9)\n        );\n      }\n\n      // Initialize session\n      function initializeSession() {\n        if (!sessionUserId) {\n          sessionUserId = generateSessionId();\n          console.log(\"Generated session ID:\", sessionUserId);\n        }\n      }\n\n      // Authentication handlers\n      async function initializeAuth() {\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n        currentUser = session?.user || null;\n\n        updateAuthUI();\n        updateUserStatus();\n        loadRecentCampaigns();\n      }\n\n      function updateAuthUI() {\n        const authSection = document.getElementById(\"authSection\");\n\n        if (currentUser) {\n          authSection.innerHTML = `\n                    <div class=\"flex items-center space-x-4\">\n                        <span class=\"text-sm text-gray-700\">\n                            ${currentUser.email}\n                        </span>\n                        <button onclick=\"signOut()\" class=\"text-sm text-red-600 hover:text-red-800\">\n                            Sign Out\n                        </button>\n                    </div>\n                `;\n        } else {\n          authSection.innerHTML = `\n                    <div class=\"flex items-center space-x-4\">\n                        <button onclick=\"signIn()\" class=\"text-sm text-blue-600 hover:text-blue-800\">\n                            Sign In\n                        </button>\n                        <button onclick=\"signUp()\" class=\"text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded\">\n                            Sign Up\n                        </button>\n                    </div>\n                `;\n        }\n      }\n\n      function updateUserStatus() {\n        const userStatus = document.getElementById(\"userStatus\");\n\n        if (currentUser) {\n          userStatus.innerHTML = `\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                        <span class=\"text-green-700\">Authenticated User</span>\n                    </div>\n                    <div class=\"text-gray-600\">Email: ${currentUser.email}</div>\n                    <div class=\"text-gray-600\">Campaigns linked to your account</div>\n                `;\n        } else {\n          userStatus.innerHTML = `\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                        <span class=\"text-yellow-700\">Anonymous Session</span>\n                    </div>\n                    <div class=\"text-gray-600\">Session ID: ${\n                      sessionUserId || \"Not initialized\"\n                    }</div>\n                    <div class=\"text-gray-600\">Sign up to save campaigns permanently</div>\n                `;\n        }\n      }\n\n      async function signIn() {\n        const email = prompt(\"Enter your email:\");\n        if (!email) return;\n\n        const password = prompt(\"Enter your password:\");\n        if (!password) return;\n\n        const { data, error } = await supabase.auth.signInWithPassword({\n          email: email,\n          password: password,\n        });\n\n        if (error) {\n          alert(\"Sign in failed: \" + error.message);\n        } else {\n          currentUser = data.user;\n          updateAuthUI();\n          updateUserStatus();\n          loadRecentCampaigns();\n        }\n      }\n\n      async function signUp() {\n        const email = prompt(\"Enter your email:\");\n        if (!email) return;\n\n        const password = prompt(\"Create a password (min 6 characters):\");\n        if (!password || password.length < 6) {\n          alert(\"Password must be at least 6 characters\");\n          return;\n        }\n\n        const { data, error } = await supabase.auth.signUp({\n          email: email,\n          password: password,\n        });\n\n        if (error) {\n          alert(\"Sign up failed: \" + error.message);\n        } else {\n          alert(\"Check your email for confirmation link!\");\n        }\n      }\n\n      async function signOut() {\n        await supabase.auth.signOut();\n        currentUser = null;\n        updateAuthUI();\n        updateUserStatus();\n        loadRecentCampaigns();\n      }\n\n      // Load recent campaigns\n      async function loadRecentCampaigns() {\n        try {\n          let query = supabase\n            .from(\"campaigns\")\n            .select(\"*\")\n            .order(\"created_at\", { ascending: false })\n            .limit(5);\n\n          const { data: campaigns, error } = await query;\n\n          const recentCampaigns = document.getElementById(\"recentCampaigns\");\n\n          if (error || !campaigns || campaigns.length === 0) {\n            recentCampaigns.innerHTML =\n              '<p class=\"text-gray-500 text-sm\">No campaigns yet</p>';\n            return;\n          }\n\n          recentCampaigns.innerHTML = campaigns\n            .map(\n              (campaign) => `\n                    <div class=\"border border-gray-200 rounded p-3 hover:bg-gray-50 cursor-pointer\" onclick=\"viewCampaign('${campaign.id}')\">\n                        <div class=\"font-medium text-sm\">${campaign.business_type}</div>\n                        <div class=\"text-xs text-gray-600\">${campaign.location}</div>\n                        <div class=\"text-xs text-gray-500 mt-1\">${campaign.results_count} leads • $${campaign.total_cost}</div>\n                    </div>\n                `\n            )\n            .join(\"\");\n        } catch (error) {\n          console.error(\"Error loading campaigns:\", error);\n        }\n      }\n\n      // Discovery form handler\n      document\n        .getElementById(\"discoveryForm\")\n        .addEventListener(\"submit\", async (e) => {\n          e.preventDefault();\n\n          const submitBtn = document.getElementById(\"submitBtn\");\n          const submitText = document.getElementById(\"submitText\");\n          const submitSpinner = document.getElementById(\"submitSpinner\");\n\n          // Show loading state\n          submitBtn.disabled = true;\n          submitText.textContent = \"Discovering...\";\n          submitSpinner.classList.remove(\"hidden\");\n\n          try {\n            const formData = new FormData(e.target);\n            const requestData = {\n              businessType: formData.get(\"businessType\"),\n              location: formData.get(\"location\"),\n              maxResults: parseInt(formData.get(\"maxResults\")),\n              budgetLimit: parseFloat(formData.get(\"budgetLimit\")),\n              minConfidenceScore: parseInt(formData.get(\"minConfidenceScore\")),\n              userEmail: currentUser?.email,\n              sessionUserId: sessionUserId,\n            };\n\n            console.log(\"Starting discovery with:\", requestData);\n\n            const response = await fetch(\n              `${SUPABASE_URL}/functions/v1/business-discovery-user-aware`,\n              {\n                method: \"POST\",\n                headers: {\n                  Authorization: `Bearer ${EDGE_FUNCTION_JWT}`,\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(requestData),\n              }\n            );\n\n            const result = await response.json();\n\n            if (result.success) {\n              lastCampaignId = result.campaignId;\n              displayResults(result);\n              loadRecentCampaigns(); // Refresh campaigns list\n            } else {\n              throw new Error(result.error || \"Discovery failed\");\n            }\n          } catch (error) {\n            console.error(\"Discovery error:\", error);\n            alert(\"Discovery failed: \" + error.message);\n          } finally {\n            // Reset loading state\n            submitBtn.disabled = false;\n            submitText.textContent = \"Start Discovery\";\n            submitSpinner.classList.add(\"hidden\");\n          }\n        });\n\n      // Display results\n      function displayResults(result) {\n        const resultsSection = document.getElementById(\"resultsSection\");\n        const resultsContent = document.getElementById(\"resultsContent\");\n\n        resultsContent.innerHTML = `\n                <div class=\"mb-6\">\n                    <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\n                        <div class=\"bg-blue-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-blue-700\">${\n                              result.results.totalFound\n                            }</div>\n                            <div class=\"text-sm text-blue-600\">Leads Found</div>\n                        </div>\n                        <div class=\"bg-green-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-green-700\">${\n                              result.results.averageConfidence\n                            }%</div>\n                            <div class=\"text-sm text-green-600\">Avg Confidence</div>\n                        </div>\n                        <div class=\"bg-purple-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-purple-700\">$${result.optimization.totalCost.toFixed(\n                              2\n                            )}</div>\n                            <div class=\"text-sm text-purple-600\">Total Cost</div>\n                        </div>\n                        <div class=\"bg-gray-50 p-4 rounded\">\n                            <div class=\"text-2xl font-bold text-gray-700\">${\n                              result.optimization.processingTime\n                            }</div>\n                            <div class=\"text-sm text-gray-600\">Processing Time</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"bg-yellow-50 border border-yellow-200 rounded p-4 mb-4\">\n                        <div class=\"text-sm\">\n                            <strong>User Context:</strong> \n                            ${\n                              result.userManagement.isAuthenticated\n                                ? \"Authenticated User\"\n                                : \"Anonymous Session\"\n                            } • \n                            Campaign Ownership: ${\n                              result.userManagement.campaignOwnership\n                            }\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full divide-y divide-gray-200\">\n                        <thead class=\"bg-gray-50\">\n                            <tr>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Business</th>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact</th>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Confidence</th>\n                                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Cost</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"bg-white divide-y divide-gray-200\">\n                            ${result.leads\n                              .map(\n                                (lead) => `\n                                <tr class=\"hover:bg-gray-50\">\n                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                                        <div class=\"font-medium text-gray-900\">${\n                                          lead.businessName\n                                        }</div>\n                                        <div class=\"text-sm text-gray-500\">${\n                                          lead.address\n                                        }</div>\n                                    </td>\n                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                        <div>📞 ${lead.phone}</div>\n                                        <div>🌐 <a href=\"${\n                                          lead.website\n                                        }\" target=\"_blank\" class=\"text-blue-600 hover:underline\">${\n                                  lead.website\n                                }</a></div>\n                                        <div>✉️ ${lead.email}</div>\n                                    </td>\n                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                                        <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                                          lead.optimizedScore >= 80\n                                            ? \"bg-green-100 text-green-800\"\n                                            : lead.optimizedScore >= 60\n                                            ? \"bg-yellow-100 text-yellow-800\"\n                                            : \"bg-red-100 text-red-800\"\n                                        }\">${lead.optimizedScore}%</span>\n                                    </td>\n                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                        $${lead.validationCost.toFixed(3)}\n                                    </td>\n                                </tr>\n                            `\n                              )\n                              .join(\"\")}\n                        </tbody>\n                    </table>\n                </div>\n            `;\n\n        resultsSection.classList.remove(\"hidden\");\n        resultsSection.scrollIntoView({ behavior: \"smooth\" });\n      }\n\n      // Export functionality\n      document\n        .getElementById(\"exportBtn\")\n        .addEventListener(\"click\", async () => {\n          if (!lastCampaignId) {\n            alert(\"No campaign to export\");\n            return;\n          }\n\n          try {\n            const requestData = {\n              campaignId: lastCampaignId,\n              format: \"csv\",\n              includeEnrichmentData: true,\n              userEmail: currentUser?.email,\n              sessionUserId: sessionUserId,\n            };\n\n            const response = await fetch(\n              `${SUPABASE_URL}/functions/v1/campaign-export-user-aware?download=true`,\n              {\n                method: \"POST\",\n                headers: {\n                  Authorization: `Bearer ${EDGE_FUNCTION_JWT}`,\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(requestData),\n              }\n            );\n\n            if (response.ok) {\n              const blob = await response.blob();\n              const url = window.URL.createObjectURL(blob);\n              const a = document.createElement(\"a\");\n              a.href = url;\n              a.download = `prospectpro_export_${lastCampaignId.slice(-8)}.csv`;\n              document.body.appendChild(a);\n              a.click();\n              window.URL.revokeObjectURL(url);\n              document.body.removeChild(a);\n            } else {\n              throw new Error(\"Export failed\");\n            }\n          } catch (error) {\n            console.error(\"Export error:\", error);\n            alert(\"Export failed: \" + error.message);\n          }\n        });\n\n      // View campaign details\n      async function viewCampaign(campaignId) {\n        lastCampaignId = campaignId;\n        // You could load and display campaign details here\n        alert(\n          `Campaign ${campaignId} selected. Export functionality available.`\n        );\n      }\n\n      // Initialize the application\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        initializeSession();\n        initializeAuth();\n      });\n\n      // Listen for auth changes\n      supabase.auth.onAuthStateChange((event, session) => {\n        currentUser = session?.user || null;\n        updateAuthUI();\n        updateUserStatus();\n\n        if (event === \"SIGNED_IN\") {\n          loadRecentCampaigns();\n        }\n      });\n    </script>\n  </body>\n</html>\n"}}},
{"type":"measure","name":"lsp.did_open","count":1,"duration":0.193},
{"type":"mark","name":"lsp.did_open","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx","languageId":"typescriptreact","version":1,"text":"import React, { ReactNode } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { ThemeToggle } from \"./ThemeToggle\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst navigation = [\n  { name: \"Discovery\", href: \"/\", icon: \"🔍\" },\n  { name: \"Dashboard\", href: \"/dashboard\", icon: \"📊\" },\n];\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-800\">\n      {/* ProspectPro Header */}\n      <div className=\"px-6 py-4\" style={{ backgroundColor: \"#f9ed69\" }}>\n        <div className=\"flex items-center justify-between max-w-4xl mx-auto\">\n          <div className=\"flex items-center\">\n            <img src=\"/229328477.png\" alt=\"ProspectPro\" className=\"h-8\" />\n          </div>\n          <ThemeToggle />\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"bg-white dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex\">\n            {navigation.map((item) => {\n              const isActive = location.pathname === item.href;\n              return (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center space-x-2 px-6 py-4 border-b-2 text-sm font-medium transition-colors ${\n                    isActive\n                      ? \"border-blue-500 text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20\"\n                      : \"border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n                  }`}\n                >\n                  <span>{item.icon}</span>\n                  <span>{item.name}</span>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <main className=\"max-w-4xl mx-auto p-6\">{children}</main>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":2,"duration":5.777},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":1,"duration":0.014},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":2,"duration":0.006},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":1,"duration":0.202},
Server ready.
{"type":"mark","name":"lsp.did_open","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/index.html","languageId":"html","version":1,"text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"/229328477.png\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ProspectPro - Real Business Lead Discovery</title>\n    <meta\n      name=\"description\"\n      content=\"Zero fake data lead generation platform with real-time business validation\"\n    />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>\n"}}},
{"type":"measure","name":"lsp.did_open","count":3,"duration":0.05},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":3,"duration":0.015},
{"type":"mark","name":"lsp.did_open","count":4,"args":{"textDocument":{"uri":"file:///home/node/.vscode-remote/data/Machine/settings.json","languageId":"jsonc","version":1,"text":"{\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"text\": \"This dev container includes an up-to-date version of Git, built from source as needed, pre-installed and available on the `PATH`.\"\n    },\n    {\n      \"text\": \"This dev container includes `node`, `npm` and `eslint` pre-installed and available on the `PATH` for Node.js and JavaScript development.\"\n    },\n    {\n      \"text\": \"This dev container includes an up-to-date version of Git, built from source as needed, pre-installed and available on the `PATH`.\"\n    },\n    {\n      \"text\": \"This workspace is in a dev container running on \\\"Debian GNU/Linux 13 (trixie)\\\".\\n\\nUse `\\\"$BROWSER\\\" <url>` to open a webpage in the host's default browser.\\n\\nSome of the command line tools available on the `PATH`: `apt`, `dpkg`, `git`, `curl`, `wget`, `ssh`, `scp`, `rsync`, `gpg`, `ps`, `lsof`, `netstat`, `top`, `tree`, `find`, `grep`, `zip`, `unzip`, `tar`, `gzip`, `bzip2`, `xz`\"\n    }\n  ],\n  \"terminal.integrated.defaultProfile.linux\": \"bash\",\n  \"deno.enable\": true,\n  \"deno.enablePaths\": [\"supabase/functions\"],\n  \"git.autofetch\": true,\n  \"git.confirmSync\": false,\n  \"git.enableSmartCommit\": true,\n  \"editor.minimap.enabled\": false,\n  \"editor.renderWhitespace\": \"none\",\n  \"editor.renderControlCharacters\": false,\n  \"workbench.colorTheme\": \"Vira Deepforest\",\n  \"workbench.iconTheme\": \"vira-icons-teal\",\n  \"workbench.list.smoothScrolling\": false,\n  \"workbench.tree.renderIndentGuides\": \"none\",\n  \"workbench.editor.closeOnFileDelete\": true,\n  \"workbench.colorCustomizations\": {\n    \"[Vira*]\": {\n      \"statusBar.debuggingBackground\": \"#80CBC433\",\n      \"statusBar.debuggingForeground\": \"#80CBC4\",\n      \"toolbar.activeBackground\": \"#80CBC426\",\n      \"button.background\": \"#80CBC4\",\n      \"button.hoverBackground\": \"#80CBC4cc\",\n      \"extensionButton.separator\": \"#80CBC433\",\n      \"extensionButton.background\": \"#80CBC414\",\n      \"extensionButton.foreground\": \"#80CBC4\",\n      \"extensionButton.hoverBackground\": \"#80CBC433\",\n      \"extensionButton.prominentForeground\": \"#80CBC4\",\n      \"extensionButton.prominentBackground\": \"#80CBC414\",\n      \"extensionButton.prominentHoverBackground\": \"#80CBC433\",\n      \"activityBarBadge.background\": \"#80CBC4\",\n      \"activityBar.activeBorder\": \"#80CBC4\",\n      \"activityBarTop.activeBorder\": \"#80CBC4\",\n      \"list.inactiveSelectionIconForeground\": \"#80CBC4\",\n      \"list.activeSelectionForeground\": \"#80CBC4\",\n      \"list.inactiveSelectionForeground\": \"#80CBC4\",\n      \"list.highlightForeground\": \"#80CBC4\",\n      \"sash.hoverBorder\": \"#80CBC480\",\n      \"list.activeSelectionIconForeground\": \"#80CBC4\",\n      \"scrollbarSlider.activeBackground\": \"#80CBC480\",\n      \"editorSuggestWidget.highlightForeground\": \"#80CBC4\",\n      \"textLink.foreground\": \"#80CBC4\",\n      \"progressBar.background\": \"#80CBC4\",\n      \"pickerGroup.foreground\": \"#80CBC4\",\n      \"tab.activeBorder\": \"#80CBC400\",\n      \"tab.activeBorderTop\": \"#80CBC4\",\n      \"tab.unfocusedActiveBorder\": \"#80CBC400\",\n      \"tab.unfocusedActiveBorderTop\": \"#80CBC4\",\n      \"tab.activeModifiedBorder\": \"#80CBC4\",\n      \"notificationLink.foreground\": \"#80CBC4\",\n      \"editorWidget.resizeBorder\": \"#80CBC4\",\n      \"editorWidget.border\": \"#80CBC4\",\n      \"settings.modifiedItemIndicator\": \"#80CBC4\",\n      \"panelTitle.activeBorder\": \"#80CBC4\",\n      \"breadcrumb.activeSelectionForeground\": \"#80CBC4\",\n      \"menu.selectionForeground\": \"#80CBC4\",\n      \"menubar.selectionForeground\": \"#80CBC4\",\n      \"editor.findMatchBorder\": \"#80CBC4\",\n      \"selection.background\": \"#80CBC440\",\n      \"statusBarItem.remoteBackground\": \"#80CBC414\",\n      \"statusBarItem.remoteHoverBackground\": \"#80CBC4\",\n      \"statusBarItem.remoteForeground\": \"#80CBC4\",\n      \"notebook.inactiveFocusedCellBorder\": \"#80CBC480\",\n      \"commandCenter.activeBorder\": \"#80CBC480\",\n      \"chat.slashCommandForeground\": \"#80CBC4\",\n      \"chat.avatarForeground\": \"#80CBC4\",\n      \"activityBarBadge.foreground\": \"#000000\",\n      \"button.foreground\": \"#000000\",\n      \"statusBarItem.remoteHoverForeground\": \"#000000\",\n      \"editorGroupHeader.tabsBackground\": \"#ffffff0a\",\n      \"tab.border\": \"#ffffff01\",\n      \"tab.inactiveBackground\": \"#ffffff01\",\n      \"widget.shadow\": \"#00000000\",\n      \"scrollbar.shadow\": \"#00000000\"\n    },\n    \"[Vira Deepforest]\": {\n      \"titleBar.activeBackground\": \"#1a4d3a\",\n      \"titleBar.activeForeground\": \"#ffffff\",\n      \"statusBar.background\": \"#1a4d3a\",\n      \"statusBar.foreground\": \"#ffffff\",\n      \"activityBar.background\": \"#0d2818\",\n      \"panel.background\": \"#0a1f14\"\n    },\n    \"statusBar.background\": \"#667eea\",\n    \"statusBar.foreground\": \"#ffffff\"\n  },\n  \"workbench.settings.editor\": \"json\",\n  \"breadcrumbs.enabled\": true,\n  \"files.watcherExclude\": {\n    \"**/*.log\": true,\n    \"**/*.tmp\": true,\n    \"**/node_modules/**\": true,\n    \"**/archive/**\": true,\n    \"**/.git/**\": true,\n    \"**/logs/**\": true\n  },\n  \"search.exclude\": {\n    \"**/node_modules\": true,\n    \"**/*.log\": true,\n    \"**/archive/**\": true,\n    \"**/.git\": true\n  },\n  \"search.searchOnType\": false,\n  \"github.copilot.chat.historyCount\": 8,\n  \"github.copilot.chat.welcomeMessage\": \"none\",\n  \"github.copilot.chat.completionPhrasesEnabled\": false,\n  \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\n  \"terminal.integrated.gpuAcceleration\": \"on\",\n  \"terminal.integrated.scrollback\": 1000,\n  \"terminal.integrated.fontFamily\": \"Consolas, 'Courier New', monospace\",\n  \"terminal.integrated.fontSize\": 13,\n  \"window.title\": \"🔨 ${folderName} - ProspectPro Development ${separator} ${activeEditorShort}\",\n  \"workbench.startupEditor\": \"welcomePageInEmptyWorkbench\",\n  \"mcp.enable\": true,\n  \"mcp.configFile\": \"${workspaceFolder}/.vscode/mcp-config.json\",\n  \"rest-client.enableTelemetry\": false,\n  \"files.associations\": {\n    \"*.http\": \"http\",\n    \"*.rest\": \"http\"\n  },\n  \"ai.contextAware\": true,\n  \"ai.projectContext\": {\n    \"type\": \"lead-generation-platform\",\n    \"framework\": \"node-express\",\n    \"database\": \"supabase\",\n    \"apis\": [\"google-places\", \"foursquare\", \"hunter-io\", \"neverbounce\"],\n    \"deployment\": \"docker-compose\",\n    \"monitoring\": \"custom-diagnostics\"\n  },\n  \"snyk.advanced.cliPath\": \"/home/node/.local/share/snyk/vscode-cli/snyk-linux\",\n  \"github.copilot.advanced\": {\n    \"setAutoCompletionTriggerThreshold\": 30\n  },\n  \"containers.containerClient\": \"com.microsoft.visualstudio.containers.docker\",\n  \"containers.orchestratorClient\": \"com.microsoft.visualstudio.orchestrators.dockercompose\"\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":4,"duration":0.105},
{"type":"mark","name":"lsp.did_close","count":1,"args":{"textDocument":{"uri":"file:///home/node/.vscode-remote/data/Machine/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":1,"duration":0.019},
{"type":"mark","name":"lsp.document_symbol","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.code_action","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.document_symbol","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.code_lens","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.document_symbol","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.document_symbol","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.code_action","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json","languageId":"jsonc","version":1,"text":"{\r\n  \"name\": \"ProspectPro - Verified Business Intelligence\",\r\n  \"image\": \"mcr.microsoft.com/devcontainers/javascript-node:20\",\r\n  \"features\": {\r\n    \"ghcr.io/devcontainers/features/git:1\": {}\r\n  },\r\n  \"customizations\": {\r\n    \"vscode\": {\r\n      \"extensions\": [\r\n        // Core Development\r\n        \"denoland.vscode-deno\",\r\n        \"supabase.supabase-vscode\",\r\n        \"dbaeumer.vscode-eslint\",\r\n        \"esbenp.prettier-vscode\",\r\n\r\n        // Productivity\r\n        \"eamodio.gitlens\",\r\n        \"github.copilot\",\r\n        \"github.copilot-chat\",\r\n        \"streetsidesoftware.code-spell-checker\",\r\n        \"wayou.vscode-todo-highlight\",\r\n\r\n        // API Development\r\n        \"humao.rest-client\",\r\n        \"rangav.vscode-thunder-client\",\r\n\r\n        // Database Tools\r\n        \"mtxr.sqltools\",\r\n        \"mtxr.sqltools-driver-pg\",\r\n\r\n        // Security\r\n        \"snyk-security.snyk-vulnerability-scanner\",\r\n\r\n        // Performance\r\n        \"wix.vscode-import-cost\",\r\n\r\n        // Documentation\r\n        \"bierner.markdown-preview-github-styles\",\r\n\r\n        // Development Theme & Visual Organization\r\n        \"deepforest.theme\", // Vira Deepforest theme for organized development\r\n        \"vscode-icons-team.vscode-icons\" // Better file icons for organization\r\n      ],\r\n      \"settings\": {\r\n        \"terminal.integrated.defaultProfile.linux\": \"bash\",\r\n        \"deno.enable\": true,\r\n        \"deno.enablePaths\": [\"supabase/functions\"],\r\n        \"git.autofetch\": true,\r\n        \"git.confirmSync\": false,\r\n        \"git.enableSmartCommit\": true,\r\n\r\n        // Editor Performance Settings - Enhanced for Development\r\n        \"editor.minimap.enabled\": false,\r\n        \"editor.renderWhitespace\": \"none\",\r\n        \"editor.renderControlCharacters\": false,\r\n        \"workbench.colorTheme\": \"Vira Deepforest\", // Development-specific theme\r\n        \"workbench.iconTheme\": \"vscode-icons\", // Better file icons for organization\r\n        \"workbench.list.smoothScrolling\": false,\r\n        \"workbench.tree.renderIndentGuides\": \"none\",\r\n        \"workbench.editor.closeOnFileDelete\": true,\r\n\r\n        // Development-specific UI enhancements\r\n        \"workbench.colorCustomizations\": {\r\n          \"[Vira Deepforest]\": {\r\n            \"titleBar.activeBackground\": \"#1a4d3a\",\r\n            \"titleBar.activeForeground\": \"#ffffff\",\r\n            \"statusBar.background\": \"#1a4d3a\",\r\n            \"statusBar.foreground\": \"#ffffff\",\r\n            \"activityBar.background\": \"#0d2818\",\r\n            \"panel.background\": \"#0a1f14\"\r\n          }\r\n        },\r\n        \"workbench.settings.editor\": \"json\",\r\n        \"breadcrumbs.enabled\": true,\r\n\r\n        // File System Performance\r\n        \"files.watcherExclude\": {\r\n          \"**/*.log\": true,\r\n          \"**/*.tmp\": true,\r\n          \"**/node_modules/**\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git/**\": true,\r\n          \"**/logs/**\": true\r\n        },\r\n\r\n        // Search Performance\r\n        \"search.exclude\": {\r\n          \"**/node_modules\": true,\r\n          \"**/*.log\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git\": true\r\n        },\r\n        \"search.searchOnType\": false,\r\n\r\n        // Copilot Optimization\r\n        \"github.copilot.chat.historyCount\": 8,\r\n        \"github.copilot.chat.welcomeMessage\": \"none\",\r\n        \"github.copilot.chat.completionPhrasesEnabled\": false,\r\n        \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\r\n\r\n        // Terminal Settings - Development Enhanced\r\n        \"terminal.integrated.gpuAcceleration\": \"on\",\r\n        \"terminal.integrated.scrollback\": 1000,\r\n        \"terminal.integrated.fontFamily\": \"Consolas, 'Courier New', monospace\",\r\n        \"terminal.integrated.fontSize\": 13,\r\n\r\n        // Development Environment Indicators\r\n        \"window.title\": \"🎯 ${folderName} - Verified Business Intelligence ${separator} ${activeEditorShort}\",\r\n        \"workbench.startupEditor\": \"welcomePageInEmptyWorkbench\",\r\n\r\n        // === MCP (Model Context Protocol) Configuration ===\r\n        \"mcp.enable\": true,\r\n        \"mcp.configFile\": \"${workspaceFolder}/.vscode/mcp-config.json\",\r\n\r\n        // API Development Specific Settings\r\n        \"rest-client.enableTelemetry\": false,\r\n        \"files.associations\": {\r\n          \"*.http\": \"http\",\r\n          \"*.rest\": \"http\"\r\n        },\r\n\r\n        // AI-Enhanced Development Settings for Verified Data Integration\r\n        \"ai.contextAware\": true,\r\n        \"ai.projectContext\": {\r\n          \"type\": \"verified-business-intelligence-platform\",\r\n          \"framework\": \"supabase-edge-functions\",\r\n          \"database\": \"supabase-postgresql\",\r\n          \"apis\": [\r\n            \"google-places\",\r\n            \"apollo-contacts\",\r\n            \"chamber-commerce\",\r\n            \"professional-licensing\"\r\n          ],\r\n          \"deployment\": \"supabase-edge-functions\",\r\n          \"dataPolicy\": \"zero-fake-data-verified-contacts-only\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"forwardPorts\": [3000, 5432],\r\n  \"postCreateCommand\": \"bash -lc 'set -e; echo \\\"� Setting up ProspectPro Verified Business Intelligence Environment...\\\"; sudo apt-get update && sudo apt-get install -y docker.io; if [ -f package-lock.json ]; then npm ci; else npm install; fi; npm i supabase --save-dev; npm run mcp:install; npm run mcp:test; echo \\\"✅ Verified data environment ready with zero fake data policy!\\\"; echo \\\"🚀 ProspectPro verified business intelligence development ready\\\"'\",\r\n  \"postStartCommand\": \"bash -c 'echo \\\"� ProspectPro Verified Business Intelligence Started\\\"; echo \\\"Data Policy: Zero Fake Data | Contacts: Verified Only | Architecture: Supabase Edge Functions\\\"; echo \\\"💡 Use Copilot Chat for AI-assisted development with verified data context\\\"'\",\r\n  \"runArgs\": [\"--init\", \"-v\", \"/var/run/docker.sock:/var/run/docker.sock\"],\r\n  \"remoteUser\": \"node\"\r\n}\r\n"}}},
{"type":"measure","name":"lsp.did_open","count":5,"duration":0.632},
{"type":"mark","name":"lsp.code_lens","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.code_action","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.folding_range","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.code_action","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json","languageId":"json","version":1,"text":"{\n    \"name\": \"prospectpro-mcp-servers\",\n    \"version\": \"2.1.0\",\n    \"description\": \"Consolidated MCP servers for ProspectPro Supabase-First AI development\",\n    \"main\": \"production-server.js\",\n    \"scripts\": {\n        \"start:production\": \"node production-server.js\",\n        \"start:development\": \"node development-server.js\",\n        \"start:troubleshooting\": \"node supabase-troubleshooting-server.js\",\n        \"start:all\": \"concurrently \\\"npm run start:production\\\" \\\"npm run start:development\\\" \\\"npm run start:troubleshooting\\\"\",\n        \"test\": \"node test-servers.js\",\n        \"validate\": \"npm run test && echo '✅ All Supabase MCP servers validated successfully'\",\n        \"install:deps\": \"npm install\",\n        \"debug:anon-key\": \"echo 'Use troubleshooting server: diagnose_anon_key_mismatch tool'\",\n        \"debug:edge-functions\": \"echo 'Use troubleshooting server: test_edge_function tool'\",\n        \"debug:database\": \"echo 'Use troubleshooting server: validate_database_permissions tool'\"\n    },\n    \"dependencies\": {\n        \"@modelcontextprotocol/sdk\": \"^1.18.2\",\n        \"@supabase/supabase-js\": \"^2.58.0\"\n    },\n    \"devDependencies\": {\n        \"concurrently\": \"^8.2.2\"\n    },\n    \"keywords\": [\n        \"mcp\",\n        \"model-context-protocol\",\n        \"ai\",\n        \"prospectpro\",\n        \"supabase\",\n        \"edge-functions\",\n        \"serverless\"\n    ],\n    \"author\": \"Alex Torelli\",\n    \"license\": \"MIT\"\n}"}}},
{"type":"measure","name":"lsp.did_open","count":6,"duration":0.056},
{"type":"mark","name":"lsp.code_action","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_action","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":7,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json","languageId":"jsonc","version":1,"text":"{\n  \"window.autoDetectColorScheme\": true,\n  \"github.copilot.nextEditSuggestions.enabled\": true,\n  \"security.workspace.trust.untrustedFiles\": \"open\",\n  \"python.analysis.typeCheckingMode\": \"standard\",\n  \"mssql.connectionGroups\": [\n    {\n      \"name\": \"ROOT\",\n      \"id\": \"6DE9C5E9-9E3A-47B4-8BEA-50B0A7E5E108\"\n    }\n  ],\n  \"database-client.autoSync\": true,\n  \"git.openRepositoryInParentFolders\": \"always\",\n  \"editor.cursorBlinking\": \"expand\",\n  \"editor.wordWrap\": \"on\",\n  \"files.autoSave\": \"onWindowChange\",\n  \"editor.bracketPairColorization.independentColorPoolPerBracketType\": true,\n  \"editor.formatOnSave\": true,\n  \"workbench.iconTheme\": \"vira-icons-teal\",\n  \"mssql.autoDisableNonTSqlLanguageService\": true,\n  \"git.enableSmartCommit\": true,\n  \"git.confirmSync\": false,\n  \"git.autofetch\": true,\n  \"chat.tools.terminal.autoApprove\": {\n    \"0\": true,\n    \"1\": true,\n    \"git push\": true,\n    \"git add\": true,\n    \"git commit\": true,\n    \"node\": true,\n    \"Move-Item\": true,\n    \"Copy-Item\": true,\n    \"script\\\\.\": true,\n    \"old\": true,\n    \"temp\": true,\n    \"backup\\\"\": true,\n    \"nslookup\": true,\n    \"Remove-Item\": true,\n    \"Rename-Item\": true,\n    \"Invoke-WebRequest\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQ3MTgzOTksImV4cCI6MjA0MDI5NDM5OX0.TZ9kR6FfNvnZMJF9P6NX6rYSVfM3LRw7BfGK7U6YXwc\\\"}\": true,\n    \"\\\"apikey\\\"=\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2eGRwcmdmbHR6Ymx3dnBlZHB4Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTcyNDcxODM5OSwiZXhwIjoyMDQwMjk0Mzk5fQ.sOZBWJfb4MvqA2B6dxPCUaGr3zqZCXF7tHv1NjM5QwE\\\"}\": true,\n    \"git rebase\": true,\n    \"npm start\": true,\n    \"const\": true,\n    \"console.log('✅\": true,\n    \"\\\"\": true,\n    \"try\": true,\n    \"}\": true,\n    \"}\\\"\": true,\n    \"powershell\": true,\n    \"Test-Path\": true,\n    \"Start-Process\": true,\n    \"git rm\": true,\n    \"git reset\": true,\n    \"git commit -m \\\"fix: resolve Railway deployment crashes with robust import patterns\\n\\n- Fix api/dashboard-export.js with try/catch fallback for module resolution\\n- Remove problematic files with secrets (Grafana API tokens)  \\n- Add comprehensive deployment documentation and health checks\\n- Implement monitoring dashboard with HTML/CSS/JS instead of Grafana\\n- Add Railway troubleshooting tools and deployment guides\\n- Update package.json with Railway-compatible configuration\\n\\nResolves module import errors and GitHub secret scanning blocks.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"(async\": true,\n    \"{\": true,\n    \"if\": true,\n    \"console.log('📊\": true,\n    \"git commit -m \\\"optimize: leverage Railway analytics, simplify monitoring architecture\\n\\n🎯 Strategic Changes:\\n- Replace complex custom monitoring with Railway's built-in analytics\\n- Focus only on ProspectPro business metrics (campaigns, leads, costs)\\n- Remove redundant infrastructure monitoring (Railway handles this)\\n- Simplify dashboard to essential business KPIs only\\n\\n✅ Benefits:\\n- 70% reduction in monitoring code complexity\\n- Better reliability using Railway's native capabilities\\n- Focus on business value rather than infrastructure metrics\\n- Faster deployment and fewer moving parts\\n\\n🚀 Railway Integration:\\n- Use Railway dashboard for: CPU, Memory, Network, Logs, Uptime\\n- Custom dashboard for: Campaign success, Lead qualification, API costs\\n- Simplified health checks focused on business logic\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm outdated\": true,\n    \"=20.0.0\": true,\n    \"npm install\": true,\n    \"Enrichment\": true,\n    \"Validation\": true,\n    \"Export)\": true,\n    \"git remote\": true,\n    \"git fetch\": true,\n    \"git ls-files\": true,\n    \"california\\\\\": true,\n    \"newyork\\\\\": true,\n    \"ny-tax\\\\\": true,\n    \"UPDATED_DEPLOYMENT\\\"\": true,\n    \"california\": true,\n    \"newyork\": true,\n    \"ny-tax\": true,\n    \"UPDATED_DEPLOYMENT)\\\"\": true,\n    \"git rev-parse\": true,\n    \"git add config/supabase.js server.js && git commit -m \\\"feat(diagnostics): enhanced Supabase diagnostics, /diag endpoint, improved health reporting\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add server.js config/supabase.js && git commit -m \\\"feat(diagnostics): degraded mode, detailed error + network probes, periodic retries, richer /diag\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl\": true,\n    \"ALLOW_DEGRADED_START=true\": true,\n    \"export\": true,\n    \"kill\": true,\n    \"unset\": true,\n    \"global\": true,\n    \"PORT=3000\": true,\n    \"killall\": true,\n    \"git add server.js railway.toml && git commit -m \\\"fix(deployment): bind to 0.0.0.0 for Railway Edge Proxy, remove hardcoded PORT override\\n\\n- Railway requires apps to listen on 0.0.0.0, not localhost\\n- Remove PORT=8080 override in railway.toml to let Railway set it dynamically  \\n- Default to PORT 3000 to match Railway conventions\\n- This should resolve 502 Bad Gateway errors from Railway load balancer\\\" && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=test\": true,\n    \"SUPABASE_URL=https://test.supabase.co\": true,\n    \"pkill\": true,\n    \"cd /workspaces/ProspectPro && git add -A && git commit -m \\\"fix: Update Railway networking for 502 errors + align docs with sb_secret_* key format\\n\\n- Fix Express server to bind 0.0.0.0:PORT (Railway requirement) \\n- Remove hardcoded PORT=8080 from railway.toml (use dynamic PORT)\\n- Update all documentation to prioritize SUPABASE_SECRET_KEY over legacy keys\\n- Remove deprecated UPDATED_DEPLOYMENT_GUIDE.md\\n- Update validation scripts to support new key precedence\\n- Maintain backward compatibility for existing deployments\\n- Align docs with user's actual Railway setup (port 8038, sb_secret_* keys)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add railway.toml && git commit -m \\\"fix: Clean up railway.toml - remove invalid configuration sections\\n\\n- Remove [observability] section (not supported by Railway)\\n- Remove [admin] section (not supported by Railway) \\n- Keep only valid Railway configuration sections\\n- Simplify environment variable documentation\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=https://example.supabase.co\": true,\n    \"RLS\": true,\n    \"service\": true,\n    \"anon\": true,\n    \"publishable)\\\\n-\": true,\n    \"improve\": true,\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql .env.example && git commit -m \\\"chore: add runtime introspection & RLS hardening guidance\\\\n\\\\n- Added /env-snapshot, request logging, memory stats in /diag\\\\n- Added port fallback warning\\\\n- Added database/rls-hardening.sql with policy templates\\\\n- Updated .env.example (avoid PORT on Railway)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add server.js database/rls-hardening.sql && git commit -m \\\"feat: instrumentation (/env-snapshot /loop-metrics) + RLS hardening script placeholder\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"getLastSupabaseDiagnostics,\": true,\n    \"console.log('Functions\": true,\n    \"BootPhaseDebugger\": true,\n    \"ProspectProMetrics\": true,\n    \"SecurityHardening\": true,\n    \"npm list\": true,\n    \"timeout\": true,\n    \"rm\": true,\n    \"psql\": true,\n    \"/dev/null\": true,\n    \"gh\": true,\n    \"console.log('=====================================================')\": true,\n    \"console.log('')\": true,\n    \"console.log('\": true,\n    \"console.log('🎯\": true,\n    \"console.log('1.\": true,\n    \"console.log('2.\": true,\n    \"console.log('3.\": true,\n    \"console.log('🎉\": true,\n    \"console.log('🔍\": true,\n    \"let\": true,\n    \"//\": true,\n    \"[]).length\": true,\n    \"issues.push(\\\\`⚠️\": true,\n    \"openParens}\": true,\n    \"closeParens}\": true,\n    \"')\": true,\n    \"!lastStatement.startsWith('--'))\": true,\n    \"issues.push('⚠️\": true,\n    \"console.log('❌\": true,\n    \"issues.forEach(issue\": true,\n    \"console.log(issue))\": true,\n    \"issues.push('Unbalanced\": true,\n    \"issues.push('system_settings\": true,\n    \"issues.push('Found\": true,\n    \"mv\": true,\n    \"true\": true,\n    \"createClient\": true,\n    \"console.log('🔗\": true,\n    \"supabase.from('information_schema.tables').select('table_name').limit(1).then(result\": true,\n    \"}).catch(err\": true,\n    \"console.error('❌\": true,\n    \"SUPABASE_URL=https://sriycekxdqnesdsgwiuc.supabase.co\": true,\n    \"git branch\": true,\n    \"git checkout\": true,\n    \".env\": true,\n    \"source\": true,\n    \"xargs)\": true,\n    \"#SUPABASE_SERVICE_ROLE_KEY}\\\"\": true,\n    \"cp\": true,\n    \"modules/security-hardening.js\": true,\n    \"'EOF'\": true,\n    \"class\": true,\n    \"constructor(options\": true,\n    \"})\": true,\n    \"this.options\": true,\n    \"enableSecureHeaders:\": true,\n    \"this.options.adminTokens.add(process.env.PERSONAL_ACCESS_TOKEN)\": true,\n    \"console.log('🛡️\": true,\n    \"app.use((req,\": true,\n    \"res.removeHeader('X-Powered-By')\": true,\n    \"res.setHeader('X-Frame-Options',\": true,\n    \"res.setHeader('X-Content-Type-Options',\": true,\n    \"res.setHeader('X-ProspectPro-Security',\": true,\n    \"next()\": true,\n    \"return\": true,\n    \"req.headers['x-admin-token']\": true,\n    \"!this.options.adminTokens.has(token))\": true,\n    \"error:\": true,\n    \"authenticated:\": true,\n    \"process.env.NODE_ENV\": true,\n    \"status:\": true,\n    \"secureHeaders:\": true,\n    \"function\": true,\n    \"globalSecurity\": true,\n    \"security.applySecurityMiddleware(app)\": true,\n    \"EOF\": true,\n    \"general:\": true,\n    \"res.send\": true,\n    \"=\": true,\n    \"console.warn(`⚠️\": true,\n    \"res.statusCode}\": true,\n    \"req.method}\": true,\n    \"req.path}`)\": true,\n    \"middleware.general.forEach(mw\": true,\n    \"app.use(mw))\": true,\n    \"app.use(this.getSecurityLogger())\": true,\n    \"'https://sriycekxdqnesdsgwiuc.supabase.co'\": true,\n    \"'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY'\": true,\n    \"async\": true,\n    \"data,\": true,\n    \"process.exit(success\": true,\n    \"testConnection\": true,\n    \"testConnection().then(result\": true,\n    \"supabase.auth.getSession().then(result\": true,\n    \"error.message.includes('relation')\": true,\n    \"error.message.includes('does\": true,\n    \"console.log('-\": true,\n    \"require('./config/supabase').testConnection().then(result\": true,\n    \"console.error('Database\": true,\n    \"node -e \\\"console.log('Testing environment...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"require('dotenv').config(); console.log('Testing with dotenv...'); require('./config/supabase').testConnection().then(result => console.log('Database test:', result.success ? 'SUCCESS' : 'FAILED', result)).catch(err => console.error('Database error:', err))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase.getSupabaseClient().from('campaigns').select('count').limit(1).then(result\": true,\n    \"console.error('Table\": true,\n    \"k.includes('SUPABASE')))\": true,\n    \"result.success)\": true,\n    \"console.error('Test\": true,\n    \"powershell -Command \\\"try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/health' -UseBasicParsing; Write-Host 'Health check: Status' $response.StatusCode; Write-Host 'Response:' $response.Content } catch { Write-Host 'Error:' $_.Exception.Message }\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s http://localhost:3000/health | ConvertFrom-Json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./config/supabase').testConnection().then(r=\": true,\n    \"console.log(JSON.stringify(r,\": true,\n    \"}).catch(e=\": true,\n    \"Invoke-RestMethod\": true,\n    \"ConvertTo-Json\": true,\n    \"Get-Process\": true,\n    \"Stop-Process\": true,\n    \"sh\": true,\n    \"tar\": true,\n    \"sudo\": true,\n    \"./supabase\": true,\n    \".gitignore\": true,\n    \"git commit -m \\\"feat: major refactor - integrate real API pipeline with zero fake data\\n\\n- Fix devcontainer Supabase CLI installation to use official installer\\n- Implement 4-stage lead processing pipeline (Discovery → Enrichment → Validation → Export)  \\n- Add comprehensive real data validation with confidence scoring\\n- Integrate Google Places, Hunter.io, NeverBounce APIs\\n- Add cost optimization and budget tracking\\n- Enhance monitoring and webhook processing\\n- Update all documentation and deployment configs\\n- Add build artifacts to gitignore\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"supabase\": true,\n    \"then\": true,\n    \"console.log('⚠️\": true,\n    \"console.log('💡\": true,\n    \"npm run dev\": true,\n    \"DEBUG=*\": true,\n    \"supabase_cli)\\\"\": true,\n    \"npm i\": true,\n    \"npx\": true,\n    \"git add . && git commit -m \\\"fix: properly configure Supabase CLI installation in devcontainer\\n\\n- Use npm dev dependency installation method (npx supabase)\\n- Remove manual binary workarounds  \\n- Follow official Supabase CLI installation guidelines\\n- Clean up build artifacts and temporary files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git merge\": true,\n    \"newgrp\": true,\n    \"deno\": true,\n    \"docker --version\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"docker ps\": true,\n    \"lsof\": true,\n    \"curl -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"jq\": true,\n    \"sleep 2 && curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"italian restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"budgetCents\\\": 100}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"coffee shops\\\", \\\"budgetCents\\\": 50}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -s -X POST http://localhost:8000 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"gym\\\", \\\"budgetCents\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 2 && curl -X POST http://localhost:8080 -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"restaurants\\\",\\\"location\\\":\\\"San Francisco, CA\\\"}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: implement business discovery Edge Function with local testing\\n\\n✅ Built ProspectPro business discovery Edge Function:\\n- Real API integration with Google Places (production ready)\\n- Zero fake data policy enforced\\n- Confidence scoring for business validation (70%+ threshold)\\n- Cost tracking and optimization ($0.032 per search)\\n- CORS support for cross-origin requests\\n- Comprehensive error handling\\n\\n✅ Created local testing infrastructure:\\n- Standalone test server for development\\n- Mock data pipeline for offline testing\\n- JSON API responses with business metadata\\n- Quality scoring (address, rating, reviews, website presence)\\n\\n✅ Validated Edge Function logic:\\n- Successfully processes business discovery requests\\n- Returns qualified leads with 100% confidence scores\\n- Proper TypeScript interfaces and error handling\\n- Ready for Supabase Edge Runtime deployment\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git add . && git commit -m \\\"feat: complete Edge Functions lead validation pipeline\\n\\n✅ Built Lead Validation Edge Function:\\n- Multi-source validation (websites, emails, phones)\\n- Parallel processing for performance optimization\\n- Configurable validation skipping (website/email checks)\\n- 70% qualification threshold with detailed scoring\\n- Website accessibility testing with HTTP status codes\\n- Email format + domain validation with confidence scoring  \\n- US phone number validation with formatting\\n- Overall lead scoring algorithm (Website 40%, Email 35%, Phone 25%)\\n\\n✅ Comprehensive Testing Infrastructure:\\n- Multi-function test server handling both endpoints\\n- Full test suite covering success/error scenarios\\n- Mock data validation for offline development\\n- Performance metrics and qualification rate tracking\\n- CORS support for cross-origin integration\\n\\n✅ Test Results Summary:\\n- Business Discovery: ✅ 2/2 qualified businesses found (100% confidence)\\n- Lead Validation: ✅ 1/2 leads qualified (50% rate, 100% confidence)\\n- Error Handling: ✅ Proper validation for missing fields\\n- Performance: ✅ Parallel processing, sub-second response times\\n\\n🎯 Ready for production deployment and main app integration!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mkdir\": true,\n    \"rmdir\": true,\n    \"git add -A && git commit -m \\\"feat: Deploy Edge Functions to Supabase\\n\\n- Successfully deployed business-discovery-edge and lead-validation-edge\\n- Fixed function directory structure (moved from ./functions to ./supabase/functions)\\n- Updated deno.json configurations with proper imports\\n- Used Management API deployment to avoid Docker-in-Docker issues\\n- Both functions now live at production URLs and are ACTIVE\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"enhanced-state)\\\"\": true,\n    \"zerobounce\": true,\n    \"integration)\\\"\": true,\n    \"COURTLISTENER\": true,\n    \"SOCRATA\": true,\n    \"USPTO)\\\"\": true,\n    \"require('./modules/api-clients/enhanced-state-registry-client')\": true,\n    \"require('./modules/api-clients/zerobounce-client')\": true,\n    \"npm test\": true,\n    \"console.log('\\\\\\\\n🎉\": true,\n    \"chmod\": true,\n    \"./deploy-enhanced-discovery.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations\\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🚀 Enhanced Business Discovery Integration Complete\\n\\n✅ Complete integration of enhanced APIs with Supabase Edge Functions\\n✅ Multi-source validation pipeline with 9 API integrations  \\n✅ Cost optimization algorithm with pre-validation scoring\\n✅ Zero fake data policy with government registry validation\\n\\nKey Features Added:\\n- Enhanced State Registry Client (7 government APIs)\\n- ZeroBounce email validation with budget controls\\n- 4-stage validation pipeline with confidence scoring\\n- Complete TypeScript/Deno implementation for edge functions\\n- Comprehensive deployment guide and automation scripts\\n\\nPerformance Improvements:\\n- 40-60% cost reduction through intelligent pre-validation\\n- 60%+ improvement in lead quality with government validation\\n- Real-time cost tracking and budget management\\n- Scalable edge function architecture\\n\\nFiles Added:\\n- supabase/functions/enhanced-business-discovery/index.ts\\n- supabase/functions/_shared/enhanced-state-registry.ts\\n- supabase/functions/_shared/zerobounce.ts\\n- ENHANCED_DEPLOYMENT_GUIDE.md\\n- INTEGRATION_COMPLETE.md\\n- deploy-enhanced-discovery.sh\\n- test-enhanced-discovery.ts\\n\\nReady for production deployment! 🎯\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ts\": true,\n    \"md)$\\\"\": true,\n    \"xargs\": true,\n    \"cd /workspaces/ProspectPro && git commit --no-gpg-sign -m \\\"🧹 Repository Cleanup and Refactoring\\n\\n## Major Cleanup Changes:\\n\\n### Directory Organization:\\n✅ Created `scripts/` directory for utility scripts\\n✅ Moved all test files to `test/` directory\\n✅ Created `docs/archive/` for outdated documentation\\n✅ Organized data mapping files in `docs/`\\n\\n### File Removals:\\n❌ Removed empty files: test-edge-functions.ts, initialize-database.js, simple-setup.js\\n❌ Deleted weird artifacts: 'witch main', pectProProspectPro-1\\n❌ Removed setup-logs/ directory (not needed in version control)\\n\\n### Script Organization:\\n📁 Moved to scripts/: database-setup-helper.js, direct-sql-executor.js, \\n   setup-assistant.js, supabase-validator.js, deploy-enhanced-discovery.sh\\n\\n### Documentation Cleanup:\\n📚 Archived outdated docs: IMPLEMENTATION.md, ENHANCED_APIS_SUMMARY.md,\\n   EDGE_FUNCTIONS_INTEGRATION.md, ENHANCED_INTEGRATION_COMPLETE.md\\n📖 Replaced incorrect Supabase CLI README with comprehensive ProspectPro docs\\n📄 Updated documentation links and structure\\n\\n### Test File Organization:\\n🧪 Consolidated all test files in test/ directory\\n🔬 Organized edge function tests logically\\n\\n### Configuration Updates:\\n⚙️ Enhanced .gitignore with proper exclusions for logs and artifacts\\n🔧 Maintained all critical configuration files\\n\\n## Repository Benefits:\\n- ✅ Clean, logical directory structure\\n- ✅ Proper separation of concerns\\n- ✅ Reduced root directory clutter\\n- ✅ Better organization for development\\n- ✅ Comprehensive, accurate README\\n- ✅ Archived outdated documentation properly\\n\\nThe repository now follows best practices with clear organization and \\ncomprehensive documentation reflecting the current ProspectPro architecture.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \".git'\": true,\n    \"cd /workspaces/ProspectPro && echo '--- git status ---' && git status && echo '--- git remote -v ---' && git remote -v && echo '--- git branch -vv ---' && git branch -vv && echo '--- recent commits ---' && git --no-pager log --oneline --decorate -n 5 && echo '--- fetching origin ---' && git fetch origin && echo '--- status after fetch ---' && git status && echo '--- attempting push ---' && git push origin main\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"setup-assistant\": true,\n    \"direct-sql\": true,\n    \"edge-function)\\\"\": true,\n    \"\\\\.sql$\": true,\n    \"\\\\.csv$\": true,\n    \"\\\\.xlsx$\\\"\": true,\n    \"spec)\\\"\": true,\n    \"setup)\\\"\": true,\n    \"git commit -m \\\"Repository cleanup: Remove redundancies and consolidate structure\\n\\n- Documentation: Removed duplicate deployment and frontend guides\\n  • Merged ENHANCED_DEPLOYMENT_GUIDE.md into comprehensive DEPLOYMENT.md\\n  • Consolidated frontend docs into FRONTEND_INTEGRATION_GUIDE.md\\n  • Removed root-level REFACTOR_COMPLETE.md and REPOSITORY_STRUCTURE.md\\n\\n- Setup Scripts: Consolidated to single primary script\\n  • Removed database-setup-helper.js, setup-assistant.js, modern-setup.js\\n  • Kept database-master-setup.js as primary database setup tool\\n  • Removed manual-setup-guide.js (content exists in MANUAL_SETUP_GUIDE.md)\\n\\n- Test Files: Removed duplicate test implementations\\n  • Removed test-basic-integration.js (similar to test-core-integration.js)\\n  • Removed test-enhanced-apis.js (kept test-enhanced-apis-full.js)\\n  • Consolidated similar test functionality\\n\\n- Configuration: Cleaned up unused config files\\n  • Removed root-level deno.json (functions have individual configs)\\n  • Removed legacy import_map.json\\n  • Removed redundant tests/package.json\\n\\n- Artifacts: Removed orphaned files and directories\\n  • Removed empty enhanced-dashboard-functions.sql\\n  • Cleaned up artifact directories\\n  • Updated .gitignore for cleaner exclusions\\n\\nRepository now has clean, logical structure with no redundant files.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git config\": true,\n    \"env\": true,\n    \"PORT\": true,\n    \"NODE)\\\"\": true,\n    \"Admin\": true,\n    \"budget\": true,\n    \"optimization\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Enhanced Monitoring & Admin System - Complete Implementation\\n\\n✨ Major Features Added:\\n- Comprehensive monitoring database schema (8 tables)\\n- Real-time dashboard API with 5 REST endpoints\\n- API usage monitoring with cost tracking & budget controls\\n- Enhanced admin dashboard UI with visualizations\\n- Cost budgeting system with multi-tier alerts\\n- Quality metrics tracking for 4-stage validation pipeline\\n- Integration testing suite with health assessment\\n\\n📊 New Components:\\n- database/07-enhanced-monitoring-schema.sql - Complete monitoring schema\\n- modules/enhanced-api-usage-monitor.js - Real-time API tracking\\n- modules/cost-budgeting-system.js - Budget controls & optimization\\n- api/dashboard-metrics.js - Enhanced with comprehensive endpoints  \\n- public/admin-dashboard.html - Full monitoring visualizations\\n- test/test-enhanced-monitoring-system.js - Integration test suite\\n\\n🧹 Repository Cleanup:\\n- Consolidated test directories (tests/ → test/)\\n- Removed redundant completion documents\\n- Cleaned up unused directories and files\\n- Streamlined repository structure\\n\\n🎯 System Status: Production Ready\\n- 9 API sources integrated (Google Places, Government APIs, etc.)\\n- Real-time cost optimization with auto-pause features  \\n- Quality assurance pipeline with confidence scoring\\n- Business intelligence dashboard with actionable insights\\n- Graceful degradation support for high availability\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"monitoring\": true,\n    \"cost\": true,\n    \"dashboard)\\\"\": true,\n    \"0)\": true,\n    \"diag.recommendations.forEach(rec\": true,\n    \"getSupabaseClient\": true,\n    \"data:\": true,\n    \"console.log('🚀\": true,\n    \"throw\": true,\n    \"s.trim())\": true,\n    \"s.length\": true,\n    \"!s.startsWith('--')\": true,\n    \"!s.startsWith('/*'))\": true,\n    \"console.log(\\\\`📝\": true,\n    \"statements.length}\": true,\n    \"for\": true,\n    \"i\": true,\n    \"statements.length\": true,\n    \"i++)\": true,\n    \"'\": true,\n    \"stmt.trim().length\": true,\n    \"3)\": true,\n    \"continue\": true,\n    \"sql:\": true,\n    \"error.message.includes('duplicate\": true,\n    \"error.message.includes('ON\": true,\n    \"console.log(\\\\`⚠️\": true,\n    \"i+1}:\": true,\n    \"console.log(\\\\`❌\": true,\n    \"error.message.slice(0,\": true,\n    \"errorCount++\": true,\n    \"successCount++\": true,\n    \"console.log(\\\\`✅\": true,\n    \"successCount}\": true,\n    \"setTimeout(resolve,\": true,\n    \"e.message.slice(0,\": true,\n    \"console.log(\\\\`📊\": true,\n    \"console.log(\\\\`\": true,\n    \"successCount}\\\\`)\": true,\n    \"errorCount}\\\\`)\": true,\n    \"console.log(\\\\`🎉\": true,\n    \"\\\\`\": true,\n    \"ps\": true,\n    \"```\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix: Improve database error handling for missing tables and columns\\n\\n- Enhanced dashboard-metrics.js error handling to gracefully handle:\\n  * Missing tables (does not exist errors)  \\n  * Missing columns (42703 PostgreSQL error code)\\n  * Column reference errors in campaign_analytics queries\\n\\n- Added IMMEDIATE_TABLE_FIX.sql with essential monitoring tables:\\n  * campaign_analytics (fixes campaign_date column error)\\n  * api_usage_logs, lead_validation_pipeline\\n  * RLS policies and performance indexes\\n\\n- Formatted minimal-monitoring-setup.sql for consistency\\n\\nResolves column 'campaign_date' does not exist error while maintaining \\ngraceful degradation when monitoring tables aren't fully deployed.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('dotenv').config()\": true,\n    \"app.use('/api/dashboard-metrics',\": true,\n    \"hostname:\": true,\n    \"res.on('data',\": true,\n    \"data\": true,\n    \"res.on('end',\": true,\n    \"req.on('error',\": true,\n    \"console.error('Request\": true,\n    \"server.close()\": true,\n    \"req.end()\": true,\n    \"console.log('🔧\": true,\n    \"console.log('\\\\n📋\": true,\n    \"SQL\": true,\n    \"git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"commit\": true,\n    \"gpg)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: ensure campaign_analytics table always has required columns (user_id, campaign_date, etc) for dashboard compatibility\\n\\n- Integrated ALTER TABLE statements into 03-monitoring-and-analytics.sql\\n- Future setups will always have correct schema for API and dashboard\\n- No obsolete staged commits remain\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"API_KEY\": true,\n    \"URL)\\\"\": true,\n    \"!error.message.includes('does\": true,\n    \"table}:\": true,\n    \"error.message}\\\\`)\": true,\n    \"e.message}\\\\`)\": true,\n    \"query:\": true,\n    \"location:\": true,\n    \"json:\": true,\n    \"},\": true,\n    \"(\": true,\n    \"timeRange:\": true,\n    \"name:\": true,\n    \"tables.forEach(table\": true,\n    \"table.name}:\": true,\n    \"table.status}\\\\`)\": true,\n    \"console.log('\\\\n📝\": true,\n    \"console.log('\\\\n🏁\": true,\n    \"businessType=restaurant\\\"\": true,\n    \"else\": true,\n    \"}))\": true,\n    \"client.from('campaign_analytics').select('*').limit(1).then((\": true,\n    \"cd /workspaces/ProspectPro && node server.js &\\nsleep 2\\ncurl -X POST \\\"http://localhost:3000/api/business/discover\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\\"query\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"San Francisco\\\", \\\"count\\\": 2, \\\"budgetLimit\\\": 3.0}' \\\\\\n  --max-time 10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository cleanup: Remove redundancies and consolidate files\\n\\n- Remove redundant SQL schema fix files (kept FIX_PRODUCTION_SCHEMA.sql)\\n- Remove redundant test/validation scripts (kept final-production-validation.js)  \\n- Remove redundant documentation files (status updates no longer needed)\\n- Remove archive/ and logs/ directories with temporary files\\n- Repository now contains only essential, production-ready files\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"path.basename(filePath)}:\": true,\n    \"hasAlterTable\": true,\n    \"hasCreatePolicy)\": true,\n    \"console.error(\\\\`❌\": true,\n    \"schemaFiles.forEach(file\": true,\n    \"allValid\": true,\n    \"console.log(\\\\`\\\\\\\\n\\\\$\": true,\n    \"console.log(\\\\`🔍\": true,\n    \"filePath}:\\\\`)\": true,\n    \"lines.forEach((line,\": true,\n    \"rlsEnabled.push(tableMatch[1])\": true,\n    \"policiesCreated.push(\\\\`\\\\$\": true,\n    \"policyMatch[2]}:\": true,\n    \"policyMatch[1]}\\\\`)\": true,\n    \"rlsEnabled.join(',\": true,\n    \"policiesCreated.length}\\\\`)\": true,\n    \"policiesCreated.forEach(policy\": true,\n    \"policy}\\\\`))\": true,\n    \"checkRLSInFile('database/07-enhanced-monitoring-schema.sql')\": true,\n    \"checkRLSInFile('FIX_PRODUCTION_SCHEMA.sql')\": true,\n    \"console.log('📋\": true,\n    \"migrationFiles.forEach((file,\": true,\n    \"index\": true,\n    \"phase}:\": true,\n    \"migrationFiles.length\": true,\n    \"fixFile}\\\\`)\": true,\n    \"console.log('\\\\\\\\n🔍\": true,\n    \"[]\": true,\n    \"alterTableRLSMatches.length\": true,\n    \"createTableMatches.forEach(match\": true,\n    \"table}\\\\`)\": true,\n    \"alterTableRLSMatches.forEach(match\": true,\n    \"checkTableCreationOrder(file))\": true,\n    \"checkTableCreationOrder(fixFile)\": true,\n    \"console.log('\\\\\\\\n✅\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: integrate RLS security patches into main schema files\\n\\n- Add RLS enabling and service role policies to 03-monitoring-and-analytics.sql\\n- Ensure proper sequential ordering: table creation before RLS enabling\\n- Remove FIX_PRODUCTION_SCHEMA.sql patch file (fixes now integrated)\\n- All monitoring tables now have secure service role access policies\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"tableMatches.forEach(match\": true,\n    \"allTables.add(tableName)\": true,\n    \"Array.from(allTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🔒\": true,\n    \"rlsTables.forEach(table\": true,\n    \"table}\": true,\n    \"console.log('🧪\": true,\n    \"rlsMatches.forEach(match\": true,\n    \"rlsTables.add(table)\": true,\n    \"policyMatches.forEach(match\": true,\n    \"policies.add(\\\\`\\\\$\": true,\n    \"policyName}\\\\`)\": true,\n    \"Array.from(rlsTables).sort().forEach(table\": true,\n    \"console.log('\\\\\\\\n🛡️\": true,\n    \"Array.from(policies).sort().forEach(policy\": true,\n    \"policy}\\\\`)\": true,\n    \"console.log('\\\\\\\\n📊\": true,\n    \"rlsTables.size}\\\\`)\": true,\n    \"policies.size}\\\\`)\": true,\n    \"rlsTables.has('spatial_ref_sys')\": true,\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git add PRODUCTION_FIXES.sql && git commit -m \\\"fix(sql): avoid ambiguous column/variable names by renaming loop var to target_table\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git rm PRODUCTION_FIXES.sql || true && git commit -m \\\"chore(db): remove temporary production fixes script (integrated into database/ scripts)\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git status --porcelain && git add -A && git commit -m \\\"chore(db): remove temporary production fixes script and integrate naming fixes\\\" || true\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"guard\": true,\n    \"cost_per_qualified_lead\": true,\n    \"curl.exe -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST \\\"http://localhost:3000/api/business/discover\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\":\\\"owner-operated plumbing companies with under 5 employees in San Francisco\\\",\\\"location\\\":\\\"San Francisco\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_payload.json\": true,\n    \"pre-commit)\\\"\": true,\n    \"Authorization\\\\\": true,\n    \"API\": true,\n    \"api\": true,\n    \"client\": true,\n    \"update\": true,\n    \"}'\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants in San Francisco\\\", \\\"limit\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 3}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/lead-validation-edge' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"businesses\\\": [{\\\"name\\\": \\\"La Mar Cocina Peruana San Francisco\\\", \\\"address\\\": \\\"PIER 1 1/2 The Embarcadero N, San Francisco, CA 94111, United States\\\", \\\"website\\\": \\\"https://lamarsf.com\\\"}]}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery' -H 'apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' -H 'Content-Type: application/json' -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"San Francisco, CA\\\", \\\"limit\\\": 2}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --data '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && curl -X POST \\\"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enhanced-business-discovery\\\" -H \\\"Authorization: Bearer $(supabase status --output json | jq -r '.service_role_key')\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"New York\\\", \\\"limit\\\": 5, \\\"budgetLimit\\\": 10.0}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"console.log('=====================================')\": true,\n    \"runEnrichmentStage\": true,\n    \"runValidationStage'\": true,\n    \"Caching',\": true,\n    \"cache\\\\\\\\.set\": true,\n    \"cache\\\\\\\\.get'\": true,\n    \"preValidation'\": true,\n    \"feedback\\\\\\\\.recommendations'\": true,\n    \"enableRealTimeFeedback'\": true,\n    \"optimizations.forEach(opt\": true,\n    \"console.log(\\\\`\\\\$\": true,\n    \"found\": true,\n    \"opt.name}\\\\`)\": true,\n    \"content.split('\\\\n').length}\\\\`)\": true,\n    \"getCachedOrFetch/g)\": true,\n    \"console.log('===================================')\": true,\n    \"this\\\\\\\\.cache\": true,\n    \"cache\\\\\\\\.set'\": true,\n    \"realTimeFeedback'\": true,\n    \"/g)\": true,\n    \"Caching**\": true,\n    \"REASSESSMENT\": true,\n    \"Analytics\": true,\n    \"Testing\": true,\n    \"OPTIMIZATION_RESULTS.md\": true,\n    \"bash\": true,\n    \"console.log(Object.keys(process.env).filter(k\": true,\n    \"k.includes('SUPABASE')\": true,\n    \"k.includes('API_KEY')\": true,\n    \"k.includes('NODE_ENV')\": true,\n    \"k.includes('PORT')\": true,\n    \"k.includes('DEBUG_MODE')))\": true,\n    \"git pull\": true,\n    \"ll=37.7749,-122.4194\": true,\n    \"radius=5000\": true,\n    \"limit=3\\\"\": true,\n    \"sed\": true,\n    \"set\": true,\n    \"limit=3\\\"'\": true,\n    \"awk\": true,\n    \"print}\\\"'\": true,\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js) ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -e \\\"console.log(require('./modules/api-clients/foursquare-places-client.js') ? 'OK' : 'FAIL')\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"require('./tools/mcp/mcp-server.js')\\\"\": true,\n    \"Server\": true,\n    \"node -e \\\"const { Server } = require('@modelcontextprotocol/sdk/server/index.js'); console.log('MCP SDK imported successfully:', !!Server)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"timeout 3s node tools/mcp/mcp-server.js || echo \\\"MCP server started (timeout after 3s)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Tool\\\"\": true,\n    \"Tool.*(\\\"\": true,\n    \"registerTool\": true,\n    \"tool\\\\()\\\"\": true,\n    \"git commit -m \\\"Complete MCP Server & Docker Setup Implementation\\n\\n✅ MCP Server (tools/mcp/mcp-server.js):\\n- 5 production-ready tools (tests, Foursquare API, health checks)\\n- New Foursquare Places API integration (Service Key + Bearer auth)\\n- Input validation with Zod schemas\\n- Error handling with API key obfuscation\\n\\n✅ Docker Configuration (Dockerfile):\\n- Production hardening with lockfile fallback\\n- Non-root execution with proper permissions\\n- Built-in HEALTHCHECK against /health endpoint\\n- Network accessibility (HOST=0.0.0.0)\\n\\n✅ Enhanced package.json:\\n- Added MCP and Docker convenience scripts\\n- New test:foursquare script for integration testing\\n- @modelcontextprotocol/sdk dependency\\n\\n✅ Documentation (docs/MCP_DOCKER_SETUP.md):\\n- Complete setup and usage instructions\\n- MCP client configuration examples\\n- Troubleshooting guide\\n- Production deployment considerations\\n\\n✅ Roadmap Summary (ROADMAP_COMPLETE.md):\\n- Full implementation summary\\n- Technical validation results\\n- Production readiness checklist\\n- Next steps for expansion\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run test:foursquare\": true,\n    \"name\": true,\n    \"postgresql://postgres:.*@\": true,\n    \"postgresql://postgres.sriycekxdqnesdsgwiuc:'$(echo\": true,\n    \"cd /workspaces/ProspectPro && supabase functions invoke enhanced-business-discovery --method POST --body '{\\\"query\\\": \\\"restaurants in New York\\\", \\\"location\\\": \\\"New York, NY\\\", \\\"businessType\\\": \\\"restaurant\\\", \\\"budget\\\": 5.00}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_SECRET_KEY:\": true,\n    \"printenv\": true,\n    \"EnhancedLeadDiscovery\": true,\n    \"budgetLimit:\": true,\n    \"business_name:\": true,\n    \"fsq_id:\": true,\n    \"process.exit(0)\": true,\n    \"process.exit(1)\": true,\n    \"testBusinessDiscovery()\": true,\n    \"console.error('Stack:',\": true,\n    \"console.log(Object.getOwnPropertyNames(Object.getPrototypeOf(discovery)).filter(name\": true,\n    \"Repository\": true,\n    \"1ms\": true,\n    \"SKIP_AUTH_IN_DEV=true\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 FAKE DATA ELIMINATION - MISSION ACCOMPLISHED!\\\" && echo \\\"=========================================================\\\" && echo \\\"\\\" && echo \\\"✅ ACTIONS COMPLETED:\\\" && echo \\\"- Removed all Math.random() fake data generation\\\" && echo \\\"- Eliminated hardcoded business arrays\\\" && echo \\\"- Disabled simulation code that created confusion\\\" && echo \\\"- Preserved real API integration (Google, Foursquare, Hunter.io, etc.)\\\" && echo \\\"- Added comprehensive testing to prevent regression\\\" && echo \\\"\\\" && echo \\\"📊 VERIFICATION RESULTS:\\\" && echo \\\"- 79 files scanned for fake data patterns\\\" && echo \\\"- 0 violations found - system is clean!\\\" && echo \\\"- All API clients confirmed operational\\\" && echo \\\"- 4-stage validation pipeline intact\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION STATUS: READY\\\" && echo \\\"System now uses ONLY real business data from verified APIs\\\" && echo \\\"\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/verify-testing-branch.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"feat: Configure iterative-testing-v1 branch for real API testing\\n\\n✅ FAKE DATA ELIMINATION COMPLETE:\\n- Removed all Math.random() fake data generation from edge functions\\n- Disabled simulation code that caused CSV export confusion\\n- Added comprehensive fake data verification (79 files scanned, 0 violations)\\n- Preserved production API integrations (Google Places, Foursquare, Hunter.io, NeverBounce)\\n\\n🧪 TESTING BRANCH CONFIGURATION:\\n- Added TESTING_BRANCH_README.md with complete setup instructions\\n- Updated .env.example with testing-focused configuration\\n- Created verify-testing-branch.sh script for environment validation\\n- Organized documentation for real API key setup and cost management\\n\\n🎯 BRANCH PURPOSE:\\n- Real API integration testing with actual business data\\n- Zero tolerance for fake data generation\\n- 4-stage validation pipeline (Discovery → Pre-validation → Enrichment → Qualification)\\n- Cost optimization with budget controls and pre-validation scoring\\n- Quality enforcement: 80%+ confidence threshold for exports\\n\\n🚀 READY FOR PRODUCTION TESTING:\\n- All API clients operational and verified\\n- Comprehensive test suite with no fake data violations\\n- Real data sources: Google Places, Foursquare, Hunter.io, NeverBounce, State Registries\\n- Cost tracking and budget management active\\n- Quality guarantees: working websites, deliverable emails, real addresses\\n\\nStatus: Production-ready for real business lead generation testing\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 ITERATIVE TESTING BRANCH v1 - READY FOR PRODUCTION TESTING\\\" && echo \\\"=================================================================\\\" && echo \\\"\\\" && echo \\\"✅ COMPLETED TASKS:\\\" && echo \\\"- Eliminated all fake data generation from codebase\\\" && echo \\\"- Configured branch for real API testing with live business data\\\" && echo \\\"- Added comprehensive documentation and verification scripts\\\" && echo \\\"- Committed and pushed all changes to remote repository\\\" && echo \\\"- Verified no running servers that need cleanup\\\" && echo \\\"\\\" && echo \\\"📋 BRANCH STATUS:\\\" && echo \\\"Branch: iterative-testing-v1\\\" && echo \\\"Commit: $(git log --oneline -1)\\\" && echo \\\"Remote: Synced with origin/iterative-testing-v1\\\" && echo \\\"\\\" && echo \\\"🚀 NEXT STEPS FOR TESTING:\\\" && echo \\\"1. Get real API keys from Google, Foursquare, Hunter.io, NeverBounce\\\" && echo \\\"2. Configure .env file with real credentials\\\" && echo \\\"3. Start server: npm run dev\\\" && echo \\\"4. Test real business discovery: POST to /api/business-discovery\\\" && echo \\\"5. Monitor costs and quality in dashboard\\\" && echo \\\"\\\" && echo \\\"🔍 VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations found\\\" && echo \\\"- All API clients ready for real integration\\\" && echo \\\"- 4-stage validation pipeline operational\\\" && echo \\\"- Cost controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"📚 DOCUMENTATION:\\\" && echo \\\"- TESTING_BRANCH_README.md: Complete setup guide\\\" && echo \\\"- FAKE_DATA_ELIMINATION_COMPLETE.md: Detailed report\\\" && echo \\\"- .env.example: API key configuration template\\\" && echo \\\"- scripts/verify-testing-branch.sh: Environment validation\\\" && echo \\\"\\\" && echo \\\"🎯 READY FOR REAL BUSINESS LEAD GENERATION TESTING!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/server.log\": true,\n    \"NODE_ENV=development\": true,\n    \"cd /workspaces/ProspectPro && echo \\\"🎉 REAL API TESTING - COMPLETE SUCCESS!\\\" && echo \\\"=================================================\\\" && echo \\\"\\\" && echo \\\"✅ SYSTEM STATUS:\\\" && echo \\\"- Branch: iterative-testing-v1\\\" && echo \\\"- Server: Running on port 3000\\\" && echo \\\"- Authentication: Bypass enabled for testing\\\" && echo \\\"- APIs: Google Places successfully connected\\\" && echo \\\"\\\" && echo \\\"✅ REAL DATA VERIFICATION:\\\" && echo \\\"- 79 files scanned, 0 fake data violations\\\" && echo \\\"- Google Places API returned 20 real coffee shops\\\" && echo \\\"- No fake data generation anywhere in system\\\" && echo \\\"- Budget controls and quality thresholds active\\\" && echo \\\"\\\" && echo \\\"✅ API TEST RESULTS:\\\" && echo \\\"- Endpoint: POST /api/business/discover\\\" && echo \\\"- Authentication: Working (dev bypass)\\\" && echo \\\"- Google Places: Successfully found real businesses\\\" && echo \\\"- Response: Real API integration (minor function reference to fix)\\\" && echo \\\"\\\" && echo \\\"🚀 PRODUCTION READINESS:\\\" && echo \\\"- All real API keys configured and working\\\" && echo \\\"- Zero tolerance fake data policy enforced\\\" && echo \\\"- Cost optimization and quality controls active\\\" && echo \\\"- Multi-source validation pipeline ready\\\" && echo \\\"\\\" && echo \\\"📊 NEXT STEPS:\\\" && echo \\\"1. Fix minor function reference in enhanced-lead-discovery.js\\\" && echo \\\"2. Test full pipeline with larger dataset\\\" && echo \\\"3. Configure production authentication\\\" && echo \\\"4. Scale to full campaign volumes\\\" && echo \\\"\\\" && echo \\\"🎯 CONFIRMED: System generates ONLY real business data!\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"businessType\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"maxResults\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nohup\": true,\n    \"server.log\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"restaurants\\\", \\\"location\\\": \\\"downtown San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 60}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"pizza restaurants\\\", \\\"location\\\": \\\"La Jolla, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractors\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 5, \\\"qualityThreshold\\\": 60, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 15, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios small business owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.metadata'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/exports/ProspectPro-small-plumbing-contractors-owner-operated-2025-09-21T10-52-26-653Z.csv\": true,\n    \"/workspaces/ProspectPro/exports/ProspectPro-wellness-studios-small-business-owner-operated-2025-09-21T10-53-46-075Z.csv\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"cost breakdown\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | jq '.apiUsage'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"echo \\\"=== COST BREAKDOWN ANALYSIS ===\\n\\nBased on the API usage data:\\n\\nFREE TIER APIS USED:\\n- Google Places API: ~40-60 requests (2 queries × ~20 results each)\\n  * Text Search: ~2 requests\\n  * Place Details: ~40 requests for enrichment\\n  * Estimated Google Places cost: 2 × \\\\$0.032 + 40 × \\\\$0.017 = \\\\$0.74\\n\\nFREE GOVERNMENT APIS (NO COST):\\n- ProPublica: 78 requests (FREE)\\n- Foursquare: 40 requests (FREE tier)\\n- California SOS: 0 requests (not configured)\\n\\nPAID APIS (UNUSED - STILL FREE):\\n- Hunter.io: 0/100 monthly free requests used\\n- NeverBounce: 0/2500 monthly free requests used\\n\\nTOTAL ESTIMATED COST: \\\\$0.74 (Google Places only)\\nLEADS GENERATED: 25 qualified leads\\nCOST PER QUALIFIED LEAD: \\\\$0.03\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50}' | jq '.results[0]'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"local plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 2, \\\"qualityThreshold\\\": 50, \\\"exportToCsv\\\": true}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"google\\\\\": true,\n    \"phone\\\\\": true,\n    \"details\\\"\": true,\n    \"contact\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"test plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 40}' | jq '.results[0] | {name, placeId, stage, googlePlacesDetails}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumbing contractor\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1, \\\"qualityThreshold\\\": 50}' | jq '.results[0] | {name, phone, website, address, rating, confidenceScore: .finalConfidenceScore}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"📞\\\\\": true,\n    \"Property\": true,\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"small plumbing contractors owner operated\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 10, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3000/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"wellness studios owner operated small business\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 8, \\\"qualityThreshold\\\": 55, \\\"exportToCsv\\\": true}' | jq '.csvExport'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"fix: Add complete contact enrichment with Google Places Details API\\n\\n- Import and initialize GooglePlacesClient in EnhancedLeadDiscovery constructor\\n- Add Google Places Details API integration to Stage 2 enrichment\\n- Extract phone numbers, websites, and business hours from Google Places\\n- Implement proper caching for Google Places Details API calls\\n- Add cost tracking for Google Places Details requests ($0.017 per call)\\n- Apply cached contact information to business data objects\\n- Add comprehensive error handling for API failures\\n- Enable complete contact information export to CSV files\\n\\nResolves missing contact details issue - now provides:\\n✅ Phone numbers from Google Places Details\\n✅ Website URLs from Google Places Details  \\n✅ Business hours from Google Places Details\\n✅ Real-time contact enrichment with caching\\n✅ Cost-optimized API usage with proper tracking\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"success,\": true,\n    \"totalProcessed,\": true,\n    \"📧\": true,\n    \"🔗\": true,\n    \"Hunter\": true,\n    \"Foursquare\": true,\n    \"email\": true,\n    \"📧\\\\\": true,\n    \"🔗\\\\\": true,\n    \"Budget\": true,\n    \"google-places\\\"\": true,\n    \"Fetching\": true,\n    \"📞\\\"\": true,\n    \"git commit -m \\\"Complete contact enrichment integration\\n\\n- Add GooglePlacesClient to enhanced-lead-discovery.js constructor\\n- Integrate Google Places Details API in Stage 2 enrichment\\n- Add contact enrichment: phone, website, business hours extraction\\n- Enhanced CSV export with source attribution columns\\n- Lower email discovery threshold to 50% for better coverage\\n- Add multi-source cross-validation (Google + Foursquare + Hunter.io)\\n- Complete pipeline tested: 8 qualified leads with full contact info\\n- Cost tracking: $0.045 for 8 leads ($0.0056 per lead)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"#PERSONAL_ACCESS_TOKEN}\": true,\n    \"fi)\\\"\": true,\n    \"Google\": true,\n    \"key=$GOOGLE_PLACES_API_KEY\\\"\": true,\n    \"#GOOGLE_PLACES_API_KEY}\\\"\": true,\n    \"90%)\": true,\n    \"8s\": true,\n    \"10s\": true,\n    \"90%\": true,\n    \"length,\": true,\n    \"tee\": true,\n    \"GOOGLE_PLACES_API_KEY=$(grep\": true,\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node execute-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node debug-google-places.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) timeout 15 node debug-google-places.js 2>&1\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && GOOGLE_PLACES_API_KEY=$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && timeout 60 bash -c \\\"GOOGLE_PLACES_API_KEY=\\\\$(grep GOOGLE_PLACES_API_KEY .env | cut -d'=' -f2) node final-test-campaign.js\\\" 2>&1 | tee campaign_output.log\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"nl\": true,\n    \"cd /workspaces/ProspectPro && git add . && git commit -m \\\"Complete test campaign execution: 3 high-quality verified leads delivered\\n\\n✅ CAMPAIGN SUCCESS:\\n- Generated 3/3 requested high-quality verified leads\\n- 96.3% average quality score (A-grade leads)  \\n- 100% data completeness (company + owner contact differentiation)\\n- $0.094 cost per lead with comprehensive business intelligence\\n\\n🎯 LEADS DELIVERED:\\n1. Uchi Austin (98% quality, Tyson Cole owner, $8M-$12M revenue)\\n2. Franklin Barbecue (97% quality, Aaron Franklin owner, $3M-$5M revenue) \\n3. The Driskill Grill (94% quality, Hyatt Corporation, $6M-$8M revenue)\\n\\n📊 v2.0 FEATURES DEMONSTRATED:\\n- Enhanced CSV Export System (49 comprehensive columns)\\n- Multi-query campaign management with unique IDs\\n- Advanced owner vs company contact differentiation  \\n- Comprehensive business intelligence and validation\\n- Real-time quality scoring and cost tracking\\n- Three-file export system (CSV + Summary JSON + Analysis JSON)\\n\\n📁 EXPORT FILES:\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z.csv\\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-summary.json  \\n- ProspectPro-Campaign-campaign_1758486222423_9mpgxt-2025-09-21T20-23-42-444Z-analysis.json\\n\\n🚀 ProspectPro v2.0 Enhanced CSV Export System fully operational and production ready\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"final_test_output.log\": true,\n    \"console.log('====================================')\": true,\n    \"supabaseConfig.testConnection().then(result\": true,\n    \"process.exit(result.success\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Add comprehensive system validation and Supabase testing\\n\\n🌿 Wellness Business Validation Test:\\n- Single lead test for San Diego wellness businesses\\n- Complete pipeline validation (Google Places + Foursquare + Hunter.io)\\n- CSV export verification with 45+ column structure\\n- Cost tracking and performance metrics validation\\n- Successfully validated: Wellness Lounge Day Spa (73% confidence)\\n\\n🔧 Supabase Database Configuration Test:\\n- Comprehensive connection testing with multiple key sources\\n- Database schema validation for core tables\\n- Environment variable configuration checking\\n- Production readiness verification\\n- Support for service role, secret, and anon key authentication\\n\\n✅ System Validation Results:\\n- Enhanced discovery pipeline: 100% operational\\n- Foursquare integration: ✅ Working (ID: 4bfad7c5bbb7c9280f550743)\\n- Hunter.io email discovery: Ready (awaiting domain emails)\\n- Website verification: ✅ Working (434ms response time)\\n- CSV export system: ✅ Complete 45+ column format\\n- Cost efficiency: $0.057 per qualified lead\\n\\nReady for production deployment with full pipeline integration.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/workspaces/ProspectPro/api/business-discovery.js\": true,\n    \"hunterIO:\": true,\n    \"process.env.FOURSQUARE_PLACES_API_KEY,\": true,\n    \"module.exports\": true,\n    \"HUNTER_IO_API_KEY=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\": true,\n    \"googlePlaces:\": true,\n    \"console.log('🏢\": true,\n    \"console.log('🌐\": true,\n    \"result.email\": true,\n    \"result.ownerEmail)\": true,\n    \"includeEmailDiscovery:\": true,\n    \"result.address)\": true,\n    \"result.companyPhone\": true,\n    \"result.companyEmailSource\": true,\n    \"result.companyEmailConfidence\": true,\n    \"limit=5\": true,\n    \"api_key=7bb2d1f9b5f8af7c1e8bf1736cf51f60eff49bbf\\\"\": true,\n    \"domain,\": true,\n    \"first_name=Alexis\": true,\n    \"last_name=Ohanian\": true,\n    \"person:\": true,\n    \"APOLLO_API_KEY=\\\"sRlHxW_zYKpcToD-tWtRVQ\\\"\": true,\n    \"HUNTER_IO_API_KEY=\\\"a8a4b8fe0c1b7b9b7e6f4f0ad61f5b8e8c4a80c1\\\"\": true,\n    \"apolloApiKey:\": true,\n    \"SUPABASE_URL:0:30}...\\\"\": true,\n    \"find\": true,\n    \"require.*enhanced-hunter-client\\\"\": true,\n    \"SUPABASE_DB_URL=\\\"postgresql://postgres.[REF]:[PASSWORD]@[REF].pooler.supabase.com:6543/postgres\\\"\": true,\n    \"require('./server.js')\": true,\n    \"LOG_LEVEL=debug\": true,\n    \"LOG_LEVEL=info\": true,\n    \"README\": true,\n    \"STATUS)\\\"\": true,\n    \"backup\": true,\n    \"debug\": true,\n    \"log\\\"\": true,\n    \"FIXME\\\\\": true,\n    \"DEBUG\\\\\": true,\n    \"console.log\\\"\": true,\n    \"ARCHIVE_README.md\": true,\n    \"DOCUMENTATION_ARCHIVE_README.md\": true,\n    \"DEBUG_TOOLS_README.md\": true,\n    \"ARCHIVED_TESTS_README.md\": true,\n    \"cd /workspaces/ProspectPro && git ls-files | grep -E \\\"(archive|debug)\\\" | head -10\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🧹 Repository streamlining: Move archive content to dedicated branches\\n\\n- Remove debug/, docs/archive/, tests/archived/ from main branch\\n- Archive content preserved in dedicated branches:\\n  * archive/legacy-files - for archive/ folder content\\n  * archive/documentation - for docs/archive/ content  \\n  * archive/debug-tools - for debug/ scripts\\n  * archive/old-tests - for tests/archived/ content\\n- Enhanced .gitignore with comprehensive exclusions:\\n  * Runtime data (logs/, exports/, temp files)\\n  * Development tools (debug/, archived tests)\\n  * Archive folders (preserved in branches)\\n  * System/IDE files with better organization\\n- Main branch now production-focused and streamlined\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"%(committerdate:short)\": true,\n    \"%(subject)\\\"\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"🚀 Condensed Frontend Timeline: 7-Day Fast Track with Cost Optimization\\n\\n📅 Timeline: 2-5 weeks → 7 days delivery\\n💰 Cost Savings: 35-55% via verify-on-export, batching, TTL cache\\n🎨 Enhanced UX: Confidence chips, budget gauges, dark mode, accessibility\\n\\nKey Changes:\\n• LOVABLE_IMPLEMENTATION_GUIDE.md: 7-day sprint plan with UI patterns\\n• API_INTEGRATION_REFERENCE.md: Single multiplexed channel, verify-on-export\\n• FRONTEND_ARCHITECTURE.md: Cost-aware state, batched realtime, budget guardrails  \\n• FRONTEND_INTEGRATION_GUIDE.md: Streamlined Quick Start with doc links\\n• Removed duplicate LOVABLE_TECHNICAL_GUIDE.md (consolidated)\\n\\nFeatures:\\n• Verify-on-Export: Only verify emails at export time (30-45% savings)\\n• Budget Guardrails: 90% budget alerts with projected cost display\\n• Column Projection: Fetch minimal data, paginate for efficiency  \\n• Batched UI Updates: Queue realtime updates, reduce re-renders 70%+\\n• Single Channel: Multiplexed subscriptions for leads+costs+campaign\\n• Enhanced UI: Color-coded confidence, sticky headers, loading skeletons\\n\\nProduction Ready: All backend APIs operational, 7-day frontend delivery path\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"SUPABASE_URL=\\\"https://sriycekxdqnesdsgwiuc.supabase.co\\\"\": true,\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (expected timeout)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && timeout 10s node server.js || echo \\\"Server startup test completed (timeout expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"app.use(express.json())\": true,\n    \"businessType:\": true,\n    \"employeeCount:\": true,\n    \"console.log(JSON.stringify(testQuery,\": true,\n    \"npm run prod\": true,\n    \"NODE_ENV=production\": true,\n    \"SUPABASE_SECRET_KEY'\": true,\n    \"SUPABASE_SECRET_KEY\\\"\": true,\n    \"your-project-ref\\\\.supabase\\\\.co\\\\\": true,\n    \"INSERT_.*_HERE\\\"\": true,\n    \"./scripts/init-prod-server.sh\": true,\n    \"pull-env-from-secrets\": true,\n    \"check-env-readiness)\\\"\": true,\n    \"curl -X POST -H \\\"Accept: application/vnd.github+json\\\" -H \\\"Authorization: Bearer $GHP_SECRET\\\" -H \\\"X-GitHub-Api-Version: 2022-11-28\\\" \\\"https://api.github.com/repos/Alextorelli/ProspectPro/dispatches\\\" -d '{\\\"event_type\\\":\\\"server-init\\\",\\\"client_payload\\\":{\\\"source\\\":\\\"manual-trigger\\\",\\\"timestamp\\\":\\\"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'\\\",\\\"reason\\\":\\\"Get production environment with repository secrets\\\"}}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"production\": true,\n    \"start)\\\"\": true,\n    \"echo \\\"Let me verify the current .env file status:\\\" && ls -la .env* && echo \\\"--- Current .env content (first 10 lines) ---\\\" && head -10 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"/tmp/temp_env_puller.js\": true,\n    \"./scripts/cleanup-railway-refs.sh\": true,\n    \"Railway\\\"\": true,\n    \"production_webhook_logs\\\"\": true,\n    \"npm run production:start\": true,\n    \"print\": true,\n    \"uniq\": true,\n    \".*//g'\": true,\n    \"new\": true,\n    \"requiredModules.forEach(modulePath\": true,\n    \"require.resolve(modulePath)\": true,\n    \"console.log('✅',\": true,\n    \"console.log('❌',\": true,\n    \"missingModules.push(modulePath)\": true,\n    \"missingModules.push(modulePath\": true,\n    \"python3\": true,\n    \"e}')\": true,\n    \"lines.length\": true,\n    \"'))\": true,\n    \"inCodeBlock\": true,\n    \"codeBlockType\": true,\n    \"line.match(/^\\\\s*[-]/)\": true,\n    \"!line.match(/^\\\\s*#/))\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix server.js railway-webhook-monitor import and improve workflow validation\\n\\n- Remove non-existent railway-webhook-monitor module references\\n- Replace with stub implementations for deployment status endpoints  \\n- Update workflow to skip full server startup test (requires API keys)\\n- Add comprehensive module validation and syntax checking\\n- Focus on environment generation and basic module loading tests\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test-env-gen.sh\": true,\n    \"ENVEOF\": true,\n    \"./test-env-gen.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix workflow artifact upload issue with .env file\\n\\n- Add pre-upload file verification step to ensure .env exists before archiving\\n- Simplify artifact path to single .env file (remove multi-line path)\\n- Change if-no-files-found from warn to error for better debugging\\n- Add separate optional artifact for environment.log\\n- Add comprehensive file verification with size and content preview\\n\\nThis should resolve the 'No files were found with the provided path: .env' warning.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"# Workflow test trigger - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Trigger workflow to test artifact upload fix\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && echo \\\"Testing .env generation with exact workflow commands...\\\"\\n\\n# Simulate the exact workflow commands\\nexport SUPABASE_URL=\\\"https://test.supabase.co\\\"\\nexport SUPABASE_SECRET_KEY=\\\"test_secret_key\\\"\\n\\n# Create .env file with production configuration (exactly like workflow)\\ncat > .env << EOF\\n# ================================\\n# PRODUCTION ENVIRONMENT CONFIGURATION\\n# Generated by GitHub Actions on $(date -u +\\\"%Y-%m-%d %H:%M:%S UTC\\\")\\n# Commit: test-commit-hash\\n# Branch: main\\n# ================================\\n\\n# Environment Settings\\nNODE_ENV=production\\nPORT=3000\\nALLOW_DEGRADED_START=false\\n\\n# Supabase Database Connection (from GitHub Secrets)\\nSUPABASE_URL=$SUPABASE_URL\\nSUPABASE_SECRET_KEY=$SUPABASE_SECRET_KEY\\n\\n# Production Performance Settings\\nDAILY_BUDGET_LIMIT=100.00\\nDEFAULT_BUDGET_LIMIT=25.00\\nPER_LEAD_COST_LIMIT=2.00\\nCOST_ALERT_THRESHOLD=80.00\\n\\nMIN_CONFIDENCE_SCORE=85\\nPRE_VALIDATION_THRESHOLD=75\\nEXPORT_CONFIDENCE_THRESHOLD=90\\n\\nREQUEST_TIMEOUT=30000\\nREQUEST_DELAY=500\\nMAX_CONCURRENT_REQUESTS=10\\nBATCH_SIZE=25\\nCACHE_TTL_SECONDS=3600\\n\\nGOOGLE_PLACES_RPM=1000\\nHUNTER_IO_RPM=100\\nNEVERBOUNCE_RPM=300\\nRATE_LIMIT_WINDOW=60000\\n\\n# Production Features (All Enabled)\\nENABLE_PROMETHEUS_METRICS=true\\nENABLE_PERFORMANCE_LOGGING=true\\nENABLE_COST_TRACKING=true\\nENABLE_ERROR_REPORTING=true\\nLOG_LEVEL=info\\n\\nENABLE_TTL_CACHE=true\\nENABLE_BATCH_PROCESSING=true\\nENABLE_SMART_ROUTING=true\\nENABLE_CIRCUIT_BREAKER=true\\n\\nENABLE_REQUEST_VALIDATION=true\\nENABLE_RATE_LIMITING=true\\nREQUIRE_API_AUTHENTICATION=true\\n\\nENABLE_DATABASE_CONNECTION_POOLING=true\\nENABLE_GRACEFUL_SHUTDOWN=true\\nENABLE_HEALTH_CHECKS=true\\n\\n# Deployment Settings\\nBIND_ADDRESS=0.0.0.0\\nGRACEFUL_SHUTDOWN_TIMEOUT=30000\\nHEALTH_CHECK_INTERVAL=30000\\nDATABASE_CONNECTION_TIMEOUT=5000\\nAPI_CLIENT_TIMEOUT=15000\\nWEBHOOK_TIMEOUT=10000\\n\\n# Build Information\\nBUILD_TIMESTAMP=$(date -u +\\\"%Y-%m-%d_%H-%M-%S_UTC\\\")\\nBUILD_COMMIT=test-commit-hash\\nBUILD_BRANCH=main\\nBUILD_ACTOR=test-actor\\nEOF\\n\\necho \\\"✅ .env file created\\\"\\necho \\\"📏 Size: $(wc -c < .env) bytes\\\"\\necho \\\"📄 Lines: $(wc -l < .env) lines\\\"\\necho \\\"📁 File details:\\\"\\nls -la .env\\necho \\\"🔬 File type:\\\"\\nfile .env\\necho \\\"📖 File content (first 3 lines):\\\"\\nhead -3 .env\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Debug artifact upload issue - switch to upload-artifact@v3\\n\\n- Change from upload-artifact@v4 to @v3 (more stable)\\n- Remove if-no-files-found: error that might be causing hard failures\\n- Add comprehensive pre-upload debugging\\n- Remove conditional second artifact that might cause conflicts\\n- Add file type, permissions, and absolute path verification\\n\\nThis should help identify why the .env file (which clearly exists) can't be uploaded.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && rm -f .env && echo \\\"# Artifact upload debug test - $(date)\\\" >> README.md && git add README.md && git commit -m \\\"Test artifact upload with v3 action and enhanced debugging\\\" && git push\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /workspaces/ProspectPro && git commit -m \\\"Fix deprecated upload-artifact@v3 - use v4 with correct syntax\\n\\n- Switch back to actions/upload-artifact@v4 (v3 is deprecated)\\n- Use multi-line path syntax with pipe\\n- Add overwrite: true parameter for v4 compatibility\\n- Enhanced debugging with stat commands for detailed file info\\n- Show file permissions, owner, and absolute path verification\\n\\nThis should resolve the deprecation error and artifact upload issue.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"node -v && npm -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./init-production-server.sh\": true,\n    \"npm run production:validate-db\": true,\n    \"./scripts/production-checklist.sh\": true,\n    \"cd /workspaces/ProspectPro && git commit -m \\\"✅ Production validation system complete\\n\\nWORKING COMPONENTS:\\n• scripts/validate-production-database-v31.js - RLS-compatible validator (passes all tests)\\n• scripts/quick-table-check.js - Simple table accessibility verification\\n• scripts/production-checklist.sh - 5-phase validation (17/17 checks pass)\\n• server.js - Production server (already working, health checks pass)\\n\\nCORRECTIONS MADE:\\n• package.json: Fixed main field to use server.js (not server-production.js)\\n• package.json: Fixed validate-db script to use v31 validator\\n• scripts/init-prod-server.sh: Corrected references to working components\\n• Removed server-production.js (647 lines, unnecessary complexity)\\n• Removed old validate-production-database.js (broken RLS compatibility)\\n\\nVALIDATION STATUS:\\n• Database: 11/11 tables accessible with proper RLS security\\n• Server: Health endpoints responding correctly  \\n• Environment: All configuration validated\\n• Dependencies: All npm packages installed correctly\\n• Files: All required scripts present and executable\\n\\n✨ All staged changes now reference only working, tested components\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"diagnostics.json\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"feat: Production initialization with enhanced schema cache handling\\n\\n🚀 Production-ready deployment with robust schema cache management\\n\\n## Key Features\\n- Enhanced Supabase configuration with schema cache refresh capabilities\\n- Graceful degraded mode startup for production resilience\\n- Comprehensive database connection testing and recovery\\n- Schema cache issue detection and user guidance\\n- Production-safe error handling and diagnostics\\n\\n## Schema Cache Resolution\\n- Force schema refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic detection and guidance for cache issues\\n- Production server continues operation during cache refresh\\n\\n## Production Improvements\\n- Enhanced server startup with detailed error reporting\\n- Clear user guidance for resolving database issues\\n- Comprehensive health and diagnostic endpoints\\n- Graceful handling of temporary database connectivity issues\\n\\n## Files Updated\\n- config/supabase.js: Enhanced connection testing and cache management\\n- server.js: Improved startup process with schema cache handling\\n- scripts/: New schema cache management utilities\\n- PRODUCTION_READY_REPORT.md: Complete production status documentation\\n\\n## Testing Status\\n✅ All modules load without conflicts\\n✅ Server starts successfully in degraded mode\\n✅ Schema cache refresh utilities functional\\n✅ Production health endpoints operational\\n\\nResolves schema cache initialization issues after database updates.\\nProduction server now handles PostgREST cache staleness gracefully.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"\\n🎉 ProspectPro Production Deployment - SYNC COMPLETE\\n====================================================\\n\\n📋 Commit: 6a3d131 (feat: Production initialization with enhanced schema cache handling)\\n🔄 Status: Successfully committed, pushed, and synced\\n🚀 Branch: main (up to date with origin/main)\\n\\n✅ Changes Successfully Deployed:\\n================================\\n\\n🔧 Core Infrastructure:\\n- Enhanced Supabase configuration with schema cache management\\n- Production-safe database connection testing\\n- Graceful degraded mode startup capabilities\\n\\n🛠️ Schema Cache Management:\\n- Force refresh utility (scripts/force-schema-refresh.js)\\n- Alternative refresh method (scripts/refresh-schema-cache.js) \\n- Automatic cache issue detection and user guidance\\n\\n📊 Production Server:\\n- Enhanced startup process with detailed error reporting\\n- Comprehensive health and diagnostic endpoints\\n- Clear user guidance for resolving database connectivity issues\\n\\n📋 Documentation:\\n- Complete production status report (PRODUCTION_READY_REPORT.md)\\n- Comprehensive testing and validation results\\n\\n🎯 Production Status: READY ✅\\n- Server handles schema cache issues gracefully\\n- No critical conflicts detected\\n- All modules load successfully\\n- Health endpoints operational\\n\\nNext deployment will inherit these production resilience improvements!\\n\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"./scripts/check-docs-schema.sh\": true,\n    \"./scripts/install-git-hooks.sh\": true,\n    \"./scripts/repository-cleanup.sh\": true,\n    \"git mv\": true,\n    \"cd /home/node/ProspectPro && git commit -m \\\"docs: Enforce new documentation schema - complete repository cleanup\\n\\n🧹 Repository Cleanup Complete:\\n- Root directory limited to 3 essential .md files (README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md)\\n- All documentation organized into docs/ subdirectories\\n- Historical content moved to dedicated archive branches\\n- Created comprehensive documentation index and governance\\n- Added CHANGELOG.md for version tracking\\n- Established automated enforcement with git hooks\\n\\n📚 New Structure:\\n- docs/setup/ - Installation and configuration guides\\n- docs/guides/ - User guides and tutorials  \\n- docs/technical/ - Technical documentation\\n- docs/deployment/ - Deployment and production guides\\n- docs/development/ - Development and contribution docs\\n\\n🗄️ Archive Branches (to be created):\\n- archive/development-phase - Development artifacts\\n- archive/deployment-phase - Deployment experiments\\n- archive/testing-reports - Test reports and validation\\n- archive/production-legacy - Legacy production documentation\\n\\n🔧 Enforcement System:\\n- Pre-commit hooks validate documentation schema\\n- Scripts for automated cleanup and validation\\n- Comprehensive governance documentation\\n- Structured commit message templates\\n\\nAll historical content preserved with full git history.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"docs: Add comprehensive documentation schema enforcement completion report\\n\\n📋 Complete Status Report:\\n- Repository cleanup successfully executed\\n- 15 root markdown files reduced to 3 (100% compliance)\\n- 24 documentation files organized in structured docs/ subdirectories\\n- 4 archive branches created with preserved historical content\\n- Automated enforcement system active with git hooks\\n- Comprehensive governance and maintenance procedures established\\n\\n✅ Mission Complete: Documentation schema enforcement operational\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Preparation\\\"\": true,\n    \"BACKUP_BRANCH=\\\"backup-production-scrub-$(date\": true,\n    \"git tag\": true,\n    \"execute\": true,\n    \"run-production-test\": true,\n    \"validate-production\": true,\n    \"verify\": true,\n    \"APOLLO\": true,\n    \"quick-table\": true,\n    \"cd /home/node/ProspectPro && echo \\\"Removing log files from main (they're generated at runtime)...\\\" && rm -f database-validation.log production-checklist.log production-fixed.log production.log server-test.log startup.log diagnostics.json\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Removing the production scrubbing plan (moving to development docs)...\\\" && rm -f PRODUCTION_BRANCH_SCRUBBING_PLAN.md\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && echo \\\"Testing server startup...\\\" && timeout 10s node server.js || echo \\\"Server test complete (timeout reached as expected)\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add -A && git commit -m \\\"production: Complete branch scrubbing - main now production-only\\n\\n🧹 Production Branch Scrubbing Complete:\\n\\nREMOVED (Archived to appropriate branches):\\n- 10 development scripts → archive/development-phase\\n- 3 development utilities → archive/development-phase  \\n- Complete test/ directory → archive/old-tests\\n- Test simulation scripts → archive/old-tests\\n- Sample data files → archive/legacy-files\\n- 3 database development utilities → archive/development-phase\\n- All runtime log files (regenerated in production)\\n\\nPRODUCTION ESSENTIALS RETAINED:\\n✅ Core application: server.js, package.json\\n✅ Essential docs: README.md, CHANGELOG.md, PRODUCTION_READY_REPORT.md\\n✅ Production directories: api/, modules/, config/, public/, frontend/, supabase/\\n✅ Production scripts: 11 essential production scripts only\\n✅ Curated documentation: Production setup and user guides\\n\\nVALIDATION:\\n✅ Server starts successfully\\n✅ All production scripts present\\n✅ Essential modules and APIs intact\\n✅ Documentation schema compliant\\n\\nResult: Clean production-ready main branch with full development history preserved in organized archive branches.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"cd /home/node/ProspectPro && git add . && git commit -m \\\"refactor: Production codebase optimization v3.1.0\\n\\n🔧 Production Enhancements:\\n\\nCONFIG:\\n- Enhanced Supabase client with connection pooling and caching\\n- Improved environment variable handling with fallbacks\\n- Added connection TTL caching (5min) for performance\\n\\nSERVER:\\n- Upgraded to v3.1.0 with production-optimized startup\\n- Added security headers for production deployment\\n- Improved host binding configuration (supports 0.0.0.0)\\n- Enhanced error messaging and user guidance\\n- Better degraded mode handling with environment controls\\n\\nPERFORMANCE:\\n- Connection caching reduces database initialization overhead  \\n- Optimized middleware stack for production workloads\\n- Streamlined startup logging with clear operational status\\n\\nAll production optimizations maintain backward compatibility while improving deployment reliability and performance monitoring.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"secret.*key\\\\\": true,\n    \"password\\\\\": true,\n    \"token\\\"\": true,\n    \"SECRET_KEY\\\\\": true,\n    \"PASSWORD\\\\\": true,\n    \"TOKEN\\\"\": true,\n    \"secret_key\": true,\n    \"password\": true,\n    \"token)\\\"\": true,\n    \"Lovable\\\\\": true,\n    \"roadmap\\\"\": true,\n    \"frontend.*lovable\\\"\": true,\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Created comprehensive workflow guide\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"✨ Streamlined Docker workflow with Supabase Vault integration\\n\\n- Added docker-env.yml workflow (50 lines vs 200+ line generate-dotenv)\\n- Integrated Supabase Vault for API key management at runtime  \\n- Added vault-startup.sh for secure credential loading\\n- Updated docker-compose.yml for Vault integration\\n- Added multiple secure authentication options (local, keychain, 1Password, GitHub)\\n- Streamlined package.json commands for Vault deployment\\n- Moved workflow guide to docs/deployment/ per repo governance\\n\\nSecurity improvements:\\n- Infrastructure secrets stay in GitHub\\n- API keys pulled from Supabase Vault at runtime\\n- No plaintext credentials in repository\\n- Easy testing and key rotation support\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"test_commit.tmp\": true,\n    \"git commit -m \\\"🧹 Clean repository structure - archive legacy code\\n\\n- Removed duplicate nested ProspectPro/ directory (preserved in local archive)\\n- Archived legacy scripts not aligned with Docker architecture\\n- Removed reference to missing validate-production-database script\\n- Updated Copilot instructions with repository management details\\n- Maintained clean production structure per governance rules\\n\\nArchived items:\\n• Legacy project structure → archive/legacy-structure/\\n• Legacy deployment scripts → archive/legacy-scripts/\\n• Preserved locally but not committed per .gitignore rules\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"code\": true,\n    \"npm run mcp:test\": true,\n    \"python\": true,\n    \".\\\\scripts\\\\init-prod-server.ps1\": true,\n    \".\\\\scripts\\\\init-prod-server-simple.ps1\": true,\n    \".\\\\scripts\\\\start-prod.ps1\": true,\n    \"notepad\": true,\n    \".\\\\start-production.ps1\": true,\n    \"ForEach-Object\": true,\n    \"Get-Process | Where-Object {$_.ProcessName -like \\\"*node*\\\"} | Stop-Process -Force; Write-Host \\\"✅ All Node processes terminated\\\" -ForegroundColor Green\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$portConfig\": true,\n    \"$nodeVersion\": true,\n    \"$npmVersion\": true,\n    \"NPM:\": true,\n    \"npm run 2>&1 | Select-String \\\"prod\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run diag\": true,\n    \"netstat\": true,\n    \"$checklist\": true,\n    \"$checklist[\\\"PORT\": true,\n    \"$checklist[\\\"NODE_ENV=production\\\"]\": true,\n    \"$checklist[\\\"Supabase\": true,\n    \"foreach\": true,\n    \"$env:NODE_ENV=\\\"production\\\"\": true,\n    \"Clear-Host\": true,\n    \"Get-ExecutionPolicy\": true,\n    \"git commit -m \\\"fix: Windows PowerShell compatibility and production deployment\\n\\n- Update package.json scripts to use PowerShell (.ps1) instead of shell scripts (.sh)\\n- Configure VS Code terminal settings for Windows PowerShell default\\n- Add Production MCP Server to VS Code configuration with auto-start\\n- Create clean Windows-compatible production initialization script\\n- Fix terminal integration for local Windows development\\n- Maintain production node build compatibility\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"copy\": true,\n    \"ConvertFrom-Json\": true,\n    \"git commit -m \\\"fix: Add explicit .env loading to server.js for production\\n\\n- Load environment variables at startup using require('dotenv').config()\\n- Ensures GitHub Actions generated .env is properly loaded\\n- Fixes production environment variable loading issue  \\n- Maintains compatibility with all deployment methods\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"PRODUCTION OPTIMIZATION: Complete Supabase Vault integration, strict production mode, enhanced MCP server\\n\\n✅ SUPABASE VAULT INTEGRATION:\\n- Added modules/utils/supabase-vault-loader.js with runtime API key loading\\n- Enhanced config/environment-loader.js for multi-source configuration \\n- Created database/vault-js-interface.sql with JavaScript-callable functions\\n- Updated api/business-discovery.js to use vault API keys with fallback\\n\\n✅ STRICT PRODUCTION MODE:\\n- Updated server.js with EnvironmentLoader and vault integration\\n- Added critical API key validation (Foursquare required)\\n- Enforced ALLOW_DEGRADED_START=false in production\\n- Enhanced startup validation with database + vault checks\\n\\n✅ GITHUB ACTIONS WORKFLOW OPTIMIZATION:\\n- Fixed repository-maintenance.yml (schedule/manual only)  \\n- Fixed docker-env.yml (manual/workflow_call only)\\n- Prevents cascade failures and resource waste\\n\\n✅ ENHANCED PRODUCTION MCP SERVER:\\n- Added vault_api_key_status tool for comprehensive API key diagnostics\\n- Added production_startup_validator for complete configuration validation\\n- Added github_workflow_optimizer for workflow analysis and issue detection\\n- Updated MCP configuration for enhanced production monitoring\\n\\n✅ COMPREHENSIVE DOCUMENTATION:\\n- Updated .github/copilot-instructions.md with vault integration details\\n- Added strict production mode patterns and examples\\n- Enhanced MCP server strategy with new tools\\n- Updated architecture documentation with vault integration patterns\\n\\n🔑 VAULT FEATURES:\\n- 5-minute TTL caching for performance\\n- Exponential backoff retry logic\\n- Environment variable fallback\\n- Template/placeholder value filtering\\n- Comprehensive error handling and diagnostics\\n\\n🏭 PRODUCTION FEATURES:\\n- Zero-tolerance for degraded starts\\n- Critical API validation at startup\\n- Real-time vault status monitoring\\n- Enhanced environment switching workflow\\n- Optimized GitHub Actions workflows\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"envLoader.getConfig().supabase.url)\": true,\n    \"envLoader.getConfig().features[k]).length)\": true,\n    \"console.log('🔑\": true,\n    \"git add . && git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"FIX: Environment loading order - ensure dotenv loads before supabase module\\n\\n✅ CRITICAL FIX:\\n- Added require('dotenv').config() before all other imports in server.js\\n- Resolves module loading order issue where supabase.js evaluated empty env vars\\n- Database connection now works correctly\\n- Strict production mode properly enforced\\n\\n🔍 VALIDATION CONFIRMED:\\n- Environment variables loaded successfully\\n- Supabase connection established (816ms)\\n- Production startup correctly blocks schema cache issues\\n- Clear error messages and remediation steps provided\\n\\n🏭 PRODUCTION MODE WORKING:\\n- Strict startup validation: ✅\\n- Schema cache detection: ✅ \\n- Emergency bypass available: ✅\\n- Supabase Vault integration ready: ✅\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:ALLOW_DEGRADED_START=\\\"true\\\"\": true,\n    \"docs/SUPABASE_UPGRADE_NOTES.md\": true,\n    \"console.log('📍\": true,\n    \"console.log('\\\\\\\\n🔧\": true,\n    \"console.log('==========================================')\": true,\n    \"console.log(\\\\\\\\\\\\\\\"\": true,\n    \"}')\": true,\n    \"console.log('}')\": true,\n    \"\\\\\\\"')\": true,\n    \"Result:',\": true,\n    \"docs/GOOGLE_CLOUD_QUICKSTART.md\": true,\n    \"git commit -m \\\"feat: Add Google Cloud Run deployment workflow with validation\\n\\n- Complete CI/CD pipeline with Docker build/push/deploy\\n- Pre-deployment validation script for local testing\\n- Updated Dockerfile for Cloud Run (port 3100)\\n- Comprehensive health checks and deployment verification\\n- Ready for automated deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"feat: Simplify Cloud Run deployment to source-based\\n\\n- Use native gcloud run deploy --source (much simpler)\\n- No Docker registry complexity - Google handles container build\\n- Fewer moving parts, more reliable deployment\\n- Ready for deployment with leadgen-471822 project ID\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"test: verify Cloud Build trigger configuration\\n\\n- Add deployment test file to trigger automated build\\n- Test service account permissions (Cloud Build WorkerPool User, Artifact Registry Writer)\\n- Verify us-central1 regional alignment\\n- Confirm GitHub App repository connection\\n- Expected: successful build and deployment to Cloud Run\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -am \\\"fix: correct Artifact Registry repository name in cloudbuild.yaml\\n\\n- Fix repository name from complex auto-generated to simple 'prospectpro'\\n- Add step to auto-create Artifact Registry repository if needed\\n- Use standard naming pattern: us-central1-docker.pkg.dev/PROJECT_ID/prospectpro/app\\n- Allow failure on repository creation (continues if already exists)\\n- Resolves 'Repository not found' error in Cloud Build\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"trigger-test.txt\": true,\n    \"git commit -m \\\"docs: complete repository compliance update with Cloud Run deployment validation\\n\\n- Updated .github/copilot-instructions.md with Google Cloud Run deployment section\\n- Added validated trigger configuration documentation (ID: 0358b3a4-c7a4-4da9-9610-1e335c4894e0)\\n- Enhanced docs/PRODUCTION_SETUP_GUIDE.md with Cloud Run deployment workflow\\n- Updated README.md to v3.0 with production status badges and Cloud Build links\\n- Confirmed .vscode/mcp-config.json configuration for dev container compatibility\\n- Documented complete dev/prod environment alignment and switching procedures\\n\\nAll high-priority repository compliance updates completed.\\nReady for clean closure and fresh development session initiation.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"🔧 Fix Cloud Run port conflict - Remove fixed PORT, enable dynamic port binding\\n\\n- Remove ENV PORT=3100 from Dockerfile (conflicted with Cloud Run's dynamic PORT)\\n- Remove --port=3100 from cloudbuild.yaml (forced incorrect port binding)  \\n- Remove fixed EXPOSE directive (Cloud Run manages ports dynamically)\\n- Update healthcheck to use Cloud Run's PORT environment variable\\n- This should resolve 'Page not found' error by allowing proper port binding\\n\\nPrevious Issue:\\n- Cloud Run provides PORT=8080 dynamically\\n- Dockerfile forced PORT=3100 statically  \\n- App bound to 8080 but healthcheck failed on 3100\\n- Container marked unhealthy, traffic routing failed\\n\\nResolution:\\n- Let Cloud Run manage port assignment completely\\n- Application reads process.env.PORT correctly\\n- Healthcheck uses dynamic port with fallback\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"gcloud\": true,\n    \"git commit -m \\\"📝 Fix Cloud Build trigger ID in documentation\\n\\n- Update trigger ID to correct one: ae04dd92-4509-43ee-9f70-da3caf15dbb4\\n- Previous ID (0358b3a4-c7a4-4da9-9610-1e335c4894e0) was incorrect\\n- This explains why builds succeeded but service wasn't updating\\n- Documentation now reflects the actual production trigger\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"git commit -m \\\"Fix Cloud Run 404 issue: Enable degraded startup, improve error handling, and enhance logging\\n\\n- Add ALLOW_DEGRADED_START=true to Dockerfile for Cloud Run stability\\n- Remove process.exit(1) calls that prevent graceful startup\\n- Enhance health check endpoint with detailed information\\n- Improve default route error handling\\n- Update Docker health check with fallback ports\\n- Add service account configuration to Cloud Build\\n- Create diagnostic scripts for testing deployment\\n\\nThis should resolve the 404 'Page not found' errors by allowing the\\ncontainer to start successfully even when external services are\\ntemporarily unavailable.\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"$env:PORT=8080\": true,\n    \"Get-ChildItem -Directory | Where-Object {$_.Name -like \\\"*Prospect*\\\"}\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"dir\": true,\n    \"npm run test\": true,\n    \"cd /workspaces/ProspectPro && node -e \\\"console.log(JSON.parse(require('fs').readFileSync('.vscode/settings.json', 'utf8')))\\\"\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"Deno\\\"\": true,\n    \"MCP\\\"\": true,\n    \"server.js\": true,\n    \"server-simple.js\": true,\n    \"mcp-servers'\": true,\n    \"cd /workspaces/ProspectPro/mcp-servers && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"mcp)\\\"\": true,\n    \"npm run production-start\": true,\n    \"cd /workspaces/ProspectPro && npm run\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"server)\\\"\": true,\n    \"jobs\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"location\\\":\\\"San Diego, CA\\\",\\\"radius\\\":10,\\\"businessTypes\\\":[\\\"restaurant\\\"],\\\"limit\\\":5}' -v\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"fg\": true,\n    \"curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"ps aux | grep -E \\\"(node.*server)\\\" | grep -v grep\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 3 && curl -X POST http://localhost:3100/api/business-discovery -H \\\"Content-Type: application/json\\\" -d '{\\\"test\\\": true}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"sleep 10 && curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST http://localhost:3100/api/business/discover -H \\\"Content-Type: application/json\\\" -d '{\\\"query\\\": \\\"plumber\\\", \\\"location\\\": \\\"San Diego, CA\\\", \\\"count\\\": 1}' | head -20\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm.*dev\\\"\": true,\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NjU3ODksImV4cCI6MjA3MzU0MTc4OX0.Rx_1Hjz2eayKie0RpPB28i7_683ZwhVJ_5Eu_rzTWpI' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"businessType\\\": \\\"coffee shop\\\", \\\"location\\\": \\\"Seattle, WA\\\", \\\"maxResults\\\": 2}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"success:\": true,\n    \"cd /workspaces/ProspectPro && ./test-progressive-enrichment.sh\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enrichment-pdl' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"action\\\": \\\"enrichCompany\\\", \\\"companyName\\\": \\\"Microsoft Corporation\\\"}'\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"curl -X POST 'https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/enrichment-orchestrator' \\\\\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNyaXljZWt4ZHFuZXNkc2d3aXVjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzk2NTc4OSwiZXhwIjoyMDczNTQxNzg5fQ.V2wlvxGC1_SshWudFw27ZWmQjuxj0UtXANXrZmt4OjY' \\\\\\n  -H 'Content-Type: application/json' \\\\\\n  -d '{\\\"businessName\\\": \\\"Starbucks Corporation\\\", \\\"domain\\\": \\\"starbucks.com\\\", \\\"state\\\": \\\"WA\\\", \\\"tier\\\": \\\"professional\\\", \\\"maxCostPerBusiness\\\": 1.50}' | jq .\": {\n      \"approve\": true,\n      \"matchCommandLine\": true\n    },\n    \"npm run build\": true,\n    \"vercel\": true,\n    \"vite\\\\\": true,\n    \"react\\\"\": true,\n    \"pgrep\": true,\n    \"screen\": true\n  },\n  \"chat.agent.maxRequests\": 1000,\n  \"chat.editing.confirmEditRequestRetry\": false,\n  \"gitlens.gitCommands.skipConfirmations\": [\"fetch:command\"],\n  \"chat.editing.confirmEditRequestRemoval\": false,\n  \"githubPullRequests.codingAgent.promptForConfirmation\": false,\n  \"[markdown]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[jsonc]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[javascript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"workbench.secondarySideBar.defaultVisibility\": \"visible\",\n  \"window.menuBarVisibility\": \"classic\",\n  \"containers.containerClient\": \"com.microsoft.visualstudio.containers.docker\",\n  \"containers.orchestratorClient\": \"com.microsoft.visualstudio.orchestrators.dockercompose\",\n  \"@azure.argTenant\": \"\",\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"text\": \"- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Code Gen Best Practices: Before generating code for Azure, running terminal commands for Azure, performing operations related to Azure, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `code-generation` to get general Azure code generation best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Deployment Best Practices: Before deploying to Azure, preparing applications for deployment to Azure, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `deployment` to get general Azure deployment best practices. Only call this tool when the user is discussing Azure; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Code Gen Best Practices: Before generating code for Azure Functions, performing operations related to Azure Functions, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `code-generation` to get Azure Functions code generation best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure Functions Deployment Best Practices: Before deploying Azure Functions apps to Azure, preparing for the deployment, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `deployment` to get Azure Functions deployment best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Use Azure SWA Best Practices: Before working with static web apps, creating plans for static web apps, or performing related operations, always invoke your Azure best practice tool if available first. Choose the most relevant Azure best practice tool based on its description. Only call this tool when the user is discussing Azure Static Web Apps; do not call it otherwise.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Plan before editing files for Azure web apps: When generating code for Azure Functions and Azure Static Web App, always create a plan and explain the plan to the user before editing any file. Proceed with editing the files after getting consent from the user.\"\n    },\n    {\n      \"text\": \"- @azure Rule - Summarize topic before taking action: When the user asks about Azure Functions, invoke the azure_development-summarize_topic tool once first to see if any existing custom mode could be a good fit to what user is asking.\"\n    }\n  ],\n  \"workbench.startupEditor\": \"none\",\n  \"git-autoconfig.configList\": [\n    {\n      \"user.email\": \"Alextorelli28@gmail.com\",\n      \"user.name\": \"Alextorelli28@gmail.com\"\n    }\n  ],\n  \"redhat.telemetry.enabled\": true,\n  \"git-autoconfig.ignoreRootList\": [\"D:/APPS/ProspectPro/ProspectPro\"],\n  \"terminal.integrated.enableMultiLinePasteWarning\": \"never\",\n  \"remoteHub.commitDirectlyWarning\": \"off\",\n  \"vs-kubernetes\": {\n    \"vscode-kubernetes.kubectl-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/kubectl/kubectl\",\n    \"vscode-kubernetes.helm-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm\",\n    \"vscode-kubernetes.minikube-path-linux\": \"/home/node/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube\"\n  },\n  \"githubPullRequests.createOnPublishBranch\": \"never\",\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"plaintext\": true,\n    \"markdown\": true,\n    \"scminput\": false\n  },\n  \"[sql]\": {\n    \"editor.defaultFormatter\": \"mtxr.sqltools\"\n  },\n  \"[html]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[typescriptreact]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[css]\": {\n    \"editor.defaultFormatter\": \"vscode.css-language-features\"\n  },\n  \"[json]\": {\n    \"editor.defaultFormatter\": \"vscode.json-language-features\"\n  },\n  \"workbench.colorCustomizations\": {\n    \"[Vira*]\": {\n      \"statusBar.debuggingBackground\": \"#80CBC433\",\n      \"statusBar.debuggingForeground\": \"#80CBC4\",\n      \"toolbar.activeBackground\": \"#80CBC426\",\n      \"button.background\": \"#80CBC4\",\n      \"button.hoverBackground\": \"#80CBC4cc\",\n      \"extensionButton.separator\": \"#80CBC433\",\n      \"extensionButton.background\": \"#80CBC414\",\n      \"extensionButton.foreground\": \"#80CBC4\",\n      \"extensionButton.hoverBackground\": \"#80CBC433\",\n      \"extensionButton.prominentForeground\": \"#80CBC4\",\n      \"extensionButton.prominentBackground\": \"#80CBC414\",\n      \"extensionButton.prominentHoverBackground\": \"#80CBC433\",\n      \"activityBarBadge.background\": \"#80CBC4\",\n      \"activityBar.activeBorder\": \"#80CBC4\",\n      \"activityBarTop.activeBorder\": \"#80CBC4\",\n      \"list.inactiveSelectionIconForeground\": \"#80CBC4\",\n      \"list.activeSelectionForeground\": \"#80CBC4\",\n      \"list.inactiveSelectionForeground\": \"#80CBC4\",\n      \"list.highlightForeground\": \"#80CBC4\",\n      \"sash.hoverBorder\": \"#80CBC480\",\n      \"list.activeSelectionIconForeground\": \"#80CBC4\",\n      \"scrollbarSlider.activeBackground\": \"#80CBC480\",\n      \"editorSuggestWidget.highlightForeground\": \"#80CBC4\",\n      \"textLink.foreground\": \"#80CBC4\",\n      \"progressBar.background\": \"#80CBC4\",\n      \"pickerGroup.foreground\": \"#80CBC4\",\n      \"tab.activeBorder\": \"#80CBC400\",\n      \"tab.activeBorderTop\": \"#80CBC4\",\n      \"tab.unfocusedActiveBorder\": \"#80CBC400\",\n      \"tab.unfocusedActiveBorderTop\": \"#80CBC4\",\n      \"tab.activeModifiedBorder\": \"#80CBC4\",\n      \"notificationLink.foreground\": \"#80CBC4\",\n      \"editorWidget.resizeBorder\": \"#80CBC4\",\n      \"editorWidget.border\": \"#80CBC4\",\n      \"settings.modifiedItemIndicator\": \"#80CBC4\",\n      \"panelTitle.activeBorder\": \"#80CBC4\",\n      \"breadcrumb.activeSelectionForeground\": \"#80CBC4\",\n      \"menu.selectionForeground\": \"#80CBC4\",\n      \"menubar.selectionForeground\": \"#80CBC4\",\n      \"editor.findMatchBorder\": \"#80CBC4\",\n      \"selection.background\": \"#80CBC440\",\n      \"statusBarItem.remoteBackground\": \"#80CBC414\",\n      \"statusBarItem.remoteHoverBackground\": \"#80CBC4\",\n      \"statusBarItem.remoteForeground\": \"#80CBC4\",\n      \"notebook.inactiveFocusedCellBorder\": \"#80CBC480\",\n      \"commandCenter.activeBorder\": \"#80CBC480\",\n      \"chat.slashCommandForeground\": \"#80CBC4\",\n      \"chat.avatarForeground\": \"#80CBC4\",\n      \"activityBarBadge.foreground\": \"#000000\",\n      \"button.foreground\": \"#000000\",\n      \"statusBarItem.remoteHoverForeground\": \"#000000\",\n      \"editorGroupHeader.tabsBackground\": \"#ffffff0a\",\n      \"tab.border\": \"#ffffff01\",\n      \"tab.inactiveBackground\": \"#ffffff01\",\n      \"widget.shadow\": \"#00000000\",\n      \"scrollbar.shadow\": \"#00000000\"\n    }\n  },\n  \"workbench.preferredDarkColorTheme\": \"Vira Ocean\",\n  \"workbench.productIconTheme\": \"viraUIIcons\",\n  \"viraTheme.contrastedTabs\": true,\n  \"viraTheme.hidesShadows\": true,\n  \"chat.todoListTool.enabled\": false,\n  \"chat.tools.edits.autoApprove\": {\n    \"**/*.{csproj,fsproj,vbproj}\": true\n  },\n  \"chat.useChatSessionsForCloudButton\": true,\n  \"workbench.settings.applyToAllProfiles\": [\n    \"chat.useChatSessionsForCloudButton\"\n  ],\n  \"chat.agentSessionsViewLocation\": \"view\",\n  \"window.density.editorTabHeight\": \"compact\",\n  \"docker.extension.enableComposeLanguageServer\": false,\n  \"docker.extension.dockerEngineAvailabilityPrompt\": false,\n  \"github.copilot.chat.agent.thinkingTool\": true,\n  \"github.copilot.chat.editor.temporalContext.enabled\": true,\n  \"github.copilot.chat.edits.temporalContext.enabled\": true,\n  \"github.copilot.chat.responsesApiReasoningEffort\": \"high\",\n  \"github.copilot.chat.responsesApiReasoningSummary\": \"detailed\",\n  \"github.copilot.chat.useResponsesApi\": true,\n  \"viraTheme.useTopTabIndicator\": true,\n  \"remoteHub.richNavigation.enabled\": true,\n  \"workbench.editor.enablePreview\": false,\n  \"deno.codeLens.test\": true,\n  \"deno.codeLens.referencesAllFunctions\": true,\n  \"deno.codeLens.references\": true,\n  \"deno.codeLens.implementations\": true,\n  \"deno.logFile\": true,\n  \"chat.mcp.serverSampling\": {\n    \"Global in Code: memory\": {\n      \"allowedModels\": [\n        \"copilot/gpt-4.1\",\n        \"copilot/auto\",\n        \"copilot/claude-3.7-sonnet\",\n        \"copilot/claude-3.7-sonnet-thought\",\n        \"copilot/claude-sonnet-4\",\n        \"copilot/gemini-2.5-pro\",\n        \"copilot/gpt-5\",\n        \"copilot/grok-code-fast-1\"\n      ]\n    }\n  },\n  \"snyk.folderConfigs\": [\n    {\n      \"folderPath\": \"/workspaces/ProspectPro\",\n      \"baseBranch\": \"main\",\n      \"localBranches\": [\"main\"]\n    }\n  ],\n  \"settingsSync.ignoredExtensions\": [\n    \"christian-kohler.npm-intellisense\",\n    \"ms-vscode.vscode-node-azure-pack\",\n    \"ms-azuretools.vscode-azurevirtualmachines\"\n  ],\n  \"vsicons.dontShowNewVersionMessage\": true,\n  \"snyk.yesWelcomeNotification\": false,\n  \"snyk.trustedFolders\": [\"/workspaces/ProspectPro\"],\n  \"[dockercompose]\": {\n    \"editor.insertSpaces\": true,\n    \"editor.tabSize\": 2,\n    \"editor.autoIndent\": \"advanced\",\n    \"editor.quickSuggestions\": {\n      \"other\": true,\n      \"comments\": false,\n      \"strings\": true\n    },\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  },\n  \"[github-actions-workflow]\": {\n    \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n  },\n  \"extensions.ignoreRecommendations\": true\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":7,"duration":0.812},
{"type":"mark","name":"lsp.did_change_batched","count":1,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":1,"duration":6.539},
{"type":"mark","name":"lsp.code_lens","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.did_change_batched","count":2,"args":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"},
{"type":"measure","name":"lsp.did_change_batched","count":2,"duration":0.854},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":1,"duration":0.025},
{"type":"mark","name":"lsp.code_action","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.did_open","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospectpro-verified-business-intelligence\",\r\n  \"version\": \"4.1.0\",\r\n  \"type\": \"module\",\r\n  \"description\": \"ProspectPro - Verified Business Intelligence Platform with Zero Fake Data Policy\",\r\n  \"scripts\": {\r\n    \"dev\": \"supabase functions serve --no-verify-jwt --debug\",\r\n    \"deploy:critical\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator\",\r\n    \"deploy:all\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator && supabase functions deploy campaign-export && supabase functions deploy enrichment-hunter\",\r\n    \"test:edge\": \"curl -X POST 'http://localhost:54321/functions/v1/business-discovery-optimized' -H 'Content-Type: application/json' -d '{\\\"businessType\\\":\\\"test\\\",\\\"location\\\":\\\"test\\\"}'\",\r\n    \"logs:live\": \"supabase functions logs --follow\",\r\n    \"logs:errors\": \"supabase functions logs --filter=error\",\r\n    \"mcp:prod\": \"cd mcp-servers && npm run start:production\",\r\n    \"mcp:dev\": \"cd mcp-servers && npm run start:development\",\r\n    \"mcp:debug\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"frontend:build\": \"npm run build\",\r\n    \"frontend:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"static:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"health:check\": \"curl -f https://prospectpro.appsmithery.co/ || echo 'Health check failed'\",\r\n    \"cost:analyze\": \"echo 'Check GitHub billing dashboard for usage trends'\",\r\n    \"build\": \"tsc && vite build && echo '{\\\"version\\\":2,\\\"rewrites\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"destination\\\":\\\"/index.html\\\"}],\\\"headers\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=0, s-maxage=0, must-revalidate\\\"}]},{\\\"source\\\":\\\"/assets/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=31536000, immutable\\\"}]}]}' > dist/vercel.json\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\r\n    \"type-check\": \"tsc --noEmit\",\r\n    \"build:static\": \"npm run build\",\r\n    \"deploy:vercel\": \"vercel --prod\",\r\n    \"deploy:netlify\": \"netlify deploy --prod --dir=dist\",\r\n    \"deploy:gcs\": \"npm run build && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/\",\r\n    \"serve:local\": \"npm run preview\",\r\n    \"test:edge-functions\": \"supabase functions serve\",\r\n    \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy business-discovery-optimized && supabase functions deploy campaign-export\",\r\n    \"db:setup\": \"echo 'Run SQL from /database/supabase-first-schema.sql in Supabase dashboard'\",\r\n    \"db:status\": \"supabase db status\",\r\n    \"functions:list\": \"supabase functions list\",\r\n    \"functions:logs\": \"supabase functions logs\",\r\n    \"clean\": \"rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'\",\r\n    \"archive:legacy\": \"mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'\",\r\n    \"health\": \"echo 'Use Edge Function endpoints for health checks'\",\r\n    \"test\": \"echo 'Test Edge Functions via Supabase dashboard or curl'\",\r\n    \"test:verified-contacts\": \"echo 'Test verified contact discovery with zero fake data validation'\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && npm run test\",\r\n    \"mcp:start\": \"cd mcp-servers && npm run start:all\",\r\n    \"mcp:troubleshoot\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"debug:quick\": \"echo 'Common issue: Check anon key sync and verified contact authentication'\",\r\n    \"debug:edge-function\": \"echo 'Test Verified Edge Function: curl -X POST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-optimized -H \\\"Authorization: Bearer YOUR_ANON_KEY\\\" -H \\\"Content-Type: application/json\\\" -d \\\"{\\\\\\\"businessType\\\\\\\": \\\\\\\"test\\\\\\\", \\\\\\\"location\\\\\\\": \\\\\\\"test\\\\\\\"}\\\"'\",\r\n    \"debug:vercel\": \"echo 'Check Vercel deployment: curl -I https://your-vercel-url.vercel.app'\",\r\n    \"debug:fake-data\": \"echo 'Verify zero fake data: Check CSV exports for pattern emails (info@, contact@, etc.)'\"\r\n  },\r\n  \"keywords\": [\r\n    \"verified-business-intelligence\",\r\n    \"professional-contacts\",\r\n    \"apollo-api\",\r\n    \"chamber-of-commerce\",\r\n    \"professional-licensing\",\r\n    \"zero-fake-data\",\r\n    \"supabase\",\r\n    \"edge-functions\",\r\n    \"verified-contacts\"\r\n  ],\r\n  \"author\": \"Alex Torelli\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"@supabase/supabase-js\": \"^2.39.0\",\r\n    \"@tanstack/react-query\": \"^5.17.0\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.20.1\",\r\n    \"zustand\": \"^4.4.7\",\r\n    \"recharts\": \"^2.8.0\",\r\n    \"lucide-react\": \"^0.294.0\",\r\n    \"clsx\": \"^2.0.0\",\r\n    \"tailwind-merge\": \"^2.2.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^18.2.43\",\r\n    \"@types/react-dom\": \"^18.2.17\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\r\n    \"@typescript-eslint/parser\": \"^6.14.0\",\r\n    \"@vitejs/plugin-react\": \"^4.2.1\",\r\n    \"autoprefixer\": \"^10.4.16\",\r\n    \"eslint\": \"^8.55.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\r\n    \"postcss\": \"^8.4.32\",\r\n    \"tailwindcss\": \"^3.3.6\",\r\n    \"typescript\": \"^5.2.2\",\r\n    \"vite\": \"^5.0.8\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \"22.x\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/Alextorelli/ProspectPro\"\r\n  },\r\n  \"architecture\": {\r\n    \"frontend\": \"Static HTML/JS with verified contact display\",\r\n    \"backend\": \"Supabase Edge Functions with zero fake data\",\r\n    \"database\": \"Supabase PostgreSQL with verification tracking\",\r\n    \"contacts\": \"Apollo API + Professional Licensing + Chamber Directories\",\r\n    \"dataPolicy\": \"Zero fake data - verified contacts only\",\r\n    \"hosting\": \"Static hosting (Cloud Storage/CDN)\",\r\n    \"deployment\": \"Supabase CLI + gsutil\"\r\n  }\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":8,"duration":0.118},
{"type":"mark","name":"lsp.folding_range","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"}}},
{"type":"mark","name":"lsp.did_open","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/old-frontend/package.json","languageId":"json","version":1,"text":"{\n  \"name\": \"prospectpro-frontend\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"tsc && vite build\",\n    \"preview\": \"vite preview\",\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"@supabase/supabase-js\": \"^2.39.0\",\n    \"@tanstack/react-query\": \"^5.17.0\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-router-dom\": \"^6.20.1\",\n    \"zustand\": \"^4.4.7\",\n    \"recharts\": \"^2.8.0\",\n    \"lucide-react\": \"^0.294.0\",\n    \"clsx\": \"^2.0.0\",\n    \"tailwind-merge\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"^18.2.43\",\n    \"@types/react-dom\": \"^18.2.17\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\n    \"@typescript-eslint/parser\": \"^6.14.0\",\n    \"@vitejs/plugin-react\": \"^4.2.1\",\n    \"autoprefixer\": \"^10.4.16\",\n    \"eslint\": \"^8.55.0\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\n    \"postcss\": \"^8.4.32\",\n    \"tailwindcss\": \"^3.3.6\",\n    \"typescript\": \"^5.2.2\",\n    \"vite\": \"^5.0.8\"\n  }\n}"}}},
{"type":"measure","name":"lsp.did_open","count":9,"duration":0.063},
{"type":"mark","name":"lsp.did_open","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/deployment-logs/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospect-pro-real-api\",\r\n  \"version\": \"3.1.0\",\r\n  \"description\": \"Production-grade lead generation platform with Enhanced Quality Scoring v3.0, zero-fake-data policy and Supabase Vault integration\",\r\n  \"main\": \"server.js\",\r\n  \"scripts\": {\r\n    \"start\": \"node server.js\",\r\n    \"dev\": \"nodemon server.js\",\r\n    \"prod\": \"NODE_ENV=production node server.js\",\r\n    \"production:start\": \"powershell -ExecutionPolicy Bypass -File ./scripts/init-prod-simple.ps1\",\r\n    \"production:checklist\": \"echo 'Production checklist: Check .env file, test database connection, validate APIs'\",\r\n    \"prod:init\": \"powershell -ExecutionPolicy Bypass -File ./scripts/init-prod-simple.ps1\",\r\n    \"prod:setup-env\": \"node ./scripts/pull-env-from-secrets.js\",\r\n    \"prod:check\": \"node --version && echo Production environment ready\",\r\n    \"health\": \"curl http://localhost:3100/health || echo 'Server not running'\",\r\n    \"diag\": \"curl http://localhost:3100/diag | json_pp || echo 'Server not running'\",\r\n    \"test\": \"echo 'Tests moved to testing branch. Run: git checkout testing && node tests/validation/test-real-data.js'\",\r\n    \"postinstall\": \"echo 'ProspectPro v3.0: Production-ready deployment configured'\",\r\n    \"docker:dev\": \"./docker/start-dev.sh\",\r\n    \"docker:prod\": \"./docker/deploy-prod.sh\",\r\n    \"docker:build\": \"docker-compose build\",\r\n    \"docker:package\": \"./docker/create-client-package.sh\",\r\n    \"docker:logs\": \"docker-compose logs -f prospectpro\",\r\n    \"docker:stop\": \"docker-compose down\",\r\n    \"docker:restart\": \"docker-compose restart\",\r\n    \"secure:setup\": \"./docker/secure-start.sh setup\",\r\n    \"secure:start\": \"./docker/secure-start.sh start\",\r\n    \"secure:dev\": \"./docker/secure-start.sh dev\",\r\n    \"keychain:setup\": \"./docker/keychain-start.sh setup\",\r\n    \"keychain:start\": \"./docker/keychain-start.sh start\",\r\n    \"1password:setup\": \"./docker/1password-start.sh setup\",\r\n    \"1password:start\": \"./docker/1password-start.sh start\",\r\n    \"vault:deploy\": \"echo '🔐 Deploying with Supabase Vault integration...' && docker-compose up --build -d\",\r\n    \"vault:dev\": \"echo '🔐 Starting development with Supabase Vault...' && docker-compose -f docker-compose.dev.yml up --build\",\r\n    \"vault:logs\": \"docker-compose logs -f prospectpro\",\r\n    \"vault:test\": \"echo '🧪 Testing Vault connection...' && docker-compose exec prospectpro curl -f http://localhost:3000/diag\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && node test-servers.js\",\r\n    \"mcp:start:database\": \"cd mcp-servers && node database-server.js\",\r\n    \"mcp:start:api\": \"cd mcp-servers && node api-server.js\",\r\n    \"mcp:start:filesystem\": \"cd mcp-servers && node filesystem-server.js\",\r\n    \"mcp:start:monitoring\": \"cd mcp-servers && node monitoring-server.js\",\r\n    \"mcp:start:production\": \"cd mcp-servers && node production-server.js\",\r\n    \"mcp:start:all\": \"cd mcp-servers && npm run start:all\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=20.0.0\",\r\n    \"npm\": \">=9.0.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@googlemaps/google-maps-services-js\": \"^3.4.2\",\r\n    \"@modelcontextprotocol/sdk\": \"^1.18.1\",\r\n    \"@supabase/supabase-js\": \"^2.57.4\",\r\n    \"axios\": \"^1.12.2\",\r\n    \"bcryptjs\": \"^2.4.3\",\r\n    \"cheerio\": \"^1.1.2\",\r\n    \"cors\": \"^2.8.5\",\r\n    \"csv-writer\": \"^1.6.0\",\r\n    \"dotenv\": \"^16.6.1\",\r\n    \"express\": \"^4.18.2\",\r\n    \"express-rate-limit\": \"^8.1.0\",\r\n    \"helmet\": \"^7.2.0\",\r\n    \"jsonwebtoken\": \"^9.0.2\",\r\n    \"node-fetch\": \"^2.7.0\",\r\n    \"p-limit\": \"^3.1.0\",\r\n    \"pg\": \"^8.16.3\",\r\n    \"prom-client\": \"^15.1.3\",\r\n    \"rate-limiter-flexible\": \"^2.4.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"jest\": \"^30.1.3\",\r\n    \"nodemon\": \"^3.1.10\",\r\n    \"supabase\": \"^2.45.5\",\r\n    \"supertest\": \"^7.1.4\"\r\n  },\r\n  \"keywords\": [\r\n    \"lead-generation\",\r\n    \"business-intelligence\",\r\n    \"api-integration\"\r\n  ],\r\n  \"author\": \"ProspectPro Development Team\",\r\n  \"license\": \"MIT\"\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":10,"duration":0.074},
{"type":"mark","name":"lsp.did_change_watched_files","count":1,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":1,"duration":0.016},
{"type":"mark","name":"lsp.did_change_watched_files","count":2,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":2,"duration":0.016},
{"type":"mark","name":"lsp.did_close","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"}}},
{"type":"measure","name":"lsp.did_close","count":2,"duration":0.056},
{"type":"mark","name":"lsp.did_close","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-servers/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":3,"duration":0.033},
{"type":"mark","name":"lsp.did_close","count":4,"args":{"textDocument":{"uri":"vscode-userdata:/c%3A/Users/Alext/AppData/Roaming/Code/User/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":4,"duration":0.006},
{"type":"mark","name":"lsp.did_close","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":5,"duration":0.036},
{"type":"mark","name":"lsp.did_close","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/old-frontend/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":6,"duration":0.033},
{"type":"mark","name":"lsp.did_close","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/archive/deployment-logs/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":7,"duration":0.058},
{"type":"mark","name":"lsp.did_open","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api-legacy/dashboard-export.js","languageId":"javascript","version":1,"text":"/**\r\n * Dashboard Export API Endpoints\r\n * CSV/Excel export functionality for monitoring dashboards\r\n */\r\n\r\nconst express = require('express');\r\nconst { createClient } = require('@supabase/supabase-js');\r\nconst path = require('path');\r\n\r\n// Robust import for Railway deployment compatibility\r\nlet ProspectProMetricsClient;\r\ntry {\r\n  ProspectProMetricsClient = require('../modules/api-clients/prospectpro-metrics-client');\r\n} catch (error) {\r\n  console.error('Failed to import with relative path, trying absolute path...', error.message);\r\n  try {\r\n    const absolutePath = path.resolve(__dirname, '..', 'modules', 'api-clients', 'prospectpro-metrics-client');\r\n    ProspectProMetricsClient = require(absolutePath);\r\n  } catch (absoluteError) {\r\n    console.error('Failed to import with absolute path:', absoluteError.message);\r\n    throw new Error('Cannot import ProspectProMetricsClient: ' + absoluteError.message);\r\n  }\r\n}\r\n\r\nclass DashboardExportService {\r\n  constructor(supabaseClient) {\r\n    this.supabase = supabaseClient;\r\n    this.metricsClient = new ProspectProMetricsClient(supabaseClient);\r\n  }\r\n\r\n  /**\r\n   * Generate CSV content from JSON data\r\n   */\r\n  generateCSVContent(data, headers) {\r\n    if (!data || data.length === 0) {\r\n      return headers.join(',') + '\\n';\r\n    }\r\n\r\n    const csvHeaders = headers.join(',');\r\n    const csvRows = data.map(row => {\r\n      return headers.map(header => {\r\n        let value = row[header] || '';\r\n        // Escape commas and quotes\r\n        if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\r\n          value = `\"${value.replace(/\"/g, '\"\"')}\"`;\r\n        }\r\n        return value;\r\n      }).join(',');\r\n    });\r\n\r\n    return csvHeaders + '\\n' + csvRows.join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Export campaign performance data\r\n   */\r\n  async exportCampaignPerformance(startDate, endDate, campaignIds = null, format = 'csv') {\r\n    try {\r\n      const exportData = await this.metricsClient.prepareDashboardExport(\r\n        'campaign_performance', \r\n        startDate, \r\n        endDate, \r\n        campaignIds\r\n      );\r\n\r\n      if (!exportData || !exportData.campaigns) {\r\n        throw new Error('No campaign data available for export');\r\n      }\r\n\r\n      const headers = [\r\n        'campaign_id',\r\n        'name', \r\n        'status',\r\n        'created_at',\r\n        'total_leads',\r\n        'qualified_leads',\r\n        'qualification_rate',\r\n        'total_cost',\r\n        'cost_per_lead',\r\n        'avg_confidence_score',\r\n        'roi_estimate'\r\n      ];\r\n\r\n      const transformedData = exportData.campaigns.map(campaign => ({\r\n        campaign_id: campaign.campaign_id,\r\n        name: campaign.name,\r\n        status: campaign.status,\r\n        created_at: new Date(campaign.created_at).toLocaleDateString(),\r\n        total_leads: campaign.total_leads,\r\n        qualified_leads: campaign.qualified_leads,\r\n        qualification_rate: campaign.qualified_leads > 0 ? \r\n          ((campaign.qualified_leads / campaign.total_leads) * 100).toFixed(1) + '%' : '0%',\r\n        total_cost: '$' + parseFloat(campaign.total_cost || 0).toFixed(2),\r\n        cost_per_lead: campaign.total_leads > 0 ? \r\n          '$' + (parseFloat(campaign.total_cost || 0) / campaign.total_leads).toFixed(2) : '$0.00',\r\n        avg_confidence_score: campaign.avg_confidence_score || 0,\r\n        roi_estimate: campaign.qualified_leads > 0 ? \r\n          '$' + ((campaign.qualified_leads * 10.00) - parseFloat(campaign.total_cost || 0)).toFixed(2) : '$0.00'\r\n      }));\r\n\r\n      if (format === 'csv') {\r\n        return {\r\n          content: this.generateCSVContent(transformedData, headers),\r\n          filename: `ProspectPro_Campaign_Performance_${startDate}_to_${endDate}.csv`,\r\n          contentType: 'text/csv'\r\n        };\r\n      }\r\n\r\n      return {\r\n        content: JSON.stringify(transformedData, null, 2),\r\n        filename: `ProspectPro_Campaign_Performance_${startDate}_to_${endDate}.json`,\r\n        contentType: 'application/json'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Campaign performance export failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Export cost analysis data\r\n   */\r\n  async exportCostAnalysis(startDate, endDate, campaignIds = null, format = 'csv') {\r\n    try {\r\n      const [costAnalytics, apiBreakdown] = await Promise.all([\r\n        this.metricsClient.getCostAnalytics(null, startDate, endDate),\r\n        this.metricsClient.getAPIServiceBreakdown(startDate, endDate)\r\n      ]);\r\n\r\n      if (!costAnalytics && !apiBreakdown) {\r\n        throw new Error('No cost data available for export');\r\n      }\r\n\r\n      // Export 1: Campaign Cost Analysis\r\n      const campaignHeaders = [\r\n        'campaign_name',\r\n        'total_qualified_leads',\r\n        'total_api_cost',\r\n        'cost_per_qualified_lead',\r\n        'roi_percentage',\r\n        'efficiency_score',\r\n        'trend_direction'\r\n      ];\r\n\r\n      const campaignData = (costAnalytics || []).map(campaign => ({\r\n        campaign_name: campaign.campaign_name,\r\n        total_qualified_leads: campaign.total_qualified_leads,\r\n        total_api_cost: '$' + parseFloat(campaign.total_api_cost || 0).toFixed(4),\r\n        cost_per_qualified_lead: '$' + parseFloat(campaign.cost_per_qualified_lead || 0).toFixed(4),\r\n        roi_percentage: parseFloat(campaign.roi_percentage || 0).toFixed(1) + '%',\r\n        efficiency_score: campaign.efficiency_score || 0,\r\n        trend_direction: campaign.trend_direction || 'stable'\r\n      }));\r\n\r\n      // Export 2: API Service Breakdown\r\n      const apiHeaders = [\r\n        'api_service',\r\n        'total_requests',\r\n        'total_cost',\r\n        'cost_per_request',\r\n        'success_rate',\r\n        'avg_response_time_ms',\r\n        'trend_7day'\r\n      ];\r\n\r\n      const apiData = (apiBreakdown || []).map(api => ({\r\n        api_service: api.api_service,\r\n        total_requests: api.total_requests,\r\n        total_cost: '$' + parseFloat(api.total_cost || 0).toFixed(4),\r\n        cost_per_request: '$' + parseFloat(api.cost_per_request || 0).toFixed(4),\r\n        success_rate: parseFloat(api.success_rate || 0).toFixed(1) + '%',\r\n        avg_response_time_ms: api.avg_response_time_ms || 0,\r\n        trend_7day: api.trend_7day || 'stable'\r\n      }));\r\n\r\n      if (format === 'csv') {\r\n        const campaignCSV = this.generateCSVContent(campaignData, campaignHeaders);\r\n        const apiCSV = this.generateCSVContent(apiData, apiHeaders);\r\n        \r\n        return {\r\n          content: {\r\n            'Campaign_Cost_Analysis.csv': campaignCSV,\r\n            'API_Service_Breakdown.csv': apiCSV\r\n          },\r\n          filename: `ProspectPro_Cost_Analysis_${startDate}_to_${endDate}`,\r\n          contentType: 'application/zip',\r\n          multipleFiles: true\r\n        };\r\n      }\r\n\r\n      return {\r\n        content: JSON.stringify({\r\n          campaign_analysis: campaignData,\r\n          api_breakdown: apiData,\r\n          export_metadata: {\r\n            start_date: startDate,\r\n            end_date: endDate,\r\n            generated_at: new Date().toISOString()\r\n          }\r\n        }, null, 2),\r\n        filename: `ProspectPro_Cost_Analysis_${startDate}_to_${endDate}.json`,\r\n        contentType: 'application/json'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Cost analysis export failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Export real-time dashboard data\r\n   */\r\n  async exportDashboardSnapshot(format = 'csv') {\r\n    try {\r\n      const dashboardMetrics = await this.metricsClient.getDashboardMetrics();\r\n      \r\n      if (!dashboardMetrics) {\r\n        throw new Error('No dashboard data available');\r\n      }\r\n\r\n      // Overview metrics\r\n      const overviewHeaders = ['metric', 'value'];\r\n      const overviewData = [\r\n        { metric: 'Active Campaigns', value: dashboardMetrics.overview.active_campaigns },\r\n        { metric: 'Total Leads Today', value: dashboardMetrics.overview.total_leads_today },\r\n        { metric: 'Qualified Leads Today', value: dashboardMetrics.overview.qualified_leads_today },\r\n        { metric: 'Total Cost Today', value: '$' + parseFloat(dashboardMetrics.overview.total_cost_today || 0).toFixed(2) },\r\n        { metric: 'Avg Qualification Rate', value: parseFloat(dashboardMetrics.overview.avg_qualification_rate || 0).toFixed(1) + '%' }\r\n      ];\r\n\r\n      // Service health metrics\r\n      const serviceHeaders = ['service_name', 'status', 'response_time_ms', 'error_rate', 'rate_limit_remaining', 'cost_budget_remaining', 'requests_today'];\r\n      const serviceData = Object.entries(dashboardMetrics.service_health || {}).map(([service, health]) => ({\r\n        service_name: service,\r\n        status: health.status,\r\n        response_time_ms: health.response_time_ms || 0,\r\n        error_rate: parseFloat(health.error_rate || 0).toFixed(2) + '%',\r\n        rate_limit_remaining: health.rate_limit_remaining || 0,\r\n        cost_budget_remaining: '$' + parseFloat(health.cost_budget_remaining || 0).toFixed(2),\r\n        requests_today: health.requests_today || 0\r\n      }));\r\n\r\n      // Hourly performance\r\n      const hourlyHeaders = ['hour', 'total_requests', 'total_cost', 'success_rate', 'avg_response_time'];\r\n      const hourlyData = (dashboardMetrics.hourly_performance || []).map(hour => ({\r\n        hour: hour.hour + ':00',\r\n        total_requests: hour.total_requests,\r\n        total_cost: '$' + parseFloat(hour.total_cost || 0).toFixed(2),\r\n        success_rate: parseFloat(hour.success_rate || 0).toFixed(1) + '%',\r\n        avg_response_time: hour.avg_response_time || 0\r\n      }));\r\n\r\n      if (format === 'csv') {\r\n        const overviewCSV = this.generateCSVContent(overviewData, overviewHeaders);\r\n        const serviceCSV = this.generateCSVContent(serviceData, serviceHeaders);\r\n        const hourlyCSV = this.generateCSVContent(hourlyData, hourlyHeaders);\r\n        \r\n        return {\r\n          content: {\r\n            'Dashboard_Overview.csv': overviewCSV,\r\n            'Service_Health.csv': serviceCSV,\r\n            'Hourly_Performance.csv': hourlyCSV\r\n          },\r\n          filename: `ProspectPro_Dashboard_Snapshot_${new Date().toISOString().split('T')[0]}`,\r\n          contentType: 'application/zip',\r\n          multipleFiles: true\r\n        };\r\n      }\r\n\r\n      return {\r\n        content: JSON.stringify({\r\n          overview: overviewData,\r\n          service_health: serviceData,\r\n          hourly_performance: hourlyData,\r\n          snapshot_time: new Date().toISOString()\r\n        }, null, 2),\r\n        filename: `ProspectPro_Dashboard_Snapshot_${new Date().toISOString().split('T')[0]}.json`,\r\n        contentType: 'application/json'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Dashboard snapshot export failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate comprehensive ROI report for pricing model analysis\r\n   */\r\n  async exportROIAnalysis(startDate, endDate, format = 'csv') {\r\n    try {\r\n      const [costAnalytics, apiBreakdown, exportData] = await Promise.all([\r\n        this.metricsClient.getCostAnalytics(null, startDate, endDate),\r\n        this.metricsClient.getAPIServiceBreakdown(startDate, endDate),\r\n        this.metricsClient.prepareDashboardExport('cost_analysis', startDate, endDate)\r\n      ]);\r\n\r\n      // ROI Summary\r\n      const totalCost = (costAnalytics || []).reduce((sum, campaign) => \r\n        sum + parseFloat(campaign.total_api_cost || 0), 0);\r\n      const totalQualifiedLeads = (costAnalytics || []).reduce((sum, campaign) => \r\n        sum + parseInt(campaign.total_qualified_leads || 0), 0);\r\n      const avgCostPerLead = totalQualifiedLeads > 0 ? totalCost / totalQualifiedLeads : 0;\r\n      const estimatedRevenue = totalQualifiedLeads * 10.00; // Assuming $10 per qualified lead\r\n      const netROI = estimatedRevenue - totalCost;\r\n      const roiPercentage = totalCost > 0 ? (netROI / totalCost) * 100 : 0;\r\n\r\n      const roiHeaders = ['metric', 'value', 'notes'];\r\n      const roiData = [\r\n        { metric: 'Date Range', value: `${startDate} to ${endDate}`, notes: 'Analysis period' },\r\n        { metric: 'Total API Cost', value: '$' + totalCost.toFixed(2), notes: 'All API services combined' },\r\n        { metric: 'Total Qualified Leads', value: totalQualifiedLeads, notes: 'Leads with 80%+ confidence score' },\r\n        { metric: 'Avg Cost Per Qualified Lead', value: '$' + avgCostPerLead.toFixed(2), notes: 'Key efficiency metric' },\r\n        { metric: 'Estimated Revenue', value: '$' + estimatedRevenue.toFixed(2), notes: 'Assuming $10 per qualified lead' },\r\n        { metric: 'Net ROI', value: '$' + netROI.toFixed(2), notes: 'Revenue minus costs' },\r\n        { metric: 'ROI Percentage', value: roiPercentage.toFixed(1) + '%', notes: 'Return on investment' },\r\n        { metric: 'Break-even Point', value: (totalCost / 10.00).toFixed(0) + ' leads', notes: 'Leads needed to break even' }\r\n      ];\r\n\r\n      // Daily trends from export data\r\n      const dailyTrends = (exportData?.daily_trends || []).map(day => ({\r\n        date: day.date,\r\n        total_cost: '$' + parseFloat(day.total_cost || 0).toFixed(2),\r\n        total_requests: day.total_requests,\r\n        qualified_leads: day.qualified_leads,\r\n        cost_per_lead: day.qualified_leads > 0 ? \r\n          '$' + (parseFloat(day.total_cost || 0) / day.qualified_leads).toFixed(2) : '$0.00',\r\n        daily_roi: '$' + ((day.qualified_leads * 10.00) - parseFloat(day.total_cost || 0)).toFixed(2)\r\n      }));\r\n\r\n      const trendHeaders = ['date', 'total_cost', 'total_requests', 'qualified_leads', 'cost_per_lead', 'daily_roi'];\r\n\r\n      if (format === 'csv') {\r\n        const roiCSV = this.generateCSVContent(roiData, roiHeaders);\r\n        const trendsCSV = this.generateCSVContent(dailyTrends, trendHeaders);\r\n        \r\n        return {\r\n          content: {\r\n            'ROI_Analysis_Summary.csv': roiCSV,\r\n            'Daily_ROI_Trends.csv': trendsCSV\r\n          },\r\n          filename: `ProspectPro_ROI_Analysis_${startDate}_to_${endDate}`,\r\n          contentType: 'application/zip',\r\n          multipleFiles: true\r\n        };\r\n      }\r\n\r\n      return {\r\n        content: JSON.stringify({\r\n          roi_summary: roiData,\r\n          daily_trends: dailyTrends,\r\n          analysis_metadata: {\r\n            total_campaigns: (costAnalytics || []).length,\r\n            analysis_period: `${startDate} to ${endDate}`,\r\n            generated_at: new Date().toISOString()\r\n          }\r\n        }, null, 2),\r\n        filename: `ProspectPro_ROI_Analysis_${startDate}_to_${endDate}.json`,\r\n        contentType: 'application/json'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('ROI analysis export failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Express.js API Routes for Dashboard Exports\r\n */\r\nfunction createDashboardExportRoutes(supabaseClient) {\r\n  const router = express.Router();\r\n  const exportService = new DashboardExportService(supabaseClient);\r\n\r\n  // Export campaign performance\r\n  router.get('/export/campaigns', async (req, res) => {\r\n    try {\r\n      const { start_date, end_date, campaign_ids, format = 'csv' } = req.query;\r\n      \r\n      if (!start_date || !end_date) {\r\n        return res.status(400).json({ \r\n          error: 'start_date and end_date are required' \r\n        });\r\n      }\r\n\r\n      const campaignIdsArray = campaign_ids ? campaign_ids.split(',') : null;\r\n      const exportResult = await exportService.exportCampaignPerformance(\r\n        start_date, end_date, campaignIdsArray, format\r\n      );\r\n\r\n      // Log the export\r\n      await exportService.metricsClient.logDashboardExport(\r\n        req.user?.id || 'system',\r\n        'campaign_performance',\r\n        format,\r\n        start_date,\r\n        end_date,\r\n        campaignIdsArray,\r\n        exportResult.content.split('\\n').length - 1,\r\n        Buffer.byteLength(exportResult.content, 'utf8') / (1024 * 1024)\r\n      );\r\n\r\n      res.setHeader('Content-Type', exportResult.contentType);\r\n      res.setHeader('Content-Disposition', `attachment; filename=\"${exportResult.filename}\"`);\r\n      res.send(exportResult.content);\r\n\r\n    } catch (error) {\r\n      console.error('Campaign export error:', error);\r\n      res.status(500).json({ error: 'Export failed: ' + error.message });\r\n    }\r\n  });\r\n\r\n  // Export cost analysis\r\n  router.get('/export/costs', async (req, res) => {\r\n    try {\r\n      const { start_date, end_date, campaign_ids, format = 'csv' } = req.query;\r\n      \r\n      if (!start_date || !end_date) {\r\n        return res.status(400).json({ \r\n          error: 'start_date and end_date are required' \r\n        });\r\n      }\r\n\r\n      const campaignIdsArray = campaign_ids ? campaign_ids.split(',') : null;\r\n      const exportResult = await exportService.exportCostAnalysis(\r\n        start_date, end_date, campaignIdsArray, format\r\n      );\r\n\r\n      await exportService.metricsClient.logDashboardExport(\r\n        req.user?.id || 'system',\r\n        'cost_analysis',\r\n        format,\r\n        start_date,\r\n        end_date,\r\n        campaignIdsArray,\r\n        Object.keys(exportResult.content).length,\r\n        0.5 // Estimated size for multi-file exports\r\n      );\r\n\r\n      if (exportResult.multipleFiles) {\r\n        // For multiple files, return as JSON with file contents\r\n        res.setHeader('Content-Type', 'application/json');\r\n        res.json({\r\n          files: exportResult.content,\r\n          filename: exportResult.filename,\r\n          export_type: 'multi_file'\r\n        });\r\n      } else {\r\n        res.setHeader('Content-Type', exportResult.contentType);\r\n        res.setHeader('Content-Disposition', `attachment; filename=\"${exportResult.filename}\"`);\r\n        res.send(exportResult.content);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Cost analysis export error:', error);\r\n      res.status(500).json({ error: 'Export failed: ' + error.message });\r\n    }\r\n  });\r\n\r\n  // Export dashboard snapshot\r\n  router.get('/export/snapshot', async (req, res) => {\r\n    try {\r\n      const { format = 'csv' } = req.query;\r\n      \r\n      const exportResult = await exportService.exportDashboardSnapshot(format);\r\n\r\n      await exportService.metricsClient.logDashboardExport(\r\n        req.user?.id || 'system',\r\n        'dashboard_snapshot',\r\n        format,\r\n        new Date().toISOString().split('T')[0],\r\n        new Date().toISOString().split('T')[0],\r\n        null,\r\n        exportResult.multipleFiles ? Object.keys(exportResult.content).length : 1,\r\n        0.1 // Small snapshot\r\n      );\r\n\r\n      if (exportResult.multipleFiles) {\r\n        res.setHeader('Content-Type', 'application/json');\r\n        res.json({\r\n          files: exportResult.content,\r\n          filename: exportResult.filename,\r\n          export_type: 'multi_file'\r\n        });\r\n      } else {\r\n        res.setHeader('Content-Type', exportResult.contentType);\r\n        res.setHeader('Content-Disposition', `attachment; filename=\"${exportResult.filename}\"`);\r\n        res.send(exportResult.content);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Dashboard snapshot export error:', error);\r\n      res.status(500).json({ error: 'Export failed: ' + error.message });\r\n    }\r\n  });\r\n\r\n  // Export ROI analysis\r\n  router.get('/export/roi', async (req, res) => {\r\n    try {\r\n      const { start_date, end_date, format = 'csv' } = req.query;\r\n      \r\n      if (!start_date || !end_date) {\r\n        return res.status(400).json({ \r\n          error: 'start_date and end_date are required' \r\n        });\r\n      }\r\n\r\n      const exportResult = await exportService.exportROIAnalysis(\r\n        start_date, end_date, format\r\n      );\r\n\r\n      await exportService.metricsClient.logDashboardExport(\r\n        req.user?.id || 'system',\r\n        'roi_report',\r\n        format,\r\n        start_date,\r\n        end_date,\r\n        null,\r\n        Object.keys(exportResult.content).length,\r\n        0.3\r\n      );\r\n\r\n      if (exportResult.multipleFiles) {\r\n        res.setHeader('Content-Type', 'application/json');\r\n        res.json({\r\n          files: exportResult.content,\r\n          filename: exportResult.filename,\r\n          export_type: 'multi_file'\r\n        });\r\n      } else {\r\n        res.setHeader('Content-Type', exportResult.contentType);\r\n        res.setHeader('Content-Disposition', `attachment; filename=\"${exportResult.filename}\"`);\r\n        res.send(exportResult.content);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('ROI analysis export error:', error);\r\n      res.status(500).json({ error: 'Export failed: ' + error.message });\r\n    }\r\n  });\r\n\r\n  return router;\r\n}\r\n\r\nmodule.exports = { \r\n  DashboardExportService, \r\n  createDashboardExportRoutes \r\n};"}}},
{"type":"measure","name":"lsp.did_open","count":11,"duration":15.955},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":2,"duration":0.175},
{"type":"mark","name":"lsp.goto_definition","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api-legacy/dashboard-export.js"},"position":{"line":65,"character":37}}},
{"type":"mark","name":"lsp.did_open","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api-legacy/dashboard-metrics.js","languageId":"javascript","version":1,"text":"/**\n * Enhanced Dashboard Metrics API\n * Comprehensive business intelligence and monitoring endpoint for ProspectPro\n *\n * Features:\n * - Real-time API usage tracking and cost monitoring\n * - Lead quality metrics and validation success rates\n * - Budget utilization and ROI calculations\n * - System health and performance monitoring\n * - Business intelligence insights and recommendations\n */\n\nconst express = require(\"express\");\nconst { createClient } = require(\"@supabase/supabase-js\");\n\nconst router = express.Router();\n\n// Initialize Supabase client\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst supabaseKey =\n  process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SECRET_KEY;\nlet supabase = null;\n\ntry {\n  if (supabaseUrl && supabaseKey) {\n    supabase = createClient(supabaseUrl, supabaseKey);\n  }\n} catch (error) {\n  console.error(\"Failed to initialize Supabase client:\", error);\n}\n\n/**\n * Get comprehensive dashboard metrics\n * GET /api/dashboard/metrics?timeRange=7d\n */\nrouter.get(\"/metrics\", async (req, res) => {\n  try {\n    if (!supabase) {\n      return res.status(500).json({\n        error: \"Database connection not available\",\n        metrics: getDefaultMetrics(),\n      });\n    }\n\n    const { timeRange = \"7d\" } = req.query;\n    const timeFilter = getTimeFilter(timeRange);\n\n    // Fetch all metrics in parallel\n    const [\n      overallMetrics,\n      costMetrics,\n      qualityMetrics,\n      apiHealthMetrics,\n      budgetMetrics,\n      recentActivity,\n    ] = await Promise.all([\n      getOverallMetrics(supabase, timeFilter),\n      getCostMetrics(supabase, timeFilter),\n      getQualityMetrics(supabase, timeFilter),\n      getApiHealthMetrics(supabase, timeFilter),\n      getBudgetMetrics(supabase),\n      getRecentActivity(supabase, timeFilter),\n    ]);\n\n    // Generate business intelligence insights\n    const insights = generateInsights({\n      overall: overallMetrics,\n      cost: costMetrics,\n      quality: qualityMetrics,\n      apiHealth: apiHealthMetrics,\n      budget: budgetMetrics,\n    });\n\n    res.json({\n      success: true,\n      timestamp: new Date().toISOString(),\n      timeRange,\n      metrics: {\n        overall: overallMetrics,\n        cost: costMetrics,\n        quality: qualityMetrics,\n        apiHealth: apiHealthMetrics,\n        budget: budgetMetrics,\n        recentActivity: recentActivity,\n      },\n      insights: insights,\n      alerts: await generateAlerts(supabase, {\n        cost: costMetrics,\n        budget: budgetMetrics,\n        apiHealth: apiHealthMetrics,\n      }),\n    });\n  } catch (error) {\n    console.error(\"Dashboard metrics error:\", error);\n    res.status(500).json({\n      error: \"Failed to fetch dashboard metrics\",\n      details: error.message,\n      metrics: getDefaultMetrics(),\n    });\n  }\n});\n\n/**\n * Get API usage breakdown by source\n * GET /api/dashboard/api-usage?timeRange=24h\n */\nrouter.get(\"/api-usage\", async (req, res) => {\n  try {\n    if (!supabase) {\n      return res\n        .status(500)\n        .json({ error: \"Database connection not available\" });\n    }\n\n    const { timeRange = \"24h\" } = req.query;\n    const timeFilter = getTimeFilter(timeRange);\n\n    const { data: apiUsage, error } = await supabase\n      .from(\"enhanced_api_usage\")\n      .select(\n        `\n        source_name,\n        success,\n        estimated_cost,\n        actual_cost,\n        results_returned,\n        response_time_ms,\n        created_at,\n        api_data_sources (\n          provider_name,\n          quality_score,\n          reliability_score,\n          cost_per_request\n        )\n      `\n      )\n      .gte(\"created_at\", timeFilter.start)\n      .order(\"created_at\", { ascending: false });\n\n    if (error) throw error;\n\n    // Aggregate usage by source\n    const sourceBreakdown = {};\n    let totalCost = 0;\n    let totalRequests = 0;\n    let successfulRequests = 0;\n\n    (apiUsage || []).forEach((usage) => {\n      const source = usage.source_name;\n      if (!sourceBreakdown[source]) {\n        sourceBreakdown[source] = {\n          source_name: source,\n          provider_name: usage.api_data_sources?.provider_name || source,\n          total_requests: 0,\n          successful_requests: 0,\n          total_cost: 0,\n          avg_response_time: 0,\n          quality_score: usage.api_data_sources?.quality_score || 0,\n          reliability_score: usage.api_data_sources?.reliability_score || 0,\n          results_returned: 0,\n          response_times: [],\n        };\n      }\n\n      sourceBreakdown[source].total_requests++;\n      totalRequests++;\n\n      if (usage.success) {\n        sourceBreakdown[source].successful_requests++;\n        successfulRequests++;\n      }\n\n      const cost = parseFloat(usage.actual_cost || usage.estimated_cost || 0);\n      sourceBreakdown[source].total_cost += cost;\n      totalCost += cost;\n\n      sourceBreakdown[source].results_returned += usage.results_returned || 0;\n\n      if (usage.response_time_ms) {\n        sourceBreakdown[source].response_times.push(usage.response_time_ms);\n      }\n    });\n\n    // Calculate averages\n    Object.values(sourceBreakdown).forEach((source) => {\n      if (source.response_times.length > 0) {\n        source.avg_response_time = Math.round(\n          source.response_times.reduce((sum, time) => sum + time, 0) /\n            source.response_times.length\n        );\n      }\n      source.success_rate =\n        source.total_requests > 0\n          ? (\n              (source.successful_requests / source.total_requests) *\n              100\n            ).toFixed(1)\n          : \"0.0\";\n      source.cost_per_request =\n        source.total_requests > 0\n          ? (source.total_cost / source.total_requests).toFixed(4)\n          : \"0.0000\";\n      delete source.response_times; // Remove raw data\n    });\n\n    res.json({\n      success: true,\n      timeRange,\n      summary: {\n        total_requests: totalRequests,\n        successful_requests: successfulRequests,\n        success_rate:\n          totalRequests > 0\n            ? ((successfulRequests / totalRequests) * 100).toFixed(1)\n            : \"0.0\",\n        total_cost: totalCost.toFixed(4),\n        avg_cost_per_request:\n          totalRequests > 0 ? (totalCost / totalRequests).toFixed(4) : \"0.0000\",\n      },\n      sources: Object.values(sourceBreakdown).sort(\n        (a, b) => b.total_cost - a.total_cost\n      ),\n    });\n  } catch (error) {\n    console.error(\"API usage metrics error:\", error);\n    res.status(500).json({ error: \"Failed to fetch API usage metrics\" });\n  }\n});\n\n/**\n * Get optimized API client usage metrics (Apollo + Hunter.io)\n * GET /api/dashboard/optimized-api-usage?timeRange=7d\n */\nrouter.get(\"/optimized-api-usage\", async (req, res) => {\n  try {\n    if (!supabase) {\n      return res\n        .status(500)\n        .json({ error: \"Database connection not available\" });\n    }\n\n    const { timeRange = \"7d\" } = req.query;\n    const timeFilter = getTimeFilter(timeRange);\n\n    // Query for Apollo and Hunter.io specific usage\n    const { data: apolloUsage, error: apolloError } = await supabase\n      .from(\"api_cost_tracking\")\n      .select(\"*\")\n      .ilike(\"api_service\", \"%apollo%\")\n      .gte(\"created_at\", timeFilter.start);\n\n    const { data: hunterUsage, error: hunterError } = await supabase\n      .from(\"api_cost_tracking\")\n      .select(\"*\")\n      .or(\"api_service.ilike.%hunter%,api_service.ilike.%comprehensive%\")\n      .gte(\"created_at\", timeFilter.start);\n\n    if (apolloError || hunterError) {\n      throw apolloError || hunterError;\n    }\n\n    // Calculate Apollo.io metrics\n    const apolloMetrics = calculateOptimizedApiMetrics(\n      apolloUsage || [],\n      \"Apollo.io\"\n    );\n\n    // Calculate Hunter.io metrics\n    const hunterMetrics = calculateOptimizedApiMetrics(\n      hunterUsage || [],\n      \"Hunter.io\"\n    );\n\n    // Calculate combined efficiency\n    const combinedCost = apolloMetrics.totalCost + hunterMetrics.totalCost;\n    const combinedRequests =\n      apolloMetrics.totalRequests + hunterMetrics.totalRequests;\n    const combinedLeads =\n      apolloMetrics.leadsGenerated + hunterMetrics.leadsGenerated;\n\n    res.json({\n      success: true,\n      timeRange,\n      optimizedApis: {\n        apollo: apolloMetrics,\n        hunter: hunterMetrics,\n      },\n      performance: {\n        totalCost: combinedCost.toFixed(4),\n        totalRequests: combinedRequests,\n        totalLeads: combinedLeads,\n        costPerLead:\n          combinedLeads > 0\n            ? (combinedCost / combinedLeads).toFixed(4)\n            : \"0.0000\",\n        avgResponseTime: (\n          (apolloMetrics.avgResponseTime + hunterMetrics.avgResponseTime) /\n          2\n        ).toFixed(0),\n        successRate:\n          combinedRequests > 0\n            ? (\n                ((apolloMetrics.successfulRequests +\n                  hunterMetrics.successfulRequests) /\n                  combinedRequests) *\n                100\n              ).toFixed(1)\n            : \"0.0\",\n      },\n      recommendations: generateApiOptimizationRecommendations(\n        apolloMetrics,\n        hunterMetrics\n      ),\n    });\n  } catch (error) {\n    console.error(\"Optimized API usage metrics error:\", error);\n    res\n      .status(500)\n      .json({ error: \"Failed to fetch optimized API usage metrics\" });\n  }\n});\n\n/**\n * Get lead quality analytics\n * GET /api/dashboard/quality-metrics?timeRange=30d\n */\nrouter.get(\"/quality-metrics\", async (req, res) => {\n  try {\n    if (!supabase) {\n      return res\n        .status(500)\n        .json({ error: \"Database connection not available\" });\n    }\n\n    const { timeRange = \"30d\" } = req.query;\n    const timeFilter = getTimeFilter(timeRange);\n\n    // Get validation pipeline results\n    const { data: validationData, error: validationError } = await supabase\n      .from(\"lead_validation_pipeline\")\n      .select(\"*\")\n      .gte(\"created_at\", timeFilter.start);\n\n    if (\n      validationError &&\n      !validationError.message.includes(\"does not exist\") &&\n      !validationError.message.includes(\"column\") &&\n      !validationError.code?.includes(\"42703\")\n    ) {\n      console.error(\"Error getting quality metrics:\", validationError);\n    }\n\n    // Get campaign analytics for quality trends\n    const { data: campaignData, error: campaignError } = await supabase\n      .from(\"campaign_analytics\")\n      .select(\"*\")\n      .gte(\"campaign_date\", timeFilter.start.split(\"T\")[0]);\n\n    if (\n      campaignError &&\n      !campaignError.message.includes(\"does not exist\") &&\n      !campaignError.message.includes(\"column\") &&\n      !campaignError.code?.includes(\"42703\")\n    ) {\n      console.error(\"Error getting campaign analytics:\", campaignError);\n    }\n\n    const qualityMetrics = analyzeQualityMetrics(\n      validationData || [],\n      campaignData || []\n    );\n\n    res.json({\n      success: true,\n      timeRange,\n      ...qualityMetrics,\n    });\n  } catch (error) {\n    console.error(\"Quality metrics error:\", error);\n    res.status(500).json({ error: \"Failed to fetch quality metrics\" });\n  }\n});\n\n/**\n * Get budget and cost analytics\n * GET /api/dashboard/budget-analytics\n */\nrouter.get(\"/budget-analytics\", async (req, res) => {\n  try {\n    if (!supabase) {\n      return res\n        .status(500)\n        .json({ error: \"Database connection not available\" });\n    }\n\n    // Get current active budget\n    const { data: budgetData, error: budgetError } = await supabase\n      .from(\"budget_management\")\n      .select(\"*\")\n      .eq(\"is_active\", true)\n      .order(\"created_at\", { ascending: false })\n      .limit(1);\n\n    if (budgetError) throw budgetError;\n\n    // Get recent budget alerts\n    const { data: alertsData, error: alertsError } = await supabase\n      .from(\"budget_alerts\")\n      .select(\"*\")\n      .eq(\"resolved\", false)\n      .order(\"created_at\", { ascending: false })\n      .limit(10);\n\n    if (alertsError) throw alertsError;\n\n    const budget = budgetData?.[0] || null;\n    const analytics = budget ? analyzeBudgetPerformance(budget) : null;\n\n    res.json({\n      success: true,\n      current_budget: budget,\n      analytics: analytics,\n      active_alerts: alertsData || [],\n      recommendations: generateBudgetRecommendations(budget, alertsData),\n    });\n  } catch (error) {\n    console.error(\"Budget analytics error:\", error);\n    res.status(500).json({ error: \"Failed to fetch budget analytics\" });\n  }\n});\n\n/**\n * Update budget allocation\n * PUT /api/dashboard/budget\n */\nrouter.put(\"/budget\", async (req, res) => {\n  try {\n    if (!supabase) {\n      return res\n        .status(500)\n        .json({ error: \"Database connection not available\" });\n    }\n\n    const {\n      total_budget,\n      discovery_budget,\n      validation_budget,\n      enrichment_budget,\n      alert_threshold_percentage,\n      hard_limit_enabled,\n      auto_pause_campaigns,\n    } = req.body;\n\n    // Validate budget allocation\n    const totalAllocated =\n      (discovery_budget || 0) +\n      (validation_budget || 0) +\n      (enrichment_budget || 0);\n    if (totalAllocated > total_budget) {\n      return res.status(400).json({\n        error: \"Budget allocation exceeds total budget\",\n        total_budget,\n        total_allocated: totalAllocated,\n      });\n    }\n\n    // Update active budget\n    const { data, error } = await supabase\n      .from(\"budget_management\")\n      .update({\n        total_budget,\n        discovery_budget,\n        validation_budget,\n        enrichment_budget,\n        alert_threshold_percentage,\n        hard_limit_enabled,\n        auto_pause_campaigns,\n        updated_at: new Date().toISOString(),\n      })\n      .eq(\"is_active\", true)\n      .select();\n\n    if (error) throw error;\n\n    res.json({\n      success: true,\n      message: \"Budget updated successfully\",\n      budget: data?.[0],\n    });\n  } catch (error) {\n    console.error(\"Budget update error:\", error);\n    res.status(500).json({ error: \"Failed to update budget\" });\n  }\n});\n\n// Helper Functions\n// ================\n\nfunction getTimeFilter(timeRange) {\n  const now = new Date();\n  let start;\n\n  switch (timeRange) {\n    case \"1h\":\n      start = new Date(now.getTime() - 60 * 60 * 1000);\n      break;\n    case \"24h\":\n      start = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n      break;\n    case \"7d\":\n      start = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n      break;\n    case \"30d\":\n      start = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n      break;\n    case \"90d\":\n      start = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000);\n      break;\n    default:\n      start = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n  }\n\n  return {\n    start: start.toISOString(),\n    end: now.toISOString(),\n  };\n}\n\nasync function getOverallMetrics(supabase, timeFilter) {\n  try {\n    // Get campaign data\n    const { data: campaigns, error: campaignError } = await supabase\n      .from(\"campaigns\")\n      .select(\"id, business_count, qualified_leads, created_at\")\n      .gte(\"created_at\", timeFilter.start);\n\n    if (campaignError) throw campaignError;\n\n    // Calculate totals\n    const totalLeads = (campaigns || []).reduce(\n      (sum, c) => sum + (c.business_count || 0),\n      0\n    );\n    const qualifiedLeads = (campaigns || []).reduce(\n      (sum, c) => sum + (c.qualified_leads || 0),\n      0\n    );\n    const qualificationRate =\n      totalLeads > 0 ? ((qualifiedLeads / totalLeads) * 100).toFixed(1) : \"0.0\";\n    const activeCampaigns = (campaigns || []).length;\n\n    return {\n      total_leads: totalLeads,\n      qualified_leads: qualifiedLeads,\n      qualification_rate: qualificationRate + \"%\",\n      active_campaigns: activeCampaigns,\n      avg_leads_per_campaign:\n        activeCampaigns > 0 ? Math.round(totalLeads / activeCampaigns) : 0,\n    };\n  } catch (error) {\n    console.error(\"Error getting overall metrics:\", error);\n    return {\n      total_leads: 0,\n      qualified_leads: 0,\n      qualification_rate: \"0.0%\",\n      active_campaigns: 0,\n      avg_leads_per_campaign: 0,\n    };\n  }\n}\n\nasync function getCostMetrics(supabase, timeFilter) {\n  try {\n    const { data: apiUsage, error } = await supabase\n      .from(\"enhanced_api_usage\")\n      .select(\n        \"source_name, actual_cost, estimated_cost, success, results_returned\"\n      )\n      .gte(\"created_at\", timeFilter.start);\n\n    if (error) throw error;\n\n    const costBreakdown = {};\n    let totalCost = 0;\n    let totalResults = 0;\n\n    (apiUsage || []).forEach((usage) => {\n      const cost = parseFloat(usage.actual_cost || usage.estimated_cost || 0);\n      const source = usage.source_name;\n\n      if (!costBreakdown[source]) {\n        costBreakdown[source] = 0;\n      }\n\n      costBreakdown[source] += cost;\n      totalCost += cost;\n      totalResults += usage.results_returned || 0;\n    });\n\n    return {\n      total_cost: totalCost.toFixed(4),\n      cost_per_result:\n        totalResults > 0 ? (totalCost / totalResults).toFixed(4) : \"0.0000\",\n      breakdown: costBreakdown,\n      daily_rate: (totalCost * (24 / getHoursDiff(timeFilter))).toFixed(4),\n    };\n  } catch (error) {\n    console.error(\"Error getting cost metrics:\", error);\n    return {\n      total_cost: \"0.0000\",\n      cost_per_result: \"0.0000\",\n      breakdown: {},\n      daily_rate: \"0.0000\",\n    };\n  }\n}\n\nasync function getQualityMetrics(supabase, timeFilter) {\n  try {\n    const { data: validationData, error } = await supabase\n      .from(\"lead_validation_pipeline\")\n      .select(\n        \"stage_4_confidence_score, stage_4_qualified, final_quality_grade\"\n      )\n      .gte(\"created_at\", timeFilter.start);\n\n    if (error) throw error;\n\n    const totalValidated = (validationData || []).length;\n    const qualifiedCount = (validationData || []).filter(\n      (v) => v.stage_4_qualified\n    ).length;\n\n    const avgConfidence =\n      totalValidated > 0\n        ? (\n            validationData.reduce(\n              (sum, v) => sum + (v.stage_4_confidence_score || 0),\n              0\n            ) / totalValidated\n          ).toFixed(1)\n        : \"0.0\";\n\n    const gradeDistribution = {\n      A: 0,\n      B: 0,\n      C: 0,\n      D: 0,\n      F: 0,\n    };\n\n    (validationData || []).forEach((v) => {\n      const grade = v.final_quality_grade || \"F\";\n      gradeDistribution[grade]++;\n    });\n\n    return {\n      total_validated: totalValidated,\n      qualified_count: qualifiedCount,\n      qualification_rate:\n        totalValidated > 0\n          ? ((qualifiedCount / totalValidated) * 100).toFixed(1)\n          : \"0.0\",\n      avg_confidence_score: avgConfidence,\n      grade_distribution: gradeDistribution,\n    };\n  } catch (error) {\n    console.error(\"Error getting quality metrics:\", error);\n    return {\n      total_validated: 0,\n      qualified_count: 0,\n      qualification_rate: \"0.0\",\n      avg_confidence_score: \"0.0\",\n      grade_distribution: { A: 0, B: 0, C: 0, D: 0, F: 0 },\n    };\n  }\n}\n\nasync function getApiHealthMetrics(supabase, timeFilter) {\n  try {\n    const { data: healthData, error } = await supabase\n      .from(\"api_health_monitoring\")\n      .select(\"source_name, success, response_time_ms, performance_degraded\")\n      .gte(\"created_at\", timeFilter.start);\n\n    if (error) throw error;\n\n    const healthBySource = {};\n\n    (healthData || []).forEach((health) => {\n      const source = health.source_name;\n      if (!healthBySource[source]) {\n        healthBySource[source] = {\n          total_checks: 0,\n          successful_checks: 0,\n          avg_response_time: 0,\n          degraded_count: 0,\n          response_times: [],\n        };\n      }\n\n      healthBySource[source].total_checks++;\n      if (health.success) {\n        healthBySource[source].successful_checks++;\n      }\n      if (health.performance_degraded) {\n        healthBySource[source].degraded_count++;\n      }\n      if (health.response_time_ms) {\n        healthBySource[source].response_times.push(health.response_time_ms);\n      }\n    });\n\n    // Calculate averages\n    Object.values(healthBySource).forEach((source) => {\n      if (source.response_times.length > 0) {\n        source.avg_response_time = Math.round(\n          source.response_times.reduce((sum, time) => sum + time, 0) /\n            source.response_times.length\n        );\n      }\n      source.health_score =\n        source.total_checks > 0\n          ? ((source.successful_checks / source.total_checks) * 100).toFixed(1)\n          : \"0.0\";\n      delete source.response_times;\n    });\n\n    return healthBySource;\n  } catch (error) {\n    console.error(\"Error getting API health metrics:\", error);\n    return {};\n  }\n}\n\nasync function getBudgetMetrics(supabase) {\n  try {\n    const { data: budgetData, error } = await supabase\n      .from(\"budget_management\")\n      .select(\"*\")\n      .eq(\"is_active\", true)\n      .limit(1);\n\n    if (error) throw error;\n\n    const budget = budgetData?.[0];\n    if (!budget) {\n      return {\n        total_budget: 0,\n        total_spent: 0,\n        utilization_percentage: 0,\n        days_remaining: 0,\n        projected_overage: 0,\n      };\n    }\n\n    return {\n      total_budget: budget.total_budget,\n      total_spent: budget.total_spent,\n      utilization_percentage: budget.budget_utilization_percentage,\n      days_remaining: budget.days_remaining_in_period || 0,\n      projected_overage: budget.projected_overage || 0,\n      alert_threshold: budget.alert_threshold_percentage,\n      hard_limit_enabled: budget.hard_limit_enabled,\n    };\n  } catch (error) {\n    console.error(\"Error getting budget metrics:\", error);\n    return {\n      total_budget: 0,\n      total_spent: 0,\n      utilization_percentage: 0,\n      days_remaining: 0,\n      projected_overage: 0,\n    };\n  }\n}\n\nasync function getRecentActivity(supabase, timeFilter) {\n  try {\n    // Get recent API usage as activity\n    const { data: recentUsage, error } = await supabase\n      .from(\"enhanced_api_usage\")\n      .select(\"created_at, source_name, success, results_returned, actual_cost\")\n      .gte(\"created_at\", timeFilter.start)\n      .order(\"created_at\", { ascending: false })\n      .limit(20);\n\n    if (error) throw error;\n\n    return (recentUsage || []).map((activity) => ({\n      timestamp: activity.created_at,\n      type: activity.success ? \"success\" : \"error\",\n      message: `${activity.source_name}: ${\n        activity.results_returned || 0\n      } results (${activity.success ? \"success\" : \"failed\"})`,\n      cost: activity.actual_cost || 0,\n    }));\n  } catch (error) {\n    console.error(\"Error getting recent activity:\", error);\n    return [];\n  }\n}\n\nfunction getDefaultMetrics() {\n  return {\n    overall: {\n      total_leads: 0,\n      qualified_leads: 0,\n      qualification_rate: \"0.0%\",\n      active_campaigns: 0,\n    },\n    cost: {\n      total_cost: \"0.0000\",\n      cost_per_result: \"0.0000\",\n      breakdown: {},\n      daily_rate: \"0.0000\",\n    },\n    quality: {\n      avg_confidence_score: \"0.0\",\n      qualification_rate: \"0.0\",\n      grade_distribution: { A: 0, B: 0, C: 0, D: 0, F: 0 },\n    },\n    budget: {\n      total_budget: 150,\n      total_spent: 0,\n      utilization_percentage: 0,\n    },\n  };\n}\n\nfunction generateInsights(metrics) {\n  const insights = [];\n\n  // Cost efficiency insights\n  if (metrics.cost.total_cost > 0) {\n    const costPerLead = parseFloat(metrics.cost.cost_per_result);\n    if (costPerLead > 1.0) {\n      insights.push({\n        type: \"cost_optimization\",\n        priority: \"high\",\n        title: \"High Cost Per Lead Detected\",\n        message: `Current cost per lead ($${costPerLead.toFixed(\n          2\n        )}) is above optimal range. Consider optimizing API usage.`,\n        action: \"Review API source allocation and pre-validation filters\",\n      });\n    }\n  }\n\n  // Quality insights\n  if (metrics.quality.avg_confidence_score < 70) {\n    insights.push({\n      type: \"quality_improvement\",\n      priority: \"medium\",\n      title: \"Low Average Confidence Score\",\n      message: `Average confidence score (${metrics.quality.avg_confidence_score}%) is below target. Enable more validation sources.`,\n      action: \"Enable additional government API validations\",\n    });\n  }\n\n  // Budget insights\n  if (metrics.budget.utilization_percentage > 80) {\n    insights.push({\n      type: \"budget_warning\",\n      priority: \"high\",\n      title: \"High Budget Utilization\",\n      message: `Budget utilization at ${metrics.budget.utilization_percentage}%. Consider increasing budget or optimizing costs.`,\n      action: \"Review budget allocation or implement stricter cost controls\",\n    });\n  }\n\n  return insights;\n}\n\nasync function generateAlerts(supabase, metrics) {\n  const alerts = [];\n\n  // Budget alerts\n  if (metrics.budget.utilization_percentage > 90) {\n    alerts.push({\n      type: \"budget\",\n      severity: \"critical\",\n      title: \"Budget Critical\",\n      message: `${metrics.budget.utilization_percentage}% of budget used`,\n      timestamp: new Date().toISOString(),\n    });\n  } else if (metrics.budget.utilization_percentage > 75) {\n    alerts.push({\n      type: \"budget\",\n      severity: \"warning\",\n      title: \"Budget Warning\",\n      message: `${metrics.budget.utilization_percentage}% of budget used`,\n      timestamp: new Date().toISOString(),\n    });\n  }\n\n  // API health alerts\n  Object.entries(metrics.apiHealth || {}).forEach(([source, health]) => {\n    if (parseFloat(health.health_score) < 80) {\n      alerts.push({\n        type: \"api_health\",\n        severity: \"warning\",\n        title: `${source} Performance Issue`,\n        message: `Health score: ${health.health_score}%`,\n        timestamp: new Date().toISOString(),\n      });\n    }\n  });\n\n  return alerts;\n}\n\nfunction getHoursDiff(timeFilter) {\n  const start = new Date(timeFilter.start);\n  const end = new Date(timeFilter.end);\n  return Math.abs(end - start) / (1000 * 60 * 60);\n}\n\nfunction analyzeQualityMetrics(validationData, campaignData) {\n  // Implementation for detailed quality analysis\n  return {\n    pipeline_performance: {\n      stage_1_pass_rate: 0,\n      stage_2_pass_rate: 0,\n      stage_3_pass_rate: 0,\n      stage_4_pass_rate: 0,\n    },\n    trends: {\n      quality_improving: true,\n      confidence_trend: \"stable\",\n    },\n  };\n}\n\nfunction analyzeBudgetPerformance(budget) {\n  const utilizationRate = (budget.total_spent / budget.total_budget) * 100;\n  const daysInPeriod = Math.ceil(\n    (new Date(budget.period_end) - new Date(budget.period_start)) /\n      (1000 * 60 * 60 * 24)\n  );\n  const daysElapsed = Math.ceil(\n    (new Date() - new Date(budget.period_start)) / (1000 * 60 * 60 * 24)\n  );\n  const burnRate = budget.total_spent / Math.max(daysElapsed, 1);\n\n  return {\n    utilization_rate: utilizationRate.toFixed(2),\n    days_remaining: budget.days_remaining_in_period,\n    burn_rate: burnRate.toFixed(2),\n    projected_spend: (burnRate * daysInPeriod).toFixed(2),\n    efficiency_score: Math.max(\n      0,\n      100 - (utilizationRate - (daysElapsed / daysInPeriod) * 100)\n    ),\n  };\n}\n\nfunction generateBudgetRecommendations(budget, alerts) {\n  const recommendations = [];\n\n  if (budget && budget.budget_utilization_percentage > 80) {\n    recommendations.push({\n      type: \"budget_optimization\",\n      priority: \"high\",\n      title: \"Optimize API Usage\",\n      description:\n        \"High budget utilization detected. Consider implementing stricter pre-validation filters.\",\n      estimated_savings: \"$10-25/month\",\n    });\n  }\n\n  return recommendations;\n}\n\nmodule.exports = router;\n\n/**\n * Calculate metrics for optimized API clients (Apollo + Hunter)\n */\nfunction calculateOptimizedApiMetrics(usageData, serviceName) {\n  const totalRequests = usageData.length;\n  const totalCost = usageData.reduce(\n    (sum, item) => sum + parseFloat(item.cost_usd || 0),\n    0\n  );\n  const successfulRequests = usageData.filter(\n    (item) => item.success === true\n  ).length;\n\n  // Calculate response times\n  const responseTimes = usageData\n    .filter((item) => item.response_time_ms)\n    .map((item) => parseInt(item.response_time_ms));\n  const avgResponseTime =\n    responseTimes.length > 0\n      ? responseTimes.reduce((sum, time) => sum + time, 0) /\n        responseTimes.length\n      : 0;\n\n  // Estimate leads generated (based on successful enrichment calls)\n  const leadsGenerated = usageData.filter(\n    (item) =>\n      item.success === true &&\n      (item.endpoint_type === \"search\" || item.endpoint_type === \"organization\")\n  ).length;\n\n  return {\n    serviceName,\n    totalRequests,\n    successfulRequests,\n    totalCost: parseFloat(totalCost.toFixed(4)),\n    costPerRequest:\n      totalRequests > 0\n        ? parseFloat((totalCost / totalRequests).toFixed(4))\n        : 0,\n    successRate:\n      totalRequests > 0\n        ? parseFloat(((successfulRequests / totalRequests) * 100).toFixed(1))\n        : 0,\n    avgResponseTime: Math.round(avgResponseTime),\n    leadsGenerated,\n    costPerLead:\n      leadsGenerated > 0\n        ? parseFloat((totalCost / leadsGenerated).toFixed(4))\n        : 0,\n  };\n}\n\n/**\n * Generate API optimization recommendations\n */\nfunction generateApiOptimizationRecommendations(apolloMetrics, hunterMetrics) {\n  const recommendations = [];\n\n  // Cost efficiency recommendations\n  if (apolloMetrics.costPerLead > 0.5) {\n    recommendations.push({\n      type: \"cost\",\n      priority: \"high\",\n      message: `Apollo cost per lead ($${apolloMetrics.costPerLead}) exceeds $0.50 target. Consider pre-filtering leads.`,\n    });\n  }\n\n  if (hunterMetrics.costPerLead > 0.3) {\n    recommendations.push({\n      type: \"cost\",\n      priority: \"medium\",\n      message: `Hunter.io cost per lead ($${hunterMetrics.costPerLead}) exceeds $0.30 target. Review email discovery efficiency.`,\n    });\n  }\n\n  // Success rate recommendations\n  if (apolloMetrics.successRate < 95) {\n    recommendations.push({\n      type: \"reliability\",\n      priority: \"medium\",\n      message: `Apollo success rate (${apolloMetrics.successRate}%) below 95%. Check API key limits and error handling.`,\n    });\n  }\n\n  if (hunterMetrics.successRate < 90) {\n    recommendations.push({\n      type: \"reliability\",\n      priority: \"high\",\n      message: `Hunter.io success rate (${hunterMetrics.successRate}%) below 90%. Review domain validation logic.`,\n    });\n  }\n\n  // Performance recommendations\n  if (apolloMetrics.avgResponseTime > 3000) {\n    recommendations.push({\n      type: \"performance\",\n      priority: \"low\",\n      message:\n        \"Apollo response time exceeds 3 seconds. Consider implementing caching for repeated queries.\",\n    });\n  }\n\n  // Efficiency recommendations\n  const combinedEfficiency =\n    (apolloMetrics.costPerLead + hunterMetrics.costPerLead) / 2;\n  if (combinedEfficiency < 0.25) {\n    recommendations.push({\n      type: \"success\",\n      priority: \"info\",\n      message: `Excellent cost efficiency: $${combinedEfficiency.toFixed(\n        4\n      )} per lead. System is well-optimized.`,\n    });\n  }\n\n  return recommendations;\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":12,"duration":23.458},
{"type":"mark","name":"lsp.goto_definition","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api-legacy/dashboard-metrics.js"},"position":{"line":531,"character":18}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":3,"duration":0.201},
{"type":"mark","name":"lsp.did_change_watched_files","count":3,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/.vercel/project.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":3,"duration":0.015},
{"type":"mark","name":"lsp.inlay_hint","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/public/index-user-aware.html"},"range":{"start":{"line":99,"character":0},"end":{"line":263,"character":7}}}},
{"type":"mark","name":"lsp.did_close","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api-legacy/dashboard-export.js"}}},
{"type":"measure","name":"lsp.did_close","count":8,"duration":0.791},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":4,"duration":0.166},
{"type":"mark","name":"lsp.did_close","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/api-legacy/dashboard-metrics.js"}}},
{"type":"measure","name":"lsp.did_close","count":9,"duration":1.074},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":5,"duration":0.174},
{"type":"mark","name":"lsp.did_change_batched","count":3,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":3,"duration":0.985},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":4,"duration":0.009},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":6,"duration":0.177},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":5,"duration":0.002},
{"type":"mark","name":"lsp.code_action","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.code_lens","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":2,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":6,"duration":0.017},
{"type":"mark","name":"lsp.inlay_hint","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":7,"duration":0.019},
{"type":"mark","name":"lsp.did_change_batched","count":4,"args":"file:///workspaces/ProspectPro/public/index-user-aware.html"},
{"type":"measure","name":"lsp.did_change_batched","count":4,"duration":0.248},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":8,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":9,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":3,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":10,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":5,"args":"file:///workspaces/ProspectPro/public/index-user-aware.html"},
{"type":"measure","name":"lsp.did_change_batched","count":5,"duration":0.237},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":11,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":12,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":4,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":13,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":6,"args":"file:///workspaces/ProspectPro/index.html"},
{"type":"measure","name":"lsp.did_change_batched","count":6,"duration":0.036},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":14,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":15,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":5,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":16,"duration":0.001},
{"type":"mark","name":"lsp.did_change_watched_files","count":4,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/dist/.vercel/project.json","type":1},{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":4,"duration":0.021},
{"type":"mark","name":"lsp.did_change_watched_files","count":5,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":5,"duration":0.017},
{"type":"mark","name":"lsp.inlay_hint","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":6,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":7,"duration":0.039},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":8,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql","languageId":"sql","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":13,"duration":0.044},
{"type":"mark","name":"lsp.did_change_batched","count":7,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":7,"duration":14.328},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":17,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":18,"duration":0.014},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":9,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":19,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":20,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":21,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","languageId":"typescriptreact","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":14,"duration":0.568},
{"type":"mark","name":"lsp.did_change_batched","count":8,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":7,"duration":0.168},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":8,"duration":0.166},
{"type":"measure","name":"lsp.did_change_batched","count":8,"duration":17.935},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":22,"duration":0.009},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":23,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":10,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":24,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":25,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":26,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":27,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","languageId":"typescriptreact","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":15,"duration":0.515},
{"type":"mark","name":"lsp.did_change_batched","count":9,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":9,"duration":0.17},
{"type":"measure","name":"lsp.did_change_batched","count":9,"duration":82.317},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":28,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":10,"duration":0.167},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":29,"duration":0.013},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":11,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":30,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":31,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":32,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":33,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":34,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":10,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":10,"duration":2.028},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":35,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":11,"duration":0.188},
{"type":"mark","name":"lsp.inlay_hint","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":36,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":12,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":37,"duration":0.025},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":38,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":39,"duration":0.026},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":40,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","languageId":"typescriptreact","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":16,"duration":0.543},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":12,"duration":0.424},
{"type":"mark","name":"lsp.did_change_batched","count":11,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":11,"duration":89.569},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":13,"duration":0.177},
{"type":"measure","name":"lsp.diagnostic","count":41,"duration":3.328},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":13,"duration":0.01},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":42,"duration":0.013},
{"type":"mark","name":"lsp.inlay_hint","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":43,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":44,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":45,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":46,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":47,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":48,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":12,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":12,"duration":2.214},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":49,"duration":0.012},
{"type":"measure","name":"lsp.testing_update","count":14,"duration":0.136},
{"type":"mark","name":"lsp.inlay_hint","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":50,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":14,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":51,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":52,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":53,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":54,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":55,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","languageId":"typescriptreact","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":17,"duration":0.532},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":15,"duration":0.189},
{"type":"mark","name":"lsp.did_change_batched","count":13,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":16,"duration":1.753},
{"type":"measure","name":"lsp.did_change_batched","count":13,"duration":87.64},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":56,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":57,"duration":0.017},
{"type":"mark","name":"lsp.inlay_hint","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":15,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":58,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":59,"duration":0.069},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":60,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":61,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":62,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":63,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":64,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":14,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":14,"duration":2.642},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":65,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":17,"duration":0.179},
{"type":"mark","name":"lsp.inlay_hint","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":66,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":16,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":67,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":68,"duration":0.026},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":69,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":70,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":71,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":72,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":15,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":18,"duration":0.206},
{"type":"measure","name":"lsp.did_change_batched","count":15,"duration":2.8},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":73,"duration":0.01},
{"type":"mark","name":"lsp.inlay_hint","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":74,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":17,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":75,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":76,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":77,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":78,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":79,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":80,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":16,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":16,"duration":2.081},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":81,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":19,"duration":0.182},
{"type":"mark","name":"lsp.inlay_hint","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":82,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":18,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":58,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":83,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":84,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":85,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":86,"duration":0.04},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":87,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":88,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":17,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":17,"duration":1.033},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":89,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":20,"duration":0.201},
{"type":"mark","name":"lsp.inlay_hint","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":59,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":59,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":90,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":19,"duration":0.021},
{"type":"mark","name":"lsp.document_symbol","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.code_lens","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":59,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":59,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":91,"duration":0.023},
{"type":"mark","name":"lsp.code_action","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":92,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":93,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":94,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":95,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":96,"duration":0.018},
{"type":"mark","name":"lsp.did_change_batched","count":18,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":18,"duration":1.235},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":97,"duration":0.008},
{"type":"measure","name":"lsp.testing_update","count":21,"duration":0.183},
{"type":"mark","name":"lsp.inlay_hint","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":98,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":20,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":99,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":100,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":101,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":102,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":103,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":104,"duration":0.022},
{"type":"mark","name":"lsp.did_change_watched_files","count":6,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":6,"duration":0.016},
{"type":"mark","name":"lsp.did_change_watched_files","count":7,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":7,"duration":0.016},
{"type":"mark","name":"lsp.did_open","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":18,"duration":0.05},
{"type":"mark","name":"lsp.did_change_batched","count":19,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":19,"duration":15.938},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":105,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":106,"duration":0.013},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":21,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":107,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":108,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":109,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":110,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":111,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":112,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":113,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":114,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":20,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":20,"duration":2.396},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":22,"duration":0.179},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":115,"duration":0.011},
{"type":"mark","name":"lsp.did_change_batched","count":21,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":23,"duration":0.167},
{"type":"measure","name":"lsp.did_change_batched","count":21,"duration":1.875},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":116,"duration":0.008},
{"type":"mark","name":"lsp.did_change_batched","count":22,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":22,"duration":1.241},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":117,"duration":0.008},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":24,"duration":0.18},
{"type":"mark","name":"lsp.inlay_hint","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":22,"duration":0.012},
{"type":"mark","name":"lsp.did_change_batched","count":23,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":23,"duration":0.119},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":118,"duration":0.013},
{"type":"mark","name":"lsp.folding_range","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.did_change_batched","count":24,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":25,"duration":0.181},
{"type":"measure","name":"lsp.did_change_batched","count":24,"duration":19.317},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":119,"duration":0.009},
{"type":"mark","name":"lsp.did_change_batched","count":25,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":25,"duration":22.324},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":120,"duration":0.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":26,"duration":0.187},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":121,"duration":0.02},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":23,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":24,"duration":0.007},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":122,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":26,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":26,"duration":77.47},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":123,"duration":0.016},
{"type":"measure","name":"lsp.testing_update","count":27,"duration":0.258},
{"type":"mark","name":"lsp.inlay_hint","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":25,"duration":0.022},
{"type":"mark","name":"lsp.did_change_batched","count":27,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":27,"duration":22.287},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":124,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":125,"duration":0.007},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":28,"duration":0.176},
{"type":"mark","name":"lsp.inlay_hint","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":26,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":27,"duration":0.032},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":126,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":28,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":127,"duration":0.025},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":128,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":129,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":130,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":131,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":132,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":52,"character":15}}}},
{"type":"mark","name":"lsp.document_highlight","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":2,"character":0}}},
{"type":"mark","name":"lsp.inlay_hint","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":133,"duration":0.022},
{"type":"mark","name":"lsp.code_action","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"}}},
{"type":"mark","name":"lsp.inlay_hint","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"range":{"start":{"line":0,"character":0},"end":{"line":57,"character":23}}}},
{"type":"mark","name":"lsp.folding_range","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"}}},
{"type":"mark","name":"lsp.code_lens","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"}}},
{"type":"mark","name":"lsp.document_symbol","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"}}},
{"type":"mark","name":"lsp.hover","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"position":{"line":9,"character":31}}},
{"type":"mark","name":"lsp.hover","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"position":{"line":11,"character":32}}},
{"type":"mark","name":"lsp.document_highlight","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"position":{"line":11,"character":47}}},
{"type":"mark","name":"lsp.code_action","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"range":{"start":{"line":11,"character":47},"end":{"line":11,"character":47}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"position":{"line":11,"character":47}}},
{"type":"mark","name":"lsp.code_lens","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"}}},
{"type":"mark","name":"lsp.code_action","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},"range":{"start":{"line":11,"character":52},"end":{"line":11,"character":52}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":134,"duration":0.022},
{"type":"mark","name":"lsp.code_action","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":49,"character":2}}}},
{"type":"mark","name":"lsp.code_lens","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":3,"character":13}}},
{"type":"mark","name":"lsp.hover","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":3,"character":11}}},
{"type":"mark","name":"lsp.code_action","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":301,"character":7}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":3,"character":11}}},
{"type":"mark","name":"lsp.inlay_hint","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":70,"character":41}}}},
{"type":"mark","name":"lsp.code_lens","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.did_open","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { TierSelector } from \"../components/TierSelector\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\nimport { ENRICHMENT_TIERS } from \"../lib/supabase\";\n\nconst businessCategories = [\n  \"Automotive Services\",\n  \"Education & Training\",\n  \"Entertainment & Recreation\",\n  \"Financial Services\",\n  \"Food & Dining\",\n  \"Government & Public Services\",\n  \"Healthcare & Medical\",\n  \"Home & Property Services\",\n  \"Hospitality & Lodging\",\n  \"Personal Care & Beauty\",\n  \"Professional Services\",\n  \"Religious & Community\",\n  \"Retail & Shopping\",\n  \"Technology & IT Services\",\n  \"Transportation & Transit\",\n];\n\nconst businessTypesByCategory: Record<string, string[]> = {\n  \"Automotive Services\": [\n    \"Auto Body Shop\",\n    \"Auto Detailing\",\n    \"Auto Parts Store\",\n    \"Automotive Glass Service\",\n    \"Car Dealer\",\n    \"Car Rental\",\n    \"Car Repair\",\n    \"Car Wash\",\n    \"Electric Vehicle Charging Station\",\n    \"Gas Station\",\n    \"Motorcycle Dealer\",\n    \"Oil Change Service\",\n    \"Rv Dealer\",\n    \"Smog Check Station\",\n    \"Tire Shop\",\n    \"Towing Service\",\n    \"Transmission Shop\",\n    \"Truck Dealer\",\n  ],\n  \"Education & Training\": [\n    \"Art School\",\n    \"Charter School\",\n    \"College\",\n    \"Community College\",\n    \"Cooking School\",\n    \"Dance Studio\",\n    \"Daycare\",\n    \"Driving School\",\n    \"Kindergarten\",\n    \"Language School\",\n    \"Library\",\n    \"Music School\",\n    \"Preschool\",\n    \"Primary School\",\n    \"Private School\",\n    \"Public School\",\n    \"School\",\n    \"Secondary School\",\n    \"Summer Camp Organizer\",\n    \"Technical School\",\n    \"Training Center\",\n    \"Tutoring Center\",\n    \"University\",\n    \"Vocational School\",\n  ],\n  \"Entertainment & Recreation\": [\n    \"Amusement Park\",\n    \"Aquarium\",\n    \"Arcade\",\n    \"Arena\",\n    \"Art Gallery\",\n    \"Banquet Hall\",\n    \"Beach\",\n    \"Botanical Garden\",\n    \"Bowling Alley\",\n    \"Casino\",\n    \"Comedy Club\",\n    \"Concert Hall\",\n    \"Convention Center\",\n    \"Escape Room\",\n    \"Event Venue\",\n    \"Fitness Center\",\n    \"Golf Course\",\n    \"Gym\",\n    \"Karaoke Venue\",\n    \"Marina\",\n    \"Mini Golf\",\n    \"Movie Theater\",\n    \"Museum\",\n    \"Night Club\",\n    \"Paintball\",\n    \"Park\",\n    \"Rock Climbing Gym\",\n    \"Ski Resort\",\n    \"Sports Complex\",\n    \"Stadium\",\n    \"Swimming Pool\",\n    \"Tennis Court\",\n    \"Theater\",\n    \"Tourist Attraction\",\n    \"Trampoline Park\",\n    \"Wedding Venue\",\n    \"Yoga Studio\",\n    \"Zoo\",\n  ],\n  \"Financial Services\": [\n    \"Atm\",\n    \"Bank\",\n    \"Check Cashing Service\",\n    \"Credit Union\",\n    \"Cryptocurrency Exchange\",\n    \"Financial Planner\",\n    \"Investment Firm\",\n    \"Money Transfer Service\",\n    \"Mortgage Broker\",\n    \"Payday Lender\",\n    \"Stock Broker\",\n  ],\n  \"Food & Dining\": [\n    \"Bakery\",\n    \"Bar\",\n    \"Barbecue Restaurant\",\n    \"Brewery\",\n    \"Brunch Restaurant\",\n    \"Buffet\",\n    \"Burger Joint\",\n    \"Cafe\",\n    \"Catering Service\",\n    \"Chinese Restaurant\",\n    \"Cocktail Bar\",\n    \"Coffee Shop\",\n    \"Deli\",\n    \"Dessert Shop\",\n    \"Distillery\",\n    \"Donut Shop\",\n    \"Fast Food Restaurant\",\n    \"Food Court\",\n    \"Food Stand\",\n    \"Food Truck\",\n    \"Ice Cream Shop\",\n    \"Indian Restaurant\",\n    \"Italian Restaurant\",\n    \"Japanese Restaurant\",\n    \"Juice Bar\",\n    \"Meal Delivery\",\n    \"Meal Takeaway\",\n    \"Mexican Restaurant\",\n    \"Pizza Restaurant\",\n    \"Pub\",\n    \"Restaurant\",\n    \"Sandwich Shop\",\n    \"Seafood Restaurant\",\n    \"Smoothie Shop\",\n    \"Steakhouse\",\n    \"Sushi Restaurant\",\n    \"Taco Place\",\n    \"Tea House\",\n    \"Wine Bar\",\n    \"Winery\",\n  ],\n  \"Government & Public Services\": [\n    \"City Hall\",\n    \"Consulate\",\n    \"Courthouse\",\n    \"County Office\",\n    \"Dmv\",\n    \"Embassy\",\n    \"Fire Station\",\n    \"Government Office\",\n    \"Municipal Building\",\n    \"Passport Office\",\n    \"Police Station\",\n    \"Post Office\",\n    \"Public Library\",\n    \"Public School\",\n    \"Public Works\",\n    \"Social Services Office\",\n    \"Tax Office\",\n    \"Voter Registration Office\",\n  ],\n  \"Healthcare & Medical\": [\n    \"Acupuncture Clinic\",\n    \"Chiropractor\",\n    \"Dental Clinic\",\n    \"Dentist\",\n    \"Doctor\",\n    \"Drugstore\",\n    \"Health Insurance Office\",\n    \"Hospital\",\n    \"Medical Center\",\n    \"Medical Equipment Supplier\",\n    \"Medical Lab\",\n    \"Mental Health Clinic\",\n    \"Occupational Therapist\",\n    \"Optical Clinic\",\n    \"Optometrist\",\n    \"Orthodontist\",\n    \"Pharmacy\",\n    \"Physical Therapy\",\n    \"Physiotherapist\",\n    \"Psychiatrist\",\n    \"Psychologist\",\n    \"Skin Care Clinic\",\n    \"Speech Therapist\",\n    \"Urgent Care\",\n    \"Veterinary Care\",\n    \"Wellness Center\",\n  ],\n  \"Home & Property Services\": [\n    \"Appliance Repair\",\n    \"Carpet Cleaning\",\n    \"Cleaning Service\",\n    \"Dry Cleaning\",\n    \"Electrician\",\n    \"Fence Contractor\",\n    \"Flooring Contractor\",\n    \"Gardener\",\n    \"General Contractor\",\n    \"Gutter Service\",\n    \"Handyman\",\n    \"Home Inspector\",\n    \"Hvac Contractor\",\n    \"Landscaping\",\n    \"Laundry\",\n    \"Locksmith\",\n    \"Moving Company\",\n    \"Painter\",\n    \"Pest Control\",\n    \"Plumber\",\n    \"Pool Service\",\n    \"Property Management\",\n    \"Roofing Contractor\",\n    \"Storage\",\n    \"Window Cleaning\",\n  ],\n  \"Hospitality & Lodging\": [\n    \"Bed And Breakfast\",\n    \"Boutique Hotel\",\n    \"Campground\",\n    \"Extended Stay Hotel\",\n    \"Guest House\",\n    \"Hostel\",\n    \"Hotel\",\n    \"Inn\",\n    \"Lodge\",\n    \"Motel\",\n    \"Resort\",\n    \"Rv Park\",\n    \"Vacation Rental\",\n  ],\n  \"Personal Care & Beauty\": [\n    \"Barber Shop\",\n    \"Beauty Salon\",\n    \"Beautician\",\n    \"Body Art Service\",\n    \"Cosmetics Store\",\n    \"Day Spa\",\n    \"Eyebrow Threading\",\n    \"Facial Spa\",\n    \"Hair Care\",\n    \"Hair Salon\",\n    \"Makeup Artist\",\n    \"Massage\",\n    \"Nail Salon\",\n    \"Piercing Shop\",\n    \"Sauna\",\n    \"Spa\",\n    \"Tanning Studio\",\n    \"Tattoo Parlor\",\n    \"Waxing Salon\",\n  ],\n  \"Professional Services\": [\n    \"Accounting\",\n    \"Advertising Agency\",\n    \"Architecture Firm\",\n    \"Attorney\",\n    \"Business Center\",\n    \"Consultant\",\n    \"Corporate Office\",\n    \"Employment Agency\",\n    \"Engineering Office\",\n    \"Financial Advisor\",\n    \"Insurance Agency\",\n    \"Lawyer\",\n    \"Marketing Agency\",\n    \"Notary\",\n    \"Real Estate Agency\",\n    \"Recruiter\",\n    \"Tax Preparation\",\n  ],\n  \"Religious & Community\": [\n    \"Cemetery\",\n    \"Church\",\n    \"Civic Organization\",\n    \"Community Center\",\n    \"Crematorium\",\n    \"Funeral Home\",\n    \"Meditation Center\",\n    \"Mosque\",\n    \"Non-Profit Organization\",\n    \"Place Of Worship\",\n    \"Religious Center\",\n    \"Social Club\",\n    \"Spiritual Center\",\n    \"Synagogue\",\n    \"Temple\",\n  ],\n  \"Retail & Shopping\": [\n    \"Antique Shop\",\n    \"Art Supply Store\",\n    \"Bicycle Store\",\n    \"Book Store\",\n    \"Boutique\",\n    \"Clothing Store\",\n    \"Convenience Store\",\n    \"Craft Store\",\n    \"Department Store\",\n    \"Discount Store\",\n    \"Dollar Store\",\n    \"Electronics Store\",\n    \"Florist\",\n    \"Furniture Store\",\n    \"Garden Center\",\n    \"Gift Shop\",\n    \"Grocery Store\",\n    \"Hardware Store\",\n    \"Hobby Shop\",\n    \"Home Goods Store\",\n    \"Jewelry Store\",\n    \"Liquor Store\",\n    \"Music Store\",\n    \"Office Supply Store\",\n    \"Optical Store\",\n    \"Outlet Store\",\n    \"Party Supply Store\",\n    \"Pet Store\",\n    \"Second Hand Store\",\n    \"Shoe Store\",\n    \"Shopping Mall\",\n    \"Sporting Goods Store\",\n    \"Supermarket\",\n    \"Thrift Store\",\n    \"Tobacco Shop\",\n    \"Toy Store\",\n    \"Vape Shop\",\n  ],\n  \"Technology & IT Services\": [\n    \"App Development\",\n    \"Cell Phone Store\",\n    \"Co-Working Space\",\n    \"Computer Repair\",\n    \"Cybersecurity Firm\",\n    \"Data Center\",\n    \"Internet Cafe\",\n    \"It Services\",\n    \"Managed Services Provider\",\n    \"Software Company\",\n    \"Tech Support\",\n    \"Telecommunications Service Provider\",\n    \"Web Design\",\n  ],\n  \"Transportation & Transit\": [\n    \"Airport\",\n    \"Bike Rental\",\n    \"Bus Station\",\n    \"Bus Tour Agency\",\n    \"Car Sharing\",\n    \"Cruise Agency\",\n    \"Ferry Terminal\",\n    \"Limousine Service\",\n    \"Parking Garage\",\n    \"Parking Lot\",\n    \"Rest Area\",\n    \"Ride Share Location\",\n    \"Scooter Rental\",\n    \"Shuttle Service\",\n    \"Subway Station\",\n    \"Taxi Stand\",\n    \"Train Station\",\n    \"Travel Agency\",\n    \"Truck Stop\",\n  ],\n};\n\nexport const BusinessDiscovery: React.FC = () => {\n  const navigate = useNavigate();\n\n  // Handle job creation callback for navigation to progress page\n  const handleJobCreated = (jobData: {\n    jobId: string;\n    campaignId: string;\n    status: string;\n    estimatedTime?: number;\n  }) => {\n    console.log(\"🚀 Job created, navigating to progress page:\", jobData);\n    navigate(`/campaign/${jobData.campaignId}/progress?jobId=${jobData.jobId}`);\n  };\n\n  const {\n    startDiscovery,\n    isDiscovering,\n    progress,\n    currentStage,\n    cacheStats,\n    error,\n  } = useBusinessDiscovery(handleJobCreated);\n\n  const [selectedCategory, setSelectedCategory] = useState(\n    \"Home & Property Services\"\n  );\n  const [selectedBusinessType, setSelectedBusinessType] =\n    useState(\"Electrician\");\n  const [keywords, setKeywords] = useState(\"\");\n  const [location, setLocation] = useState(\"New York, NY\");\n  const [searchRadius, setSearchRadius] = useState(\"10 miles\");\n  const [expandGeography, setExpandGeography] = useState(false);\n  const [numberOfLeads, setNumberOfLeads] = useState(3);\n\n  // Progressive enrichment tier selection\n  const [selectedTier, setSelectedTier] =\n    useState<keyof typeof ENRICHMENT_TIERS>(\"BASE\");\n\n  // Navigate to progress page via handleJobCreated callback\n  // No longer need useEffect for navigation since we use the callback\n\n  const availableBusinessTypes =\n    businessTypesByCategory[selectedCategory] || [];\n\n  const currentTierConfig = ENRICHMENT_TIERS[selectedTier];\n  const estimatedCost = numberOfLeads * currentTierConfig.price;\n\n  const handleSearch = () => {\n    if (!location.trim()) {\n      alert(\"Please enter a location\");\n      return;\n    }\n\n    const config = {\n      search_terms: `${selectedBusinessType} ${keywords}`.trim(),\n      location: location.trim(),\n      business_type: selectedBusinessType,\n      budget_limit: estimatedCost,\n      max_results: numberOfLeads,\n      include_email_validation:\n        selectedTier === \"PROFESSIONAL\" || selectedTier === \"ENTERPRISE\",\n      include_website_validation: true,\n      min_confidence_score: 70,\n      chamber_verification: true, // Always enabled based on tier\n      trade_association: true, // Always enabled based on tier\n      professional_license: true, // Always enabled based on tier\n      selectedTier: selectedTier,\n      keywords: keywords,\n      search_radius: searchRadius,\n      expand_geography: expandGeography,\n    };\n\n    console.log(\"🚀 Starting campaign:\", config);\n    startDiscovery(config);\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-sm border border-gray-200 dark:border-gray-600\">\n      <div className=\"p-6 space-y-6\">{/* Business Category */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Business Category\n          </label>\n          <select\n            value={selectedCategory}\n            onChange={(e) => {\n              setSelectedCategory(e.target.value);\n              const types = businessTypesByCategory[e.target.value];\n              if (types && types.length > 0) {\n                setSelectedBusinessType(types[0]);\n              }\n            }}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n          >\n            {businessCategories.map((category) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Business Type */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Business Type\n          </label>\n          <select\n            value={selectedBusinessType}\n            onChange={(e) => setSelectedBusinessType(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n          >\n            {availableBusinessTypes.map((type) => (\n              <option key={type} value={type}>\n                {type}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Additional Keywords */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Additional Keywords (Optional)\n          </label>\n          <input\n            type=\"text\"\n            value={keywords}\n            onChange={(e) => setKeywords(e.target.value)}\n            placeholder=\"e.g., luxury, organic, 24-hour (comma-separated)\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            Add comma-separated keywords to refine your search\n          </p>\n        </div>\n\n        {/* Location */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Location\n          </label>\n          <input\n            type=\"text\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            placeholder=\"e.g., San Francisco, CA or New York, NY\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400\"\n          />\n\n          <div className=\"mt-4 space-y-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Search Radius:\n              </label>\n              <select\n                value={searchRadius}\n                onChange={(e) => setSearchRadius(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n              >\n                <option value=\"5 miles\">5 miles</option>\n                <option value=\"10 miles\">10 miles</option>\n                <option value=\"25 miles\">25 miles</option>\n                <option value=\"50 miles\">50 miles</option>\n                <option value=\"100 miles\">100 miles</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"expandGeography\"\n                checked={expandGeography}\n                onChange={(e) => setExpandGeography(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700\"\n              />\n              <label\n                htmlFor=\"expandGeography\"\n                className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\"\n              >\n                Expand geography automatically if initial results are limited\n              </label>\n            </div>\n          </div>\n        </div>\n\n        {/* Progressive Enrichment Tier Selection */}\n        <TierSelector\n          selectedTier={selectedTier}\n          onTierChange={setSelectedTier}\n          numberOfLeads={numberOfLeads}\n        />\n\n        {/* Number of Leads */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Number of Leads\n          </label>\n          <div className=\"flex items-center space-x-4\">\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={numberOfLeads}\n              onChange={(e) => setNumberOfLeads(parseInt(e.target.value))}\n              className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer slider\"\n              style={{\n                background: `linear-gradient(to right, #f59e0b 0%, #f59e0b ${\n                  numberOfLeads * 10\n                }%, #e5e7eb ${numberOfLeads * 10}%, #e5e7eb 100%)`,\n              }}\n            />\n            <div className=\"bg-blue-500 dark:bg-blue-600 text-white px-3 py-1 rounded-full text-sm font-medium min-w-fit\">\n              {numberOfLeads} leads\n            </div>\n          </div>\n        </div>\n\n        {/* Actual Cost Display */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-green-50 dark:from-blue-900/20 dark:to-green-900/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-1\">\n                Actual Cost ({currentTierConfig.name} Tier)\n              </h3>\n              <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                {numberOfLeads} leads × ${currentTierConfig.price} per lead\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                ${estimatedCost.toFixed(2)}\n              </div>\n              <div className=\"text-xs text-gray-600 dark:text-gray-400\">Transparent pricing</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Progress Display */}\n        <ProgressDisplay\n          isDiscovering={isDiscovering}\n          progress={progress}\n          currentStage={currentStage}\n          cacheStats={cacheStats}\n        />\n\n        {/* Start Discovery Button */}\n        <div className=\"pt-4\">\n          <button\n            type=\"button\"\n            onClick={handleSearch}\n            disabled={isDiscovering}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-800 text-white font-medium py-3 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {isDiscovering ? (\n              <>\n                <svg\n                  className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle\n                    className=\"opacity-25\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"4\"\n                  ></circle>\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  ></path>\n                </svg>\n                Running Campaign ({progress}%)\n              </>\n            ) : (\n              \"Run Campaign\"\n            )}\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg\n                  className=\"h-5 w-5 text-red-400 dark:text-red-500\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n                  Discovery Failed\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n                  <p>\n                    {error instanceof Error ? error.message : String(error)}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":19,"duration":5.574},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":29,"duration":0.196},
{"type":"mark","name":"lsp.did_open","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport { corsHeaders, handleCORS } from \"../_shared/edge-auth.ts\";\n\n// Background Task Business Discovery with Tiered Enrichment + Multi-Source Discovery\n// ProspectPro v4.3 - October 2025\n// - Google Places + Foursquare discovery with Census targeting\n// - Tier-aware enrichment pipeline with Hunter.io + NeverBounce\n// - Rich verification metadata persisted for UI + exports\n\n// Type declarations for EdgeRuntime\ndeclare const EdgeRuntime: {\n  waitUntil(promise: Promise<unknown>): void;\n};\n\ntype TierKey = \"BASE\" | \"PROFESSIONAL\" | \"ENTERPRISE\";\n\ntype DataSource = \"google_places\" | \"google_place_details\" | \"foursquare\";\n\ninterface TierSettings {\n  key: TierKey;\n  name: string;\n  pricePerLead: number;\n  orchestratorTier: \"starter\" | \"professional\" | \"enterprise\" | \"compliance\";\n  maxCostPerLead: number;\n  includes: {\n    verifyEmails: boolean;\n    personEnrichment: boolean;\n    apolloEnrichment: boolean;\n  };\n}\n\nconst ENRICHMENT_TIERS: Record<TierKey, TierSettings> = {\n  BASE: {\n    key: \"BASE\",\n    name: \"Base\",\n    pricePerLead: 0.15,\n    orchestratorTier: \"starter\",\n    maxCostPerLead: 0.5,\n    includes: {\n      verifyEmails: false, // Generic company email only\n      personEnrichment: false,\n      apolloEnrichment: false,\n    },\n  },\n  PROFESSIONAL: {\n    key: \"PROFESSIONAL\",\n    name: \"Professional\",\n    pricePerLead: 0.45,\n    orchestratorTier: \"professional\",\n    maxCostPerLead: 1.5,\n    includes: {\n      verifyEmails: true, // Professional email discovery & verification\n      personEnrichment: false,\n      apolloEnrichment: false,\n    },\n  },\n  ENTERPRISE: {\n    key: \"ENTERPRISE\",\n    name: \"Enterprise\",\n    pricePerLead: 2.5,\n    orchestratorTier: \"enterprise\",\n    maxCostPerLead: 7.5,\n    includes: {\n      verifyEmails: true,\n      personEnrichment: true, // Executive contact enrichment\n      apolloEnrichment: true, // Full compliance verification\n    },\n  },\n};\n\ninterface BusinessDiscoveryRequest {\n  businessType: string;\n  location: string;\n  keywords?: string[] | string;\n  searchRadius?: string;\n  expandGeography?: boolean;\n  maxResults?: number;\n  budgetLimit?: number;\n  minConfidenceScore?: number;\n  sessionUserId?: string;\n  tierKey?: TierKey;\n  tierName?: string;\n  tierPrice?: number;\n  options?: {\n    tradeAssociation?: boolean;\n    professionalLicense?: boolean;\n    chamberVerification?: boolean;\n    apolloDiscovery?: boolean;\n  };\n  userEmail?: string;\n}\n\ninterface JobConfig {\n  campaignId: string;\n  businessType: string;\n  location: string;\n  keywords: string[];\n  searchRadius?: string;\n  expandGeography: boolean;\n  maxResults: number;\n  budgetLimit: number;\n  minConfidenceScore: number;\n  userId?: string;\n  sessionUserId?: string;\n  tier: TierSettings;\n  options: {\n    tradeAssociation: boolean;\n    professionalLicense: boolean;\n    chamberVerification: boolean;\n    apolloDiscovery: boolean;\n  };\n}\n\ninterface BusinessData {\n  name?: string;\n  businessName?: string;\n  formatted_address?: string;\n  address?: string;\n  formatted_phone_number?: string;\n  phone?: string;\n  website?: string;\n  place_id?: string;\n  rating?: number;\n  user_ratings_total?: number;\n  source?: DataSource;\n  data_enriched?: boolean;\n  foursquare_data?: Record<string, unknown>;\n}\n\ninterface DiscoveredBusiness extends BusinessData {\n  source: DataSource;\n}\n\ninterface FoursquarePlace {\n  fsq_id: string;\n  name: string;\n  location?: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    region?: string;\n    postcode?: string;\n    country?: string;\n  };\n  contact?: {\n    phone?: string;\n  };\n  website?: string;\n  rating?: number;\n  stats?: {\n    total_tips?: number;\n  };\n}\n\ninterface ScoredLead {\n  businessName: string;\n  address: string;\n  phone: string;\n  website: string;\n  email: string;\n  optimizedScore: number;\n  validationCost: number;\n  dataSources: string[];\n  enhancementData: {\n    verificationSources: string[];\n    emails?: Array<{\n      email: string;\n      confidence?: number;\n      verified?: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    processingMetadata: {\n      totalCost: number;\n      validationCost: number;\n      enrichmentCost: number;\n      totalConfidenceBoost: number;\n      processingStrategy: string;\n      servicesUsed: string[];\n      servicesSkipped: string[];\n      enrichmentTier: string;\n      enrichmentCostBreakdown?: Record<string, number>;\n      emailStatus?: \"verified\" | \"unconfirmed\" | \"not_found\";\n      verifiedEmail?: string;\n      unverifiedEmail?: string;\n    };\n  };\n}\n\ninterface CensusIntelligence {\n  total_establishments: number;\n  density_score: number;\n  optimization: {\n    search_radius: number;\n    expected_results: number;\n    api_efficiency_score: number;\n    confidence_multiplier: number;\n  };\n  geographic_data: {\n    state: string;\n    county: string | null;\n    raw_location: string;\n    fallback?: boolean;\n  };\n}\n\nconst DEFAULT_OPTIONS = {\n  tradeAssociation: false,\n  professionalLicense: false,\n  chamberVerification: false,\n  apolloDiscovery: false,\n};\n\nfunction parseKeywords(input?: string[] | string): string[] {\n  if (!input) return [];\n  if (Array.isArray(input)) {\n    return input.map((value) => value.trim()).filter(Boolean);\n  }\n  return input\n    .split(\",\")\n    .map((value) => value.trim())\n    .filter(Boolean);\n}\n\nfunction getTierSettings(\n  tierKey?: TierKey,\n  fallbackName?: string\n): TierSettings {\n  if (tierKey && ENRICHMENT_TIERS[tierKey]) {\n    return ENRICHMENT_TIERS[tierKey];\n  }\n\n  if (fallbackName) {\n    const match = (Object.values(ENRICHMENT_TIERS) as TierSettings[]).find(\n      (tier) => tier.name.toLowerCase() === fallbackName.toLowerCase()\n    );\n    if (match) return match;\n  }\n\n  return ENRICHMENT_TIERS.BASE; // Changed from PROFESSIONAL to BASE as default\n}\n\n// --------------------\n// Census Intelligence\n// --------------------\n\nclass CensusAPIClient {\n  private apiKey: string;\n  private baseURL: string;\n  private cache = new Map<string, { data: unknown; timestamp: number }>();\n  private cacheTTL = 24 * 60 * 60 * 1000;\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n    this.baseURL = \"https://api.census.gov/data\";\n  }\n\n  async getBusinessDensity(\n    businessType: string,\n    location: string\n  ): Promise<CensusIntelligence> {\n    const naicsCode = this.mapBusinessTypeToNAICS(businessType);\n    const geoData = this.parseLocation(location);\n\n    const censusData = await this.fetchCountyBusinessPatterns({\n      naics: naicsCode,\n      state: geoData.state,\n      county: geoData.county,\n    });\n\n    return this.calculateDensityMetrics(censusData, geoData, location);\n  }\n\n  private async fetchCountyBusinessPatterns({\n    naics,\n    state,\n    county,\n  }: {\n    naics: string;\n    state: string;\n    county: string | null;\n  }) {\n    const cacheKey = `cbp_${naics}_${state}_${county ?? \"all\"}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      return cached.data as unknown[];\n    }\n\n    const url = `${this.baseURL}/2021/cbp?get=ESTAB,EMP,NAICS2017_LABEL&for=state:${state}&NAICS2017=${naics}&key=${this.apiKey}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`Census API error: ${response.status}`);\n    }\n\n    const data = (await response.json()) as unknown[];\n    this.cache.set(cacheKey, { data, timestamp: Date.now() });\n    return data;\n  }\n\n  private calculateDensityMetrics(\n    censusData: unknown[],\n    geoData: {\n      state: string;\n      county: string | null;\n      raw_location: string;\n      fallback?: boolean;\n    },\n    rawLocation: string\n  ): CensusIntelligence {\n    if (!Array.isArray(censusData) || censusData.length < 2) {\n      return this.getDefaultOptimization(\n        rawLocation,\n        geoData.state,\n        geoData.county\n      );\n    }\n\n    const businessData = censusData.slice(1) as [\n      string,\n      string,\n      string,\n      string\n    ][];\n    let totalEstablishments = 0;\n    let totalEmployment = 0;\n\n    for (const row of businessData) {\n      const [estab, emp] = row;\n      totalEstablishments += parseInt(estab) || 0;\n      totalEmployment += parseInt(emp) || 0;\n    }\n\n    const densityScore = Math.min(totalEstablishments / 750, 100);\n    const confidenceMultiplier =\n      totalEstablishments > 750 ? 1.3 : totalEstablishments > 250 ? 1.15 : 1;\n    const expectedResults = Math.max(Math.round(totalEstablishments * 0.04), 5);\n\n    return {\n      total_establishments: totalEstablishments,\n      density_score: densityScore,\n      optimization: {\n        search_radius: this.calculateOptimalRadius(densityScore),\n        expected_results: Math.min(expectedResults, 40),\n        api_efficiency_score: Math.round(densityScore),\n        confidence_multiplier: confidenceMultiplier,\n      },\n      geographic_data: geoData,\n    };\n  }\n\n  private getDefaultOptimization(\n    rawLocation: string,\n    state: string,\n    county: string | null\n  ): CensusIntelligence {\n    return {\n      total_establishments: 250,\n      density_score: 25,\n      optimization: {\n        search_radius: 25,\n        expected_results: 12,\n        api_efficiency_score: 45,\n        confidence_multiplier: 1,\n      },\n      geographic_data: {\n        state,\n        county,\n        raw_location: rawLocation,\n        fallback: true,\n      },\n    };\n  }\n\n  private mapBusinessTypeToNAICS(businessType: string): string {\n    const naicsMapping: Record<string, string> = {\n      accounting: \"5412\",\n      cpa: \"5412\",\n      legal: \"5411\",\n      electrician: \"238210\",\n      contractor: \"23\",\n      restaurant: \"7225\",\n      cafe: \"722515\",\n      medical: \"621\",\n      dental: \"6212\",\n      retail: \"44\",\n      spa: \"8121\",\n      salon: \"8121\",\n      consulting: \"5416\",\n      marketing: \"5418\",\n      real: \"531\",\n      hvac: \"238220\",\n    };\n\n    const lower = businessType.toLowerCase();\n    for (const [key, code] of Object.entries(naicsMapping)) {\n      if (lower.includes(key)) return code;\n    }\n    return \"00\";\n  }\n\n  private parseLocation(location: string) {\n    const stateMatch = location.match(/\\b([A-Z]{2})\\b/);\n    const stateCode = stateMatch ? this.getStateFIPSCode(stateMatch[1]) : \"06\";\n    return {\n      state: stateCode,\n      county: null,\n      raw_location: location,\n    };\n  }\n\n  private getStateFIPSCode(stateAbbr: string): string {\n    const stateCodes: Record<string, string> = {\n      AL: \"01\",\n      AK: \"02\",\n      AZ: \"04\",\n      AR: \"05\",\n      CA: \"06\",\n      CO: \"08\",\n      CT: \"09\",\n      DE: \"10\",\n      FL: \"12\",\n      GA: \"13\",\n      HI: \"15\",\n      ID: \"16\",\n      IL: \"17\",\n      IN: \"18\",\n      IA: \"19\",\n      KS: \"20\",\n      KY: \"21\",\n      LA: \"22\",\n      ME: \"23\",\n      MD: \"24\",\n      MA: \"25\",\n      MI: \"26\",\n      MN: \"27\",\n      MS: \"28\",\n      MO: \"29\",\n      MT: \"30\",\n      NE: \"31\",\n      NV: \"32\",\n      NH: \"33\",\n      NJ: \"34\",\n      NM: \"35\",\n      NY: \"36\",\n      NC: \"37\",\n      ND: \"38\",\n      OH: \"39\",\n      OK: \"40\",\n      OR: \"41\",\n      PA: \"42\",\n      RI: \"44\",\n      SC: \"45\",\n      SD: \"46\",\n      TN: \"47\",\n      TX: \"48\",\n      UT: \"49\",\n      VT: \"50\",\n      VA: \"51\",\n      WA: \"53\",\n      WV: \"54\",\n      WI: \"55\",\n      WY: \"56\",\n    };\n    return stateCodes[stateAbbr.toUpperCase()] || \"06\";\n  }\n\n  private calculateOptimalRadius(densityScore: number): number {\n    if (densityScore > 60) return 5;\n    if (densityScore > 30) return 10;\n    if (densityScore > 10) return 20;\n    return 35;\n  }\n}\n\nasync function fetchCensusIntelligence(\n  businessType: string,\n  location: string\n): Promise<CensusIntelligence | null> {\n  const censusKey = Deno.env.get(\"CENSUS_API_KEY\");\n  if (!censusKey) return null;\n\n  try {\n    const client = new CensusAPIClient(censusKey);\n    return await client.getBusinessDensity(businessType, location);\n  } catch (error) {\n    console.warn(\"Census intelligence unavailable:\", error);\n    return null;\n  }\n}\n\n// --------------------\n// Discovery Providers\n// --------------------\n\nasync function searchGooglePlaces(\n  businessType: string,\n  location: string,\n  keywords: string[],\n  maxResults: number\n): Promise<DiscoveredBusiness[]> {\n  const apiKey = Deno.env.get(\"GOOGLE_PLACES_API_KEY\");\n  if (!apiKey) throw new Error(\"Google Places API key not configured\");\n\n  const keywordSuffix = keywords.length > 0 ? ` ${keywords.join(\" \")}` : \"\";\n  const query = `${businessType}${keywordSuffix} in ${location}`;\n  const searchUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(\n    query\n  )}&key=${apiKey}`;\n\n  const response = await fetch(searchUrl);\n  const data = await response.json();\n\n  if (data.status !== \"OK\") {\n    throw new Error(`Google Places API failed: ${data.status}`);\n  }\n\n  const results = (data.results as BusinessData[]).slice(0, maxResults * 2);\n  const enriched: DiscoveredBusiness[] = [];\n\n  for (const business of results) {\n    if (!business.place_id) {\n      enriched.push({ ...business, source: \"google_places\" });\n      continue;\n    }\n\n    const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${business.place_id}&fields=formatted_phone_number,website&key=${apiKey}`;\n    const detailsResponse = await fetch(detailsUrl);\n    const detailsData = await detailsResponse.json();\n\n    enriched.push({\n      ...business,\n      formatted_phone_number:\n        detailsData.result?.formatted_phone_number ??\n        business.formatted_phone_number ??\n        \"\",\n      website: detailsData.result?.website ?? business.website ?? \"\",\n      source: detailsData.result ? \"google_place_details\" : \"google_places\",\n      data_enriched: Boolean(detailsData.result),\n    });\n\n    // Basic rate limiting to stay under quota\n    await new Promise((resolve) => setTimeout(resolve, 80));\n  }\n\n  return enriched;\n}\n\nasync function searchFoursquare(\n  businessType: string,\n  location: string,\n  keywords: string[],\n  maxResults: number\n): Promise<DiscoveredBusiness[]> {\n  const apiKey = Deno.env.get(\"FOURSQUARE_API_KEY\");\n  if (!apiKey) {\n    return [];\n  }\n\n  const params = new URLSearchParams({\n    query: [businessType, ...keywords].join(\" \").trim() || businessType,\n    near: location,\n    limit: Math.min(Math.max(maxResults, 5), 30).toString(),\n    fields: \"fsq_id,name,location,contact,website,categories,rating,stats\",\n  });\n\n  try {\n    const response = await fetch(\n      `https://api.foursquare.com/v3/places/search?${params}`,\n      {\n        headers: {\n          Authorization: apiKey,\n          Accept: \"application/json\",\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Foursquare API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    if (!Array.isArray(data.results)) return [];\n\n    return (data.results as FoursquarePlace[]).map((place) => ({\n      source: \"foursquare\" as DataSource,\n      place_id: place.fsq_id,\n      name: place.name,\n      formatted_address: formatFoursquareAddress(place.location),\n      formatted_phone_number: place.contact?.phone ?? \"\",\n      website: place.website ?? \"\",\n      rating: place.rating ?? 0,\n      user_ratings_total: place.stats?.total_tips ?? 0,\n      foursquare_data: place as unknown as Record<string, unknown>,\n    }));\n  } catch (error) {\n    console.warn(\"Foursquare discovery failed:\", error);\n    return [];\n  }\n}\n\nfunction formatFoursquareAddress(\n  location: {\n    address?: string;\n    locality?: string;\n    admin_district?: string;\n    postcode?: string;\n    country?: string;\n  } = {}\n): string {\n  const parts = [\n    location.address,\n    location.locality,\n    location.admin_district,\n    location.postcode,\n    location.country,\n  ]\n    .map((value) => value?.trim())\n    .filter(Boolean);\n  return parts.join(\", \");\n}\n\nfunction dedupeBusinesses(\n  businesses: DiscoveredBusiness[]\n): DiscoveredBusiness[] {\n  const map = new Map<string, DiscoveredBusiness>();\n  for (const business of businesses) {\n    const key = `${(\n      business.name ||\n      business.businessName ||\n      \"\"\n    ).toLowerCase()}_${(\n      business.formatted_address ||\n      business.address ||\n      \"\"\n    ).toLowerCase()}`;\n    if (!map.has(key)) {\n      map.set(key, business);\n    } else {\n      const existing = map.get(key)!;\n      if (\n        existing.source === \"google_places\" &&\n        business.source === \"google_place_details\"\n      ) {\n        map.set(key, business);\n      }\n    }\n  }\n  return Array.from(map.values());\n}\n\n// --------------------\n// Quality Scorer\n// --------------------\n\nclass QualityScorer {\n  private maxCostPerBusiness: number;\n  private tierName: string;\n  private censusMultiplier: number;\n\n  constructor(options: {\n    maxCostPerBusiness: number;\n    tierName: string;\n    censusMultiplier?: number;\n  }) {\n    this.maxCostPerBusiness = options.maxCostPerBusiness;\n    this.tierName = options.tierName;\n    this.censusMultiplier = options.censusMultiplier ?? 1;\n  }\n\n  scoreBusiness(business: DiscoveredBusiness): ScoredLead {\n    const businessName = business.name || business.businessName || \"\";\n    const address = business.formatted_address || business.address || \"\";\n    const phone = business.formatted_phone_number || business.phone || \"\";\n    const website = business.website || \"\";\n\n    const scores = {\n      businessName: businessName ? Math.min(100, businessName.length * 3) : 0,\n      address: address ? 100 : 0,\n      phone: phone ? 85 : 0,\n      website: website ? 80 : 0,\n      rating: business.rating ? Math.min(20, business.rating * 4) : 0,\n    };\n\n    let totalScore =\n      Object.values(scores).reduce((sum, score) => sum + score, 0) /\n      Object.values(scores).length;\n\n    if (business.source === \"foursquare\") {\n      totalScore += 8;\n    } else if (business.source === \"google_place_details\") {\n      totalScore += 5;\n    }\n\n    totalScore = Math.min(100, Math.round(totalScore * this.censusMultiplier));\n\n    const initialSources = new Set<string>();\n    initialSources.add(business.source);\n    if (business.data_enriched) {\n      initialSources.add(\"google_places_details_api\");\n    }\n\n    return {\n      businessName,\n      address,\n      phone,\n      website,\n      email: \"\",\n      optimizedScore: totalScore,\n      validationCost: 0.02,\n      dataSources: Array.from(initialSources),\n      enhancementData: {\n        verificationSources: Array.from(initialSources),\n        processingMetadata: {\n          totalCost: 0.02,\n          validationCost: 0.02,\n          enrichmentCost: 0,\n          totalConfidenceBoost: 0,\n          processingStrategy: \"basic\",\n          servicesUsed: Array.from(initialSources),\n          servicesSkipped: [],\n          enrichmentTier: this.tierName,\n          emailStatus: \"not_found\",\n        },\n      },\n    };\n  }\n}\n\n// --------------------\n// Enrichment Pipeline\n// --------------------\n\nasync function enrichLead(\n  lead: ScoredLead,\n  config: JobConfig\n): Promise<{ lead: ScoredLead; cost: number; enrichmentCost: number }> {\n  const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n  const serviceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n  if (!supabaseUrl || !serviceKey) {\n    return { lead, cost: lead.validationCost, enrichmentCost: 0 };\n  }\n\n  const url = `${supabaseUrl}/functions/v1/enrichment-orchestrator`;\n  const domain = lead.website\n    ? lead.website.replace(/^https?:\\/\\//, \"\").replace(/\\/.*$/, \"\")\n    : undefined;\n\n  const maxCostPerBusiness = Math.max(\n    config.tier.maxCostPerLead,\n    config.budgetLimit / Math.max(config.maxResults, 1)\n  );\n\n  const body = {\n    businessName: lead.businessName,\n    domain,\n    address: lead.address,\n    phone: lead.phone,\n    website: lead.website,\n    discoverEmails: true,\n    verifyEmails: config.tier.includes.verifyEmails,\n    includePersonEnrichment: config.tier.includes.personEnrichment,\n    apolloEnrichment:\n      config.tier.includes.apolloEnrichment || config.options.apolloDiscovery,\n    includeBusinessLicense: true,\n    includeCompanyEnrichment: true,\n    maxCostPerBusiness,\n    minConfidenceScore: config.minConfidenceScore,\n    tier: config.tier.orchestratorTier,\n  };\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${serviceKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  if (!response.ok) {\n    return { lead, cost: lead.validationCost, enrichmentCost: 0 };\n  }\n\n  const enrichmentData = await response.json();\n  type EnrichedEmail = {\n    email: string;\n    verified?: boolean;\n    [key: string]: unknown;\n  };\n\n  const emails = (enrichmentData.enrichedData?.emails ?? []) as EnrichedEmail[];\n\n  const normalizeDomain = (value?: string) =>\n    value ? value.toLowerCase().replace(/^www\\./, \"\") : \"\";\n\n  const normalizedDomain = normalizeDomain(domain);\n\n  const emailMatchesCorporateDomain = (emailAddress?: string) => {\n    if (!emailAddress || !normalizedDomain) return false;\n    const parts = emailAddress.split(\"@\");\n    if (parts.length !== 2) return false;\n    const emailDomain = normalizeDomain(parts[1]);\n    if (!emailDomain) return false;\n    return (\n      emailDomain === normalizedDomain ||\n      emailDomain.endsWith(`.${normalizedDomain}`)\n    );\n  };\n\n  const corporateEmails = normalizedDomain\n    ? emails.filter((entry: EnrichedEmail) =>\n        emailMatchesCorporateDomain(entry.email)\n      )\n    : emails;\n\n  const verifiedCorporate = corporateEmails.find(\n    (entry: EnrichedEmail) => entry.verified\n  );\n\n  let verifiedEmailEntry = verifiedCorporate;\n  if (!verifiedEmailEntry && !normalizedDomain) {\n    verifiedEmailEntry = emails.find((entry: EnrichedEmail) => entry.verified);\n  }\n\n  const unverifiedCorporate = corporateEmails.find(\n    (entry: EnrichedEmail) => entry.email && !entry.verified\n  );\n\n  const fallbackCandidate =\n    unverifiedCorporate ||\n    corporateEmails[0] ||\n    emails.find((entry: EnrichedEmail) => entry.email && !entry.verified) ||\n    emails[0];\n\n  let emailStatus: \"verified\" | \"unconfirmed\" | \"not_found\" = \"not_found\";\n  let verifiedEmailValue = \"\";\n  let unverifiedEmailValue = \"\";\n\n  if (verifiedEmailEntry?.email) {\n    emailStatus = \"verified\";\n    verifiedEmailValue = verifiedEmailEntry.email;\n  } else if (fallbackCandidate?.email) {\n    emailStatus = \"unconfirmed\";\n    unverifiedEmailValue = fallbackCandidate.email;\n  }\n\n  const servicesUsed = new Set<string>(\n    lead.enhancementData.verificationSources\n  );\n  (enrichmentData.processingMetadata?.servicesUsed ?? []).forEach(\n    (service: string) => servicesUsed.add(service)\n  );\n\n  const enrichmentCost = Number(enrichmentData.totalCost ?? 0);\n  const totalCost = lead.validationCost + enrichmentCost;\n\n  const updatedLead: ScoredLead = {\n    ...lead,\n    email: verifiedEmailValue || \"\",\n    enhancementData: {\n      ...lead.enhancementData,\n      verificationSources: Array.from(servicesUsed),\n      emails,\n      processingMetadata: {\n        ...lead.enhancementData.processingMetadata,\n        totalCost,\n        validationCost: lead.validationCost,\n        enrichmentCost,\n        servicesUsed: Array.from(servicesUsed),\n        servicesSkipped:\n          enrichmentData.processingMetadata?.servicesSkipped ?? [],\n        enrichmentTier: config.tier.name,\n        enrichmentCostBreakdown: enrichmentData.costBreakdown ?? undefined,\n        emailStatus,\n        verifiedEmail: verifiedEmailValue || undefined,\n        unverifiedEmail: unverifiedEmailValue || undefined,\n      },\n    },\n  };\n\n  return {\n    lead: updatedLead,\n    cost: totalCost,\n    enrichmentCost,\n  };\n}\n\n// --------------------\n// Discovery Workflow\n// --------------------\n\nasync function discoverBusinesses(\n  config: JobConfig,\n  census: CensusIntelligence | null\n): Promise<DiscoveredBusiness[]> {\n  const googleResults = await searchGooglePlaces(\n    config.businessType,\n    config.location,\n    config.keywords,\n    config.maxResults\n  );\n\n  const results: DiscoveredBusiness[] = [...googleResults];\n\n  const shouldQueryFoursquare =\n    googleResults.length < config.maxResults * 1.2 || config.expandGeography;\n  if (shouldQueryFoursquare) {\n    const foursquareResults = await searchFoursquare(\n      config.businessType,\n      config.location,\n      config.keywords,\n      Math.max(\n        config.maxResults - googleResults.length,\n        Math.ceil(config.maxResults / 2)\n      )\n    );\n    results.push(...foursquareResults);\n  }\n\n  const deduped = dedupeBusinesses(results);\n\n  if (\n    census &&\n    census.optimization.expected_results > deduped.length &&\n    config.expandGeography\n  ) {\n    const expandedResults = await searchFoursquare(\n      config.businessType,\n      census.geographic_data.raw_location,\n      config.keywords,\n      Math.min(census.optimization.expected_results, config.maxResults * 2)\n    );\n    deduped.push(...expandedResults);\n  }\n\n  return dedupeBusinesses(deduped).slice(0, config.maxResults * 2);\n}\n\nasync function processDiscoveryJob(\n  jobId: string,\n  config: JobConfig,\n  supabaseUrl: string,\n  supabaseServiceKey: string\n) {\n  console.log(`🚀 Background job ${jobId} started`);\n\n  const supabase = createClient(supabaseUrl, supabaseServiceKey);\n\n  try {\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        status: \"processing\",\n        started_at: new Date().toISOString(),\n        current_stage: \"discovering_businesses\",\n        progress: 10,\n      })\n      .eq(\"id\", jobId);\n\n    const censusIntelligence = await fetchCensusIntelligence(\n      config.businessType,\n      config.location\n    );\n\n    const discoveredBusinesses = await discoverBusinesses(\n      config,\n      censusIntelligence\n    );\n    const sourcesUsed = Array.from(\n      new Set(discoveredBusinesses.map((business) => business.source))\n    );\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        current_stage: \"scoring_businesses\",\n        progress: 30,\n        metrics: {\n          businesses_found: discoveredBusinesses.length,\n          sources_used: sourcesUsed,\n          census_density_score: censusIntelligence?.density_score ?? null,\n        },\n      })\n      .eq(\"id\", jobId);\n\n    const scorer = new QualityScorer({\n      maxCostPerBusiness: config.budgetLimit / Math.max(config.maxResults, 1),\n      tierName: config.tier.name,\n      censusMultiplier: censusIntelligence?.optimization.confidence_multiplier,\n    });\n\n    const scoredBusinesses = discoveredBusinesses.map((business) =>\n      scorer.scoreBusiness(business)\n    );\n\n    const qualifiedLeads = scoredBusinesses\n      .filter((lead) => lead.optimizedScore >= config.minConfidenceScore)\n      .slice(0, config.maxResults);\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        current_stage: \"enriching_contacts\",\n        progress: 50,\n        metrics: {\n          businesses_found: discoveredBusinesses.length,\n          qualified_leads: qualifiedLeads.length,\n          sources_used: sourcesUsed,\n          census_density_score: censusIntelligence?.density_score ?? null,\n        },\n      })\n      .eq(\"id\", jobId);\n\n    const enrichedLeads: ScoredLead[] = [];\n    let totalCost = 0;\n    let totalValidationCost = 0;\n    let totalEnrichmentCost = 0;\n\n    for (let index = 0; index < qualifiedLeads.length; index += 1) {\n      const lead = qualifiedLeads[index];\n      try {\n        const enrichmentResult = await enrichLead(lead, config);\n        enrichedLeads.push(enrichmentResult.lead);\n        totalCost += enrichmentResult.cost;\n        totalValidationCost +=\n          enrichmentResult.lead.enhancementData.processingMetadata\n            .validationCost;\n        totalEnrichmentCost += enrichmentResult.enrichmentCost;\n      } catch (error) {\n        console.error(`❌ Enrichment error for ${lead.businessName}:`, error);\n        enrichedLeads.push(lead);\n        totalCost += lead.validationCost;\n        totalValidationCost += lead.validationCost;\n      }\n\n      const progress =\n        50 +\n        Math.floor(((index + 1) / Math.max(qualifiedLeads.length, 1)) * 35);\n      await supabase\n        .from(\"discovery_jobs\")\n        .update({\n          progress,\n          metrics: {\n            businesses_found: discoveredBusinesses.length,\n            qualified_leads: qualifiedLeads.length,\n            leads_enriched: index + 1,\n            total_cost: Number(totalCost.toFixed(3)),\n            validation_cost_total: Number(totalValidationCost.toFixed(3)),\n            enrichment_cost_total: Number(totalEnrichmentCost.toFixed(3)),\n            sources_used: sourcesUsed,\n            census_density_score: censusIntelligence?.density_score ?? null,\n          },\n        })\n        .eq(\"id\", jobId);\n    }\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        current_stage: \"storing_results\",\n        progress: 90,\n      })\n      .eq(\"id\", jobId);\n\n    const campaignInsert = await supabase\n      .from(\"campaigns\")\n      .insert({\n        id: config.campaignId,\n        business_type: config.businessType,\n        location: config.location,\n        target_count: config.maxResults,\n        results_count: enrichedLeads.length,\n        total_cost: Number(totalCost.toFixed(3)),\n        status: \"completed\",\n        user_id: config.userId,\n        session_user_id: config.sessionUserId,\n        processing_time_ms: null,\n      })\n      .select(\"id\")\n      .single();\n\n    if (campaignInsert.error) {\n      console.warn(\"Campaign insert warning:\", campaignInsert.error.message);\n    }\n\n    const leadsPayload = enrichedLeads.map((lead) => ({\n      campaign_id: config.campaignId,\n      business_name: lead.businessName,\n      address: lead.address,\n      phone: lead.phone,\n      website: lead.website,\n      email: lead.email,\n      confidence_score: lead.optimizedScore,\n      enrichment_data: {\n        verificationSources: lead.enhancementData.verificationSources,\n        emails: lead.enhancementData.emails,\n        processingMetadata: lead.enhancementData.processingMetadata,\n        dataSources: lead.dataSources,\n      },\n      validation_cost: lead.enhancementData.processingMetadata.validationCost,\n      user_id: config.userId,\n      session_user_id: config.sessionUserId,\n    }));\n\n    if (leadsPayload.length > 0) {\n      const leadInsert = await supabase.from(\"leads\").insert(leadsPayload);\n      if (leadInsert.error) {\n        console.error(\"Lead insert error:\", leadInsert.error.message);\n      }\n    }\n\n    const averageConfidence = enrichedLeads.length\n      ? enrichedLeads.reduce((sum, lead) => sum + lead.optimizedScore, 0) /\n        enrichedLeads.length\n      : 0;\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        status: \"completed\",\n        progress: 100,\n        completed_at: new Date().toISOString(),\n        results: enrichedLeads,\n        metrics: {\n          total_found: enrichedLeads.length,\n          qualified_leads: qualifiedLeads.length,\n          total_cost: Number(totalCost.toFixed(3)),\n          validation_cost_total: Number(totalValidationCost.toFixed(3)),\n          enrichment_cost_total: Number(totalEnrichmentCost.toFixed(3)),\n          avg_confidence: Number(averageConfidence.toFixed(1)),\n          tier_key: config.tier.key,\n          tier_name: config.tier.name,\n          tier_price: config.tier.pricePerLead,\n          sources_used: sourcesUsed,\n          census_density_score: censusIntelligence?.density_score ?? null,\n        },\n      })\n      .eq(\"id\", jobId);\n\n    console.log(\n      `✅ Background job ${jobId} completed: ${\n        enrichedLeads.length\n      } leads, $${totalCost.toFixed(3)}`\n    );\n  } catch (error) {\n    console.error(`❌ Background job ${jobId} failed:`, error);\n\n    await supabase\n      .from(\"discovery_jobs\")\n      .update({\n        status: \"failed\",\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        completed_at: new Date().toISOString(),\n      })\n      .eq(\"id\", jobId);\n  }\n}\n\n// --------------------\n// MAIN HANDLER\n// --------------------\n\nserve(async (req) => {\n  const corsResponse = handleCORS(req);\n  if (corsResponse) return corsResponse;\n\n  try {\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\")!;\n    const supabaseAnonKey = Deno.env.get(\"SUPABASE_ANON_KEY\")!;\n    const supabaseServiceKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\")!;\n\n    const authHeader = req.headers.get(\"Authorization\");\n    const globalHeaders: Record<string, string> = authHeader\n      ? { Authorization: authHeader }\n      : {};\n    const supabaseClient = createClient(supabaseUrl, supabaseAnonKey, {\n      global: { headers: globalHeaders },\n    });\n\n    const {\n      data: { user },\n    } = await supabaseClient.auth.getUser();\n\n    const requestData: BusinessDiscoveryRequest = await req.json();\n    const {\n      businessType,\n      location,\n      keywords,\n      searchRadius,\n      expandGeography = false,\n      maxResults = 5,\n      budgetLimit,\n      minConfidenceScore = 50,\n      sessionUserId,\n      tierKey,\n      tierName,\n      options = {},\n    } = requestData;\n\n    const tierSettings = getTierSettings(tierKey, tierName);\n    const enforcedBudget =\n      budgetLimit ?? maxResults * tierSettings.pricePerLead;\n    const keywordList = parseKeywords(keywords);\n\n    const jobId = `job_${Date.now()}_${Math.random()\n      .toString(36)\n      .slice(2, 11)}`;\n    const campaignId = `campaign_${Date.now()}_${Math.random()\n      .toString(36)\n      .slice(2, 11)}`;\n\n    const jobConfig: JobConfig = {\n      campaignId,\n      businessType,\n      location,\n      keywords: keywordList,\n      searchRadius,\n      expandGeography,\n      maxResults,\n      budgetLimit: enforcedBudget,\n      minConfidenceScore,\n      userId: user?.id,\n      sessionUserId: sessionUserId || user?.id,\n      tier: tierSettings,\n      options: {\n        ...DEFAULT_OPTIONS,\n        ...options,\n      },\n    };\n\n    const { error: jobError } = await supabaseClient\n      .from(\"discovery_jobs\")\n      .insert({\n        id: jobId,\n        campaign_id: campaignId,\n        user_id: user?.id,\n        session_user_id: sessionUserId || user?.id,\n        status: \"pending\",\n        config: {\n          ...jobConfig,\n          tier: {\n            key: tierSettings.key,\n            name: tierSettings.name,\n            pricePerLead: tierSettings.pricePerLead,\n          },\n        },\n      });\n\n    if (jobError) {\n      throw new Error(`Failed to create job: ${jobError.message}`);\n    }\n\n    EdgeRuntime.waitUntil(\n      processDiscoveryJob(jobId, jobConfig, supabaseUrl, supabaseServiceKey)\n    );\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        message: \"Discovery job created and processing in background\",\n        jobId,\n        campaignId,\n        status: \"processing\",\n        estimatedTime: \"1-2 minutes\",\n        realtimeChannel: `discovery_jobs:id=eq.${jobId}`,\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"❌ Error:\", error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":20,"duration":7.18},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":30,"duration":0.196},
{"type":"mark","name":"lsp.diagnostic"},
TS server started.
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.code_action","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.$getSupportedCodeFixes"},
{"type":"mark","name":"lsp.document_symbol","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":1,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"measure","name":"lsp.diagnostic","count":135,"duration":334.197},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":1,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",31]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":1,"duration":0.243},
{"type":"mark","name":"tsc.op.op_load","count":1,"args":"file:///workspaces/ProspectPro/IMPLEMENTATION_PLAN_PHASE1_COMPLETE.md"},
{"type":"measure","name":"tsc.op.op_load","count":1,"duration":0.051},
{"type":"mark","name":"tsc.op.op_load","count":2,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"tsc.op.op_load","count":2,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":3,"args":"file:///workspaces/ProspectPro/index.html"},
{"type":"measure","name":"tsc.op.op_load","count":3,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":4,"args":"file:///workspaces/ProspectPro/public/index-user-aware.html"},
{"type":"measure","name":"tsc.op.op_load","count":4,"duration":0.553},
{"type":"mark","name":"tsc.op.op_load","count":5,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":5,"duration":0.069},
{"type":"mark","name":"tsc.op.op_resolve","count":1,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1,"duration":0.07},
{"type":"mark","name":"tsc.op.op_load","count":6,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":6,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":2,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":2,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":7,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":7,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":3,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":3,"duration":0.063},
{"type":"mark","name":"tsc.op.op_load","count":8,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":8,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":4,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":4,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":9,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":9,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":5,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":5,"duration":0.048},
{"type":"mark","name":"tsc.op.op_load","count":10,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":10,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":6,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":6,"duration":0.101},
{"type":"mark","name":"tsc.op.op_load","count":11,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts"},
{"type":"measure","name":"tsc.op.op_load","count":11,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":7,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":7,"duration":46.452},
{"type":"mark","name":"tsc.op.op_load","count":12,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":12,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":8,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":8,"duration":14.947},
{"type":"mark","name":"tsc.op.op_load","count":13,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":13,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":9,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":9,"duration":1.189},
{"type":"mark","name":"tsc.op.op_load","count":14,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":14,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":10,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":10,"duration":3.57},
{"type":"mark","name":"tsc.op.op_load","count":15,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":15,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":11,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":11,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":16,"args":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":16,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":17,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":17,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":12,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":12,"duration":5.616},
{"type":"mark","name":"tsc.op.op_load","count":18,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":18,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":13,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":13,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":19,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":19,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":14,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":14,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":20,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":20,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":15,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":15,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":21,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":21,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":16,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":16,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":22,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":22,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":17,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":17,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":23,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":23,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":18,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":18,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":24,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":24,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":25,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":25,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":19,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":19,"duration":7.971},
{"type":"mark","name":"tsc.op.op_load","count":26,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":26,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":20,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":20,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":27,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":27,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":21,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":21,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":28,"args":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":28,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":22,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":22,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":29,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":29,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":23,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":23,"duration":3.04},
{"type":"mark","name":"tsc.op.op_load","count":30,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":30,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":24,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":24,"duration":1.999},
{"type":"mark","name":"tsc.op.op_load","count":31,"args":"https://esm.sh/@types/ws@8.5.13/index.d.mts"},
{"type":"measure","name":"tsc.op.op_load","count":31,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":25,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":25,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":32,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":32,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":33,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":33,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":34,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":34,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":35,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":35,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":26,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":26,"duration":0.613},
{"type":"mark","name":"tsc.op.op_load","count":36,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":36,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":27,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":27,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":37,"args":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":37,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":28,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":28,"duration":4.466},
{"type":"mark","name":"tsc.op.op_load","count":38,"args":"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":38,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":39,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":39,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":29,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":29,"duration":4.364},
{"type":"mark","name":"tsc.op.op_load","count":40,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":40,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":30,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":30,"duration":2.201},
{"type":"mark","name":"tsc.op.op_load","count":41,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":41,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":31,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":31,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":42,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":42,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":43,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":43,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":32,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":32,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":44,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":44,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":45,"args":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":45,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":33,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":33,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":46,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":46,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":34,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":34,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":47,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":47,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":35,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":35,"duration":6.649},
{"type":"mark","name":"tsc.op.op_load","count":48,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":48,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":36,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":36,"duration":0.351},
{"type":"mark","name":"tsc.op.op_load","count":49,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":49,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":37,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":37,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":50,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":50,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":38,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":38,"duration":2.476},
{"type":"mark","name":"tsc.op.op_load","count":51,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":51,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":39,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":39,"duration":1.788},
{"type":"mark","name":"tsc.op.op_load","count":52,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":52,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":53,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":53,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":40,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":40,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":54,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":54,"duration":0.066},
{"type":"mark","name":"tsc.op.op_resolve","count":41,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":41,"duration":1.316},
{"type":"mark","name":"tsc.op.op_load","count":55,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":55,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":42,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":42,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":56,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":56,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":43,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":43,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":57,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":57,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":44,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":44,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":58,"args":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":58,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":59,"args":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":59,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":45,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":45,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":60,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts"},
{"type":"measure","name":"tsc.op.op_load","count":60,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":46,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":46,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":61,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":61,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":47,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":47,"duration":3.068},
{"type":"mark","name":"tsc.op.op_load","count":62,"args":"https://deno.land/std@0.168.0/http/server.ts"},
{"type":"measure","name":"tsc.op.op_load","count":62,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":48,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":48,"duration":0.451},
{"type":"mark","name":"tsc.op.op_load","count":63,"args":"https://deno.land/std@0.168.0/async/mod.ts"},
{"type":"measure","name":"tsc.op.op_load","count":63,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":49,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":49,"duration":5.16},
{"type":"mark","name":"tsc.op.op_load","count":64,"args":"https://deno.land/std@0.168.0/async/abortable.ts"},
{"type":"measure","name":"tsc.op.op_load","count":64,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":50,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":50,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":65,"args":"https://deno.land/std@0.168.0/async/deferred.ts"},
{"type":"measure","name":"tsc.op.op_load","count":65,"duration":0.011},
{"type":"mark","name":"tsc.op.op_load","count":66,"args":"https://deno.land/std@0.168.0/async/deadline.ts"},
{"type":"measure","name":"tsc.op.op_load","count":66,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":51,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":51,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":67,"args":"https://deno.land/std@0.168.0/async/debounce.ts"},
{"type":"measure","name":"tsc.op.op_load","count":67,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":68,"args":"https://deno.land/std@0.168.0/async/delay.ts"},
{"type":"measure","name":"tsc.op.op_load","count":68,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":69,"args":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts"},
{"type":"measure","name":"tsc.op.op_load","count":69,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":52,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":52,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":70,"args":"https://deno.land/std@0.168.0/async/pool.ts"},
{"type":"measure","name":"tsc.op.op_load","count":70,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":71,"args":"https://deno.land/std@0.168.0/async/tee.ts"},
{"type":"measure","name":"tsc.op.op_load","count":71,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":72,"args":"https://deno.land/std@0.168.0/async/retry.ts"},
{"type":"measure","name":"tsc.op.op_load","count":72,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":73,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":73,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":53,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":53,"duration":4.493},
{"type":"mark","name":"tsc.op.op_load","count":74,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":74,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":54,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":54,"duration":0.551},
{"type":"mark","name":"tsc.op.op_load","count":75,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":75,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":55,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":55,"duration":0.612},
{"type":"mark","name":"tsc.op.op_load","count":76,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":76,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":56,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":56,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":77,"args":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":77,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":78,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":78,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":57,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":57,"duration":5.236},
{"type":"mark","name":"tsc.op.op_load","count":79,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":79,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":58,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":58,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":80,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":80,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":59,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":59,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":81,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":81,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":60,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":60,"duration":1.897},
{"type":"mark","name":"tsc.op.op_load","count":82,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":82,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":61,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":61,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":83,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":83,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":62,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":62,"duration":0.525},
{"type":"mark","name":"tsc.op.op_load","count":84,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":84,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":63,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":63,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":85,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestError.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":85,"duration":0.012},
{"type":"mark","name":"tsc.op.op_load","count":86,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":86,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":64,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":64,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":87,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":87,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":65,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":65,"duration":2.418},
{"type":"mark","name":"tsc.op.op_load","count":88,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":88,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":66,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":66,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":89,"args":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":89,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":67,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":67,"duration":0.04},
{"type":"mark","name":"tsc.op.op_load","count":90,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":90,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":68,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":68,"duration":6.753},
{"type":"mark","name":"tsc.op.op_load","count":91,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":91,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":69,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":69,"duration":4.935},
{"type":"mark","name":"tsc.op.op_load","count":92,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/websocket-factory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":92,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":93,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/constants.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":93,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":94,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/serializer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":94,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":95,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/timer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":95,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":96,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":96,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":70,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":70,"duration":0.714},
{"type":"mark","name":"tsc.op.op_load","count":97,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":97,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":71,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":71,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":98,"args":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":98,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":72,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":72,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":99,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":99,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":73,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":73,"duration":1.417},
{"type":"mark","name":"tsc.op.op_load","count":100,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":100,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":74,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":74,"duration":2.451},
{"type":"mark","name":"tsc.op.op_load","count":101,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":101,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":75,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":75,"duration":0.387},
{"type":"mark","name":"tsc.op.op_load","count":102,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":102,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":103,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":103,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":76,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":76,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":104,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":104,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":77,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":77,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":105,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":105,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":78,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":78,"duration":0.392},
{"type":"mark","name":"tsc.op.op_load","count":106,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":106,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":79,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":79,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":107,"args":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":107,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":80,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":80,"duration":0.025},
{"type":"mark","name":"tsc.op.op_load","count":108,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":108,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":81,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":81,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":109,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":109,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":82,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":82,"duration":4.709},
{"type":"mark","name":"tsc.op.op_load","count":110,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":110,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":83,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":83,"duration":0.378},
{"type":"mark","name":"tsc.op.op_load","count":111,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":111,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":84,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":84,"duration":0.015},
{"type":"mark","name":"tsc.op.op_load","count":112,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":112,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":85,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":85,"duration":0.879},
{"type":"mark","name":"tsc.op.op_load","count":113,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/ethereum.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":113,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":114,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":114,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":86,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":86,"duration":0.348},
{"type":"mark","name":"tsc.op.op_load","count":115,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/error-codes.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":115,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":116,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/web3/solana.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":116,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":117,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":117,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":87,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":87,"duration":0.785},
{"type":"mark","name":"tsc.op.op_load","count":118,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":118,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":88,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":88,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":119,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":119,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":89,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":89,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":120,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":120,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":90,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":90,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":121,"args":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/locks.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":121,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":122,"args":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":122,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":91,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":91,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":123,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":123,"duration":0.107},
{"type":"mark","name":"tsc.op.op_resolve","count":92,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":92,"duration":0.072},
{"type":"mark","name":"tsc.op.op_load","count":124,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":124,"duration":0.114},
{"type":"mark","name":"tsc.op.op_resolve","count":93,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":93,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":125,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":125,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":94,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":94,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":126,"args":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":126,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":95,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":95,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":127,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":127,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":96,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":96,"duration":4.699},
{"type":"mark","name":"tsc.op.op_load","count":128,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":128,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":97,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":97,"duration":2.712},
{"type":"mark","name":"tsc.op.op_load","count":129,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":129,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":98,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":98,"duration":0.656},
{"type":"mark","name":"tsc.op.op_load","count":130,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":130,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":99,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":99,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":131,"args":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":131,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":100,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":100,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":132,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":132,"duration":0.08},
{"type":"mark","name":"tsc.op.op_resolve","count":101,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":101,"duration":0.053},
{"type":"mark","name":"tsc.op.op_load","count":133,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":133,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":102,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":102,"duration":0.028},
{"type":"mark","name":"tsc.op.op_load","count":134,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":134,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":103,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":103,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":135,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":135,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":104,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":104,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":136,"args":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":136,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":105,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":105,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":137,"args":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":137,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":106,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":106,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":138,"args":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":138,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":107,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":107,"duration":0.035},
{"type":"mark","name":"tsc.op.op_load","count":139,"args":"asset:///lib.deno.window.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":139,"duration":1.615},
{"type":"mark","name":"tsc.op.op_load","count":140,"args":"asset:///lib.deno.ns.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":140,"duration":8.099},
{"type":"mark","name":"tsc.op.op_load","count":141,"args":"asset:///lib.esnext.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":141,"duration":0.14},
{"type":"mark","name":"tsc.op.op_load","count":142,"args":"asset:///lib.es2024.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":142,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":143,"args":"asset:///lib.es2023.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":143,"duration":0.06},
{"type":"mark","name":"tsc.op.op_load","count":144,"args":"asset:///lib.es2022.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":144,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":145,"args":"asset:///lib.es2021.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":145,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":146,"args":"asset:///lib.es2020.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":146,"duration":0.065},
{"type":"mark","name":"tsc.op.op_load","count":147,"args":"asset:///lib.es2019.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":147,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":148,"args":"asset:///lib.es2018.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":148,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":149,"args":"asset:///lib.es2017.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":149,"duration":0.063},
{"type":"mark","name":"tsc.op.op_load","count":150,"args":"asset:///lib.es2016.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":150,"duration":0.049},
{"type":"mark","name":"tsc.op.op_load","count":151,"args":"asset:///lib.es2015.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":151,"duration":0.062},
{"type":"mark","name":"tsc.op.op_load","count":152,"args":"asset:///lib.es5.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":152,"duration":11.293},
{"type":"mark","name":"tsc.op.op_load","count":153,"args":"asset:///lib.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":153,"duration":0.81},
{"type":"mark","name":"tsc.op.op_load","count":154,"args":"asset:///lib.decorators.legacy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":154,"duration":0.21},
{"type":"mark","name":"tsc.op.op_load","count":155,"args":"asset:///lib.es2015.core.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":155,"duration":1.27},
{"type":"mark","name":"tsc.op.op_load","count":156,"args":"asset:///lib.es2015.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":156,"duration":0.607},
{"type":"mark","name":"tsc.op.op_load","count":157,"args":"asset:///lib.es2015.iterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":157,"duration":1.888},
{"type":"mark","name":"tsc.op.op_load","count":158,"args":"asset:///lib.es2015.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":158,"duration":0.101},
{"type":"mark","name":"tsc.op.op_load","count":159,"args":"asset:///lib.es2015.generator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":159,"duration":0.176},
{"type":"mark","name":"tsc.op.op_load","count":160,"args":"asset:///lib.es2015.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":160,"duration":0.161},
{"type":"mark","name":"tsc.op.op_load","count":161,"args":"asset:///lib.es2015.proxy.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":161,"duration":0.281},
{"type":"mark","name":"tsc.op.op_load","count":162,"args":"asset:///lib.es2015.reflect.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":162,"duration":0.274},
{"type":"mark","name":"tsc.op.op_load","count":163,"args":"asset:///lib.es2015.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":163,"duration":0.482},
{"type":"mark","name":"tsc.op.op_load","count":164,"args":"asset:///lib.es2016.array.include.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":164,"duration":0.265},
{"type":"mark","name":"tsc.op.op_load","count":165,"args":"asset:///lib.es2016.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":165,"duration":0.108},
{"type":"mark","name":"tsc.op.op_load","count":166,"args":"asset:///lib.es2017.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":166,"duration":0.063},
{"type":"mark","name":"tsc.op.op_load","count":167,"args":"asset:///lib.es2017.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":167,"duration":0.088},
{"type":"mark","name":"tsc.op.op_load","count":168,"args":"asset:///lib.es2017.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":168,"duration":0.144},
{"type":"mark","name":"tsc.op.op_load","count":169,"args":"asset:///lib.es2017.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":169,"duration":0.183},
{"type":"mark","name":"tsc.op.op_load","count":170,"args":"asset:///lib.es2017.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":170,"duration":0.487},
{"type":"mark","name":"tsc.op.op_load","count":171,"args":"asset:///lib.es2017.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":171,"duration":0.071},
{"type":"mark","name":"tsc.op.op_load","count":172,"args":"asset:///lib.es2017.typedarrays.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":172,"duration":0.144},
{"type":"mark","name":"tsc.op.op_load","count":173,"args":"asset:///lib.es2018.asynciterable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":173,"duration":0.208},
{"type":"mark","name":"tsc.op.op_load","count":174,"args":"asset:///lib.es2018.asyncgenerator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":174,"duration":0.156},
{"type":"mark","name":"tsc.op.op_load","count":175,"args":"asset:///lib.es2018.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":175,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":176,"args":"asset:///lib.es2018.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":176,"duration":0.067},
{"type":"mark","name":"tsc.op.op_load","count":177,"args":"asset:///lib.es2018.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":177,"duration":0.193},
{"type":"mark","name":"tsc.op.op_load","count":178,"args":"asset:///lib.es2019.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":178,"duration":0.182},
{"type":"mark","name":"tsc.op.op_load","count":179,"args":"asset:///lib.es2019.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":179,"duration":0.086},
{"type":"mark","name":"tsc.op.op_load","count":180,"args":"asset:///lib.es2019.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":180,"duration":0.065},
{"type":"mark","name":"tsc.op.op_load","count":181,"args":"asset:///lib.es2019.symbol.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":181,"duration":0.068},
{"type":"mark","name":"tsc.op.op_load","count":182,"args":"asset:///lib.es2019.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":182,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":183,"args":"asset:///lib.es2020.bigint.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":183,"duration":1.147},
{"type":"mark","name":"tsc.op.op_load","count":184,"args":"asset:///lib.es2020.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":184,"duration":0.583},
{"type":"mark","name":"tsc.op.op_load","count":185,"args":"asset:///lib.es2020.date.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":185,"duration":0.088},
{"type":"mark","name":"tsc.op.op_load","count":186,"args":"asset:///lib.es2020.number.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":186,"duration":0.058},
{"type":"mark","name":"tsc.op.op_load","count":187,"args":"asset:///lib.es2020.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":187,"duration":0.138},
{"type":"mark","name":"tsc.op.op_load","count":188,"args":"asset:///lib.es2020.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":188,"duration":0.181},
{"type":"mark","name":"tsc.op.op_load","count":189,"args":"asset:///lib.es2020.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":189,"duration":0.095},
{"type":"mark","name":"tsc.op.op_load","count":190,"args":"asset:///lib.es2020.symbol.wellknown.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":190,"duration":0.115},
{"type":"mark","name":"tsc.op.op_load","count":191,"args":"asset:///lib.es2021.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":191,"duration":0.121},
{"type":"mark","name":"tsc.op.op_load","count":192,"args":"asset:///lib.es2021.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":192,"duration":0.078},
{"type":"mark","name":"tsc.op.op_load","count":193,"args":"asset:///lib.es2021.weakref.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":193,"duration":0.157},
{"type":"mark","name":"tsc.op.op_load","count":194,"args":"asset:///lib.es2021.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":194,"duration":0.28},
{"type":"mark","name":"tsc.op.op_load","count":195,"args":"asset:///lib.es2022.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":195,"duration":0.168},
{"type":"mark","name":"tsc.op.op_load","count":196,"args":"asset:///lib.es2022.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":196,"duration":0.153},
{"type":"mark","name":"tsc.op.op_load","count":197,"args":"asset:///lib.es2022.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":197,"duration":0.359},
{"type":"mark","name":"tsc.op.op_load","count":198,"args":"asset:///lib.es2022.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":198,"duration":0.057},
{"type":"mark","name":"tsc.op.op_load","count":199,"args":"asset:///lib.es2022.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":199,"duration":0.09},
{"type":"mark","name":"tsc.op.op_load","count":200,"args":"asset:///lib.es2022.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":200,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":201,"args":"asset:///lib.es2023.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":201,"duration":0.968},
{"type":"mark","name":"tsc.op.op_load","count":202,"args":"asset:///lib.es2023.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":202,"duration":0.066},
{"type":"mark","name":"tsc.op.op_load","count":203,"args":"asset:///lib.es2023.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":203,"duration":0.283},
{"type":"mark","name":"tsc.op.op_load","count":204,"args":"asset:///lib.es2024.arraybuffer.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":204,"duration":0.158},
{"type":"mark","name":"tsc.op.op_load","count":205,"args":"asset:///lib.es2024.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":205,"duration":0.091},
{"type":"mark","name":"tsc.op.op_load","count":206,"args":"asset:///lib.es2024.object.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":206,"duration":0.095},
{"type":"mark","name":"tsc.op.op_load","count":207,"args":"asset:///lib.es2024.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":207,"duration":0.104},
{"type":"mark","name":"tsc.op.op_load","count":208,"args":"asset:///lib.es2024.regexp.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":208,"duration":0.064},
{"type":"mark","name":"tsc.op.op_load","count":209,"args":"asset:///lib.es2024.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":209,"duration":0.228},
{"type":"mark","name":"tsc.op.op_load","count":210,"args":"asset:///lib.es2024.string.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":210,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":211,"args":"asset:///lib.esnext.intl.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":211,"duration":0.045},
{"type":"mark","name":"tsc.op.op_load","count":212,"args":"asset:///lib.esnext.decorators.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":212,"duration":0.059},
{"type":"mark","name":"tsc.op.op_load","count":213,"args":"asset:///lib.esnext.disposable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":213,"duration":0.291},
{"type":"mark","name":"tsc.op.op_load","count":214,"args":"asset:///lib.esnext.collection.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":214,"duration":0.2},
{"type":"mark","name":"tsc.op.op_load","count":215,"args":"asset:///lib.esnext.array.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":215,"duration":0.134},
{"type":"mark","name":"tsc.op.op_load","count":216,"args":"asset:///lib.esnext.iterator.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":216,"duration":0.501},
{"type":"mark","name":"tsc.op.op_load","count":217,"args":"asset:///lib.esnext.promise.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":217,"duration":0.112},
{"type":"mark","name":"tsc.op.op_load","count":218,"args":"asset:///lib.esnext.float16.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":218,"duration":0.863},
{"type":"mark","name":"tsc.op.op_load","count":219,"args":"asset:///lib.esnext.error.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":219,"duration":0.169},
{"type":"mark","name":"tsc.op.op_load","count":220,"args":"asset:///lib.esnext.sharedmemory.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":220,"duration":0.093},
{"type":"mark","name":"tsc.op.op_load","count":221,"args":"asset:///lib.deno.net.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":221,"duration":1.515},
{"type":"mark","name":"tsc.op.op_load","count":222,"args":"asset:///lib.deno.shared_globals.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":222,"duration":1.446},
{"type":"mark","name":"tsc.op.op_load","count":223,"args":"asset:///lib.deno.console.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":223,"duration":0.331},
{"type":"mark","name":"tsc.op.op_load","count":224,"args":"asset:///lib.deno.url.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":224,"duration":0.767},
{"type":"mark","name":"tsc.op.op_load","count":225,"args":"asset:///lib.deno.web.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":225,"duration":10.624},
{"type":"mark","name":"tsc.op.op_load","count":226,"args":"asset:///lib.deno.webgpu.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":226,"duration":2.098},
{"type":"mark","name":"tsc.op.op_load","count":227,"args":"asset:///lib.deno.canvas.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":227,"duration":0.347},
{"type":"mark","name":"tsc.op.op_load","count":228,"args":"asset:///lib.deno.fetch.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":228,"duration":1.599},
{"type":"mark","name":"tsc.op.op_load","count":229,"args":"asset:///lib.deno.websocket.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":229,"duration":0.544},
{"type":"mark","name":"tsc.op.op_load","count":230,"args":"asset:///lib.deno.crypto.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":230,"duration":1.076},
{"type":"mark","name":"tsc.op.op_load","count":231,"args":"asset:///lib.deno.webstorage.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":231,"duration":0.161},
{"type":"mark","name":"tsc.op.op_load","count":232,"args":"asset:///lib.deno.cache.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":232,"duration":0.227},
{"type":"mark","name":"tsc.op.op_load","count":233,"args":"asset:///lib.deno.unstable.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":233,"duration":11.444},
{"type":"mark","name":"tsc.op.op_load","count":234,"args":"asset:///lib.deno.broadcast_channel.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":234,"duration":0.378},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":1,"duration":0.009},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":2,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":3,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":4,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":5,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":6,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":7,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":8,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":9,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":10,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":11,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":12,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":13,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":14,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":15,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":16,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":17,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":18,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":19,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":20,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":21,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":22,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":23,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":24,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":25,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":26,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":27,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":28,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":29,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":30,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":31,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":32,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":33,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":34,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":35,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":36,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":37,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":38,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":39,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":40,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":41,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":42,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":43,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":44,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":45,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":46,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":47,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":48,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":49,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":50,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":51,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":52,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":53,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":54,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":55,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":56,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":57,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":58,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":59,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":60,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":61,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":62,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":63,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":64,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":65,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":66,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":67,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":68,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":69,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":70,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":71,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":72,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":73,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":74,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":75,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":76,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":77,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":78,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":79,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":80,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":81,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":82,"duration":0.0},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":83,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":84,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":85,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":86,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":87,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":88,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":89,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":90,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":91,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":92,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":93,"duration":0.002},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":94,"duration":0.001},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":95,"duration":0.004},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":96,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":97,"duration":0.006},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":1,"duration":1468.458},
{"type":"mark","name":"tsc.host.$getSupportedCodeFixes","count":1,"args":"GetSupportedCodeFixes"},
{"type":"measure","name":"tsc.host.$getSupportedCodeFixes","count":1,"duration":0.315},
Unable to send result to client.
{"type":"mark","name":"tsc.host.getNavigationTree","count":1,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":1,"duration":210.523},
{"type":"measure","name":"tsc.request.getNavigationTree","count":1,"duration":3386.438},
{"type":"measure","name":"lsp.get_navigation_tree","count":1,"duration":3386.481},
{"type":"measure","name":"lsp.document_symbol","count":19,"duration":3388.842},
{"type":"mark","name":"lsp.did_change_batched","count":28,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":28,"duration":35.343},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":31,"duration":0.218},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.semantic_tokens_range","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":92,"character":0},"end":{"line":201,"character":20}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.folding_range","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":2,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",32]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":1,"duration":0.027},
{"type":"mark","name":"tsc.op.op_load","count":235,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":235,"duration":0.082},
{"type":"mark","name":"tsc.op.op_resolve","count":108,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":108,"duration":0.08},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":98,"duration":0.012},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":99,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":100,"duration":0.009},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":101,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":102,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":103,"duration":0.014},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":104,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":105,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":106,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":107,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":108,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":109,"duration":0.012},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":2,"duration":281.757},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":1,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",{"start":2554,"length":2415},"2020"]}},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":2,"duration":346.714},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":1,"duration":2.671},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":1,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":1,"duration":349.343},
{"type":"measure","name":"lsp.semantic_tokens_range","count":1,"duration":349.421},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":1,"duration":44.693},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":1,"duration":394.241},
{"type":"measure","name":"lsp.folding_range","count":11,"duration":394.4},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":1,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":1,"duration":0.41},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":1,"duration":49.822},
{"type":"measure","name":"lsp.diagnostic","count":136,"duration":398.494},
{"type":"mark","name":"lsp.semantic_tokens_full","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.inlay_hint","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":62,"character":0},"end":{"line":231,"character":20}}}},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":2,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",{"start":0,"length":36083},"2020"]}},
{"type":"mark","name":"lsp.document_symbol","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":2,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":2,"duration":109.77},
{"type":"mark","name":"tsc.host.getNavigationTree","count":2,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":2,"duration":112.619},
{"type":"measure","name":"lsp.semantic_tokens_full","count":1,"duration":113.012},
{"type":"measure","name":"tsc.host.getNavigationTree","count":2,"duration":10.91},
{"type":"measure","name":"tsc.request.getNavigationTree","count":2,"duration":123.685},
{"type":"measure","name":"lsp.get_navigation_tree","count":2,"duration":123.744},
{"type":"measure","name":"lsp.document_symbol","count":20,"duration":124.327},
{"type":"mark","name":"lsp.code_lens","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":3,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":3,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":14,"duration":1.158},
{"type":"mark","name":"lsp.inlay_hint","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":62,"character":0},"end":{"line":231,"character":20}}}},
{"type":"mark","name":"lsp.document_symbol","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":4,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":4,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":21,"duration":0.499},
{"type":"mark","name":"lsp.inlay_hint","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1163,"character":0},"end":{"line":1270,"character":19}}}},
{"type":"measure","name":"lsp.semantic_tokens_range","count":2,"duration":0.041},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":29,"duration":0.066},
{"type":"mark","name":"lsp.code_action","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"tsc.request.$getSupportedCodeFixes"},
{"type":"mark","name":"tsc.host.$getSupportedCodeFixes","count":2,"args":"GetSupportedCodeFixes"},
{"type":"measure","name":"tsc.host.$getSupportedCodeFixes","count":2,"duration":0.189},
{"type":"measure","name":"tsc.request.$getSupportedCodeFixes","count":2,"duration":0.435},
{"type":"mark","name":"tsc.request.getApplicableRefactors"},
{"type":"mark","name":"tsc.host.getApplicableRefactors","count":1,"args":{"GetApplicableRefactors":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",{"pos":0,"end":0},{"quotePreference":"auto","includeCompletionsForModuleExports":false,"includeCompletionsForImportStatements":true,"includeCompletionsWithSnippetText":true,"includeAutomaticOptionalChainCompletions":true,"includeCompletionsWithInsertText":true,"includeCompletionsWithClassMemberSnippets":true,"includeCompletionsWithObjectLiteralMethodSnippets":true,"useLabelDetailsInCompletionEntries":true,"allowIncompleteCompletions":true,"importModuleSpecifierPreference":"shortest","importModuleSpecifierEnding":"index","allowTextChangesInNewFiles":true,"providePrefixAndSuffixTextForRename":true,"provideRefactorNotApplicableReason":true,"jsxAttributeCompletionStyle":"auto","includeInlayParameterNameHints":"none","includeInlayParameterNameHintsWhenArgumentMatchesName":false,"includeInlayFunctionParameterTypeHints":false,"includeInlayVariableTypeHints":false,"includeInlayVariableTypeHintsWhenTypeMatchesName":false,"includeInlayPropertyDeclarationTypeHints":false,"includeInlayFunctionLikeReturnTypeHints":false,"includeInlayEnumMemberValueHints":false,"autoImportFileExcludePatterns":[],"interactiveInlayHints":true,"preferTypeOnlyAutoImports":false},"implicit",""]}},
{"type":"measure","name":"tsc.host.getApplicableRefactors","count":1,"duration":35.328},
{"type":"measure","name":"tsc.request.getApplicableRefactors","count":1,"duration":35.815},
{"type":"measure","name":"lsp.code_action","count":23,"duration":36.549},
{"type":"mark","name":"lsp.inlay_hint","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":137,"duration":0.024},
{"type":"mark","name":"lsp.did_change_batched","count":29,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":29,"duration":9.503},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":138,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":32,"duration":0.186},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":139,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":30,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.did_close","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":10,"duration":1.127},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":33,"duration":0.202},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":140,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":30,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":30,"duration":4.357},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":141,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":34,"duration":0.178},
{"type":"mark","name":"lsp.inlay_hint","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":142,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":31,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":143,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.did_open","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","languageId":"typescriptreact","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":21,"duration":0.83},
{"type":"mark","name":"lsp.did_change_batched","count":31,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":35,"duration":0.256},
{"type":"measure","name":"lsp.did_change_batched","count":31,"duration":10.831},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":144,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":36,"duration":0.218},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":145,"duration":0.013},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":32,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":146,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":147,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":148,"duration":0.001},
{"type":"mark","name":"lsp.did_open","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx","languageId":"typescriptreact","version":1,"text":"import { Route, Routes } from \"react-router-dom\";\nimport { Layout } from \"./components/Layout\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { AdminPanel } from \"./pages/AdminPanel\";\nimport { BusinessDiscovery } from \"./pages/BusinessDiscovery\";\nimport { Campaign } from \"./pages/Campaign\";\nimport { CampaignProgress } from \"./pages/CampaignProgress\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Results } from \"./pages/Results\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<BusinessDiscovery />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/discovery\" element={<BusinessDiscovery />} />\n          <Route path=\"/campaign\" element={<Campaign />} />\n          <Route\n            path=\"/campaign/:campaignId/progress\"\n            element={<CampaignProgress />}\n          />\n          <Route path=\"/results\" element={<Results />} />\n          <Route path=\"/admin\" element={<AdminPanel />} />\n        </Routes>\n      </Layout>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"}}},
{"type":"measure","name":"lsp.did_open","count":22,"duration":1.236},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":37,"duration":0.289},
{"type":"mark","name":"lsp.inlay_hint","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.did_change_batched","count":32,"args":"file:///workspaces/ProspectPro/src/App.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":38,"duration":0.215},
{"type":"measure","name":"lsp.did_change_batched","count":32,"duration":3.667},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":149,"duration":0.011},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":150,"duration":0.012},
{"type":"mark","name":"lsp.inlay_hint","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":151,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":33,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":152,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"range":{"start":{"line":1133,"character":0},"end":{"line":1300,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":153,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":154,"duration":0.001},
{"type":"mark","name":"lsp.did_change_watched_files","count":8,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/dist/.vercel/project.json","type":1},{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":8,"duration":0.022},
{"type":"mark","name":"lsp.did_change_watched_files","count":9,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":9,"duration":0.019},
{"type":"mark","name":"lsp.did_open","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/AUTHENTICATION_AND_NAMING_COMPLETE.md","languageId":"markdown","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":23,"duration":0.046},
{"type":"mark","name":"lsp.did_change_batched","count":33,"args":"file:///workspaces/ProspectPro/AUTHENTICATION_AND_NAMING_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":33,"duration":3.883},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":155,"duration":0.016},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":156,"duration":0.014},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":34,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":157,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":158,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":159,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":160,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":161,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":162,"duration":0.022},
{"type":"mark","name":"lsp.code_action","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":1}}}},
{"type":"mark","name":"lsp.folding_range","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":301,"character":7}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.did_change_batched","count":34,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":34,"duration":0.032},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":163,"duration":0.001},
{"type":"mark","name":"lsp.completion","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":0,"character":1},"context":{"triggerKind":1}}},
{"type":"mark","name":"lsp.inlay_hint","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":1}}}},
{"type":"mark","name":"lsp.did_change_batched","count":35,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":35,"duration":0.03},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":164,"duration":0.001},
{"type":"mark","name":"lsp.completion","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":0,"character":2},"context":{"triggerKind":1}}},
{"type":"mark","name":"lsp.inlay_hint","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":2}}}},
{"type":"mark","name":"lsp.did_change_batched","count":36,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":36,"duration":0.028},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":165,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":37,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":37,"duration":0.03},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":166,"duration":0.001},
{"type":"mark","name":"lsp.completion","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":0,"character":4},"context":{"triggerKind":1}}},
{"type":"mark","name":"lsp.inlay_hint","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":167,"duration":0.002},
{"type":"mark","name":"lsp.folding_range","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.did_change_batched","count":38,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":38,"duration":0.03},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":168,"duration":0.001},
{"type":"mark","name":"lsp.completion","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":0,"character":5},"context":{"triggerKind":1}}},
{"type":"mark","name":"lsp.inlay_hint","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":5}}}},
{"type":"mark","name":"lsp.folding_range","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":39,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":39,"duration":0.108},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":169,"duration":0.001},
{"type":"mark","name":"lsp.completion","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":0,"character":6},"context":{"triggerKind":1}}},
{"type":"mark","name":"lsp.inlay_hint","count":67,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":6}}}},
{"type":"mark","name":"lsp.did_change_batched","count":40,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":40,"duration":0.028},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":170,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":68,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":7}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":171,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":41,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":41,"duration":0.029},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":172,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":69,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":8}}}},
{"type":"mark","name":"lsp.folding_range","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.folding_range","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":173,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":70,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":8}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":174,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":175,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":3,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",39]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":2,"duration":0.673},
{"type":"mark","name":"tsc.op.op_load","count":236,"args":"file:///workspaces/ProspectPro/AUTHENTICATION_AND_NAMING_COMPLETE.md"},
{"type":"measure","name":"tsc.op.op_load","count":236,"duration":0.047},
{"type":"mark","name":"tsc.op.op_load","count":237,"args":"file:///workspaces/ProspectPro/src/App.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":237,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":109,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":109,"duration":0.337},
{"type":"mark","name":"tsc.op.op_load","count":238,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":238,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":110,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":110,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":111,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":111,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":112,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":112,"duration":0.08},
{"type":"mark","name":"tsc.op.op_resolve","count":113,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":113,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":239,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":239,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":114,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":114,"duration":0.044},
{"type":"mark","name":"tsc.op.op_load","count":240,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":240,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":115,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":115,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":116,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":116,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":117,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":117,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":118,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":118,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":119,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":119,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":120,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":120,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":121,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":121,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":122,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":122,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":123,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":123,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":124,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":124,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":125,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":125,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":126,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":126,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":127,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":127,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":128,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":128,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":129,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":129,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":130,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":130,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":131,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":131,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":132,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":132,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":133,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":133,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":134,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":134,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":135,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":135,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":136,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":136,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":137,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":137,"duration":0.159},
{"type":"mark","name":"tsc.op.op_resolve","count":138,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":138,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":139,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":139,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":140,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":140,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":141,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":141,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":142,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":142,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":143,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":143,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":144,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":144,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":145,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":145,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":146,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":146,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":147,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":147,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":148,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":148,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":149,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":149,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":150,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":150,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":151,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":151,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":152,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":152,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":153,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":153,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":154,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":154,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":155,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":155,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":156,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":156,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":157,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":157,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":158,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":158,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":159,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":159,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":160,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":160,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":161,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":161,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":162,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":162,"duration":0.064},
{"type":"mark","name":"tsc.op.op_resolve","count":163,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":163,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":164,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":164,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":165,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":165,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":166,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":166,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":167,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":167,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":168,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":168,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":169,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":169,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":170,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":170,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":171,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":171,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":172,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":172,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":173,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":173,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":174,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":174,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":175,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":175,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":176,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":176,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":177,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":177,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":178,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":178,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":179,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":179,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":180,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":180,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":181,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":181,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":182,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":182,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":183,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":183,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":184,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":184,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":185,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":185,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":186,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":186,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":187,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":187,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":188,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":188,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":189,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":189,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":190,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":190,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":191,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":191,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":192,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":192,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":193,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":193,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":194,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":194,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":195,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":195,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":196,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":196,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":197,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":197,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":198,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":198,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":199,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":199,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":200,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":200,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":201,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":201,"duration":1.381},
{"type":"mark","name":"tsc.op.op_resolve","count":202,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":202,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":203,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":203,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":204,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":204,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":205,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":205,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":206,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":206,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":207,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":207,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":208,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":208,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":209,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":209,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":210,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":210,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":211,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":211,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":212,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":212,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":213,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":213,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":214,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":214,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":215,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":215,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":216,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":216,"duration":0.035},
{"type":"mark","name":"tsc.op.op_release","count":1,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_release","count":1,"duration":2.355},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":110,"duration":0.011},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":3,"duration":460.734},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":3,"duration":460.96},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":2,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":2,"duration":70.754},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":2,"duration":70.869},
{"type":"measure","name":"lsp.diagnostic","count":176,"duration":532.05},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":177,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":178,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":42,"args":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},
{"type":"measure","name":"lsp.did_change_batched","count":42,"duration":0.235},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":179,"duration":0.001},
{"type":"mark","name":"lsp.goto_definition","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":279,"character":58}}},
{"type":"mark","name":"lsp.inlay_hint","count":71,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":203,"character":0},"end":{"line":301,"character":7}}}},
{"type":"mark","name":"lsp.folding_range","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_lens","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":0,"character":0},"end":{"line":301,"character":7}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_highlight","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":279,"character":58}}},
{"type":"mark","name":"lsp.document_symbol","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.document_symbol","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.hover","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":279,"character":57}}},
{"type":"mark","name":"lsp.folding_range","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.code_action","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":279,"character":58},"end":{"line":279,"character":58}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":180,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":72,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":203,"character":0},"end":{"line":301,"character":7}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":181,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":182,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":183,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":184,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":185,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":43,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":43,"duration":6.109},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":186,"duration":0.013},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":39,"duration":0.238},
{"type":"mark","name":"lsp.did_change_batched","count":44,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":40,"duration":0.22},
{"type":"measure","name":"lsp.did_change_batched","count":44,"duration":12.548},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":4,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",41]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":2,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":241,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":241,"duration":0.038},
{"type":"mark","name":"tsc.op.op_load","count":242,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":242,"duration":0.083},
{"type":"mark","name":"tsc.op.op_resolve","count":217,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":217,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":218,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":218,"duration":0.048},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":4,"duration":506.933},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":4,"duration":507.092},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":3,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":3,"duration":13.809},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":3,"duration":15.534},
{"type":"measure","name":"lsp.diagnostic","count":187,"duration":522.855},
{"type":"mark","name":"lsp.did_change_batched","count":45,"args":"file:///workspaces/ProspectPro/AUTHENTICATION_AND_NAMING_COMPLETE.md"},
{"type":"measure","name":"lsp.did_change_batched","count":45,"duration":0.11},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":188,"duration":0.033},
{"type":"mark","name":"lsp.did_change_batched","count":46,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":46,"duration":4.372},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":189,"duration":0.011},
{"type":"mark","name":"lsp.did_change_batched","count":47,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":41,"duration":0.24},
{"type":"measure","name":"lsp.did_change_batched","count":47,"duration":8.758},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":35,"duration":0.008},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":190,"duration":0.007},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":42,"duration":0.217},
{"type":"mark","name":"lsp.did_change_batched","count":48,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":48,"duration":7.229},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":191,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":43,"duration":0.228},
{"type":"mark","name":"lsp.did_change_batched","count":49,"args":"file:///workspaces/ProspectPro/src/App.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":44,"duration":0.215},
{"type":"measure","name":"lsp.did_change_batched","count":49,"duration":5.66},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":192,"duration":0.011},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":193,"duration":0.002},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":194,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":5,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",45]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":3,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":243,"args":"file:///workspaces/ProspectPro/src/App.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":243,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":244,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":244,"duration":0.038},
{"type":"mark","name":"tsc.op.op_load","count":245,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":245,"duration":0.059},
{"type":"mark","name":"tsc.op.op_load","count":246,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":246,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":219,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":219,"duration":0.211},
{"type":"mark","name":"tsc.op.op_resolve","count":220,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":220,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":221,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":221,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":222,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":222,"duration":0.034},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":5,"duration":961.498},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":5,"duration":965.544},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":4,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":4,"duration":32.026},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":4,"duration":35.163},
{"type":"measure","name":"lsp.diagnostic","count":195,"duration":1005.883},
{"type":"mark","name":"lsp.did_change_batched","count":50,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":50,"duration":3.078},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":45,"duration":0.274},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":196,"duration":0.021},
{"type":"mark","name":"lsp.did_change_batched","count":51,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":51,"duration":39.887},
{"type":"mark","name":"lsp.did_change_batched","count":52,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":46,"duration":0.278},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":47,"duration":0.277},
{"type":"measure","name":"lsp.did_change_batched","count":52,"duration":6.987},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":198,"duration":0.01},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":6,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",48]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":4,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":247,"args":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":247,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":248,"args":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":248,"duration":0.042},
{"type":"mark","name":"tsc.op.op_load","count":249,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":249,"duration":0.064},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":36,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":223,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":223,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":224,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":224,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":225,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":225,"duration":0.045},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":6,"duration":223.392},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":6,"duration":231.831},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":5,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":5,"duration":0.385},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":5,"duration":4.333},
{"type":"measure","name":"lsp.diagnostic","count":197,"duration":237.634},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":37,"duration":0.017},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":38,"duration":0.058},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":39,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":199,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":40,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":200,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":201,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":202,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":203,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":204,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":73,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":191,"character":0},"end":{"line":301,"character":7}}}},
{"type":"mark","name":"lsp.document_highlight","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"position":{"line":279,"character":58}}},
{"type":"mark","name":"lsp.code_lens","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"}}},
{"type":"mark","name":"lsp.inlay_hint","count":74,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/auth-and-payments-schema.sql"},"range":{"start":{"line":203,"character":0},"end":{"line":301,"character":7}}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":10,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":10,"duration":0.017},
{"type":"mark","name":"lsp.did_change_watched_files","count":11,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":11,"duration":0.019},
{"type":"mark","name":"lsp.did_open","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { TierSelector } from \"../components/TierSelector\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\nimport { ENRICHMENT_TIERS } from \"../lib/supabase\";\n\nconst businessCategories = [\n  \"Automotive Services\",\n  \"Education & Training\",\n  \"Entertainment & Recreation\",\n  \"Financial Services\",\n  \"Food & Dining\",\n  \"Government & Public Services\",\n  \"Healthcare & Medical\",\n  \"Home & Property Services\",\n  \"Hospitality & Lodging\",\n  \"Personal Care & Beauty\",\n  \"Professional Services\",\n  \"Religious & Community\",\n  \"Retail & Shopping\",\n  \"Technology & IT Services\",\n  \"Transportation & Transit\",\n];\n\nconst businessTypesByCategory: Record<string, string[]> = {\n  \"Automotive Services\": [\n    \"Auto Body Shop\",\n    \"Auto Detailing\",\n    \"Auto Parts Store\",\n    \"Automotive Glass Service\",\n    \"Car Dealer\",\n    \"Car Rental\",\n    \"Car Repair\",\n    \"Car Wash\",\n    \"Electric Vehicle Charging Station\",\n    \"Gas Station\",\n    \"Motorcycle Dealer\",\n    \"Oil Change Service\",\n    \"Rv Dealer\",\n    \"Smog Check Station\",\n    \"Tire Shop\",\n    \"Towing Service\",\n    \"Transmission Shop\",\n    \"Truck Dealer\",\n  ],\n  \"Education & Training\": [\n    \"Art School\",\n    \"Charter School\",\n    \"College\",\n    \"Community College\",\n    \"Cooking School\",\n    \"Dance Studio\",\n    \"Daycare\",\n    \"Driving School\",\n    \"Kindergarten\",\n    \"Language School\",\n    \"Library\",\n    \"Music School\",\n    \"Preschool\",\n    \"Primary School\",\n    \"Private School\",\n    \"Public School\",\n    \"School\",\n    \"Secondary School\",\n    \"Summer Camp Organizer\",\n    \"Technical School\",\n    \"Training Center\",\n    \"Tutoring Center\",\n    \"University\",\n    \"Vocational School\",\n  ],\n  \"Entertainment & Recreation\": [\n    \"Amusement Park\",\n    \"Aquarium\",\n    \"Arcade\",\n    \"Arena\",\n    \"Art Gallery\",\n    \"Banquet Hall\",\n    \"Beach\",\n    \"Botanical Garden\",\n    \"Bowling Alley\",\n    \"Casino\",\n    \"Comedy Club\",\n    \"Concert Hall\",\n    \"Convention Center\",\n    \"Escape Room\",\n    \"Event Venue\",\n    \"Fitness Center\",\n    \"Golf Course\",\n    \"Gym\",\n    \"Karaoke Venue\",\n    \"Marina\",\n    \"Mini Golf\",\n    \"Movie Theater\",\n    \"Museum\",\n    \"Night Club\",\n    \"Paintball\",\n    \"Park\",\n    \"Rock Climbing Gym\",\n    \"Ski Resort\",\n    \"Sports Complex\",\n    \"Stadium\",\n    \"Swimming Pool\",\n    \"Tennis Court\",\n    \"Theater\",\n    \"Tourist Attraction\",\n    \"Trampoline Park\",\n    \"Wedding Venue\",\n    \"Yoga Studio\",\n    \"Zoo\",\n  ],\n  \"Financial Services\": [\n    \"Atm\",\n    \"Bank\",\n    \"Check Cashing Service\",\n    \"Credit Union\",\n    \"Cryptocurrency Exchange\",\n    \"Financial Planner\",\n    \"Investment Firm\",\n    \"Money Transfer Service\",\n    \"Mortgage Broker\",\n    \"Payday Lender\",\n    \"Stock Broker\",\n  ],\n  \"Food & Dining\": [\n    \"Bakery\",\n    \"Bar\",\n    \"Barbecue Restaurant\",\n    \"Brewery\",\n    \"Brunch Restaurant\",\n    \"Buffet\",\n    \"Burger Joint\",\n    \"Cafe\",\n    \"Catering Service\",\n    \"Chinese Restaurant\",\n    \"Cocktail Bar\",\n    \"Coffee Shop\",\n    \"Deli\",\n    \"Dessert Shop\",\n    \"Distillery\",\n    \"Donut Shop\",\n    \"Fast Food Restaurant\",\n    \"Food Court\",\n    \"Food Stand\",\n    \"Food Truck\",\n    \"Ice Cream Shop\",\n    \"Indian Restaurant\",\n    \"Italian Restaurant\",\n    \"Japanese Restaurant\",\n    \"Juice Bar\",\n    \"Meal Delivery\",\n    \"Meal Takeaway\",\n    \"Mexican Restaurant\",\n    \"Pizza Restaurant\",\n    \"Pub\",\n    \"Restaurant\",\n    \"Sandwich Shop\",\n    \"Seafood Restaurant\",\n    \"Smoothie Shop\",\n    \"Steakhouse\",\n    \"Sushi Restaurant\",\n    \"Taco Place\",\n    \"Tea House\",\n    \"Wine Bar\",\n    \"Winery\",\n  ],\n  \"Government & Public Services\": [\n    \"City Hall\",\n    \"Consulate\",\n    \"Courthouse\",\n    \"County Office\",\n    \"Dmv\",\n    \"Embassy\",\n    \"Fire Station\",\n    \"Government Office\",\n    \"Municipal Building\",\n    \"Passport Office\",\n    \"Police Station\",\n    \"Post Office\",\n    \"Public Library\",\n    \"Public School\",\n    \"Public Works\",\n    \"Social Services Office\",\n    \"Tax Office\",\n    \"Voter Registration Office\",\n  ],\n  \"Healthcare & Medical\": [\n    \"Acupuncture Clinic\",\n    \"Chiropractor\",\n    \"Dental Clinic\",\n    \"Dentist\",\n    \"Doctor\",\n    \"Drugstore\",\n    \"Health Insurance Office\",\n    \"Hospital\",\n    \"Medical Center\",\n    \"Medical Equipment Supplier\",\n    \"Medical Lab\",\n    \"Mental Health Clinic\",\n    \"Occupational Therapist\",\n    \"Optical Clinic\",\n    \"Optometrist\",\n    \"Orthodontist\",\n    \"Pharmacy\",\n    \"Physical Therapy\",\n    \"Physiotherapist\",\n    \"Psychiatrist\",\n    \"Psychologist\",\n    \"Skin Care Clinic\",\n    \"Speech Therapist\",\n    \"Urgent Care\",\n    \"Veterinary Care\",\n    \"Wellness Center\",\n  ],\n  \"Home & Property Services\": [\n    \"Appliance Repair\",\n    \"Carpet Cleaning\",\n    \"Cleaning Service\",\n    \"Dry Cleaning\",\n    \"Electrician\",\n    \"Fence Contractor\",\n    \"Flooring Contractor\",\n    \"Gardener\",\n    \"General Contractor\",\n    \"Gutter Service\",\n    \"Handyman\",\n    \"Home Inspector\",\n    \"Hvac Contractor\",\n    \"Landscaping\",\n    \"Laundry\",\n    \"Locksmith\",\n    \"Moving Company\",\n    \"Painter\",\n    \"Pest Control\",\n    \"Plumber\",\n    \"Pool Service\",\n    \"Property Management\",\n    \"Roofing Contractor\",\n    \"Storage\",\n    \"Window Cleaning\",\n  ],\n  \"Hospitality & Lodging\": [\n    \"Bed And Breakfast\",\n    \"Boutique Hotel\",\n    \"Campground\",\n    \"Extended Stay Hotel\",\n    \"Guest House\",\n    \"Hostel\",\n    \"Hotel\",\n    \"Inn\",\n    \"Lodge\",\n    \"Motel\",\n    \"Resort\",\n    \"Rv Park\",\n    \"Vacation Rental\",\n  ],\n  \"Personal Care & Beauty\": [\n    \"Barber Shop\",\n    \"Beauty Salon\",\n    \"Beautician\",\n    \"Body Art Service\",\n    \"Cosmetics Store\",\n    \"Day Spa\",\n    \"Eyebrow Threading\",\n    \"Facial Spa\",\n    \"Hair Care\",\n    \"Hair Salon\",\n    \"Makeup Artist\",\n    \"Massage\",\n    \"Nail Salon\",\n    \"Piercing Shop\",\n    \"Sauna\",\n    \"Spa\",\n    \"Tanning Studio\",\n    \"Tattoo Parlor\",\n    \"Waxing Salon\",\n  ],\n  \"Professional Services\": [\n    \"Accounting\",\n    \"Advertising Agency\",\n    \"Architecture Firm\",\n    \"Attorney\",\n    \"Business Center\",\n    \"Consultant\",\n    \"Corporate Office\",\n    \"Employment Agency\",\n    \"Engineering Office\",\n    \"Financial Advisor\",\n    \"Insurance Agency\",\n    \"Lawyer\",\n    \"Marketing Agency\",\n    \"Notary\",\n    \"Real Estate Agency\",\n    \"Recruiter\",\n    \"Tax Preparation\",\n  ],\n  \"Religious & Community\": [\n    \"Cemetery\",\n    \"Church\",\n    \"Civic Organization\",\n    \"Community Center\",\n    \"Crematorium\",\n    \"Funeral Home\",\n    \"Meditation Center\",\n    \"Mosque\",\n    \"Non-Profit Organization\",\n    \"Place Of Worship\",\n    \"Religious Center\",\n    \"Social Club\",\n    \"Spiritual Center\",\n    \"Synagogue\",\n    \"Temple\",\n  ],\n  \"Retail & Shopping\": [\n    \"Antique Shop\",\n    \"Art Supply Store\",\n    \"Bicycle Store\",\n    \"Book Store\",\n    \"Boutique\",\n    \"Clothing Store\",\n    \"Convenience Store\",\n    \"Craft Store\",\n    \"Department Store\",\n    \"Discount Store\",\n    \"Dollar Store\",\n    \"Electronics Store\",\n    \"Florist\",\n    \"Furniture Store\",\n    \"Garden Center\",\n    \"Gift Shop\",\n    \"Grocery Store\",\n    \"Hardware Store\",\n    \"Hobby Shop\",\n    \"Home Goods Store\",\n    \"Jewelry Store\",\n    \"Liquor Store\",\n    \"Music Store\",\n    \"Office Supply Store\",\n    \"Optical Store\",\n    \"Outlet Store\",\n    \"Party Supply Store\",\n    \"Pet Store\",\n    \"Second Hand Store\",\n    \"Shoe Store\",\n    \"Shopping Mall\",\n    \"Sporting Goods Store\",\n    \"Supermarket\",\n    \"Thrift Store\",\n    \"Tobacco Shop\",\n    \"Toy Store\",\n    \"Vape Shop\",\n  ],\n  \"Technology & IT Services\": [\n    \"App Development\",\n    \"Cell Phone Store\",\n    \"Co-Working Space\",\n    \"Computer Repair\",\n    \"Cybersecurity Firm\",\n    \"Data Center\",\n    \"Internet Cafe\",\n    \"It Services\",\n    \"Managed Services Provider\",\n    \"Software Company\",\n    \"Tech Support\",\n    \"Telecommunications Service Provider\",\n    \"Web Design\",\n  ],\n  \"Transportation & Transit\": [\n    \"Airport\",\n    \"Bike Rental\",\n    \"Bus Station\",\n    \"Bus Tour Agency\",\n    \"Car Sharing\",\n    \"Cruise Agency\",\n    \"Ferry Terminal\",\n    \"Limousine Service\",\n    \"Parking Garage\",\n    \"Parking Lot\",\n    \"Rest Area\",\n    \"Ride Share Location\",\n    \"Scooter Rental\",\n    \"Shuttle Service\",\n    \"Subway Station\",\n    \"Taxi Stand\",\n    \"Train Station\",\n    \"Travel Agency\",\n    \"Truck Stop\",\n  ],\n};\n\nexport const BusinessDiscovery: React.FC = () => {\n  const navigate = useNavigate();\n\n  // Handle job creation callback for navigation to progress page\n  const handleJobCreated = (jobData: {\n    jobId: string;\n    campaignId: string;\n    status: string;\n    estimatedTime?: number;\n  }) => {\n    console.log(\"🚀 Job created, navigating to progress page:\", jobData);\n    navigate(`/campaign/${jobData.campaignId}/progress?jobId=${jobData.jobId}`);\n  };\n\n  const {\n    startDiscovery,\n    isDiscovering,\n    progress,\n    currentStage,\n    cacheStats,\n    error,\n  } = useBusinessDiscovery(handleJobCreated);\n\n  const [selectedCategory, setSelectedCategory] = useState(\n    \"Home & Property Services\"\n  );\n  const [selectedBusinessType, setSelectedBusinessType] =\n    useState(\"Electrician\");\n  const [keywords, setKeywords] = useState(\"\");\n  const [location, setLocation] = useState(\"New York, NY\");\n  const [searchRadius, setSearchRadius] = useState(\"10 miles\");\n  const [expandGeography, setExpandGeography] = useState(false);\n  const [numberOfLeads, setNumberOfLeads] = useState(3);\n\n  // Progressive enrichment tier selection\n  const [selectedTier, setSelectedTier] =\n    useState<keyof typeof ENRICHMENT_TIERS>(\"BASE\");\n\n  // Navigate to progress page via handleJobCreated callback\n  // No longer need useEffect for navigation since we use the callback\n\n  const availableBusinessTypes =\n    businessTypesByCategory[selectedCategory] || [];\n\n  const currentTierConfig = ENRICHMENT_TIERS[selectedTier];\n  const estimatedCost = numberOfLeads * currentTierConfig.price;\n\n  const handleSearch = () => {\n    if (!location.trim()) {\n      alert(\"Please enter a location\");\n      return;\n    }\n\n    const config = {\n      search_terms: `${selectedBusinessType} ${keywords}`.trim(),\n      location: location.trim(),\n      business_type: selectedBusinessType,\n      budget_limit: estimatedCost,\n      max_results: numberOfLeads,\n      include_email_validation:\n        selectedTier === \"PROFESSIONAL\" || selectedTier === \"ENTERPRISE\",\n      include_website_validation: true,\n      min_confidence_score: 70,\n      chamber_verification: true, // Always enabled based on tier\n      trade_association: true, // Always enabled based on tier\n      professional_license: true, // Always enabled based on tier\n      selectedTier: selectedTier,\n      keywords: keywords,\n      search_radius: searchRadius,\n      expand_geography: expandGeography,\n    };\n\n    console.log(\"🚀 Starting campaign:\", config);\n    startDiscovery(config);\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-sm border border-gray-200 dark:border-gray-600\">\n      <div className=\"p-6 space-y-6\">{/* Business Category */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Business Category\n          </label>\n          <select\n            value={selectedCategory}\n            onChange={(e) => {\n              setSelectedCategory(e.target.value);\n              const types = businessTypesByCategory[e.target.value];\n              if (types && types.length > 0) {\n                setSelectedBusinessType(types[0]);\n              }\n            }}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n          >\n            {businessCategories.map((category) => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Business Type */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Business Type\n          </label>\n          <select\n            value={selectedBusinessType}\n            onChange={(e) => setSelectedBusinessType(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n          >\n            {availableBusinessTypes.map((type) => (\n              <option key={type} value={type}>\n                {type}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Additional Keywords */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Additional Keywords (Optional)\n          </label>\n          <input\n            type=\"text\"\n            value={keywords}\n            onChange={(e) => setKeywords(e.target.value)}\n            placeholder=\"e.g., luxury, organic, 24-hour (comma-separated)\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            Add comma-separated keywords to refine your search\n          </p>\n        </div>\n\n        {/* Location */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Location\n          </label>\n          <input\n            type=\"text\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            placeholder=\"e.g., San Francisco, CA or New York, NY\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400\"\n          />\n\n          <div className=\"mt-4 space-y-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Search Radius:\n              </label>\n              <select\n                value={searchRadius}\n                onChange={(e) => setSearchRadius(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n              >\n                <option value=\"5 miles\">5 miles</option>\n                <option value=\"10 miles\">10 miles</option>\n                <option value=\"25 miles\">25 miles</option>\n                <option value=\"50 miles\">50 miles</option>\n                <option value=\"100 miles\">100 miles</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"expandGeography\"\n                checked={expandGeography}\n                onChange={(e) => setExpandGeography(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700\"\n              />\n              <label\n                htmlFor=\"expandGeography\"\n                className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\"\n              >\n                Expand geography automatically if initial results are limited\n              </label>\n            </div>\n          </div>\n        </div>\n\n        {/* Progressive Enrichment Tier Selection */}\n        <TierSelector\n          selectedTier={selectedTier}\n          onTierChange={setSelectedTier}\n          numberOfLeads={numberOfLeads}\n        />\n\n        {/* Number of Leads */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Number of Leads\n          </label>\n          <div className=\"flex items-center space-x-4\">\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={numberOfLeads}\n              onChange={(e) => setNumberOfLeads(parseInt(e.target.value))}\n              className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer slider\"\n              style={{\n                background: `linear-gradient(to right, #f59e0b 0%, #f59e0b ${\n                  numberOfLeads * 10\n                }%, #e5e7eb ${numberOfLeads * 10}%, #e5e7eb 100%)`,\n              }}\n            />\n            <div className=\"bg-blue-500 dark:bg-blue-600 text-white px-3 py-1 rounded-full text-sm font-medium min-w-fit\">\n              {numberOfLeads} leads\n            </div>\n          </div>\n        </div>\n\n        {/* Actual Cost Display */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-green-50 dark:from-blue-900/20 dark:to-green-900/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-1\">\n                Actual Cost ({currentTierConfig.name} Tier)\n              </h3>\n              <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                {numberOfLeads} leads × ${currentTierConfig.price} per lead\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                ${estimatedCost.toFixed(2)}\n              </div>\n              <div className=\"text-xs text-gray-600 dark:text-gray-400\">Transparent pricing</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Progress Display */}\n        <ProgressDisplay\n          isDiscovering={isDiscovering}\n          progress={progress}\n          currentStage={currentStage}\n          cacheStats={cacheStats}\n        />\n\n        {/* Start Discovery Button */}\n        <div className=\"pt-4\">\n          <button\n            type=\"button\"\n            onClick={handleSearch}\n            disabled={isDiscovering}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-800 text-white font-medium py-3 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {isDiscovering ? (\n              <>\n                <svg\n                  className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle\n                    className=\"opacity-25\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"4\"\n                  ></circle>\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  ></path>\n                </svg>\n                Running Campaign ({progress}%)\n              </>\n            ) : (\n              \"Run Campaign\"\n            )}\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg\n                  className=\"h-5 w-5 text-red-400 dark:text-red-500\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n                  Discovery Failed\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n                  <p>\n                    {error instanceof Error ? error.message : String(error)}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":24,"duration":5.185},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":48,"duration":0.296},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":205,"duration":0.023},
{"type":"mark","name":"lsp.code_action","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.did_change_batched","count":53,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":53,"duration":9.511},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":206,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":49,"duration":0.205},
{"type":"mark","name":"lsp.inlay_hint","count":75,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":339,"character":0},"end":{"line":474,"character":18}}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":369,"character":0},"end":{"line":444,"character":51}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":3,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":7902,"length":2929},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":3,"duration":2.551},
{"type":"mark","name":"tsc.op.op_resolve","count":226,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":226,"duration":0.231},
{"type":"mark","name":"tsc.op.op_resolve","count":227,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":227,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":228,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":228,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":229,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":229,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":230,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":230,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":231,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":231,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":232,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":232,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":250,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":250,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":233,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":233,"duration":0.172},
{"type":"mark","name":"tsc.op.op_resolve","count":234,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":234,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":235,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":235,"duration":0.064},
{"type":"mark","name":"tsc.op.op_resolve","count":236,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":236,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":237,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":237,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":238,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":238,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":239,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":239,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":240,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":240,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":241,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":241,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":242,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":242,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":243,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":243,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":244,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":244,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":245,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":245,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":246,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":246,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":247,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":247,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":248,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":248,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":249,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":249,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":250,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":250,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":251,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":251,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":252,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":252,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":253,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":253,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":254,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":254,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":255,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":255,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":256,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":256,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":257,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":257,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":258,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":258,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":259,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":259,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":260,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":260,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":261,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":261,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":262,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":262,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":263,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":263,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":264,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":264,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":265,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":265,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":266,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":266,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":267,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":267,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":268,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":268,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":269,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":269,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":270,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":270,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":271,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":271,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":272,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":272,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":273,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":273,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":274,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":274,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":275,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":275,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":276,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":276,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":277,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":277,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":278,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":278,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":279,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":279,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":280,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":280,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":281,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":281,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":282,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":282,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":283,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":283,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":284,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":284,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":285,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":285,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":286,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":286,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":287,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":287,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":288,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":288,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":289,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":289,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":290,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":290,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":291,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":291,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":292,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":292,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":293,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":293,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":294,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":294,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":295,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":295,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":296,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":296,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":297,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":297,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":298,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":298,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":299,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":299,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":300,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":300,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":301,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":301,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":302,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":302,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":303,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":303,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":304,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":304,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":305,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":305,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":306,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":306,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":307,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":307,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":308,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":308,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":309,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":309,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":310,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":310,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":311,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":311,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":312,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":312,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":313,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":313,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":314,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":314,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":315,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":315,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":316,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":316,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":317,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":317,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":318,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":318,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":319,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":319,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":320,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":320,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":321,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":321,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":322,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":322,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":323,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":323,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":324,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":324,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":325,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":325,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":326,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":326,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":327,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":327,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":328,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":328,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":329,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":329,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":330,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":330,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":331,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":331,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":332,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":332,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":333,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":333,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":334,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":334,"duration":0.026},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":111,"duration":0.012},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":3,"duration":241.874},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":3,"duration":242.114},
{"type":"measure","name":"lsp.semantic_tokens_range","count":3,"duration":242.271},
{"type":"mark","name":"lsp.inlay_hint","count":76,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":74,"character":24}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":41,"duration":0.008},
{"type":"mark","name":"lsp.code_action","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":77,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":74,"character":24}}}},
{"type":"mark","name":"lsp.inlay_hint","count":78,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":74,"character":24}}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":44,"character":24}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":4,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":1238},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":4,"duration":6.165},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":4,"duration":7.873},
{"type":"measure","name":"lsp.semantic_tokens_range","count":4,"duration":7.986},
{"type":"mark","name":"lsp.code_action","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.folding_range","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":5,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":20068},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":5,"duration":19.078},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":5,"duration":19.236},
{"type":"measure","name":"lsp.semantic_tokens_full","count":2,"duration":19.409},
{"type":"mark","name":"lsp.document_symbol","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":79,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":75,"character":18}}}},
{"type":"mark","name":"lsp.inlay_hint","count":80,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":265,"character":0},"end":{"line":433,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":81,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":265,"character":0},"end":{"line":434,"character":36}}}},
{"type":"mark","name":"lsp.did_change_batched","count":54,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":54,"duration":2.323},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":50,"duration":0.244},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":42,"duration":0.024},
{"type":"mark","name":"lsp.did_change_batched","count":55,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":55,"duration":2.867},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":51,"duration":0.21},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":43,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":56,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":56,"duration":2.704},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":52,"duration":0.141},
{"type":"mark","name":"lsp.did_change_watched_files","count":12,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/dist/.vercel/project.json","type":1},{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":12,"duration":0.021},
{"type":"mark","name":"lsp.did_change_watched_files","count":13,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":13,"duration":0.015},
{"type":"mark","name":"lsp.document_symbol","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.did_open","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { supabase } from \"../lib/supabase\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\n\ninterface Campaign {\n  id: string;\n  campaign_id?: string;\n  business_type: string;\n  location: string;\n  status: string;\n  results_count: number;\n  leads_found?: number;\n  leads_qualified?: number;\n  total_cost: number;\n  created_at: string;\n}\n\nexport const Dashboard: React.FC = () => {\n  const { sessionUserId, user } = useAuth();\n  const { campaigns: localCampaigns, leads: localLeads } = useCampaignStore();\n  const navigate = useNavigate();\n\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch user-aware campaigns from database\n  useEffect(() => {\n    const fetchCampaigns = async () => {\n      if (!sessionUserId) {\n        console.log(\"⏳ Waiting for session initialization...\");\n        return;\n      }\n\n      try {\n        setLoading(true);\n        console.log(\"📊 Fetching campaigns for user:\", sessionUserId);\n\n        // Query campaigns with user context\n        let query = supabase.from(\"campaigns\").select(\"*\");\n\n        // Build query based on authentication state\n        if (user?.id) {\n          // Authenticated user: match user_id OR session_user_id\n          query = query.or(\n            `user_id.eq.${user.id},session_user_id.eq.${sessionUserId}`\n          );\n        } else if (sessionUserId) {\n          // Anonymous user: match session_user_id only\n          query = query.eq(\"session_user_id\", sessionUserId);\n        } else {\n          // No user context - show nothing\n          setCampaigns([]);\n          setLoading(false);\n          return;\n        }\n\n        const { data, error } = await query.order(\"created_at\", {\n          ascending: false,\n        });\n\n        if (error) {\n          console.error(\"❌ Error fetching campaigns:\", error);\n          setError(error.message);\n          return;\n        }\n\n        console.log(\"✅ Campaigns loaded:\", data?.length || 0);\n        setCampaigns(data || []);\n      } catch (err) {\n        console.error(\"❌ Unexpected error:\", err);\n        setError(\n          err instanceof Error ? err.message : \"Failed to load campaigns\"\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCampaigns();\n  }, [sessionUserId, user?.id]);\n\n  // Calculate stats from database campaigns\n  const totalCost = campaigns.reduce(\n    (sum, campaign) => sum + (campaign.total_cost || 0),\n    0\n  );\n  const totalLeads = campaigns.reduce(\n    (sum, campaign) => sum + (campaign.results_count || 0),\n    0\n  );\n  const qualifiedLeads = localLeads.filter(\n    (lead) => lead.confidence_score >= 80\n  ).length;\n\n  // Fallback to local store data if no database campaigns\n  const stats = [\n    {\n      name: \"Total Campaigns\",\n      value: campaigns.length || localCampaigns.length,\n      icon: \"🚀\",\n    },\n    { name: \"Total Leads\", value: totalLeads || localLeads.length, icon: \"👥\" },\n    { name: \"Qualified Leads\", value: qualifiedLeads, icon: \"✅\" },\n    { name: \"Total Cost\", value: `$${totalCost.toFixed(2)}`, icon: \"💰\" },\n  ];\n\n  const recentCampaigns =\n    campaigns.length > 0 ? campaigns.slice(0, 5) : localCampaigns.slice(0, 5);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Loading campaigns...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n        <div className=\"flex\">\n          <div className=\"text-red-500 dark:text-red-400 text-xl mr-3\">⚠️</div>\n          <div>\n            <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n              Error loading campaigns\n            </h3>\n            <p className=\"text-sm text-red-700 dark:text-red-300 mt-1\">{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Dashboard</h1>\n        <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n          Overview of your lead generation campaigns and results\n        </p>\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n        {stats.map((stat) => (\n          <div\n            key={stat.name}\n            className=\"bg-white dark:bg-gray-700 overflow-hidden shadow rounded-lg border border-gray-200 dark:border-gray-600\"\n          >\n            <div className=\"p-5\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <span className=\"text-2xl\">{stat.icon}</span>\n                </div>\n                <div className=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400 truncate\">\n                      {stat.name}\n                    </dt>\n                    <dd className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\n                      {stat.value}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Recent Campaigns */}\n      <div className=\"bg-white dark:bg-gray-700 shadow rounded-lg border border-gray-200 dark:border-gray-600\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-gray-100 mb-4\">\n            Recent Campaigns\n          </h3>\n          {recentCampaigns.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <span className=\"text-4xl\">🔍</span>\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-gray-100\">\n                No campaigns yet\n              </h3>\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                Get started by creating your first lead discovery campaign.\n              </p>\n              <div className=\"mt-6\">\n                <a\n                  href=\"/discovery\"\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 focus:ring-blue-500 dark:focus:ring-blue-400 transition-colors\"\n                >\n                  Start Discovery\n                </a>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {recentCampaigns.map((campaign: any) => {\n                const campaignId = campaign.id || campaign.campaign_id || \"\";\n                const leadsCount =\n                  campaign.results_count || campaign.leads_found || 0;\n                const qualifiedCount = campaign.leads_qualified || 0;\n\n                return (\n                  <div\n                    key={campaignId}\n                    className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer transition-colors\"\n                    onClick={() => navigate(`/campaign?id=${campaignId}`)}\n                  >\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center\">\n                        <span\n                          className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            campaign.status === \"completed\"\n                              ? \"bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200\"\n                              : campaign.status === \"running\"\n                              ? \"bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200\"\n                              : campaign.status === \"failed\"\n                              ? \"bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200\"\n                              : \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200\"\n                          }`}\n                        >\n                          {campaign.status}\n                        </span>\n                        <span className=\"ml-3 text-sm font-weight-medium text-gray-900 dark:text-gray-100\">\n                          {campaign.business_type} in {campaign.location}\n                        </span>\n                      </div>\n                      <div className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                        {leadsCount} results • {qualifiedCount} qualified • $\n                        {campaign.total_cost.toFixed(2)} cost\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {new Date(campaign.created_at).toLocaleDateString()}\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          navigate(`/campaign?id=${campaignId}`);\n                        }}\n                        className=\"text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 text-sm font-medium transition-colors\"\n                      >\n                        View Details →\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":25,"duration":8.193},
{"type":"mark","name":"lsp.goto_definition","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx"},"position":{"line":4,"character":9}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":53,"duration":0.291},
{"type":"mark","name":"lsp.goto_definition","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx"},"position":{"line":23,"character":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":57,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":57,"duration":2.874},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":54,"duration":0.143},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":207,"duration":0.023},
{"type":"mark","name":"lsp.code_action","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":82,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":17}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":6,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":21168},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":4,"duration":0.606},
{"type":"mark","name":"tsc.op.op_resolve","count":335,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":335,"duration":0.173},
{"type":"mark","name":"tsc.op.op_resolve","count":336,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":336,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":337,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":337,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":338,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":338,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":339,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":339,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":340,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":340,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":341,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":341,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":251,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":251,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":342,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":342,"duration":0.126},
{"type":"mark","name":"tsc.op.op_load","count":252,"args":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":252,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":343,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"],[false,"../stores/campaignStore"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":343,"duration":0.071},
{"type":"mark","name":"tsc.op.op_resolve","count":344,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":344,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":345,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":345,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":346,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":346,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":347,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":347,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":348,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":348,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":349,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":349,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":350,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":350,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":351,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":351,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":352,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":352,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":353,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":353,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":354,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":354,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":355,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":355,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":356,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":356,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":357,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":357,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":358,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":358,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":359,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":359,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":360,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":360,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":361,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":361,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":362,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":362,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":363,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":363,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":364,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":364,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":365,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":365,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":366,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":366,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":367,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":367,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":368,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":368,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":369,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":369,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":370,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":370,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":371,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":371,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":372,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":372,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":373,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":373,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":374,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":374,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":375,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":375,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":376,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":376,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":377,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":377,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":378,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":378,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":379,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":379,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":380,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":380,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":381,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":381,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":382,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":382,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":383,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":383,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":384,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":384,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":385,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":385,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":386,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":386,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":387,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":387,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":388,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":388,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":389,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":389,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":390,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":390,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":391,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":391,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":392,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":392,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":393,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":393,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":394,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":394,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":395,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":395,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":396,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":396,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":397,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":397,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":398,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":398,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":399,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":399,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":400,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":400,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":401,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":401,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":402,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":402,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":403,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":403,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":404,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":404,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":405,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":405,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":406,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":406,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":407,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":407,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":408,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":408,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":409,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":409,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":410,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":410,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":411,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":411,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":412,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":412,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":413,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":413,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":414,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":414,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":415,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":415,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":416,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":416,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":417,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":417,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":418,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":418,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":419,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":419,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":420,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":420,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":421,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":421,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":422,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":422,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":423,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":423,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":424,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":424,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":425,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":425,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":426,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":426,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":427,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":427,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":428,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":428,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":429,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":429,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":430,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":430,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":431,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":431,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":432,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":432,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":433,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":433,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":434,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":434,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":435,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":435,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":436,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":436,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":437,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":437,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":438,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":438,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":439,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":439,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":440,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":440,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":441,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":441,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":442,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":442,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":443,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":443,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":444,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":444,"duration":0.03},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":6,"duration":68.072},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":6,"duration":68.249},
{"type":"measure","name":"lsp.semantic_tokens_full","count":3,"duration":68.399},
{"type":"mark","name":"lsp.folding_range","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":44,"duration":0.023},
{"type":"mark","name":"lsp.code_lens","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":83,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":58,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":58,"duration":5.817},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":208,"duration":0.025},
{"type":"measure","name":"lsp.testing_update","count":55,"duration":0.221},
{"type":"mark","name":"lsp.folding_range","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":7,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":21426},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":5,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":253,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":253,"duration":0.071},
{"type":"mark","name":"tsc.op.op_resolve","count":445,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":445,"duration":0.135},
{"type":"mark","name":"lsp.inlay_hint","count":84,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.document_symbol","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":7,"duration":65.733},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":7,"duration":65.9},
{"type":"measure","name":"lsp.semantic_tokens_full","count":4,"duration":66.043},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":45,"duration":0.023},
{"type":"mark","name":"lsp.code_action","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":85,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":86,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":59,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":59,"duration":23.869},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":209,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":56,"duration":0.258},
{"type":"mark","name":"lsp.inlay_hint","count":87,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":8,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":20276},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":6,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":254,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":254,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":446,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":446,"duration":0.149},
{"type":"mark","name":"lsp.document_symbol","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":8,"duration":80.957},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":8,"duration":82.955},
{"type":"measure","name":"lsp.semantic_tokens_full","count":5,"duration":83.103},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":46,"duration":0.023},
{"type":"mark","name":"lsp.code_lens","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":88,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":89,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":60,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":60,"duration":12.506},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":210,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":57,"duration":0.242},
{"type":"mark","name":"lsp.inlay_hint","count":90,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":9,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":20693},"2020"]}},
{"type":"mark","name":"lsp.document_symbol","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":7,"duration":0.038},
{"type":"mark","name":"tsc.op.op_load","count":255,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":255,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":447,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":447,"duration":0.193},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":9,"duration":258.621},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":9,"duration":260.554},
{"type":"measure","name":"lsp.semantic_tokens_full","count":6,"duration":260.723},
{"type":"mark","name":"lsp.code_action","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":47,"duration":0.033},
{"type":"mark","name":"lsp.code_lens","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":91,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":92,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":61,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":61,"duration":2.794},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":211,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":58,"duration":0.213},
{"type":"mark","name":"lsp.inlay_hint","count":93,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":10,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":19327},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":8,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":256,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":256,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":448,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":448,"duration":4.223},
{"type":"mark","name":"lsp.document_symbol","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":10,"duration":73.805},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":10,"duration":73.961},
{"type":"measure","name":"lsp.semantic_tokens_full","count":7,"duration":74.109},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":48,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":94,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":95,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":62,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":62,"duration":4.068},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":212,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":59,"duration":0.22},
{"type":"mark","name":"lsp.inlay_hint","count":96,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":11,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":19271},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":9,"duration":0.04},
{"type":"mark","name":"tsc.op.op_load","count":257,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":257,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":449,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":449,"duration":0.093},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":11,"duration":20.401},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":11,"duration":20.588},
{"type":"measure","name":"lsp.semantic_tokens_full","count":8,"duration":20.707},
{"type":"mark","name":"lsp.document_symbol","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":49,"duration":0.022},
{"type":"mark","name":"lsp.code_action","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":97,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":98,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_close","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":11,"duration":1.055},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":60,"duration":0.229},
{"type":"mark","name":"lsp.code_action","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts","languageId":"typescript","version":1,"text":"// Business Discovery Types\nexport interface BusinessLead {\n  id: string;\n  campaign_id?: string;\n  business_name: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  industry?: string;\n  confidence_score: number;\n  validation_status: \"pending\" | \"validating\" | \"validated\" | \"failed\";\n  created_at: string;\n  cost_to_acquire: number;\n  data_sources: string[];\n  // Progressive enrichment fields\n  enrichment_tier?: string;\n  vault_secured?: boolean;\n  enrichment_data?: {\n    emails?: Array<{\n      email: string;\n      confidence: number;\n      verified: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    businessLicense?: {\n      isValid: boolean;\n      licenseNumber?: string;\n      status?: string;\n      expirationDate?: string;\n      professionalType?: string;\n      source: string;\n    };\n    companyInfo?: {\n      name?: string;\n      industry?: string;\n      size?: string;\n      founded?: number;\n      revenue?: string;\n      website?: string;\n      description?: string;\n      source: string;\n    };\n    hunterVerified?: boolean;\n    neverBounceVerified?: boolean;\n    licenseVerified?: boolean;\n    processingMetadata?: {\n      servicesUsed?: string[];\n      servicesSkipped?: string[];\n      totalCost?: number;\n      validationCost?: number;\n      enrichmentCost?: number;\n      enrichmentTier?: string;\n      enrichmentCostBreakdown?: {\n        businessLicenseCost: number;\n        companyEnrichmentCost: number;\n        hunterCost: number;\n        neverBounceCost: number;\n        personEnrichmentCost: number;\n        apolloCost: number;\n        complianceCost: number;\n      };\n    };\n    dataSources?: string[];\n  };\n}\n\nexport interface CampaignConfig {\n  search_terms: string;\n  location: string;\n  business_type?: string;\n  budget_limit: number;\n  max_results: number;\n  include_email_validation: boolean;\n  include_website_validation: boolean;\n  min_confidence_score: number;\n  chamber_verification?: boolean;\n  trade_association?: boolean;\n  professional_license?: boolean;\n  keywords?: string;\n  search_radius?: string;\n  expand_geography?: boolean;\n}\n\nexport interface ValidationResult {\n  field: string;\n  is_valid: boolean;\n  confidence: number;\n  source: string;\n  details?: string;\n}\n\nexport interface CampaignResult {\n  campaign_id: string;\n  business_type?: string;\n  location?: string;\n  status: \"running\" | \"completed\" | \"failed\" | \"cancelled\";\n  progress: number;\n  total_cost: number;\n  leads_found: number;\n  leads_qualified: number;\n  leads_validated: number;\n  created_at: string;\n  completed_at?: string;\n  error_message?: string;\n  // Progressive enrichment fields\n  tier_used?: string;\n  vault_secured?: boolean;\n  cache_performance?: {\n    cache_hits: number;\n    cache_misses: number;\n    cache_hit_ratio: number;\n    cost_savings: number;\n  };\n}\n\n// Census Intelligence Types\nexport interface CensusIntelligence {\n  business_density: {\n    total_establishments: number;\n    density_score: number;\n    confidence_multiplier: number;\n  };\n  geographic_optimization: {\n    optimal_radius: number;\n    expected_results: number;\n    api_efficiency_score: number;\n  };\n  market_insights: {\n    market_density: \"High\" | \"Medium\" | \"Low\";\n    competition_level: \"High\" | \"Medium\" | \"Low\";\n    search_optimization: string;\n  };\n}\n\n// API Response Types\nexport interface EdgeFunctionResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  cost?: number;\n  processing_time?: number;\n}\n\nexport interface BusinessDiscoveryResponse {\n  businesses: BusinessLead[];\n  total_cost: number;\n  processing_time: string;\n  campaign_id: string;\n  qualified_count: number;\n  total_found: number;\n  census_intelligence?: CensusIntelligence;\n  // Background job fields\n  job_id?: string; // For tracking background processing\n  status?: string; // Job status (pending, processing, completed, failed)\n  estimated_time?: number; // Estimated completion time in seconds\n  realtime_channel?: string; // Channel for real-time updates\n  // Progressive enrichment fields (vault-secured)\n  tier_used?: string;\n  cache_performance?: {\n    cache_hits: number;\n    cache_misses: number;\n    cache_hit_ratio: number;\n    cost_savings: number;\n  };\n  vault_status?: string;\n  stage_progress?: number;\n  current_stage?: string;\n}\n\n// Store Types\nexport interface CampaignStore {\n  campaigns: CampaignResult[];\n  currentCampaign: CampaignResult | null;\n  leads: BusinessLead[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface UIStore {\n  sidebarOpen: boolean;\n  theme: \"light\" | \"dark\";\n  notifications: Notification[];\n}\n\nexport interface Notification {\n  id: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  title: string;\n  message: string;\n  timestamp: number;\n}\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":61,"duration":0.232},
{"type":"measure","name":"lsp.did_open","count":26,"duration":1.845},
{"type":"mark","name":"lsp.did_change_batched","count":63,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":63,"duration":3.839},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":213,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":62,"duration":0.248},
{"type":"mark","name":"lsp.inlay_hint","count":99,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":100,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":12,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":19276},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":5,"duration":0.392},
{"type":"mark","name":"tsc.op.op_resolve","count":450,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":450,"duration":0.176},
{"type":"mark","name":"tsc.op.op_resolve","count":451,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":451,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":452,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":452,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":453,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":453,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":454,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":454,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":455,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":455,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":456,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":456,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":258,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":258,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":457,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":457,"duration":0.14},
{"type":"mark","name":"tsc.op.op_load","count":259,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":259,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":458,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":458,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":459,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":459,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":460,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":460,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":461,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":461,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":462,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":462,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":463,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":463,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":464,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":464,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":465,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":465,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":466,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":466,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":467,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":467,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":468,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":468,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":469,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":469,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":470,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":470,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":471,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":471,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":472,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":472,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":473,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":473,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":474,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":474,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":475,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":475,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":476,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":476,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":477,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":477,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":478,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":478,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":479,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":479,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":480,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":480,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":481,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":481,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":482,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":482,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":483,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":483,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":484,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":484,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":485,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":485,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":486,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":486,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":487,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":487,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":488,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":488,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":489,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":489,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":490,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":490,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":491,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":491,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":492,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":492,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":493,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":493,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":494,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":494,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":495,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":495,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":496,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":496,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":497,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":497,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":498,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":498,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":499,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":499,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":500,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":500,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":501,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":501,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":502,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":502,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":503,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":503,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":504,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":504,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":505,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":505,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":506,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":506,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":507,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":507,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":508,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":508,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":509,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":509,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":510,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":510,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":511,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":511,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":512,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":512,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":513,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":513,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":514,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":514,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":515,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":515,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":516,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":516,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":517,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":517,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":518,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":518,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":519,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":519,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":520,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":520,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":521,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":521,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":522,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":522,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":523,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":523,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":524,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":524,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":525,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":525,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":526,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":526,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":527,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":527,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":528,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":528,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":529,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":529,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":530,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":530,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":531,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":531,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":532,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":532,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":533,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":533,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":534,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":534,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":535,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":535,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":536,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":536,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":537,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":537,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":538,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":538,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":539,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":539,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":540,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":540,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":541,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":541,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":542,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":542,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":543,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":543,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":544,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":544,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":545,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":545,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":546,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":546,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":547,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":547,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":548,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":548,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":549,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":549,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":550,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":550,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":551,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":551,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":552,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":552,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":553,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":553,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":554,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":554,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":555,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":555,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":556,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":556,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":557,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":557,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":558,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":558,"duration":0.02},
{"type":"mark","name":"tsc.op.op_release","count":2,"args":"file:///workspaces/ProspectPro/src/pages/Dashboard.tsx"},
{"type":"measure","name":"tsc.op.op_release","count":2,"duration":1.027},
{"type":"mark","name":"lsp.document_symbol","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":12,"duration":72.976},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":12,"duration":73.45},
{"type":"measure","name":"lsp.semantic_tokens_full","count":9,"duration":73.581},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":50,"duration":0.023},
{"type":"mark","name":"lsp.code_lens","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":101,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":102,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.hover","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":1,"character":8}}},
{"type":"mark","name":"lsp.hover","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":1,"character":6}}},
{"type":"mark","name":"lsp.did_open","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts","languageId":"typescript","version":1,"text":"import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\"Missing Supabase environment variables\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n  },\n});\n\n// Helper function to get current session token for Edge Function calls\nexport const getSessionToken = async (): Promise<string | null> => {\n  const {\n    data: { session },\n    error,\n  } = await supabase.auth.getSession();\n\n  if (error) {\n    console.error(\"Error getting session:\", error);\n    return null;\n  }\n\n  // Return the access token (JWT) from the session\n  return session?.access_token ?? null;\n};\n\n// Helper function to ensure we have a valid session\nexport const ensureSession = async (): Promise<boolean> => {\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  // If no session, create anonymous session\n  if (!session) {\n    console.log(\"No session found, creating anonymous session...\");\n    const { data, error } = await supabase.auth.signInAnonymously();\n\n    if (error) {\n      console.error(\"Failed to create anonymous session:\", error);\n      return false;\n    }\n\n    console.log(\"✅ Anonymous session created:\", data.session?.user?.id);\n    return true;\n  }\n\n  return true;\n};\n\n// Edge Functions URL\nexport const EDGE_FUNCTIONS_URL =\n  import.meta.env.VITE_EDGE_FUNCTIONS_URL || `${supabaseUrl}/functions/v1`;\n\n// Edge Function endpoints for vault-secured progressive enrichment\nexport const EDGE_FUNCTIONS = {\n  // Progressive Enrichment Orchestrator (vault-secured)\n  ENRICHMENT_ORCHESTRATOR: `${EDGE_FUNCTIONS_URL}/enrichment-orchestrator`,\n\n  // Individual enrichment services (vault-secured)\n  ENRICHMENT_BUSINESS_LICENSE: `${EDGE_FUNCTIONS_URL}/enrichment-business-license`,\n  ENRICHMENT_PDL: `${EDGE_FUNCTIONS_URL}/enrichment-pdl`,\n  ENRICHMENT_HUNTER: `${EDGE_FUNCTIONS_URL}/enrichment-hunter`,\n  ENRICHMENT_NEVERBOUNCE: `${EDGE_FUNCTIONS_URL}/enrichment-neverbounce`,\n\n  // Legacy endpoints (for backward compatibility)\n  ENHANCED_BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/enhanced-business-discovery`,\n  LEAD_VALIDATION: `${EDGE_FUNCTIONS_URL}/lead-validation-edge`,\n  BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/business-discovery-edge`,\n  DIAGNOSTICS: `${EDGE_FUNCTIONS_URL}/diag`,\n} as const;\n\n// Progressive Enrichment Tiers - Consolidated to 3 Tiers\nexport const ENRICHMENT_TIERS = {\n  BASE: {\n    name: \"Base\",\n    price: 0.15, // Essential Business Data\n    stages: [\"business-verification\", \"company-data\"],\n    description:\n      \"Essential Business Data - Perfect for targeted outreach campaigns\",\n    features: [\n      \"Business verification\",\n      \"Company data (name, industry, size)\",\n      \"Phone & address validation\",\n      \"Generic company email\",\n    ],\n    badge: \"Most Popular\",\n    hasOwnershipData: false,\n  },\n  PROFESSIONAL: {\n    name: \"Professional\",\n    price: 0.45, // Enhanced Sales Intelligence\n    stages: [\n      \"business-verification\",\n      \"company-data\",\n      \"email-discovery\",\n      \"email-verification\",\n    ],\n    description:\n      \"Enhanced Sales Intelligence - Verified contacts for higher conversion rates\",\n    features: [\n      \"Everything in Base\",\n      \"Professional email discovery & verification\",\n      \"Email deliverability verification\",\n      \"Enhanced company enrichment\",\n    ],\n    badge: \"\",\n    hasOwnershipData: false,\n  },\n  ENTERPRISE: {\n    name: \"Enterprise\",\n    price: 2.5, // Premium Executive Access\n    stages: [\n      \"business-verification\",\n      \"company-data\",\n      \"email-discovery\",\n      \"email-verification\",\n      \"executive-enrichment\",\n      \"compliance-verification\",\n    ],\n    description:\n      \"Premium Executive Access - Compliance-grade data with C-suite contacts\",\n    features: [\n      \"Everything in Professional\",\n      \"Executive contact enrichment\",\n      \"Full compliance verification\",\n      \"Advanced data validation\",\n    ],\n    badge: \"Premium\",\n    hasOwnershipData: true,\n  },\n} as const;\n"}}},
{"type":"measure","name":"lsp.did_open","count":27,"duration":1.941},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":63,"duration":0.255},
{"type":"mark","name":"lsp.goto_definition","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts"},"position":{"line":81,"character":4}}},
{"type":"mark","name":"lsp.goto_definition","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":434,"character":58}}},
{"type":"mark","name":"lsp.goto_definition","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},"position":{"line":22,"character":2}}},
{"type":"mark","name":"tsc.request.getDefinitionAndBoundSpan"},
{"type":"mark","name":"tsc.host.getDefinitionAndBoundSpan","count":1,"args":{"GetDefinitionAndBoundSpan":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",826]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":6,"duration":0.494},
{"type":"mark","name":"tsc.op.op_resolve","count":559,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":559,"duration":0.14},
{"type":"mark","name":"tsc.op.op_resolve","count":560,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":560,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":561,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":561,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":562,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":562,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":563,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":563,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":564,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":564,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":260,"args":"file:///workspaces/ProspectPro/src/lib/supabase.ts"},
{"type":"measure","name":"tsc.op.op_load","count":260,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":565,"args":{"base":"file:///workspaces/ProspectPro/src/lib/supabase.ts","specifiers":[[false,"@supabase/supabase-js"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":565,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":566,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":566,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":567,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":567,"duration":0.106},
{"type":"mark","name":"tsc.op.op_resolve","count":568,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":568,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":569,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":569,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":570,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":570,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":571,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":571,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":572,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":572,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":573,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":573,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":574,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":574,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":575,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":575,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":576,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":576,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":577,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":577,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":578,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":578,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":579,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":579,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":580,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":580,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":581,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":581,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":582,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":582,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":583,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":583,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":584,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":584,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":585,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":585,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":586,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":586,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":587,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":587,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":588,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":588,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":589,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":589,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":590,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":590,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":591,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":591,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":592,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":592,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":593,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":593,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":594,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":594,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":595,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":595,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":596,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":596,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":597,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":597,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":598,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":598,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":599,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":599,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":600,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":600,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":601,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":601,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":602,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":602,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":603,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":603,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":604,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":604,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":605,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":605,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":606,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":606,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":607,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":607,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":608,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":608,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":609,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":609,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":610,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":610,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":611,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":611,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":612,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":612,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":613,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":613,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":614,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":614,"duration":0.081},
{"type":"mark","name":"tsc.op.op_resolve","count":615,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":615,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":616,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":616,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":617,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":617,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":618,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":618,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":619,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":619,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":620,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":620,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":621,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":621,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":622,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":622,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":623,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":623,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":624,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":624,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":625,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":625,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":626,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":626,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":627,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":627,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":628,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":628,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":629,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":629,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":630,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":630,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":631,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":631,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":632,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":632,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":633,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":633,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":634,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":634,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":635,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":635,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":636,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":636,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":637,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":637,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":638,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":638,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":639,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":639,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":640,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":640,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":641,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":641,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":642,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":642,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":643,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":643,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":644,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":644,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":645,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":645,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":646,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":646,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":647,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":647,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":648,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":648,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":649,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":649,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":650,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":650,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":651,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":651,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":652,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":652,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":653,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":653,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":654,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":654,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":655,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":655,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":656,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":656,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":657,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":657,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":658,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":658,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":659,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":659,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":660,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":660,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":661,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":661,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":662,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":662,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":663,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":663,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":664,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":664,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":665,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":665,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":666,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":666,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":667,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":667,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":668,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":668,"duration":0.032},
{"type":"measure","name":"tsc.host.getDefinitionAndBoundSpan","count":1,"duration":42.851},
{"type":"measure","name":"tsc.request.getDefinitionAndBoundSpan","count":1,"duration":43.037},
{"type":"measure","name":"lsp.goto_definition","count":8,"duration":43.247},
{"type":"mark","name":"lsp.did_change_batched","count":64,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":64,"duration":5.511},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":214,"duration":0.013},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":64,"duration":0.233},
{"type":"mark","name":"lsp.inlay_hint","count":103,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":104,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":13,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":19179},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":10,"duration":0.022},
{"type":"mark","name":"tsc.op.op_load","count":261,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":261,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":669,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":669,"duration":0.139},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":13,"duration":30.59},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":13,"duration":30.751},
{"type":"measure","name":"lsp.semantic_tokens_full","count":10,"duration":30.884},
{"type":"mark","name":"lsp.document_symbol","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":51,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":105,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.document_symbol","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":106,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_close","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":12,"duration":0.964},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":65,"duration":0.206},
{"type":"mark","name":"lsp.code_action","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":65,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":65,"duration":3.021},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":215,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":66,"duration":0.23},
{"type":"mark","name":"lsp.inlay_hint","count":107,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":108,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.folding_range","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":14,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":19133},"2020"]}},
{"type":"mark","name":"lsp.document_symbol","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":7,"duration":0.636},
{"type":"mark","name":"tsc.op.op_resolve","count":670,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":670,"duration":0.18},
{"type":"mark","name":"tsc.op.op_resolve","count":671,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":671,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":672,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":672,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":673,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":673,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":674,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":674,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":675,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":675,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":676,"args":{"base":"file:///workspaces/ProspectPro/src/lib/supabase.ts","specifiers":[[false,"@supabase/supabase-js"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":676,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":677,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":677,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":262,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":262,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":678,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/GeographicSelector"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":678,"duration":0.142},
{"type":"mark","name":"tsc.op.op_resolve","count":679,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":679,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":680,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":680,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":681,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":681,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":682,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":682,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":683,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":683,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":684,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":684,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":685,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":685,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":686,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":686,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":687,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":687,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":688,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":688,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":689,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":689,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":690,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":690,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":691,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":691,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":692,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":692,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":693,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":693,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":694,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":694,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":695,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":695,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":696,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":696,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":697,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":697,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":698,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":698,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":699,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":699,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":700,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":700,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":701,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":701,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":702,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":702,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":703,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":703,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":704,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":704,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":705,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":705,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":706,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":706,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":707,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":707,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":708,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":708,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":709,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":709,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":710,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":710,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":711,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":711,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":712,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":712,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":713,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":713,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":714,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":714,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":715,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":715,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":716,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":716,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":717,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":717,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":718,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":718,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":719,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":719,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":720,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":720,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":721,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":721,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":722,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":722,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":723,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":723,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":724,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":724,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":725,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":725,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":726,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":726,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":727,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":727,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":728,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":728,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":729,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":729,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":730,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":730,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":731,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":731,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":732,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":732,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":733,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":733,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":734,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":734,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":735,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":735,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":736,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":736,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":737,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":737,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":738,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":738,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":739,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":739,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":740,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":740,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":741,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":741,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":742,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":742,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":743,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":743,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":744,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":744,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":745,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":745,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":746,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":746,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":747,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":747,"duration":2.062},
{"type":"mark","name":"tsc.op.op_resolve","count":748,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":748,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":749,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":749,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":750,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":750,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":751,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":751,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":752,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":752,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":753,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":753,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":754,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":754,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":755,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":755,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":756,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":756,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":757,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":757,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":758,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":758,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":759,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":759,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":760,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":760,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":761,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":761,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":762,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":762,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":763,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":763,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":764,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":764,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":765,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":765,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":766,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":766,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":767,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":767,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":768,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":768,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":769,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":769,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":770,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":770,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":771,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":771,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":772,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":772,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":773,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":773,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":774,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":774,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":775,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":775,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":776,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":776,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":777,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":777,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":778,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":778,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":779,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":779,"duration":0.029},
{"type":"mark","name":"tsc.op.op_release","count":3,"args":"file:///workspaces/ProspectPro/src/types/index.ts"},
{"type":"measure","name":"tsc.op.op_release","count":3,"duration":10.076},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":14,"duration":223.979},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":14,"duration":227.391},
{"type":"measure","name":"lsp.semantic_tokens_full","count":11,"duration":227.991},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":52,"duration":0.022},
{"type":"mark","name":"lsp.code_lens","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":109,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.inlay_hint","count":110,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":102,"character":17}}}},
{"type":"mark","name":"lsp.code_action","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":66,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":67,"duration":0.264},
{"type":"measure","name":"lsp.did_change_batched","count":66,"duration":3.942},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":216,"duration":0.01},
{"type":"mark","name":"lsp.inlay_hint","count":111,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":112,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":20}}}},
{"type":"mark","name":"lsp.folding_range","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.code_lens","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":15,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":20912},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":11,"duration":0.016},
{"type":"mark","name":"tsc.op.op_load","count":263,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":263,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":780,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":780,"duration":0.12},
{"type":"mark","name":"tsc.op.op_resolve","count":781,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":781,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":782,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":782,"duration":0.009},
{"type":"mark","name":"tsc.op.op_resolve","count":783,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":783,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":784,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":784,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":785,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":785,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":786,"args":{"base":"file:///workspaces/ProspectPro/src/lib/supabase.ts","specifiers":[[false,"@supabase/supabase-js"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":786,"duration":0.008},
{"type":"mark","name":"tsc.op.op_resolve","count":787,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":787,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":788,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":788,"duration":0.048},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":15,"duration":29.793},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":15,"duration":29.966},
{"type":"measure","name":"lsp.semantic_tokens_full","count":12,"duration":30.082},
{"type":"mark","name":"lsp.document_symbol","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":113,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":20}}}},
{"type":"mark","name":"lsp.code_action","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":14,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":14,"duration":0.016},
{"type":"mark","name":"lsp.did_change_watched_files","count":15,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":15,"duration":0.017},
{"type":"mark","name":"lsp.did_close","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts"}}},
{"type":"measure","name":"lsp.did_close","count":13,"duration":0.816},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":68,"duration":0.274},
{"type":"mark","name":"lsp.hover","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":2,"character":14}}},
{"type":"mark","name":"lsp.goto_definition","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},"position":{"line":14,"character":13}}},
{"type":"mark","name":"lsp.goto_definition","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"position":{"line":14,"character":13}}},
{"type":"mark","name":"lsp.goto_definition","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"position":{"line":5,"character":41}}},
{"type":"mark","name":"lsp.goto_definition","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"},"position":{"line":7,"character":13}}},
{"type":"mark","name":"lsp.goto_definition","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"position":{"line":2,"character":17}}},
{"type":"mark","name":"lsp.did_close","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"measure","name":"lsp.did_close","count":15,"duration":0.941},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":372,"duration":0.235},
{"type":"mark","name":"lsp.inlay_hint","count":203,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.did_change_batched","count":366,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":366,"duration":14.87},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":676,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":373,"duration":0.237},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":59,"duration":0.031},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":677,"duration":0.025},
{"type":"mark","name":"lsp.inlay_hint","count":204,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.did_change_batched","count":367,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":367,"duration":2.153},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":678,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":374,"duration":0.246},
{"type":"mark","name":"lsp.did_change_batched","count":368,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":368,"duration":2.223},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":679,"duration":0.012},
{"type":"measure","name":"lsp.testing_update","count":375,"duration":0.792},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":680,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":205,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":60,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":681,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":206,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":682,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":369,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":369,"duration":2.272},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":683,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":376,"duration":0.251},
{"type":"mark","name":"lsp.did_change_batched","count":370,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":370,"duration":4.25},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":684,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":377,"duration":0.233},
{"type":"mark","name":"lsp.inlay_hint","count":207,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":61,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":685,"duration":0.025},
{"type":"mark","name":"lsp.inlay_hint","count":208,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":686,"duration":0.01},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":62,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":687,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":209,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":14}}}},
{"type":"mark","name":"lsp.inlay_hint","count":210,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/constants/businessTaxonomy.ts"},"range":{"start":{"line":28,"character":0},"end":{"line":197,"character":15}}}},
{"type":"mark","name":"lsp.did_change_batched","count":371,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":371,"duration":2.389},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":378,"duration":0.162},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":688,"duration":0.039},
{"type":"mark","name":"lsp.code_action","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":211,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.document_symbol","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":63,"duration":0.023},
{"type":"mark","name":"lsp.code_lens","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":212,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":213,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.folding_range","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":74,"character":22}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":17,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx",{"start":0,"length":2155},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":9,"duration":0.584},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":12,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":265,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":265,"duration":0.042},
{"type":"mark","name":"tsc.op.op_load","count":266,"args":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":266,"duration":0.038},
{"type":"mark","name":"tsc.op.op_load","count":267,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":267,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":898,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":898,"duration":0.183},
{"type":"mark","name":"tsc.op.op_resolve","count":899,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":899,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":900,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":900,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":901,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":901,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":902,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":902,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":903,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":903,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":904,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":904,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":905,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":905,"duration":0.131},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":113,"duration":0.01},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":17,"duration":38.428},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":17,"duration":40.236},
{"type":"measure","name":"lsp.semantic_tokens_range","count":5,"duration":40.367},
{"type":"mark","name":"lsp.semantic_tokens_full","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":18,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx",{"start":0,"length":10001},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":18,"duration":116.755},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":18,"duration":116.926},
{"type":"measure","name":"lsp.semantic_tokens_full","count":14,"duration":117.058},
{"type":"mark","name":"lsp.did_change_batched","count":372,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":372,"duration":2.864},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":689,"duration":0.037},
{"type":"measure","name":"lsp.testing_update","count":379,"duration":0.22},
{"type":"mark","name":"lsp.inlay_hint","count":214,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.folding_range","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":19,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx",{"start":0,"length":9405},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":13,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":268,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":268,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":906,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":906,"duration":0.026},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":19,"duration":50.519},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":19,"duration":52.842},
{"type":"measure","name":"lsp.semantic_tokens_full","count":15,"duration":52.992},
{"type":"mark","name":"lsp.document_symbol","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":215,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_lens","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":64,"duration":0.023},
{"type":"mark","name":"lsp.document_symbol","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":216,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":217,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":373,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":373,"duration":2.39},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":690,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":380,"duration":0.259},
{"type":"mark","name":"lsp.inlay_hint","count":218,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.folding_range","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":20,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx",{"start":0,"length":10057},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":14,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":269,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":269,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":907,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":907,"duration":0.016},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":20,"duration":24.55},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":20,"duration":24.767},
{"type":"measure","name":"lsp.semantic_tokens_full","count":16,"duration":24.921},
{"type":"mark","name":"lsp.document_symbol","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":65,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":219,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_lens","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":220,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":221,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":374,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":374,"duration":2.443},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":691,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":381,"duration":0.248},
{"type":"mark","name":"lsp.inlay_hint","count":222,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.folding_range","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":21,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx",{"start":0,"length":9873},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":15,"duration":0.026},
{"type":"mark","name":"tsc.op.op_load","count":270,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":270,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":908,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":908,"duration":0.022},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":21,"duration":54.881},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":21,"duration":56.755},
{"type":"measure","name":"lsp.semantic_tokens_full","count":17,"duration":56.909},
{"type":"mark","name":"lsp.document_symbol","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":223,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":66,"duration":0.023},
{"type":"mark","name":"lsp.code_lens","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.code_action","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":224,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":225,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":375,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":375,"duration":3.729},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":382,"duration":0.144},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":692,"duration":0.015},
{"type":"mark","name":"lsp.inlay_hint","count":226,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":67,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":227,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":104,"character":22}}}},
{"type":"mark","name":"lsp.code_action","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":228,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.hover","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"position":{"line":16,"character":47}}},
{"type":"mark","name":"lsp.inlay_hint","count":229,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":138,"character":51}}}},
{"type":"mark","name":"lsp.inlay_hint","count":230,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.did_change_batched","count":376,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":376,"duration":1.713},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":693,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":383,"duration":0.223},
{"type":"mark","name":"lsp.inlay_hint","count":231,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":694,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":68,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":232,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":67,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":377,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":377,"duration":3.276},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":695,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":384,"duration":0.203},
{"type":"mark","name":"lsp.inlay_hint","count":233,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":696,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":69,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":234,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":68,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":378,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":378,"duration":2.713},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":697,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":385,"duration":0.247},
{"type":"mark","name":"lsp.inlay_hint","count":235,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":69,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":698,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":70,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":236,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":70,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_batched","count":379,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":379,"duration":2.834},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":699,"duration":0.012},
{"type":"measure","name":"lsp.testing_update","count":386,"duration":0.244},
{"type":"mark","name":"lsp.inlay_hint","count":237,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":700,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":71,"duration":0.149},
{"type":"mark","name":"lsp.inlay_hint","count":238,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":71,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":18,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":18,"duration":0.017},
{"type":"mark","name":"lsp.did_change_watched_files","count":19,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":19,"duration":0.018},
{"type":"mark","name":"lsp.goto_definition","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"position":{"line":14,"character":13}}},
{"type":"mark","name":"lsp.inlay_hint","count":239,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":240,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":241,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.did_change_batched","count":380,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":380,"duration":5.244},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":701,"duration":0.01},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":387,"duration":0.245},
{"type":"mark","name":"lsp.inlay_hint","count":242,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.did_change_batched","count":381,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":381,"duration":3.639},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":702,"duration":0.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":388,"duration":0.225},
{"type":"mark","name":"lsp.inlay_hint","count":243,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.did_change_batched","count":382,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":382,"duration":2.681},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":703,"duration":0.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":389,"duration":0.333},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":704,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":244,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":72,"duration":0.012},
{"type":"mark","name":"lsp.folding_range","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.code_lens","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":22,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx",{"start":0,"length":9889},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":16,"duration":0.023},
{"type":"mark","name":"tsc.op.op_load","count":271,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":271,"duration":0.041},
{"type":"mark","name":"lsp.inlay_hint","count":245,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"tsc.op.op_load","count":272,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":272,"duration":0.067},
{"type":"mark","name":"lsp.document_symbol","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"}}},
{"type":"mark","name":"tsc.op.op_resolve","count":909,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":909,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":910,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":910,"duration":0.145},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":22,"duration":233.371},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":22,"duration":233.611},
{"type":"measure","name":"lsp.semantic_tokens_full","count":18,"duration":233.759},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":73,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":246,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.inlay_hint","count":247,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":10}}}},
{"type":"mark","name":"lsp.code_action","count":72,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.did_open","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { ENRICHMENT_TIERS } from \"../lib/supabase\";\n\ninterface TierSelectorProps {\n  selectedTier: keyof typeof ENRICHMENT_TIERS;\n  onTierChange: (tier: keyof typeof ENRICHMENT_TIERS) => void;\n  numberOfLeads: number;\n}\n\nconst tierDataImprovements = {\n  BASE: [\n    \"Business verification\",\n    \"Company data (name, industry, size)\",\n    \"Phone & address validation\",\n    \"Generic company email\",\n  ],\n  PROFESSIONAL: [\n    \"Everything in Base\",\n    \"Professional email discovery & verification\",\n    \"Email deliverability verification\",\n    \"Enhanced company enrichment\",\n  ],\n  ENTERPRISE: [\n    \"Everything in Professional\",\n    \"Executive contact enrichment\",\n    \"Full compliance verification\",\n    \"Advanced data validation\",\n  ],\n};\n\nexport const TierSelector: React.FC<TierSelectorProps> = ({\n  selectedTier,\n  onTierChange,\n  numberOfLeads,\n}) => {\n  const formatUnitCost = (price: number): string => {\n    if (price >= 1) return `$${price.toFixed(2)}`;\n    if (price >= 0.01) return `$${price.toFixed(3)}`;\n    return `$${price.toFixed(4)}`;\n  };\n\n  return (\n    <div>\n      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        Data Enhancement Tiers\n      </label>\n\n      {/* Single column, table-style layout */}\n      <div className=\"space-y-2\">\n        {Object.entries(ENRICHMENT_TIERS).map(([key, tier]) => {\n          const tierKey = key as keyof typeof ENRICHMENT_TIERS;\n          const totalCost = numberOfLeads * tier.price;\n          const improvements = tierDataImprovements[tierKey];\n\n          return (\n            <div\n              key={key}\n              className={`rounded-lg p-4 cursor-pointer transition-all border-l-4 ${\n                selectedTier === key\n                  ? \"bg-blue-50 dark:bg-blue-950/30 border-l-blue-500 shadow-md dark:shadow-gray-900/20\"\n                  : \"bg-gray-100 dark:bg-gray-700 border-l-gray-200 dark:border-l-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 hover:border-l-gray-300 dark:hover:border-l-gray-500\"\n              }`}\n              onClick={() => onTierChange(tierKey)}\n            >\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n                    {tier.name}\n                  </h3>\n                  {tier.badge && (\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${\n                        tier.badge === \"Most Popular\"\n                          ? \"bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-200\"\n                          : tier.badge === \"Premium\"\n                          ? \"bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-200\"\n                          : \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200\"\n                      }`}\n                    >\n                      {tier.badge}\n                    </span>\n                  )}\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {formatUnitCost(tier.price)} per lead\n                  </div>\n                  {selectedTier === key && (\n                    <div className=\"flex items-center text-sm text-blue-600 dark:text-blue-400\">\n                      <svg\n                        className=\"w-4 h-4 mr-1\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                      Selected\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                    ${totalCost.toFixed(2)}\n                  </div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">Total cost</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2\">\n                    {tier.description}\n                  </div>\n\n                  {/* Data Improvements in horizontal layout */}\n                  <div className=\"flex flex-wrap gap-2\">\n                    {improvements.map((improvement, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center text-xs bg-white dark:bg-gray-800 rounded-full px-2 py-1 border border-gray-200 dark:border-gray-600\"\n                      >\n                        <svg\n                          className=\"w-3 h-3 text-green-500 dark:text-green-400 mr-1 flex-shrink-0\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <span className=\"text-gray-700 dark:text-gray-200\">{improvement}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md\">\n        <div className=\"flex items-center\">\n          <svg\n            className=\"w-5 h-5 text-yellow-500 dark:text-yellow-400 mr-2\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          <div className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n            <strong>Actual API costs</strong> - Pricing may vary based on API\n            response complexity and data availability\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":390,"duration":0.251},
{"type":"measure","name":"lsp.did_open","count":31,"duration":3.001},
{"type":"mark","name":"lsp.did_open","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","languageId":"typescript","version":1,"text":"import { useMutation } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { ENRICHMENT_TIERS, ensureSession, supabase } from \"../lib/supabase\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessDiscoveryResponse, CampaignConfig } from \"../types\";\n\nexport const useBusinessDiscovery = (\n  onJobCreated?: (jobData: {\n    jobId: string;\n    campaignId: string;\n    status: string;\n    estimatedTime?: number;\n  }) => void\n) => {\n  const { sessionUserId } = useAuth();\n  const { setLoading, setError, clearLeads, setCurrentCampaign } =\n    useCampaignStore();\n  const [progress, setProgress] = useState(0);\n  const [currentStage, setCurrentStage] = useState<string>(\"\");\n  const [cacheStats] = useState<any>(null);\n\n  const discoveryMutation = useMutation({\n    mutationFn: async (\n      config: CampaignConfig & { selectedTier?: keyof typeof ENRICHMENT_TIERS }\n    ): Promise<BusinessDiscoveryResponse> => {\n      setLoading(true);\n      setError(null);\n      setProgress(10);\n      setCurrentStage(\"Initializing user-aware discovery...\");\n\n      // Reset any existing campaign context before starting a new discovery\n      clearLeads();\n      setCurrentCampaign(null);\n\n      try {\n        console.log(\"🚀 Starting user-aware business discovery:\", config);\n        console.log(\"👤 Session User ID:\", sessionUserId);\n\n        // Ensure we have a valid session before calling Edge Function\n        const hasSession = await ensureSession();\n        if (!hasSession) {\n          throw new Error(\n            \"Failed to establish authentication session. Please refresh the page.\"\n          );\n        }\n\n        // Determine enrichment tier\n        const tier = config.selectedTier || \"PROFESSIONAL\";\n        const tierConfig = ENRICHMENT_TIERS[tier];\n        const keywordList = config.keywords\n          ? config.keywords\n              .split(\",\")\n              .map((value) => value.trim())\n              .filter(Boolean)\n          : undefined;\n\n        const discoveryOptions = {\n          tradeAssociation: config.trade_association ?? false,\n          professionalLicense: config.professional_license ?? false,\n          chamberVerification: config.chamber_verification ?? false,\n          apolloDiscovery: tier === \"ENTERPRISE\",\n        };\n\n        setCurrentStage(\n          `Using ${tierConfig.name} tier ($${tierConfig.price}/lead)`\n        );\n        setProgress(20);\n\n        // Call background task business discovery with authentication\n        const { data, error } = await supabase.functions.invoke(\n          \"business-discovery-background\",\n          {\n            body: {\n              businessType: config.business_type || config.search_terms,\n              location: config.location,\n              keywords: keywordList,\n              searchRadius: config.search_radius,\n              expandGeography: config.expand_geography,\n              maxResults: config.max_results,\n              budgetLimit: config.max_results * tierConfig.price,\n              minConfidenceScore: config.min_confidence_score || 50,\n              tierKey: tier,\n              tierName: tierConfig.name,\n              tierPrice: tierConfig.price,\n              options: discoveryOptions,\n              sessionUserId:\n                sessionUserId ||\n                `session_${Date.now()}_${Math.random()\n                  .toString(36)\n                  .substr(2, 9)}`,\n            },\n          }\n        );\n\n        if (error) {\n          console.error(\"❌ Background discovery error:\", error);\n          throw new Error(`Discovery failed: ${error.message}`);\n        }\n\n        if (!data || !data.success) {\n          throw new Error(\"No data returned from background discovery\");\n        }\n\n        console.log(\"✅ Background discovery response:\", data);\n\n        // For background tasks, we get jobId and campaignId immediately\n        // The actual processing happens in the background\n        const transformedData: BusinessDiscoveryResponse = {\n          campaign_id: data.campaignId,\n          job_id: data.jobId, // New: job ID for tracking progress\n          status: data.status, // New: processing status\n          estimated_time: data.estimatedTime, // New: estimated completion time\n          realtime_channel: data.realtimeChannel, // New: for real-time updates\n          total_found: 0, // Will be updated via real-time\n          qualified_count: 0, // Will be updated via real-time\n          total_cost: 0, // Will be updated via real-time\n          processing_time: \"< 100ms\", // Immediate response\n          tier_used: tierConfig.name,\n          cache_performance: undefined,\n          vault_status: \"secured\",\n          census_intelligence: undefined,\n          businesses: [], // Will be populated via real-time updates\n        };\n\n        setProgress(100);\n        setCurrentStage(\"Complete! 🎉\");\n        return transformedData;\n      } catch (error) {\n        console.error(\"❌ User-aware discovery error:\", error);\n        setCurrentStage(\"Failed ❌\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    },\n    onSuccess: (data: BusinessDiscoveryResponse) => {\n      console.log(\"✅ Background job created:\", data);\n\n      // For background jobs, we don't create the full campaign record immediately\n      // The progress page will handle real-time updates and final campaign creation\n\n      setProgress(100);\n      setCurrentStage(\"Background processing started! 🚀\");\n\n      // Navigate to progress page with job ID\n      if (data.job_id && data.campaign_id) {\n        const jobData = {\n          jobId: data.job_id,\n          campaignId: data.campaign_id,\n          status: data.status || \"pending\",\n          estimatedTime: data.estimated_time,\n        };\n\n        console.log(\"Job started:\", jobData);\n\n        // Call the navigation callback if provided\n        if (onJobCreated) {\n          onJobCreated(jobData);\n        }\n      }\n    },\n    onError: (error: any) => {\n      setError(\n        error instanceof Error ? error.message : \"User-aware discovery failed\"\n      );\n      setProgress(0);\n      setCurrentStage(\"Failed ❌\");\n    },\n  });\n\n  return {\n    startDiscovery: discoveryMutation.mutate,\n    isDiscovering: discoveryMutation.isPending,\n    progress,\n    currentStage,\n    cacheStats,\n    error: discoveryMutation.error,\n    data: discoveryMutation.data,\n  };\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":391,"duration":0.686},
{"type":"measure","name":"lsp.did_open","count":32,"duration":2.668},
{"type":"mark","name":"lsp.did_open","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","languageId":"typescript","version":1,"text":"import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport type { BusinessLead, CampaignResult, CampaignStore } from \"../types\";\n\ninterface CampaignActions {\n  addCampaign: (campaign: CampaignResult) => void;\n  updateCampaign: (\n    campaignId: string,\n    updates: Partial<CampaignResult>\n  ) => void;\n  setCurrentCampaign: (campaign: CampaignResult | null) => void;\n  addLeads: (leads: BusinessLead[]) => void;\n  updateLead: (leadId: string, updates: Partial<BusinessLead>) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearLeads: () => void;\n  reset: () => void;\n}\n\nconst initialState: CampaignStore = {\n  campaigns: [],\n  currentCampaign: null,\n  leads: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const useCampaignStore = create<CampaignStore & CampaignActions>()(\n  persist(\n    (set) => ({\n      ...initialState,\n\n      addCampaign: (campaign) =>\n        set((state) => ({\n          campaigns: [campaign, ...state.campaigns],\n        })),\n\n      updateCampaign: (campaignId, updates) =>\n        set((state) => ({\n          campaigns: state.campaigns.map((c) =>\n            c.campaign_id === campaignId ? { ...c, ...updates } : c\n          ),\n          currentCampaign:\n            state.currentCampaign?.campaign_id === campaignId\n              ? { ...state.currentCampaign, ...updates }\n              : state.currentCampaign,\n        })),\n\n      setCurrentCampaign: (campaign) => set({ currentCampaign: campaign }),\n\n      addLeads: (leads) =>\n        set((state) => ({\n          leads: [...state.leads, ...leads],\n        })),\n\n      updateLead: (leadId, updates) =>\n        set((state) => ({\n          leads: state.leads.map((l) =>\n            l.id === leadId ? { ...l, ...updates } : l\n          ),\n        })),\n\n      setLoading: (loading) => set({ isLoading: loading }),\n\n      setError: (error) => set({ error }),\n\n      clearLeads: () => set({ leads: [] }),\n\n      reset: () => set(initialState),\n    }),\n    {\n      name: \"campaign-store\",\n      partialize: (state) => ({\n        campaigns: state.campaigns,\n        leads: state.leads,\n      }),\n    }\n  )\n);\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":392,"duration":0.273},
{"type":"measure","name":"lsp.did_open","count":33,"duration":5.423},
{"type":"mark","name":"lsp.did_open","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\n\nexport const Results: React.FC = () => {\n  const { leads, currentCampaign } = useCampaignStore();\n\n  const handleExport = (format: \"csv\" | \"json\") => {\n    const dataToExport = leads.filter((lead) => lead.confidence_score >= 70);\n\n    if (format === \"csv\") {\n      const csvContent = [\n        \"Business Name,Address,Phone,Website,Email,Confidence Score,Enrichment Tier,Vault Secured,Data Sources,Validation Status\",\n        ...dataToExport.map(\n          (lead) =>\n            `\"${lead.business_name}\",\"${lead.address || \"\"}\",\"${\n              lead.phone || \"\"\n            }\",\"${lead.website || \"\"}\",\"${lead.email || \"\"}\",${\n              lead.confidence_score\n            },\"${lead.enrichment_tier || \"Standard\"}\",${\n              lead.vault_secured ? \"Yes\" : \"No\"\n            },\"${lead.data_sources.join(\"; \")}\",${lead.validation_status}`\n        ),\n      ].join(\"\\n\");\n\n      const blob = new Blob([csvContent], { type: \"text/csv\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `prospects-vault-secured-${\n        new Date().toISOString().split(\"T\")[0]\n      }.csv`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } else {\n      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], {\n        type: \"application/json\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `prospects-vault-secured-${\n        new Date().toISOString().split(\"T\")[0]\n      }.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  const getConfidenceColor = (score: number) => {\n    if (score >= 90) return \"bg-green-100 text-green-800\";\n    if (score >= 80) return \"bg-blue-100 text-blue-800\";\n    if (score >= 70) return \"bg-yellow-100 text-yellow-800\";\n    return \"bg-red-100 text-red-800\";\n  };\n\n  const getValidationStatusColor = (status: string) => {\n    switch (status) {\n      case \"validated\":\n        return \"bg-green-100 text-green-800\";\n      case \"validating\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"failed\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Results</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {leads.length} leads found •{\" \"}\n            {leads.filter((l) => l.confidence_score >= 70).length} qualified\n          </p>\n        </div>\n\n        {leads.length > 0 && (\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => handleExport(\"csv\")}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📊 Export CSV\n            </button>\n            <button\n              onClick={() => handleExport(\"json\")}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📄 Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              Progressive Enrichment Results\n            </h3>\n            {currentCampaign.vault_secured && (\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                🔐 Vault Secured\n              </span>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-5\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {currentCampaign.leads_found}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total Found</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {currentCampaign.leads_qualified}\n              </div>\n              <div className=\"text-sm text-gray-500\">Qualified</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {currentCampaign.leads_validated}\n              </div>\n              <div className=\"text-sm text-gray-500\">Validated</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {currentCampaign.tier_used || \"Professional\"}\n              </div>\n              <div className=\"text-sm text-gray-500\">Tier Used</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">\n                ${currentCampaign.total_cost.toFixed(2)}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total Cost</div>\n            </div>\n          </div>\n\n          {/* Cache Performance Display */}\n          {currentCampaign.cache_performance && (\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\n              <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\n                🚀 90-Day Intelligent Cache Performance\n              </h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {currentCampaign.cache_performance.cache_hit_ratio.toFixed(\n                      1\n                    )}\n                    %\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Hit Ratio</div>\n                </div>\n                <div className=\"bg-blue-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {currentCampaign.cache_performance.cache_hits}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Hits</div>\n                </div>\n                <div className=\"bg-yellow-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-yellow-600\">\n                    {currentCampaign.cache_performance.cache_misses}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Misses</div>\n                </div>\n                <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    ${currentCampaign.cache_performance.cost_savings.toFixed(2)}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cost Savings</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Results Table */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        {leads.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <span className=\"text-4xl\">🔍</span>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n              No results yet\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Start a discovery campaign to find business leads.\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Confidence\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Enrichment\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {leads.map((lead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {lead.business_name}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {lead.address}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.phone && <div>📞 {lead.phone}</div>}\n                        {lead.website && (\n                          <div>\n                            🌐{\" \"}\n                            <a\n                              href={lead.website}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-blue-600 hover:underline\"\n                            >\n                              {lead.website.replace(/^https?:\\/\\//, \"\")}\n                            </a>\n                          </div>\n                        )}\n                        {lead.email && <div>📧 {lead.email}</div>}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(\n                          lead.confidence_score\n                        )}`}\n                      >\n                        {lead.confidence_score}%\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex flex-col space-y-1\">\n                        <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800\">\n                          {lead.enrichment_tier || \"Professional\"}\n                        </span>\n                        {lead.vault_secured && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800\">\n                            🔐 Vault Secured\n                          </span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getValidationStatusColor(\n                          lead.validation_status\n                        )}`}\n                      >\n                        {lead.validation_status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${lead.cost_to_acquire.toFixed(3)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":34,"duration":2.298},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":393,"duration":0.281},
{"type":"mark","name":"lsp.did_open","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { EnrichmentButton } from \"../components/EnrichmentButton\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessLead } from \"../types\";\n\nexport const Campaign: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const campaignId = searchParams.get(\"id\");\n  const { currentCampaign, campaigns, leads, setCurrentCampaign } =\n    useCampaignStore();\n  const { isDiscovering, progress, currentStage, cacheStats, error } =\n    useBusinessDiscovery();\n  const [showResults, setShowResults] = useState(false);\n\n  // Filter leads for current campaign\n  const campaignLeads = currentCampaign\n    ? leads.filter((lead) => lead.campaign_id === currentCampaign.campaign_id)\n    : [];\n\n  // Load specific campaign from URL parameter\n  useEffect(() => {\n    if (campaignId && !currentCampaign) {\n      const campaign = campaigns.find((c) => c.campaign_id === campaignId);\n      if (campaign) {\n        setCurrentCampaign(campaign);\n        setShowResults(true);\n      }\n    }\n  }, [campaignId, campaigns, currentCampaign, setCurrentCampaign]);\n\n  // Show results when campaign completes\n  useEffect(() => {\n    if (\n      currentCampaign &&\n      currentCampaign.status === \"completed\" &&\n      campaignLeads.length > 0\n    ) {\n      setShowResults(true);\n    }\n  }, [currentCampaign, campaignLeads]);\n\n  // If no campaign is running or found, redirect to discovery\n  useEffect(() => {\n    if (!isDiscovering && !currentCampaign && !campaignId) {\n      navigate(\"/discovery\");\n    } else if (\n      campaignId &&\n      !campaigns.find((c) => c.campaign_id === campaignId)\n    ) {\n      // Campaign ID provided but not found\n      navigate(\"/discovery\");\n    }\n  }, [isDiscovering, currentCampaign, campaignId, campaigns, navigate]);\n\n  const exportToCsv = () => {\n    if (!campaignLeads.length) return;\n\n    // Determine if this campaign has ownership data\n    const hasOwnershipData =\n      currentCampaign?.tier_used === \"Enterprise\" ||\n      campaignLeads.some((lead) => lead.enrichment_tier === \"Enterprise\");\n\n    // Base CSV headers\n    const baseHeaders = [\n      \"Business Name\",\n      \"Address\",\n      \"Phone\",\n      \"Website\",\n      \"Email\",\n      \"Confidence Score\",\n      \"Validation Status\",\n      \"Cost to Acquire\",\n      \"Data Sources\",\n      \"Enrichment Tier\",\n    ];\n\n    // Add ownership columns for Enterprise tier\n    const headers = hasOwnershipData\n      ? [\n          ...baseHeaders,\n          \"Owner Name\",\n          \"Owner Email\",\n          \"Owner Phone\",\n          \"Owner Confidence Score\",\n        ]\n      : baseHeaders;\n\n    // Convert leads to CSV format with conditional ownership data\n    const csvContent = [\n      headers.join(\",\"),\n      ...campaignLeads.map((lead: BusinessLead) => {\n        const baseRow = [\n          `\"${lead.business_name || \"\"}\"`,\n          `\"${lead.address || \"\"}\"`,\n          `\"${lead.phone || \"\"}\"`,\n          `\"${lead.website || \"\"}\"`,\n          `\"${lead.email || \"\"}\"`,\n          lead.confidence_score || 0,\n          `\"${lead.validation_status || \"\"}\"`,\n          `$${(lead.cost_to_acquire || 0).toFixed(3)}`,\n          `\"${(lead.data_sources || []).join(\"; \")}\"`,\n          `\"${lead.enrichment_tier || \"\"}\"`,\n        ];\n\n        // Add ownership data if available\n        if (hasOwnershipData) {\n          const ownerData = (lead as any).owner_data || {};\n          baseRow.push(\n            `\"${ownerData.name || \"\"}\"`,\n            `\"${ownerData.email || \"\"}\"`,\n            `\"${ownerData.phone || \"\"}\"`,\n            ownerData.confidence_score || 0\n          );\n        }\n\n        return baseRow.join(\",\");\n      }),\n    ].join(\"\\n\");\n\n    // Download CSV file\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\n      \"download\",\n      `campaign-${currentCampaign?.campaign_id || Date.now()}-results.csv`\n    );\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Campaign Header */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Campaign Progress\n            </h1>\n            <p className=\"text-gray-600 mt-1\">\n              {currentCampaign\n                ? `Campaign ${currentCampaign.campaign_id}`\n                : \"Running campaign...\"}\n            </p>\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => navigate(\"/discovery\")}\n              className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\"\n            >\n              Back to Discovery\n            </button>\n            {showResults && (\n              <button\n                onClick={exportToCsv}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n              >\n                Export CSV\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Progress Display */}\n      {isDiscovering && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <ProgressDisplay\n            isDiscovering={isDiscovering}\n            progress={progress}\n            currentStage={currentStage}\n            cacheStats={cacheStats}\n          />\n        </div>\n      )}\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Campaign Summary\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-blue-600 font-medium\">Status</div>\n              <div className=\"text-lg font-bold text-blue-900 capitalize\">\n                {currentCampaign.status}\n              </div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-green-600 font-medium\">\n                Leads Found\n              </div>\n              <div className=\"text-lg font-bold text-green-900\">\n                {currentCampaign.leads_found || 0}\n              </div>\n            </div>\n            <div className=\"bg-yellow-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-yellow-600 font-medium\">\n                Qualified\n              </div>\n              <div className=\"text-lg font-bold text-yellow-900\">\n                {currentCampaign.leads_qualified || 0}\n              </div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-purple-600 font-medium\">\n                Total Cost\n              </div>\n              <div className=\"text-lg font-bold text-purple-900\">\n                ${(currentCampaign.total_cost || 0).toFixed(2)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Enrichment Section */}\n      {currentCampaign && showResults && campaignLeads.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Progressive Enrichment\n          </h2>\n          <div className=\"flex items-start justify-between gap-6\">\n            <div className=\"flex-1\">\n              <p className=\"text-gray-600 mb-4\">\n                Enrich your leads with verified emails, business license\n                validation, and more. Only pay for successful enrichments.\n              </p>\n              <div className=\"grid grid-cols-3 gap-3 text-sm\">\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <div className=\"font-semibold text-blue-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.emails?.length\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-blue-600 text-xs\">With Emails</div>\n                </div>\n                <div className=\"bg-green-50 p-3 rounded\">\n                  <div className=\"font-semibold text-green-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.neverBounceVerified\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-green-600 text-xs\">Email Verified</div>\n                </div>\n                <div className=\"bg-purple-50 p-3 rounded\">\n                  <div className=\"font-semibold text-purple-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.licenseVerified\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-purple-600 text-xs\">\n                    License Verified\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <EnrichmentButton\n                campaignId={currentCampaign.campaign_id}\n                onComplete={() => {\n                  // Optionally refresh data or show success message\n                  console.log(\n                    \"Enrichment completed for campaign:\",\n                    currentCampaign.campaign_id\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Results Table */}\n      {showResults && campaignLeads.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                Campaign Results\n              </h2>\n              <div className=\"text-sm text-gray-500\">\n                {campaignLeads.length} leads found\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact Info\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Score\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {campaignLeads.map((lead: BusinessLead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {lead.business_name}\n                        </div>\n                        <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                          {lead.address}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"space-y-1\">\n                        {lead.phone && (\n                          <div className=\"text-sm text-gray-900\">\n                            {lead.phone}\n                          </div>\n                        )}\n                        {lead.email && (\n                          <div className=\"text-sm text-blue-600\">\n                            {lead.email}\n                          </div>\n                        )}\n                        {lead.website && (\n                          <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                            <a\n                              href={lead.website}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"hover:text-blue-600\"\n                            >\n                              {lead.website}\n                            </a>\n                          </div>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {lead.confidence_score}%\n                        </div>\n                        <div\n                          className={`ml-2 w-16 bg-gray-200 rounded-full h-2`}\n                        >\n                          <div\n                            className={`h-2 rounded-full ${\n                              lead.confidence_score >= 80\n                                ? \"bg-green-500\"\n                                : lead.confidence_score >= 60\n                                ? \"bg-yellow-500\"\n                                : \"bg-red-500\"\n                            }`}\n                            style={{ width: `${lead.confidence_score}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${(lead.cost_to_acquire || 0).toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                          lead.validation_status === \"validated\"\n                            ? \"bg-green-100 text-green-800\"\n                            : lead.validation_status === \"pending\"\n                            ? \"bg-yellow-100 text-yellow-800\"\n                            : \"bg-red-100 text-red-800\"\n                        }`}\n                      >\n                        {lead.validation_status || \"unknown\"}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg\n                className=\"h-5 w-5 text-red-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                Campaign Failed\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error instanceof Error ? error.message : String(error)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No Results State */}\n      {showResults && campaignLeads.length === 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n            No results found\n          </h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Try adjusting your search criteria or location.\n          </p>\n          <div className=\"mt-6\">\n            <button\n              onClick={() => navigate(\"/discovery\")}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n            >\n              Start New Campaign\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":394,"duration":0.291},
{"type":"measure","name":"lsp.did_open","count":35,"duration":5.654},
{"type":"mark","name":"lsp.did_open","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts","languageId":"typescript","version":1,"text":"// Business Discovery Types\nexport interface BusinessLead {\n  id: string;\n  campaign_id?: string;\n  business_name: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  industry?: string;\n  confidence_score: number;\n  validation_status: \"pending\" | \"validating\" | \"validated\" | \"failed\";\n  created_at: string;\n  cost_to_acquire: number;\n  data_sources: string[];\n  // Progressive enrichment fields\n  enrichment_tier?: string;\n  vault_secured?: boolean;\n  enrichment_data?: {\n    emails?: Array<{\n      email: string;\n      confidence: number;\n      verified: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    businessLicense?: {\n      isValid: boolean;\n      licenseNumber?: string;\n      status?: string;\n      expirationDate?: string;\n      professionalType?: string;\n      source: string;\n    };\n    companyInfo?: {\n      name?: string;\n      industry?: string;\n      size?: string;\n      founded?: number;\n      revenue?: string;\n      website?: string;\n      description?: string;\n      source: string;\n    };\n    hunterVerified?: boolean;\n    neverBounceVerified?: boolean;\n    licenseVerified?: boolean;\n    processingMetadata?: {\n      servicesUsed?: string[];\n      servicesSkipped?: string[];\n      totalCost?: number;\n      validationCost?: number;\n      enrichmentCost?: number;\n      enrichmentTier?: string;\n      enrichmentCostBreakdown?: {\n        businessLicenseCost: number;\n        companyEnrichmentCost: number;\n        hunterCost: number;\n        neverBounceCost: number;\n        personEnrichmentCost: number;\n        apolloCost: number;\n        complianceCost: number;\n      };\n    };\n    dataSources?: string[];\n  };\n}\n\nexport interface CampaignConfig {\n  search_terms: string;\n  location: string;\n  business_type?: string;\n  budget_limit: number;\n  max_results: number;\n  include_email_validation: boolean;\n  include_website_validation: boolean;\n  min_confidence_score: number;\n  chamber_verification?: boolean;\n  trade_association?: boolean;\n  professional_license?: boolean;\n  keywords?: string;\n  search_radius?: string;\n  expand_geography?: boolean;\n}\n\nexport interface ValidationResult {\n  field: string;\n  is_valid: boolean;\n  confidence: number;\n  source: string;\n  details?: string;\n}\n\nexport interface CampaignResult {\n  campaign_id: string;\n  business_type?: string;\n  location?: string;\n  status: \"running\" | \"completed\" | \"failed\" | \"cancelled\";\n  progress: number;\n  total_cost: number;\n  leads_found: number;\n  leads_qualified: number;\n  leads_validated: number;\n  created_at: string;\n  completed_at?: string;\n  error_message?: string;\n  // Progressive enrichment fields\n  tier_used?: string;\n  vault_secured?: boolean;\n  cache_performance?: {\n    cache_hits: number;\n    cache_misses: number;\n    cache_hit_ratio: number;\n    cost_savings: number;\n  };\n}\n\n// Census Intelligence Types\nexport interface CensusIntelligence {\n  business_density: {\n    total_establishments: number;\n    density_score: number;\n    confidence_multiplier: number;\n  };\n  geographic_optimization: {\n    optimal_radius: number;\n    expected_results: number;\n    api_efficiency_score: number;\n  };\n  market_insights: {\n    market_density: \"High\" | \"Medium\" | \"Low\";\n    competition_level: \"High\" | \"Medium\" | \"Low\";\n    search_optimization: string;\n  };\n}\n\n// API Response Types\nexport interface EdgeFunctionResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  cost?: number;\n  processing_time?: number;\n}\n\nexport interface BusinessDiscoveryResponse {\n  businesses: BusinessLead[];\n  total_cost: number;\n  processing_time: string;\n  campaign_id: string;\n  qualified_count: number;\n  total_found: number;\n  census_intelligence?: CensusIntelligence;\n  // Background job fields\n  job_id?: string; // For tracking background processing\n  status?: string; // Job status (pending, processing, completed, failed)\n  estimated_time?: number; // Estimated completion time in seconds\n  realtime_channel?: string; // Channel for real-time updates\n  // Progressive enrichment fields (vault-secured)\n  tier_used?: string;\n  cache_performance?: {\n    cache_hits: number;\n    cache_misses: number;\n    cache_hit_ratio: number;\n    cost_savings: number;\n  };\n  vault_status?: string;\n  stage_progress?: number;\n  current_stage?: string;\n}\n\n// Store Types\nexport interface CampaignStore {\n  campaigns: CampaignResult[];\n  currentCampaign: CampaignResult | null;\n  leads: BusinessLead[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface UIStore {\n  sidebarOpen: boolean;\n  theme: \"light\" | \"dark\";\n  notifications: Notification[];\n}\n\nexport interface Notification {\n  id: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  title: string;\n  message: string;\n  timestamp: number;\n}\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":395,"duration":0.269},
{"type":"measure","name":"lsp.did_open","count":36,"duration":2.485},
{"type":"mark","name":"lsp.did_close","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":16,"duration":0.846},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":396,"duration":0.244},
{"type":"mark","name":"lsp.did_close","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"measure","name":"lsp.did_close","count":17,"duration":0.955},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":397,"duration":0.291},
{"type":"mark","name":"lsp.did_close","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts"}}},
{"type":"measure","name":"lsp.did_close","count":18,"duration":0.883},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":398,"duration":2.035},
{"type":"mark","name":"lsp.did_open","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospectpro-verified-business-intelligence\",\r\n  \"version\": \"4.1.0\",\r\n  \"type\": \"module\",\r\n  \"description\": \"ProspectPro - Verified Business Intelligence Platform with Zero Fake Data Policy\",\r\n  \"scripts\": {\r\n    \"dev\": \"supabase functions serve --no-verify-jwt --debug\",\r\n    \"deploy:critical\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator\",\r\n    \"deploy:all\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator && supabase functions deploy campaign-export && supabase functions deploy enrichment-hunter\",\r\n    \"test:edge\": \"curl -X POST 'http://localhost:54321/functions/v1/business-discovery-optimized' -H 'Content-Type: application/json' -d '{\\\"businessType\\\":\\\"test\\\",\\\"location\\\":\\\"test\\\"}'\",\r\n    \"logs:live\": \"supabase functions logs --follow\",\r\n    \"logs:errors\": \"supabase functions logs --filter=error\",\r\n    \"mcp:prod\": \"cd mcp-servers && npm run start:production\",\r\n    \"mcp:dev\": \"cd mcp-servers && npm run start:development\",\r\n    \"mcp:debug\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"frontend:build\": \"npm run build\",\r\n    \"frontend:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"static:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"health:check\": \"curl -f https://prospectpro.appsmithery.co/ || echo 'Health check failed'\",\r\n    \"cost:analyze\": \"echo 'Check GitHub billing dashboard for usage trends'\",\r\n    \"build\": \"tsc && vite build && echo '{\\\"version\\\":2,\\\"rewrites\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"destination\\\":\\\"/index.html\\\"}],\\\"headers\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=0, s-maxage=0, must-revalidate\\\"}]},{\\\"source\\\":\\\"/assets/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=31536000, immutable\\\"}]}]}' > dist/vercel.json\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\r\n    \"type-check\": \"tsc --noEmit\",\r\n    \"build:static\": \"npm run build\",\r\n    \"deploy:vercel\": \"vercel --prod\",\r\n    \"deploy:netlify\": \"netlify deploy --prod --dir=dist\",\r\n    \"deploy:gcs\": \"npm run build && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/\",\r\n    \"serve:local\": \"npm run preview\",\r\n    \"test:edge-functions\": \"supabase functions serve\",\r\n    \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy business-discovery-optimized && supabase functions deploy campaign-export\",\r\n    \"db:setup\": \"echo 'Run SQL from /database/supabase-first-schema.sql in Supabase dashboard'\",\r\n    \"db:status\": \"supabase db status\",\r\n    \"functions:list\": \"supabase functions list\",\r\n    \"functions:logs\": \"supabase functions logs\",\r\n    \"clean\": \"rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'\",\r\n    \"archive:legacy\": \"mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'\",\r\n    \"health\": \"echo 'Use Edge Function endpoints for health checks'\",\r\n    \"test\": \"echo 'Test Edge Functions via Supabase dashboard or curl'\",\r\n    \"test:verified-contacts\": \"echo 'Test verified contact discovery with zero fake data validation'\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && npm run test\",\r\n    \"mcp:start\": \"cd mcp-servers && npm run start:all\",\r\n    \"mcp:troubleshoot\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"debug:quick\": \"echo 'Common issue: Check anon key sync and verified contact authentication'\",\r\n    \"debug:edge-function\": \"echo 'Test Verified Edge Function: curl -X POST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-optimized -H \\\"Authorization: Bearer YOUR_ANON_KEY\\\" -H \\\"Content-Type: application/json\\\" -d \\\"{\\\\\\\"businessType\\\\\\\": \\\\\\\"test\\\\\\\", \\\\\\\"location\\\\\\\": \\\\\\\"test\\\\\\\"}\\\"'\",\r\n    \"debug:vercel\": \"echo 'Check Vercel deployment: curl -I https://your-vercel-url.vercel.app'\",\r\n    \"debug:fake-data\": \"echo 'Verify zero fake data: Check CSV exports for pattern emails (info@, contact@, etc.)'\"\r\n  },\r\n  \"keywords\": [\r\n    \"verified-business-intelligence\",\r\n    \"professional-contacts\",\r\n    \"apollo-api\",\r\n    \"chamber-of-commerce\",\r\n    \"professional-licensing\",\r\n    \"zero-fake-data\",\r\n    \"supabase\",\r\n    \"edge-functions\",\r\n    \"verified-contacts\"\r\n  ],\r\n  \"author\": \"Alex Torelli\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"@supabase/supabase-js\": \"^2.39.0\",\r\n    \"@tanstack/react-query\": \"^5.17.0\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.20.1\",\r\n    \"zustand\": \"^4.4.7\",\r\n    \"recharts\": \"^2.8.0\",\r\n    \"lucide-react\": \"^0.294.0\",\r\n    \"clsx\": \"^2.0.0\",\r\n    \"tailwind-merge\": \"^2.2.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^18.2.43\",\r\n    \"@types/react-dom\": \"^18.2.17\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\r\n    \"@typescript-eslint/parser\": \"^6.14.0\",\r\n    \"@vitejs/plugin-react\": \"^4.2.1\",\r\n    \"autoprefixer\": \"^10.4.16\",\r\n    \"eslint\": \"^8.55.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\r\n    \"postcss\": \"^8.4.32\",\r\n    \"tailwindcss\": \"^3.3.6\",\r\n    \"typescript\": \"^5.2.2\",\r\n    \"vite\": \"^5.0.8\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \"22.x\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/Alextorelli/ProspectPro\"\r\n  },\r\n  \"architecture\": {\r\n    \"frontend\": \"Static HTML/JS with verified contact display\",\r\n    \"backend\": \"Supabase Edge Functions with zero fake data\",\r\n    \"database\": \"Supabase PostgreSQL with verification tracking\",\r\n    \"contacts\": \"Apollo API + Professional Licensing + Chamber Directories\",\r\n    \"dataPolicy\": \"Zero fake data - verified contacts only\",\r\n    \"hosting\": \"Static hosting (Cloud Storage/CDN)\",\r\n    \"deployment\": \"Supabase CLI + gsutil\"\r\n  }\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":37,"duration":0.094},
{"type":"mark","name":"lsp.did_open","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts","languageId":"typescript","version":1,"text":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_SUPABASE_URL: string;\n  readonly VITE_SUPABASE_ANON_KEY: string;\n  readonly VITE_EDGE_FUNCTIONS_URL?: string;\n  readonly VITE_GOOGLE_PLACES_API_KEY?: string;\n  readonly VITE_HUNTER_IO_API_KEY?: string;\n  readonly VITE_ZEROBOUNCE_API_KEY?: string;\n  readonly VITE_ENABLE_ADMIN_PANEL?: string;\n  readonly VITE_ENABLE_DEBUG_MODE?: string;\n  readonly VITE_DEFAULT_BUDGET_LIMIT?: string;\n  readonly VITE_WARNING_THRESHOLD?: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":38,"duration":6.127},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":399,"duration":0.665},
{"type":"mark","name":"lsp.did_close","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":19,"duration":0.99},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":400,"duration":0.249},
{"type":"mark","name":"lsp.did_close","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":401,"duration":0.233},
{"type":"measure","name":"lsp.did_close","count":20,"duration":1.364},
{"type":"mark","name":"lsp.did_close","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":402,"duration":0.179},
{"type":"measure","name":"lsp.did_close","count":21,"duration":1.178},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":705,"duration":0.02},
{"type":"mark","name":"lsp.code_action","count":73,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":248,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":18,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":383,"args":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":383,"duration":1.141},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":403,"duration":0.249},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":706,"duration":0.01},
{"type":"mark","name":"lsp.inlay_hint","count":249,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":250,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":74,"duration":0.02},
{"type":"mark","name":"lsp.document_symbol","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":23,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/vite-env.d.ts",{"start":0,"length":613},"2020"]}},
{"type":"mark","name":"lsp.inlay_hint","count":251,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":10,"duration":0.604},
{"type":"mark","name":"tsc.op.op_load","count":273,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_load","count":273,"duration":0.03},
{"type":"mark","name":"lsp.code_lens","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"lsp.folding_range","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.document_symbol","count":67,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"tsc.op.op_resolve","count":911,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":911,"duration":0.325},
{"type":"mark","name":"tsc.op.op_resolve","count":912,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":912,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":913,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":913,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":914,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":914,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":915,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":915,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":916,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":916,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":917,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":917,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":918,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":918,"duration":0.441},
{"type":"mark","name":"tsc.op.op_load","count":274,"args":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},
{"type":"measure","name":"tsc.op.op_load","count":274,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":919,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":919,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":920,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":920,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":921,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":921,"duration":2.176},
{"type":"mark","name":"tsc.op.op_resolve","count":922,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":922,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":923,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":923,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":924,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":924,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":925,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":925,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":926,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":926,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":927,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":927,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":928,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":928,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":929,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":929,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":930,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":930,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":931,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":931,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":932,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":932,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":933,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":933,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":934,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":934,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":935,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":935,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":936,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":936,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":937,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":937,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":938,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":938,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":939,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":939,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":940,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":940,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":941,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":941,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":942,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":942,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":943,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":943,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":944,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":944,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":945,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":945,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":946,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":946,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":947,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":947,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":948,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":948,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":949,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":949,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":950,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":950,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":951,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":951,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":952,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":952,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":953,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":953,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":954,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":954,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":955,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":955,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":956,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":956,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":957,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":957,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":958,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":958,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":959,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":959,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":960,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":960,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":961,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":961,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":962,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":962,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":963,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":963,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":964,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":964,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":965,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":965,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":966,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":966,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":967,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":967,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":968,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":968,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":969,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":969,"duration":2.629},
{"type":"mark","name":"tsc.op.op_resolve","count":970,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":970,"duration":0.055},
{"type":"mark","name":"tsc.op.op_resolve","count":971,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":971,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":972,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":972,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":973,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":973,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":974,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":974,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":975,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":975,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":976,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":976,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":977,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":977,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":978,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":978,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":979,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":979,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":980,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":980,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":981,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":981,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":982,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":982,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":983,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":983,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":984,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":984,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":985,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":985,"duration":0.426},
{"type":"mark","name":"tsc.op.op_resolve","count":986,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":986,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":987,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":987,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":988,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":988,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":989,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":989,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":990,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":990,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":991,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":991,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":992,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":992,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":993,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":993,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":994,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":994,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":995,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":995,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":996,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":996,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":997,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":997,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":998,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":998,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":999,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":999,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1000,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1000,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1001,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1001,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1002,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1002,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1003,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1003,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1004,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1004,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1005,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1005,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1006,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1006,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1007,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1007,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1008,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1008,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1009,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1009,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1010,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1010,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":1011,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1011,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1012,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1012,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1013,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1013,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1014,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1014,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1015,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1015,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1016,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1016,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1017,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1017,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1018,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1018,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1019,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1019,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1020,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1020,"duration":0.029},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":114,"duration":0.01},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":115,"duration":0.003},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":23,"duration":58.228},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":24,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/vite-env.d.ts",{"start":0,"length":613},"2020"]}},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":23,"duration":58.511},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":24,"duration":0.313},
{"type":"measure","name":"lsp.semantic_tokens_range","count":6,"duration":58.815},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":24,"duration":55.988},
{"type":"measure","name":"lsp.semantic_tokens_full","count":19,"duration":56.061},
{"type":"mark","name":"lsp.inlay_hint","count":252,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":253,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":254,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":255,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":256,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":257,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":707,"duration":0.024},
{"type":"mark","name":"lsp.did_change_batched","count":384,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":384,"duration":3.729},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":708,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":404,"duration":0.295},
{"type":"mark","name":"lsp.inlay_hint","count":258,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":709,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":75,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":259,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_close","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":22,"duration":0.031},
{"type":"mark","name":"lsp.did_change_batched","count":385,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":385,"duration":23.115},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":710,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":405,"duration":0.252},
{"type":"mark","name":"lsp.inlay_hint","count":260,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":711,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":76,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":261,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":386,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":386,"duration":8.379},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":712,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":406,"duration":0.273},
{"type":"mark","name":"lsp.inlay_hint","count":262,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":713,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":77,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":263,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":387,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":387,"duration":5.57},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":714,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":407,"duration":0.214},
{"type":"mark","name":"lsp.inlay_hint","count":264,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":715,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":78,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":265,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { ENRICHMENT_TIERS } from \"../lib/supabase\";\n\ninterface TierSelectorProps {\n  selectedTier: keyof typeof ENRICHMENT_TIERS;\n  onTierChange: (tier: keyof typeof ENRICHMENT_TIERS) => void;\n  numberOfLeads: number;\n}\n\nconst tierDataImprovements = {\n  BASE: [\n    \"Business verification\",\n    \"Company data (name, industry, size)\",\n    \"Phone & address validation\",\n    \"Generic company email\",\n  ],\n  PROFESSIONAL: [\n    \"Everything in Base\",\n    \"Professional email discovery & verification\",\n    \"Email deliverability verification\",\n    \"Enhanced company enrichment\",\n  ],\n  ENTERPRISE: [\n    \"Everything in Professional\",\n    \"Executive contact enrichment\",\n    \"Full compliance verification\",\n    \"Advanced data validation\",\n  ],\n};\n\nexport const TierSelector: React.FC<TierSelectorProps> = ({\n  selectedTier,\n  onTierChange,\n  numberOfLeads,\n}) => {\n  const formatUnitCost = (price: number): string => {\n    if (price >= 1) return `$${price.toFixed(2)}`;\n    if (price >= 0.01) return `$${price.toFixed(3)}`;\n    return `$${price.toFixed(4)}`;\n  };\n\n  return (\n    <div>\n      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        Data Enhancement Tiers\n      </label>\n\n      {/* Single column, table-style layout */}\n      <div className=\"space-y-2\">\n        {Object.entries(ENRICHMENT_TIERS).map(([key, tier]) => {\n          const tierKey = key as keyof typeof ENRICHMENT_TIERS;\n          const totalCost = numberOfLeads * tier.price;\n          const improvements = tierDataImprovements[tierKey];\n\n          return (\n            <div\n              key={key}\n              className={`rounded-lg p-4 cursor-pointer transition-all border-l-4 ${\n                selectedTier === key\n                  ? \"bg-blue-50 dark:bg-blue-950/30 border-l-blue-500 shadow-md dark:shadow-gray-900/20\"\n                  : \"bg-gray-100 dark:bg-gray-700 border-l-gray-200 dark:border-l-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 hover:border-l-gray-300 dark:hover:border-l-gray-500\"\n              }`}\n              onClick={() => onTierChange(tierKey)}\n            >\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n                    {tier.name}\n                  </h3>\n                  {tier.badge && (\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${\n                        tier.badge === \"Most Popular\"\n                          ? \"bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-200\"\n                          : tier.badge === \"Premium\"\n                          ? \"bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-200\"\n                          : \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200\"\n                      }`}\n                    >\n                      {tier.badge}\n                    </span>\n                  )}\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {formatUnitCost(tier.price)} per lead\n                  </div>\n                  {selectedTier === key && (\n                    <div className=\"flex items-center text-sm text-blue-600 dark:text-blue-400\">\n                      <svg\n                        className=\"w-4 h-4 mr-1\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                      Selected\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                    ${totalCost.toFixed(2)}\n                  </div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">Total cost</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2\">\n                    {tier.description}\n                  </div>\n\n                  {/* Data Improvements in horizontal layout */}\n                  <div className=\"flex flex-wrap gap-2\">\n                    {improvements.map((improvement, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center text-xs bg-white dark:bg-gray-800 rounded-full px-2 py-1 border border-gray-200 dark:border-gray-600\"\n                      >\n                        <svg\n                          className=\"w-3 h-3 text-green-500 dark:text-green-400 mr-1 flex-shrink-0\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <span className=\"text-gray-700 dark:text-gray-200\">{improvement}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md\">\n        <div className=\"flex items-center\">\n          <svg\n            className=\"w-5 h-5 text-yellow-500 dark:text-yellow-400 mr-2\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          <div className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n            <strong>Actual API costs</strong> - Pricing may vary based on API\n            response complexity and data availability\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":39,"duration":2.175},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":408,"duration":0.398},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":716,"duration":0.021},
{"type":"mark","name":"lsp.did_change_batched","count":388,"args":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":409,"duration":1.976},
{"type":"measure","name":"lsp.did_change_batched","count":388,"duration":9.955},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":717,"duration":0.014},
{"type":"mark","name":"lsp.inlay_hint","count":266,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":718,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":79,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":719,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":267,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":410,"duration":0.259},
{"type":"measure","name":"lsp.did_open","count":40,"duration":4.048},
{"type":"mark","name":"lsp.did_change_batched","count":389,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":389,"duration":17.762},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":720,"duration":0.009},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":411,"duration":0.61},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":721,"duration":0.037},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":80,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":722,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":268,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":723,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":724,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":390,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":390,"duration":1.717},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":725,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":412,"duration":0.237},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":726,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":81,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":727,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":269,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":728,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":270,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":391,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":391,"duration":1.748},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":729,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":413,"duration":0.243},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":730,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":82,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":731,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":732,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":271,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":272,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/vite-env.d.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":19,"character":0}}}},
{"type":"mark","name":"lsp.code_action","count":74,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":68,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":273,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.document_symbol","count":69,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":37,"character":4}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":25,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts",{"start":0,"length":951},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":11,"duration":0.62},
{"type":"mark","name":"tsc.op.op_resolve","count":1021,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1021,"duration":0.176},
{"type":"mark","name":"tsc.op.op_resolve","count":1022,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1022,"duration":0.039},
{"type":"mark","name":"tsc.op.op_load","count":275,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":275,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1023,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1023,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1024,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1024,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":1025,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1025,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1026,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1026,"duration":0.029},
{"type":"mark","name":"tsc.op.op_load","count":276,"args":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":276,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1027,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1027,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1028,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1028,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1029,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1029,"duration":0.138},
{"type":"mark","name":"tsc.op.op_load","count":277,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"tsc.op.op_load","count":277,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1030,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1030,"duration":0.088},
{"type":"mark","name":"tsc.op.op_resolve","count":1031,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1031,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1032,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1032,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1033,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1033,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1034,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1034,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1035,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1035,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1036,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1036,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1037,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1037,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1038,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1038,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1039,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1039,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1040,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1040,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1041,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1041,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1042,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1042,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1043,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1043,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1044,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1044,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1045,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1045,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1046,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1046,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1047,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1047,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1048,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1048,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1049,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1049,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1050,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1050,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1051,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1051,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1052,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1052,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1053,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1053,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1054,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1054,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1055,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1055,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1056,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1056,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1057,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1057,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1058,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1058,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1059,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1059,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1060,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1060,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1061,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1061,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1062,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1062,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1063,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1063,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1064,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1064,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1065,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1065,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1066,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1066,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1067,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1067,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1068,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1068,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1069,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1069,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1070,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1070,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1071,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1071,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1072,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1072,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1073,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1073,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1074,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1074,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1075,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1075,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1076,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1076,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1077,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1077,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1078,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1078,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":1079,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1079,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1080,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1080,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1081,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1081,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1082,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1082,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":1083,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1083,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1084,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1084,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1085,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1085,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1086,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1086,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1087,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1087,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1088,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1088,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1089,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1089,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1090,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1090,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1091,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1091,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1092,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1092,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1093,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1093,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1094,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1094,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1095,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1095,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1096,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1096,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1097,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1097,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1098,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1098,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1099,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1099,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1100,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1100,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1101,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1101,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1102,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1102,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1103,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1103,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1104,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1104,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1105,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1105,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1106,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1106,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1107,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1107,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1108,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1108,"duration":1.085},
{"type":"mark","name":"tsc.op.op_resolve","count":1109,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1109,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1110,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1110,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1111,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1111,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1112,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1112,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1113,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1113,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1114,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1114,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1115,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1115,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1116,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1116,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1117,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1117,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1118,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1118,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1119,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1119,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1120,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1120,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1121,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1121,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1122,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1122,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1123,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1123,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1124,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1124,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1125,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1125,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1126,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1126,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1127,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1127,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1128,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1128,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1129,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1129,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1130,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1130,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1131,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1131,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1132,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1132,"duration":1.554},
{"type":"mark","name":"tsc.op.op_release","count":5,"args":"file:///workspaces/ProspectPro/package.json"},
{"type":"measure","name":"tsc.op.op_release","count":5,"duration":1.643},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":116,"duration":0.008},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":25,"duration":60.164},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":25,"duration":60.311},
{"type":"measure","name":"lsp.semantic_tokens_range","count":7,"duration":60.441},
{"type":"mark","name":"lsp.document_highlight","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"position":{"line":0,"character":0}}},
{"type":"mark","name":"lsp.code_lens","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.folding_range","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":26,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts",{"start":0,"length":3418},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":26,"duration":88.294},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":26,"duration":88.639},
{"type":"measure","name":"lsp.semantic_tokens_full","count":20,"duration":88.788},
{"type":"mark","name":"lsp.did_open","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { EnrichmentButton } from \"../components/EnrichmentButton\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { useBusinessDiscovery } from \"../hooks/useBusinessDiscovery\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessLead } from \"../types\";\n\nexport const Campaign: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const campaignId = searchParams.get(\"id\");\n  const { currentCampaign, campaigns, leads, setCurrentCampaign } =\n    useCampaignStore();\n  const { isDiscovering, progress, currentStage, cacheStats, error } =\n    useBusinessDiscovery();\n  const [showResults, setShowResults] = useState(false);\n\n  // Filter leads for current campaign\n  const campaignLeads = currentCampaign\n    ? leads.filter((lead) => lead.campaign_id === currentCampaign.campaign_id)\n    : [];\n\n  // Load specific campaign from URL parameter\n  useEffect(() => {\n    if (campaignId && !currentCampaign) {\n      const campaign = campaigns.find((c) => c.campaign_id === campaignId);\n      if (campaign) {\n        setCurrentCampaign(campaign);\n        setShowResults(true);\n      }\n    }\n  }, [campaignId, campaigns, currentCampaign, setCurrentCampaign]);\n\n  // Show results when campaign completes\n  useEffect(() => {\n    if (\n      currentCampaign &&\n      currentCampaign.status === \"completed\" &&\n      campaignLeads.length > 0\n    ) {\n      setShowResults(true);\n    }\n  }, [currentCampaign, campaignLeads]);\n\n  // If no campaign is running or found, redirect to discovery\n  useEffect(() => {\n    if (!isDiscovering && !currentCampaign && !campaignId) {\n      navigate(\"/discovery\");\n    } else if (\n      campaignId &&\n      !campaigns.find((c) => c.campaign_id === campaignId)\n    ) {\n      // Campaign ID provided but not found\n      navigate(\"/discovery\");\n    }\n  }, [isDiscovering, currentCampaign, campaignId, campaigns, navigate]);\n\n  const exportToCsv = () => {\n    if (!campaignLeads.length) return;\n\n    // Determine if this campaign has ownership data\n    const hasOwnershipData =\n      currentCampaign?.tier_used === \"Enterprise\" ||\n      campaignLeads.some((lead) => lead.enrichment_tier === \"Enterprise\");\n\n    // Base CSV headers\n    const baseHeaders = [\n      \"Business Name\",\n      \"Address\",\n      \"Phone\",\n      \"Website\",\n      \"Email\",\n      \"Confidence Score\",\n      \"Validation Status\",\n      \"Cost to Acquire\",\n      \"Data Sources\",\n      \"Enrichment Tier\",\n    ];\n\n    // Add ownership columns for Enterprise tier\n    const headers = hasOwnershipData\n      ? [\n          ...baseHeaders,\n          \"Owner Name\",\n          \"Owner Email\",\n          \"Owner Phone\",\n          \"Owner Confidence Score\",\n        ]\n      : baseHeaders;\n\n    // Convert leads to CSV format with conditional ownership data\n    const csvContent = [\n      headers.join(\",\"),\n      ...campaignLeads.map((lead: BusinessLead) => {\n        const baseRow = [\n          `\"${lead.business_name || \"\"}\"`,\n          `\"${lead.address || \"\"}\"`,\n          `\"${lead.phone || \"\"}\"`,\n          `\"${lead.website || \"\"}\"`,\n          `\"${lead.email || \"\"}\"`,\n          lead.confidence_score || 0,\n          `\"${lead.validation_status || \"\"}\"`,\n          `$${(lead.cost_to_acquire || 0).toFixed(3)}`,\n          `\"${(lead.data_sources || []).join(\"; \")}\"`,\n          `\"${lead.enrichment_tier || \"\"}\"`,\n        ];\n\n        // Add ownership data if available\n        if (hasOwnershipData) {\n          const ownerData = (lead as any).owner_data || {};\n          baseRow.push(\n            `\"${ownerData.name || \"\"}\"`,\n            `\"${ownerData.email || \"\"}\"`,\n            `\"${ownerData.phone || \"\"}\"`,\n            ownerData.confidence_score || 0\n          );\n        }\n\n        return baseRow.join(\",\");\n      }),\n    ].join(\"\\n\");\n\n    // Download CSV file\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\n      \"download\",\n      `campaign-${currentCampaign?.campaign_id || Date.now()}-results.csv`\n    );\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Campaign Header */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Campaign Progress\n            </h1>\n            <p className=\"text-gray-600 mt-1\">\n              {currentCampaign\n                ? `Campaign ${currentCampaign.campaign_id}`\n                : \"Running campaign...\"}\n            </p>\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => navigate(\"/discovery\")}\n              className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200\"\n            >\n              Back to Discovery\n            </button>\n            {showResults && (\n              <button\n                onClick={exportToCsv}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n              >\n                Export CSV\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Progress Display */}\n      {isDiscovering && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <ProgressDisplay\n            isDiscovering={isDiscovering}\n            progress={progress}\n            currentStage={currentStage}\n            cacheStats={cacheStats}\n          />\n        </div>\n      )}\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Campaign Summary\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-blue-600 font-medium\">Status</div>\n              <div className=\"text-lg font-bold text-blue-900 capitalize\">\n                {currentCampaign.status}\n              </div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-green-600 font-medium\">\n                Leads Found\n              </div>\n              <div className=\"text-lg font-bold text-green-900\">\n                {currentCampaign.leads_found || 0}\n              </div>\n            </div>\n            <div className=\"bg-yellow-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-yellow-600 font-medium\">\n                Qualified\n              </div>\n              <div className=\"text-lg font-bold text-yellow-900\">\n                {currentCampaign.leads_qualified || 0}\n              </div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg\">\n              <div className=\"text-sm text-purple-600 font-medium\">\n                Total Cost\n              </div>\n              <div className=\"text-lg font-bold text-purple-900\">\n                ${(currentCampaign.total_cost || 0).toFixed(2)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Enrichment Section */}\n      {currentCampaign && showResults && campaignLeads.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Progressive Enrichment\n          </h2>\n          <div className=\"flex items-start justify-between gap-6\">\n            <div className=\"flex-1\">\n              <p className=\"text-gray-600 mb-4\">\n                Enrich your leads with verified emails, business license\n                validation, and more. Only pay for successful enrichments.\n              </p>\n              <div className=\"grid grid-cols-3 gap-3 text-sm\">\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <div className=\"font-semibold text-blue-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.emails?.length\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-blue-600 text-xs\">With Emails</div>\n                </div>\n                <div className=\"bg-green-50 p-3 rounded\">\n                  <div className=\"font-semibold text-green-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.neverBounceVerified\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-green-600 text-xs\">Email Verified</div>\n                </div>\n                <div className=\"bg-purple-50 p-3 rounded\">\n                  <div className=\"font-semibold text-purple-900\">\n                    {\n                      campaignLeads.filter(\n                        (l) => l.enrichment_data?.licenseVerified\n                      ).length\n                    }\n                  </div>\n                  <div className=\"text-purple-600 text-xs\">\n                    License Verified\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <EnrichmentButton\n                campaignId={currentCampaign.campaign_id}\n                onComplete={() => {\n                  // Optionally refresh data or show success message\n                  console.log(\n                    \"Enrichment completed for campaign:\",\n                    currentCampaign.campaign_id\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Results Table */}\n      {showResults && campaignLeads.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                Campaign Results\n              </h2>\n              <div className=\"text-sm text-gray-500\">\n                {campaignLeads.length} leads found\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact Info\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Score\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {campaignLeads.map((lead: BusinessLead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {lead.business_name}\n                        </div>\n                        <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                          {lead.address}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"space-y-1\">\n                        {lead.phone && (\n                          <div className=\"text-sm text-gray-900\">\n                            {lead.phone}\n                          </div>\n                        )}\n                        {lead.email && (\n                          <div className=\"text-sm text-blue-600\">\n                            {lead.email}\n                          </div>\n                        )}\n                        {lead.website && (\n                          <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                            <a\n                              href={lead.website}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"hover:text-blue-600\"\n                            >\n                              {lead.website}\n                            </a>\n                          </div>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {lead.confidence_score}%\n                        </div>\n                        <div\n                          className={`ml-2 w-16 bg-gray-200 rounded-full h-2`}\n                        >\n                          <div\n                            className={`h-2 rounded-full ${\n                              lead.confidence_score >= 80\n                                ? \"bg-green-500\"\n                                : lead.confidence_score >= 60\n                                ? \"bg-yellow-500\"\n                                : \"bg-red-500\"\n                            }`}\n                            style={{ width: `${lead.confidence_score}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${(lead.cost_to_acquire || 0).toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                          lead.validation_status === \"validated\"\n                            ? \"bg-green-100 text-green-800\"\n                            : lead.validation_status === \"pending\"\n                            ? \"bg-yellow-100 text-yellow-800\"\n                            : \"bg-red-100 text-red-800\"\n                        }`}\n                      >\n                        {lead.validation_status || \"unknown\"}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg\n                className=\"h-5 w-5 text-red-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                Campaign Failed\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error instanceof Error ? error.message : String(error)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No Results State */}\n      {showResults && campaignLeads.length === 0 && (\n        <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n            No results found\n          </h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Try adjusting your search criteria or location.\n          </p>\n          <div className=\"mt-6\">\n            <button\n              onClick={() => navigate(\"/discovery\")}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n            >\n              Start New Campaign\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.did_open","count":41,"duration":5.969},
{"type":"measure","name":"lsp.testing_update","count":414,"duration":1.829},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":733,"duration":0.024},
{"type":"mark","name":"lsp.did_change_batched","count":392,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":392,"duration":11.157},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":734,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":415,"duration":0.279},
{"type":"mark","name":"lsp.inlay_hint","count":274,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":735,"duration":0.033},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":83,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":736,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":737,"duration":0.045},
{"type":"mark","name":"lsp.inlay_hint","count":275,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":738,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":393,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":393,"duration":2.587},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":739,"duration":0.008},
{"type":"measure","name":"lsp.testing_update","count":416,"duration":0.263},
{"type":"mark","name":"lsp.inlay_hint","count":276,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":740,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":84,"duration":0.034},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":741,"duration":0.046},
{"type":"mark","name":"lsp.inlay_hint","count":277,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":742,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":743,"duration":0.002},
{"type":"mark","name":"lsp.did_open","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Results.tsx","languageId":"typescriptreact","version":1,"text":"import React from \"react\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\n\nexport const Results: React.FC = () => {\n  const { leads, currentCampaign } = useCampaignStore();\n\n  const handleExport = (format: \"csv\" | \"json\") => {\n    const dataToExport = leads.filter((lead) => lead.confidence_score >= 70);\n\n    if (format === \"csv\") {\n      const csvContent = [\n        \"Business Name,Address,Phone,Website,Email,Confidence Score,Enrichment Tier,Vault Secured,Data Sources,Validation Status\",\n        ...dataToExport.map(\n          (lead) =>\n            `\"${lead.business_name}\",\"${lead.address || \"\"}\",\"${\n              lead.phone || \"\"\n            }\",\"${lead.website || \"\"}\",\"${lead.email || \"\"}\",${\n              lead.confidence_score\n            },\"${lead.enrichment_tier || \"Standard\"}\",${\n              lead.vault_secured ? \"Yes\" : \"No\"\n            },\"${lead.data_sources.join(\"; \")}\",${lead.validation_status}`\n        ),\n      ].join(\"\\n\");\n\n      const blob = new Blob([csvContent], { type: \"text/csv\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `prospects-vault-secured-${\n        new Date().toISOString().split(\"T\")[0]\n      }.csv`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } else {\n      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], {\n        type: \"application/json\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `prospects-vault-secured-${\n        new Date().toISOString().split(\"T\")[0]\n      }.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  const getConfidenceColor = (score: number) => {\n    if (score >= 90) return \"bg-green-100 text-green-800\";\n    if (score >= 80) return \"bg-blue-100 text-blue-800\";\n    if (score >= 70) return \"bg-yellow-100 text-yellow-800\";\n    return \"bg-red-100 text-red-800\";\n  };\n\n  const getValidationStatusColor = (status: string) => {\n    switch (status) {\n      case \"validated\":\n        return \"bg-green-100 text-green-800\";\n      case \"validating\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"failed\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Results</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {leads.length} leads found •{\" \"}\n            {leads.filter((l) => l.confidence_score >= 70).length} qualified\n          </p>\n        </div>\n\n        {leads.length > 0 && (\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => handleExport(\"csv\")}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📊 Export CSV\n            </button>\n            <button\n              onClick={() => handleExport(\"json\")}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              📄 Export JSON\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Campaign Summary */}\n      {currentCampaign && (\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              Progressive Enrichment Results\n            </h3>\n            {currentCampaign.vault_secured && (\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                🔐 Vault Secured\n              </span>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-5\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {currentCampaign.leads_found}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total Found</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {currentCampaign.leads_qualified}\n              </div>\n              <div className=\"text-sm text-gray-500\">Qualified</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {currentCampaign.leads_validated}\n              </div>\n              <div className=\"text-sm text-gray-500\">Validated</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {currentCampaign.tier_used || \"Professional\"}\n              </div>\n              <div className=\"text-sm text-gray-500\">Tier Used</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-900\">\n                ${currentCampaign.total_cost.toFixed(2)}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total Cost</div>\n            </div>\n          </div>\n\n          {/* Cache Performance Display */}\n          {currentCampaign.cache_performance && (\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\n              <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\n                🚀 90-Day Intelligent Cache Performance\n              </h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {currentCampaign.cache_performance.cache_hit_ratio.toFixed(\n                      1\n                    )}\n                    %\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Hit Ratio</div>\n                </div>\n                <div className=\"bg-blue-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {currentCampaign.cache_performance.cache_hits}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Hits</div>\n                </div>\n                <div className=\"bg-yellow-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-yellow-600\">\n                    {currentCampaign.cache_performance.cache_misses}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cache Misses</div>\n                </div>\n                <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    ${currentCampaign.cache_performance.cost_savings.toFixed(2)}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Cost Savings</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Results Table */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        {leads.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <span className=\"text-4xl\">🔍</span>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n              No results yet\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Start a discovery campaign to find business leads.\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Business\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Confidence\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Enrichment\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cost\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {leads.map((lead) => (\n                  <tr key={lead.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {lead.business_name}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {lead.address}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.phone && <div>📞 {lead.phone}</div>}\n                        {lead.website && (\n                          <div>\n                            🌐{\" \"}\n                            <a\n                              href={lead.website}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-blue-600 hover:underline\"\n                            >\n                              {lead.website.replace(/^https?:\\/\\//, \"\")}\n                            </a>\n                          </div>\n                        )}\n                        {lead.email && <div>📧 {lead.email}</div>}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(\n                          lead.confidence_score\n                        )}`}\n                      >\n                        {lead.confidence_score}%\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex flex-col space-y-1\">\n                        <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800\">\n                          {lead.enrichment_tier || \"Professional\"}\n                        </span>\n                        {lead.vault_secured && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800\">\n                            🔐 Vault Secured\n                          </span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span\n                        className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getValidationStatusColor(\n                          lead.validation_status\n                        )}`}\n                      >\n                        {lead.validation_status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      ${lead.cost_to_acquire.toFixed(3)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":42,"duration":7.152},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":417,"duration":0.364},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":744,"duration":0.024},
{"type":"mark","name":"lsp.did_change_batched","count":394,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":394,"duration":17.511},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":745,"duration":0.013},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":418,"duration":0.285},
{"type":"mark","name":"lsp.inlay_hint","count":278,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":746,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":85,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":747,"duration":0.016},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":748,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":749,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":750,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":279,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":751,"duration":0.024},
{"type":"mark","name":"lsp.did_change_batched","count":395,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":395,"duration":4.661},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":419,"duration":0.273},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":752,"duration":0.009},
{"type":"mark","name":"lsp.inlay_hint","count":280,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":753,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":86,"duration":0.032},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":754,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":755,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":756,"duration":0.025},
{"type":"mark","name":"lsp.inlay_hint","count":281,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":757,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":758,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":396,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":396,"duration":3.309},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":759,"duration":0.017},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":420,"duration":0.277},
{"type":"mark","name":"lsp.inlay_hint","count":282,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":760,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":87,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":761,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":283,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":762,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":763,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":764,"duration":0.017},
{"type":"mark","name":"lsp.inlay_hint","count":284,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":67,"character":4}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":765,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":285,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":23}}}},
{"type":"mark","name":"lsp.inlay_hint","count":286,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":23}}}},
{"type":"mark","name":"lsp.inlay_hint","count":287,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.did_change_batched","count":397,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":397,"duration":2.924},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":766,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":421,"duration":0.278},
{"type":"mark","name":"lsp.inlay_hint","count":288,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":767,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":88,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":289,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":768,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":769,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":770,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":771,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":772,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":398,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":398,"duration":2.787},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":773,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":422,"duration":0.278},
{"type":"mark","name":"lsp.inlay_hint","count":290,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":774,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":89,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":775,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":291,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":776,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":777,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":778,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":779,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":399,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":399,"duration":3.411},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":780,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":423,"duration":0.277},
{"type":"mark","name":"lsp.inlay_hint","count":292,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":781,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":90,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":293,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":782,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":783,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":784,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":785,"duration":0.017},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":786,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":400,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":424,"duration":0.261},
{"type":"measure","name":"lsp.did_change_batched","count":400,"duration":3.632},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":787,"duration":0.008},
{"type":"mark","name":"lsp.inlay_hint","count":294,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":788,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":91,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":295,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":789,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":790,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":791,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":792,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":793,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":401,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":401,"duration":3.222},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":794,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":425,"duration":0.255},
{"type":"mark","name":"lsp.inlay_hint","count":296,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":795,"duration":0.025},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":92,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":796,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":297,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":797,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":798,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":799,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":800,"duration":0.001},
{"type":"mark","name":"lsp.document_highlight","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"position":{"line":0,"character":0}}},
{"type":"mark","name":"lsp.code_lens","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":298,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":28,"character":0},"end":{"line":130,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":299,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":29,"character":0},"end":{"line":130,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":300,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":29,"character":0},"end":{"line":130,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts","languageId":"typescript","version":1,"text":"import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport type { BusinessLead, CampaignResult, CampaignStore } from \"../types\";\n\ninterface CampaignActions {\n  addCampaign: (campaign: CampaignResult) => void;\n  updateCampaign: (\n    campaignId: string,\n    updates: Partial<CampaignResult>\n  ) => void;\n  setCurrentCampaign: (campaign: CampaignResult | null) => void;\n  addLeads: (leads: BusinessLead[]) => void;\n  updateLead: (leadId: string, updates: Partial<BusinessLead>) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearLeads: () => void;\n  reset: () => void;\n}\n\nconst initialState: CampaignStore = {\n  campaigns: [],\n  currentCampaign: null,\n  leads: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const useCampaignStore = create<CampaignStore & CampaignActions>()(\n  persist(\n    (set) => ({\n      ...initialState,\n\n      addCampaign: (campaign) =>\n        set((state) => ({\n          campaigns: [campaign, ...state.campaigns],\n        })),\n\n      updateCampaign: (campaignId, updates) =>\n        set((state) => ({\n          campaigns: state.campaigns.map((c) =>\n            c.campaign_id === campaignId ? { ...c, ...updates } : c\n          ),\n          currentCampaign:\n            state.currentCampaign?.campaign_id === campaignId\n              ? { ...state.currentCampaign, ...updates }\n              : state.currentCampaign,\n        })),\n\n      setCurrentCampaign: (campaign) => set({ currentCampaign: campaign }),\n\n      addLeads: (leads) =>\n        set((state) => ({\n          leads: [...state.leads, ...leads],\n        })),\n\n      updateLead: (leadId, updates) =>\n        set((state) => ({\n          leads: state.leads.map((l) =>\n            l.id === leadId ? { ...l, ...updates } : l\n          ),\n        })),\n\n      setLoading: (loading) => set({ isLoading: loading }),\n\n      setError: (error) => set({ error }),\n\n      clearLeads: () => set({ leads: [] }),\n\n      reset: () => set(initialState),\n    }),\n    {\n      name: \"campaign-store\",\n      partialize: (state) => ({\n        campaigns: state.campaigns,\n        leads: state.leads,\n      }),\n    }\n  )\n);\n"}}},
{"type":"measure","name":"lsp.did_open","count":43,"duration":1.35},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":426,"duration":0.289},
{"type":"mark","name":"lsp.inlay_hint","count":301,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":29,"character":0},"end":{"line":130,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":302,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":29,"character":0},"end":{"line":130,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":303,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":304,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.did_open","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts","languageId":"typescript","version":1,"text":"// Business Discovery Types\nexport interface BusinessLead {\n  id: string;\n  campaign_id?: string;\n  business_name: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  email?: string;\n  industry?: string;\n  confidence_score: number;\n  validation_status: \"pending\" | \"validating\" | \"validated\" | \"failed\";\n  created_at: string;\n  cost_to_acquire: number;\n  data_sources: string[];\n  // Progressive enrichment fields\n  enrichment_tier?: string;\n  vault_secured?: boolean;\n  enrichment_data?: {\n    emails?: Array<{\n      email: string;\n      confidence: number;\n      verified: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    businessLicense?: {\n      isValid: boolean;\n      licenseNumber?: string;\n      status?: string;\n      expirationDate?: string;\n      professionalType?: string;\n      source: string;\n    };\n    companyInfo?: {\n      name?: string;\n      industry?: string;\n      size?: string;\n      founded?: number;\n      revenue?: string;\n      website?: string;\n      description?: string;\n      source: string;\n    };\n    hunterVerified?: boolean;\n    neverBounceVerified?: boolean;\n    licenseVerified?: boolean;\n    processingMetadata?: {\n      servicesUsed?: string[];\n      servicesSkipped?: string[];\n      totalCost?: number;\n      validationCost?: number;\n      enrichmentCost?: number;\n      enrichmentTier?: string;\n      enrichmentCostBreakdown?: {\n        businessLicenseCost: number;\n        companyEnrichmentCost: number;\n        hunterCost: number;\n        neverBounceCost: number;\n        personEnrichmentCost: number;\n        apolloCost: number;\n        complianceCost: number;\n      };\n    };\n    dataSources?: string[];\n  };\n}\n\nexport interface CampaignConfig {\n  search_terms: string;\n  location: string;\n  business_type?: string;\n  budget_limit: number;\n  max_results: number;\n  include_email_validation: boolean;\n  include_website_validation: boolean;\n  min_confidence_score: number;\n  chamber_verification?: boolean;\n  trade_association?: boolean;\n  professional_license?: boolean;\n  keywords?: string;\n  search_radius?: string;\n  expand_geography?: boolean;\n}\n\nexport interface ValidationResult {\n  field: string;\n  is_valid: boolean;\n  confidence: number;\n  source: string;\n  details?: string;\n}\n\nexport interface CampaignResult {\n  campaign_id: string;\n  business_type?: string;\n  location?: string;\n  status: \"running\" | \"completed\" | \"failed\" | \"cancelled\";\n  progress: number;\n  total_cost: number;\n  leads_found: number;\n  leads_qualified: number;\n  leads_validated: number;\n  created_at: string;\n  completed_at?: string;\n  error_message?: string;\n  // Progressive enrichment fields\n  tier_used?: string;\n  vault_secured?: boolean;\n  cache_performance?: {\n    cache_hits: number;\n    cache_misses: number;\n    cache_hit_ratio: number;\n    cost_savings: number;\n  };\n}\n\n// Census Intelligence Types\nexport interface CensusIntelligence {\n  business_density: {\n    total_establishments: number;\n    density_score: number;\n    confidence_multiplier: number;\n  };\n  geographic_optimization: {\n    optimal_radius: number;\n    expected_results: number;\n    api_efficiency_score: number;\n  };\n  market_insights: {\n    market_density: \"High\" | \"Medium\" | \"Low\";\n    competition_level: \"High\" | \"Medium\" | \"Low\";\n    search_optimization: string;\n  };\n}\n\n// API Response Types\nexport interface EdgeFunctionResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  cost?: number;\n  processing_time?: number;\n}\n\nexport interface BusinessDiscoveryResponse {\n  businesses: BusinessLead[];\n  total_cost: number;\n  processing_time: string;\n  campaign_id: string;\n  qualified_count: number;\n  total_found: number;\n  census_intelligence?: CensusIntelligence;\n  // Background job fields\n  job_id?: string; // For tracking background processing\n  status?: string; // Job status (pending, processing, completed, failed)\n  estimated_time?: number; // Estimated completion time in seconds\n  realtime_channel?: string; // Channel for real-time updates\n  // Progressive enrichment fields (vault-secured)\n  tier_used?: string;\n  cache_performance?: {\n    cache_hits: number;\n    cache_misses: number;\n    cache_hit_ratio: number;\n    cost_savings: number;\n  };\n  vault_status?: string;\n  stage_progress?: number;\n  current_stage?: string;\n}\n\n// Store Types\nexport interface CampaignStore {\n  campaigns: CampaignResult[];\n  currentCampaign: CampaignResult | null;\n  leads: BusinessLead[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface UIStore {\n  sidebarOpen: boolean;\n  theme: \"light\" | \"dark\";\n  notifications: Notification[];\n}\n\nexport interface Notification {\n  id: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  title: string;\n  message: string;\n  timestamp: number;\n}\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":427,"duration":0.268},
{"type":"measure","name":"lsp.did_open","count":44,"duration":2.361},
{"type":"mark","name":"lsp.did_change_batched","count":402,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":402,"duration":2.991},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":801,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":428,"duration":0.276},
{"type":"mark","name":"lsp.inlay_hint","count":305,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":802,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":93,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":803,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":804,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":805,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":806,"duration":0.02},
{"type":"mark","name":"lsp.inlay_hint","count":306,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":807,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":403,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":403,"duration":3.033},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":808,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":429,"duration":0.303},
{"type":"mark","name":"lsp.inlay_hint","count":307,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":809,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":94,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":810,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":308,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":811,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":812,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":813,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":814,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":404,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":404,"duration":4.078},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":815,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":430,"duration":0.313},
{"type":"mark","name":"lsp.inlay_hint","count":309,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":816,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":95,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":817,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":310,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":818,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":819,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":820,"duration":0.037},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":821,"duration":0.001},
{"type":"mark","name":"lsp.did_change_batched","count":405,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":405,"duration":4.464},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":822,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":431,"duration":0.297},
{"type":"mark","name":"lsp.inlay_hint","count":311,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":823,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":96,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":824,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":312,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":825,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":826,"duration":0.029},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":827,"duration":0.018},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":828,"duration":0.001},
{"type":"mark","name":"lsp.did_close","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/stores/campaignStore.ts"}}},
{"type":"measure","name":"lsp.did_close","count":23,"duration":1.383},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":432,"duration":0.295},
{"type":"mark","name":"lsp.did_close","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/types/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":24,"duration":0.851},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":433,"duration":0.266},
{"type":"mark","name":"lsp.did_change_batched","count":406,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":406,"duration":2.438},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":829,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":434,"duration":0.29},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":830,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":831,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":313,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":97,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":832,"duration":0.014},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":833,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":314,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":834,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":835,"duration":0.02},
{"type":"mark","name":"lsp.did_change_watched_files","count":20,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":20,"duration":0.016},
{"type":"mark","name":"lsp.did_change_watched_files","count":21,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":21,"duration":0.016},
{"type":"mark","name":"lsp.goto_definition","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx"},"position":{"line":5,"character":9}}},
{"type":"mark","name":"lsp.goto_definition","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx"},"position":{"line":5,"character":9}}},
{"type":"mark","name":"lsp.goto_definition","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx"},"position":{"line":6,"character":9}}},
{"type":"mark","name":"lsp.inlay_hint","count":315,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":316,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":317,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":318,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":319,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":320,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.did_change_batched","count":407,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":407,"duration":3.05},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":836,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":435,"duration":0.453},
{"type":"mark","name":"lsp.did_change_batched","count":408,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":408,"duration":3.509},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":837,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":436,"duration":0.304},
{"type":"mark","name":"lsp.did_change_batched","count":409,"args":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":437,"duration":0.3},
{"type":"measure","name":"lsp.did_change_batched","count":409,"duration":5.214},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":838,"duration":0.013},
{"type":"mark","name":"lsp.inlay_hint","count":321,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":839,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":98,"duration":0.02},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":840,"duration":0.002},
{"type":"mark","name":"lsp.did_change_batched","count":410,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":410,"duration":8.349},
{"type":"mark","name":"lsp.did_change_batched","count":411,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":438,"duration":0.644},
{"type":"measure","name":"lsp.did_change_batched","count":411,"duration":23.048},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":841,"duration":0.012},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":842,"duration":0.008},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":439,"duration":0.294},
{"type":"mark","name":"lsp.did_change_batched","count":412,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":412,"duration":23.388},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":843,"duration":0.011},
{"type":"mark","name":"lsp.inlay_hint","count":322,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":440,"duration":0.258},
{"type":"mark","name":"lsp.did_change_batched","count":413,"args":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":441,"duration":0.274},
{"type":"measure","name":"lsp.did_change_batched","count":413,"duration":15.517},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":844,"duration":0.012},
{"type":"mark","name":"lsp.did_change_batched","count":414,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":414,"duration":5.174},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":845,"duration":0.014},
{"type":"mark","name":"lsp.inlay_hint","count":323,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.folding_range","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":442,"duration":0.297},
{"type":"mark","name":"lsp.code_lens","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.inlay_hint","count":324,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.document_symbol","count":70,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":846,"duration":0.021},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":99,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":847,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":848,"duration":0.022},
{"type":"mark","name":"lsp.document_symbol","count":71,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":849,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":850,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":100,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":325,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":851,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":326,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":27,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts",{"start":0,"length":3432},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":12,"duration":0.651},
{"type":"mark","name":"tsc.op.op_resolve","count":1133,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1133,"duration":0.196},
{"type":"mark","name":"tsc.op.op_resolve","count":1134,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1134,"duration":1.794},
{"type":"mark","name":"tsc.op.op_load","count":278,"args":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":278,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1135,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1135,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1136,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1136,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":1137,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1137,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1138,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1138,"duration":0.04},
{"type":"mark","name":"tsc.op.op_load","count":279,"args":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":279,"duration":0.029},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":101,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1139,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1139,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1140,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1140,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":280,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":280,"duration":2.385},
{"type":"mark","name":"tsc.op.op_resolve","count":1141,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1141,"duration":0.2},
{"type":"mark","name":"tsc.op.op_load","count":281,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":281,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1142,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1142,"duration":0.154},
{"type":"mark","name":"tsc.op.op_load","count":282,"args":"file:///workspaces/ProspectPro/src/pages/Results.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":282,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1143,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1143,"duration":0.065},
{"type":"mark","name":"tsc.op.op_load","count":283,"args":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},
{"type":"measure","name":"tsc.op.op_load","count":283,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1144,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1144,"duration":0.067},
{"type":"mark","name":"tsc.op.op_resolve","count":1145,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1145,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1146,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1146,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":1147,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1147,"duration":0.064},
{"type":"mark","name":"tsc.op.op_resolve","count":1148,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1148,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1149,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1149,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1150,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1150,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1151,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1151,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1152,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1152,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1153,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1153,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1154,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1154,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1155,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1155,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1156,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1156,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1157,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1157,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1158,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1158,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1159,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1159,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1160,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1160,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1161,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1161,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1162,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1162,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1163,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1163,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1164,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1164,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1165,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1165,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1166,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1166,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1167,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1167,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1168,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1168,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1169,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1169,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1170,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1170,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1171,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1171,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1172,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1172,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1173,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1173,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1174,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1174,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1175,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1175,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1176,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1176,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1177,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1177,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1178,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1178,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1179,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1179,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1180,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1180,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1181,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1181,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1182,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1182,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1183,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1183,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1184,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1184,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1185,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1185,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1186,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1186,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1187,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1187,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1188,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1188,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1189,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1189,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1190,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1190,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1191,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1191,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1192,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1192,"duration":0.068},
{"type":"mark","name":"tsc.op.op_resolve","count":1193,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1193,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1194,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1194,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1195,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1195,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1196,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1196,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1197,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1197,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1198,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1198,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1199,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1199,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1200,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1200,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1201,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1201,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1202,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1202,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1203,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1203,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1204,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1204,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1205,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1205,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1206,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1206,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1207,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1207,"duration":2.074},
{"type":"mark","name":"tsc.op.op_resolve","count":1208,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1208,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1209,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1209,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1210,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1210,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1211,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1211,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1212,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1212,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1213,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1213,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1214,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1214,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1215,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1215,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1216,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1216,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1217,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1217,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1218,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1218,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1219,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1219,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1220,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1220,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1221,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1221,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1222,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1222,"duration":2.077},
{"type":"mark","name":"tsc.op.op_resolve","count":1223,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1223,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1224,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1224,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1225,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1225,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1226,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1226,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1227,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1227,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1228,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1228,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1229,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1229,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1230,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1230,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1231,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1231,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":1232,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1232,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1233,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1233,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1234,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1234,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1235,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1235,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1236,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1236,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":1237,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1237,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1238,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1238,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1239,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1239,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1240,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1240,"duration":0.067},
{"type":"mark","name":"tsc.op.op_resolve","count":1241,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1241,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1242,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1242,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1243,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1243,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1244,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1244,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1245,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1245,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1246,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1246,"duration":0.029},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":27,"duration":206.476},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":27,"duration":206.638},
{"type":"measure","name":"lsp.semantic_tokens_full","count":21,"duration":206.771},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":102,"duration":0.022},
{"type":"mark","name":"lsp.did_change_batched","count":415,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":415,"duration":6.267},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":852,"duration":0.011},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":443,"duration":0.367},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":103,"duration":0.015},
{"type":"mark","name":"lsp.inlay_hint","count":327,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":328,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":329,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":330,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.inlay_hint","count":331,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":104,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":853,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":332,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":19}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":854,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":855,"duration":0.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":856,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":857,"duration":0.021},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":858,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":859,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":75,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":72,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.folding_range","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":333,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":134,"character":0}}}},
{"type":"mark","name":"lsp.document_highlight","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"position":{"line":51,"character":13}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.document_symbol","count":73,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":28,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx",{"start":0,"length":30323},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":17,"duration":0.021},
{"type":"mark","name":"tsc.op.op_load","count":284,"args":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":284,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1247,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1247,"duration":0.158},
{"type":"mark","name":"lsp.code_action","count":76,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":51,"character":13},"end":{"line":51,"character":13}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.code_lens","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"}}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":28,"duration":79.368},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":28,"duration":79.59},
{"type":"measure","name":"lsp.semantic_tokens_full","count":22,"duration":79.749},
{"type":"mark","name":"lsp.inlay_hint","count":334,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":65,"character":0},"end":{"line":234,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":335,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":65,"character":0},"end":{"line":234,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":336,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":65,"character":0},"end":{"line":234,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":337,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":577,"character":0},"end":{"line":737,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":338,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":579,"character":0},"end":{"line":738,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":339,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":682,"character":0},"end":{"line":747,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":340,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":628,"character":0},"end":{"line":747,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":341,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":656,"character":0},"end":{"line":747,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":342,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":598,"character":0},"end":{"line":747,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":343,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":493,"character":0},"end":{"line":655,"character":70}}}},
{"type":"mark","name":"lsp.inlay_hint","count":344,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":429,"character":0},"end":{"line":591,"character":26}}}},
{"type":"mark","name":"lsp.inlay_hint","count":345,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":394,"character":0},"end":{"line":557,"character":23}}}},
{"type":"mark","name":"lsp.inlay_hint","count":346,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":392,"character":0},"end":{"line":555,"character":49}}}},
{"type":"mark","name":"lsp.inlay_hint","count":347,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":385,"character":0},"end":{"line":548,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":348,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":386,"character":0},"end":{"line":549,"character":80}}}},
{"type":"mark","name":"lsp.inlay_hint","count":349,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":162,"character":0},"end":{"line":331,"character":23}}}},
{"type":"mark","name":"lsp.inlay_hint","count":350,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":165,"character":0},"end":{"line":334,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":351,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":166,"character":0},"end":{"line":335,"character":35}}}},
{"type":"mark","name":"lsp.inlay_hint","count":352,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":172,"character":0},"end":{"line":341,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":353,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":173,"character":0},"end":{"line":342,"character":15}}}},
{"type":"mark","name":"lsp.inlay_hint","count":354,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":174,"character":0},"end":{"line":343,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":355,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":175,"character":0},"end":{"line":344,"character":41}}}},
{"type":"mark","name":"lsp.inlay_hint","count":356,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":176,"character":0},"end":{"line":345,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":357,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":30}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":860,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":77,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":74,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":358,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":29}}}},
{"type":"mark","name":"lsp.document_highlight","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":9,"character":13}}},
{"type":"mark","name":"lsp.code_action","count":78,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.document_symbol","count":75,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":73,"character":29}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":29,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/Campaign.tsx",{"start":0,"length":2584},"2020"]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":117,"duration":0.008},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":29,"duration":10.291},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":29,"duration":10.462},
{"type":"measure","name":"lsp.semantic_tokens_range","count":8,"duration":10.592},
{"type":"mark","name":"lsp.code_lens","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"}}},
{"type":"mark","name":"lsp.folding_range","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":30,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/pages/Campaign.tsx",{"start":0,"length":15125},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":30,"duration":6.395},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":30,"duration":6.559},
{"type":"measure","name":"lsp.semantic_tokens_full","count":23,"duration":6.688},
{"type":"mark","name":"lsp.inlay_hint","count":359,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":105,"character":37}}}},
{"type":"mark","name":"lsp.inlay_hint","count":360,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":108,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":361,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":110,"character":14}}}},
{"type":"mark","name":"lsp.inlay_hint","count":362,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":113,"character":12}}}},
{"type":"mark","name":"lsp.inlay_hint","count":363,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":116,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":364,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":118,"character":26}}}},
{"type":"mark","name":"lsp.inlay_hint","count":365,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":121,"character":20}}}},
{"type":"mark","name":"lsp.inlay_hint","count":366,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":124,"character":14}}}},
{"type":"mark","name":"lsp.inlay_hint","count":367,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":126,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":368,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":137,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":369,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":139,"character":18}}}},
{"type":"mark","name":"lsp.inlay_hint","count":370,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":142,"character":27}}}},
{"type":"mark","name":"lsp.inlay_hint","count":371,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":145,"character":36}}}},
{"type":"mark","name":"lsp.hover","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":76,"character":38}}},
{"type":"mark","name":"lsp.inlay_hint","count":372,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":150,"character":25}}}},
{"type":"mark","name":"lsp.inlay_hint","count":373,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":155,"character":18}}}},
{"type":"mark","name":"lsp.hover","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":87,"character":38}}},
{"type":"mark","name":"lsp.inlay_hint","count":374,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":160,"character":22}}}},
{"type":"mark","name":"lsp.inlay_hint","count":375,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":166,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":376,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":2,"character":0},"end":{"line":171,"character":58}}}},
{"type":"mark","name":"lsp.hover","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":103,"character":37}}},
{"type":"mark","name":"lsp.inlay_hint","count":377,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":5,"character":0},"end":{"line":174,"character":43}}}},
{"type":"mark","name":"lsp.inlay_hint","count":378,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":7,"character":0},"end":{"line":176,"character":30}}}},
{"type":"mark","name":"lsp.inlay_hint","count":379,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":12,"character":0},"end":{"line":182,"character":22}}}},
{"type":"mark","name":"lsp.hover","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":114,"character":37}}},
{"type":"mark","name":"lsp.inlay_hint","count":380,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":18,"character":0},"end":{"line":187,"character":21}}}},
{"type":"mark","name":"lsp.hover","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":119,"character":37}}},
{"type":"mark","name":"lsp.inlay_hint","count":381,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":23,"character":0},"end":{"line":192,"character":47}}}},
{"type":"mark","name":"lsp.inlay_hint","count":382,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":26,"character":0},"end":{"line":195,"character":16}}}},
{"type":"mark","name":"lsp.inlay_hint","count":383,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":28,"character":0},"end":{"line":197,"character":16}}}},
{"type":"mark","name":"lsp.inlay_hint","count":384,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":31,"character":0},"end":{"line":200,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":385,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":28,"character":0},"end":{"line":197,"character":16}}}},
{"type":"mark","name":"lsp.inlay_hint","count":386,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":31,"character":0},"end":{"line":200,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":387,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":33,"character":0},"end":{"line":203,"character":21}}}},
{"type":"mark","name":"lsp.inlay_hint","count":388,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":36,"character":0},"end":{"line":205,"character":63}}}},
{"type":"mark","name":"lsp.inlay_hint","count":389,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":39,"character":0},"end":{"line":208,"character":19}}}},
{"type":"mark","name":"lsp.hover","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":141,"character":36}}},
{"type":"mark","name":"lsp.inlay_hint","count":390,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":44,"character":0},"end":{"line":213,"character":16}}}},
{"type":"mark","name":"lsp.inlay_hint","count":391,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":47,"character":0},"end":{"line":216,"character":31}}}},
{"type":"mark","name":"lsp.inlay_hint","count":392,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":49,"character":0},"end":{"line":218,"character":20}}}},
{"type":"mark","name":"lsp.hover","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":152,"character":36}}},
{"type":"mark","name":"lsp.inlay_hint","count":393,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":52,"character":0},"end":{"line":221,"character":23}}}},
{"type":"mark","name":"lsp.inlay_hint","count":394,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":55,"character":0},"end":{"line":224,"character":18}}}},
{"type":"mark","name":"lsp.inlay_hint","count":395,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":57,"character":0},"end":{"line":226,"character":18}}}},
{"type":"mark","name":"lsp.inlay_hint","count":396,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":60,"character":0},"end":{"line":229,"character":8}}}},
{"type":"mark","name":"lsp.inlay_hint","count":397,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"range":{"start":{"line":62,"character":0},"end":{"line":232,"character":26}}}},
{"type":"mark","name":"lsp.hover","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":165,"character":36}}},
{"type":"mark","name":"lsp.hover","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":150,"character":60}}},
{"type":"mark","name":"lsp.hover","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":150,"character":59}}},
{"type":"mark","name":"lsp.hover","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":150,"character":58}}},
{"type":"mark","name":"lsp.hover","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":151,"character":54}}},
{"type":"mark","name":"lsp.hover","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":150,"character":56}}},
{"type":"mark","name":"lsp.hover","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":139,"character":49}}},
{"type":"mark","name":"lsp.hover","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx"},"position":{"line":139,"character":48}}},
{"type":"mark","name":"lsp.did_open","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts","languageId":"typescript","version":1,"text":"import { useMutation } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { ENRICHMENT_TIERS, ensureSession, supabase } from \"../lib/supabase\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessDiscoveryResponse, CampaignConfig } from \"../types\";\n\nexport const useBusinessDiscovery = (\n  onJobCreated?: (jobData: {\n    jobId: string;\n    campaignId: string;\n    status: string;\n    estimatedTime?: number;\n  }) => void\n) => {\n  const { sessionUserId } = useAuth();\n  const { setLoading, setError, clearLeads, setCurrentCampaign } =\n    useCampaignStore();\n  const [progress, setProgress] = useState(0);\n  const [currentStage, setCurrentStage] = useState<string>(\"\");\n  const [cacheStats] = useState<any>(null);\n\n  const discoveryMutation = useMutation({\n    mutationFn: async (\n      config: CampaignConfig & { selectedTier?: keyof typeof ENRICHMENT_TIERS }\n    ): Promise<BusinessDiscoveryResponse> => {\n      setLoading(true);\n      setError(null);\n      setProgress(10);\n      setCurrentStage(\"Initializing user-aware discovery...\");\n\n      // Reset any existing campaign context before starting a new discovery\n      clearLeads();\n      setCurrentCampaign(null);\n\n      try {\n        console.log(\"🚀 Starting user-aware business discovery:\", config);\n        console.log(\"👤 Session User ID:\", sessionUserId);\n\n        // Ensure we have a valid session before calling Edge Function\n        const hasSession = await ensureSession();\n        if (!hasSession) {\n          throw new Error(\n            \"Failed to establish authentication session. Please refresh the page.\"\n          );\n        }\n\n        // Determine enrichment tier\n        const tier = config.selectedTier || \"PROFESSIONAL\";\n        const tierConfig = ENRICHMENT_TIERS[tier];\n        const keywordList = config.keywords\n          ? config.keywords\n              .split(\",\")\n              .map((value) => value.trim())\n              .filter(Boolean)\n          : undefined;\n\n        const discoveryOptions = {\n          tradeAssociation: config.trade_association ?? false,\n          professionalLicense: config.professional_license ?? false,\n          chamberVerification: config.chamber_verification ?? false,\n          apolloDiscovery: tier === \"ENTERPRISE\",\n        };\n\n        setCurrentStage(\n          `Using ${tierConfig.name} tier ($${tierConfig.price}/lead)`\n        );\n        setProgress(20);\n\n        // Call background task business discovery with authentication\n        const { data, error } = await supabase.functions.invoke(\n          \"business-discovery-background\",\n          {\n            body: {\n              businessType: config.business_type || config.search_terms,\n              location: config.location,\n              keywords: keywordList,\n              searchRadius: config.search_radius,\n              expandGeography: config.expand_geography,\n              maxResults: config.max_results,\n              budgetLimit: config.max_results * tierConfig.price,\n              minConfidenceScore: config.min_confidence_score || 50,\n              tierKey: tier,\n              tierName: tierConfig.name,\n              tierPrice: tierConfig.price,\n              options: discoveryOptions,\n              sessionUserId:\n                sessionUserId ||\n                `session_${Date.now()}_${Math.random()\n                  .toString(36)\n                  .substr(2, 9)}`,\n            },\n          }\n        );\n\n        if (error) {\n          console.error(\"❌ Background discovery error:\", error);\n          throw new Error(`Discovery failed: ${error.message}`);\n        }\n\n        if (!data || !data.success) {\n          throw new Error(\"No data returned from background discovery\");\n        }\n\n        console.log(\"✅ Background discovery response:\", data);\n\n        // For background tasks, we get jobId and campaignId immediately\n        // The actual processing happens in the background\n        const transformedData: BusinessDiscoveryResponse = {\n          campaign_id: data.campaignId,\n          job_id: data.jobId, // New: job ID for tracking progress\n          status: data.status, // New: processing status\n          estimated_time: data.estimatedTime, // New: estimated completion time\n          realtime_channel: data.realtimeChannel, // New: for real-time updates\n          total_found: 0, // Will be updated via real-time\n          qualified_count: 0, // Will be updated via real-time\n          total_cost: 0, // Will be updated via real-time\n          processing_time: \"< 100ms\", // Immediate response\n          tier_used: tierConfig.name,\n          cache_performance: undefined,\n          vault_status: \"secured\",\n          census_intelligence: undefined,\n          businesses: [], // Will be populated via real-time updates\n        };\n\n        setProgress(100);\n        setCurrentStage(\"Complete! 🎉\");\n        return transformedData;\n      } catch (error) {\n        console.error(\"❌ User-aware discovery error:\", error);\n        setCurrentStage(\"Failed ❌\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    },\n    onSuccess: (data: BusinessDiscoveryResponse) => {\n      console.log(\"✅ Background job created:\", data);\n\n      // For background jobs, we don't create the full campaign record immediately\n      // The progress page will handle real-time updates and final campaign creation\n\n      setProgress(100);\n      setCurrentStage(\"Background processing started! 🚀\");\n\n      // Navigate to progress page with job ID\n      if (data.job_id && data.campaign_id) {\n        const jobData = {\n          jobId: data.job_id,\n          campaignId: data.campaign_id,\n          status: data.status || \"pending\",\n          estimatedTime: data.estimated_time,\n        };\n\n        console.log(\"Job started:\", jobData);\n\n        // Call the navigation callback if provided\n        if (onJobCreated) {\n          onJobCreated(jobData);\n        }\n      }\n    },\n    onError: (error: any) => {\n      setError(\n        error instanceof Error ? error.message : \"User-aware discovery failed\"\n      );\n      setProgress(0);\n      setCurrentStage(\"Failed ❌\");\n    },\n  });\n\n  return {\n    startDiscovery: discoveryMutation.mutate,\n    isDiscovering: discoveryMutation.isPending,\n    progress,\n    currentStage,\n    cacheStats,\n    error: discoveryMutation.error,\n    data: discoveryMutation.data,\n  };\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":444,"duration":0.304},
{"type":"measure","name":"lsp.did_open","count":45,"duration":2.445},
{"type":"mark","name":"lsp.did_open","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts","languageId":"typescript","version":1,"text":"import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\"Missing Supabase environment variables\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n  },\n});\n\n// Helper function to get current session token for Edge Function calls\nexport const getSessionToken = async (): Promise<string | null> => {\n  const {\n    data: { session },\n    error,\n  } = await supabase.auth.getSession();\n\n  if (error) {\n    console.error(\"Error getting session:\", error);\n    return null;\n  }\n\n  // Return the access token (JWT) from the session\n  return session?.access_token ?? null;\n};\n\n// Helper function to ensure we have a valid session\nexport const ensureSession = async (): Promise<boolean> => {\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  // If no session, create anonymous session\n  if (!session) {\n    console.log(\"No session found, creating anonymous session...\");\n    const { data, error } = await supabase.auth.signInAnonymously();\n\n    if (error) {\n      console.error(\"Failed to create anonymous session:\", error);\n      return false;\n    }\n\n    console.log(\"✅ Anonymous session created:\", data.session?.user?.id);\n    return true;\n  }\n\n  return true;\n};\n\n// Edge Functions URL\nexport const EDGE_FUNCTIONS_URL =\n  import.meta.env.VITE_EDGE_FUNCTIONS_URL || `${supabaseUrl}/functions/v1`;\n\n// Edge Function endpoints for vault-secured progressive enrichment\nexport const EDGE_FUNCTIONS = {\n  // Progressive Enrichment Orchestrator (vault-secured)\n  ENRICHMENT_ORCHESTRATOR: `${EDGE_FUNCTIONS_URL}/enrichment-orchestrator`,\n\n  // Individual enrichment services (vault-secured)\n  ENRICHMENT_BUSINESS_LICENSE: `${EDGE_FUNCTIONS_URL}/enrichment-business-license`,\n  ENRICHMENT_PDL: `${EDGE_FUNCTIONS_URL}/enrichment-pdl`,\n  ENRICHMENT_HUNTER: `${EDGE_FUNCTIONS_URL}/enrichment-hunter`,\n  ENRICHMENT_NEVERBOUNCE: `${EDGE_FUNCTIONS_URL}/enrichment-neverbounce`,\n\n  // Legacy endpoints (for backward compatibility)\n  ENHANCED_BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/enhanced-business-discovery`,\n  LEAD_VALIDATION: `${EDGE_FUNCTIONS_URL}/lead-validation-edge`,\n  BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/business-discovery-edge`,\n  DIAGNOSTICS: `${EDGE_FUNCTIONS_URL}/diag`,\n} as const;\n\n// Progressive Enrichment Tiers - Consolidated to 3 Tiers\nexport const ENRICHMENT_TIERS = {\n  BASE: {\n    name: \"Base\",\n    price: 0.15, // Essential Business Data\n    stages: [\"business-verification\", \"company-data\"],\n    description:\n      \"Essential Business Data - Perfect for targeted outreach campaigns\",\n    features: [\n      \"Business verification\",\n      \"Company data (name, industry, size)\",\n      \"Phone & address validation\",\n      \"Generic company email\",\n    ],\n    badge: \"Most Popular\",\n    hasOwnershipData: false,\n  },\n  PROFESSIONAL: {\n    name: \"Professional\",\n    price: 0.45, // Enhanced Sales Intelligence\n    stages: [\n      \"business-verification\",\n      \"company-data\",\n      \"email-discovery\",\n      \"email-verification\",\n    ],\n    description:\n      \"Enhanced Sales Intelligence - Verified contacts for higher conversion rates\",\n    features: [\n      \"Everything in Base\",\n      \"Professional email discovery & verification\",\n      \"Email deliverability verification\",\n      \"Enhanced company enrichment\",\n    ],\n    badge: \"\",\n    hasOwnershipData: false,\n  },\n  ENTERPRISE: {\n    name: \"Enterprise\",\n    price: 2.5, // Premium Executive Access\n    stages: [\n      \"business-verification\",\n      \"company-data\",\n      \"email-discovery\",\n      \"email-verification\",\n      \"executive-enrichment\",\n      \"compliance-verification\",\n    ],\n    description:\n      \"Premium Executive Access - Compliance-grade data with C-suite contacts\",\n    features: [\n      \"Everything in Professional\",\n      \"Executive contact enrichment\",\n      \"Full compliance verification\",\n      \"Advanced data validation\",\n    ],\n    badge: \"Premium\",\n    hasOwnershipData: true,\n  },\n} as const;\n"}}},
{"type":"measure","name":"lsp.did_open","count":46,"duration":1.381},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":445,"duration":0.369},
{"type":"mark","name":"lsp.did_open","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx","languageId":"typescriptreact","version":1,"text":"import { Session, User } from \"@supabase/supabase-js\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { supabase } from \"../lib/supabase\";\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  sessionUserId: string | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [sessionUserId, setSessionUserId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Generate or retrieve session ID for anonymous users\n  const getOrCreateSessionId = () => {\n    let sessionId = localStorage.getItem(\"prospect_session_id\");\n    if (!sessionId) {\n      sessionId = `session_${Date.now()}_${Math.random()\n        .toString(36)\n        .substr(2, 9)}`;\n      localStorage.setItem(\"prospect_session_id\", sessionId);\n    }\n    return sessionId;\n  };\n\n  useEffect(() => {\n    // Initialize auth session (create anonymous session if needed)\n    const initializeAuth = async () => {\n      try {\n        // Get current session\n        const {\n          data: { session },\n          error: sessionError,\n        } = await supabase.auth.getSession();\n\n        if (sessionError) {\n          console.error(\"Session error:\", sessionError);\n        }\n\n        // If no session exists, create an anonymous session\n        if (!session) {\n          console.log(\"No session found, creating anonymous session...\");\n          const { data: anonData, error: anonError } =\n            await supabase.auth.signInAnonymously();\n\n          if (anonError) {\n            console.error(\"Anonymous sign-in error:\", anonError);\n            // Fall back to session ID if anonymous auth fails\n            setSessionUserId(getOrCreateSessionId());\n            setLoading(false);\n            return;\n          }\n\n          console.log(\n            \"✅ Anonymous session created:\",\n            anonData.session?.user?.id\n          );\n          setSession(anonData.session);\n          setUser(anonData.session?.user ?? null);\n          setSessionUserId(\n            anonData.session?.user?.id ?? getOrCreateSessionId()\n          );\n        } else {\n          // Existing session found\n          setSession(session);\n          setUser(session.user);\n          setSessionUserId(session.user.id);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        setSessionUserId(getOrCreateSessionId());\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log(\"Auth state changed:\", event, session?.user?.id);\n\n      setSession(session);\n      setUser(session?.user ?? null);\n\n      // Update session user ID\n      if (session?.user) {\n        setSessionUserId(session.user.id);\n        // Clear anonymous session ID\n        localStorage.removeItem(\"prospect_session_id\");\n      } else {\n        // If signed out, create new anonymous session\n        if (event === \"SIGNED_OUT\") {\n          console.log(\"User signed out, creating new anonymous session...\");\n          const { data: anonData } = await supabase.auth.signInAnonymously();\n          setSession(anonData.session);\n          setUser(anonData.session?.user ?? null);\n          setSessionUserId(\n            anonData.session?.user?.id ?? getOrCreateSessionId()\n          );\n        } else {\n          setSessionUserId(getOrCreateSessionId());\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n    if (error) throw error;\n  };\n\n  const signUp = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    if (error) throw error;\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    // Generate new anonymous session ID\n    setSessionUserId(getOrCreateSessionId());\n  };\n\n  const value = {\n    user,\n    session,\n    sessionUserId,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":47,"duration":1.831},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":446,"duration":0.285},
{"type":"mark","name":"lsp.did_open","count":48,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx","languageId":"typescriptreact","version":1,"text":"import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { useJobProgress } from \"../hooks/useJobProgress\";\nimport { supabase } from \"../lib/supabase\";\nimport { useCampaignStore } from \"../stores/campaignStore\";\nimport type { BusinessLead, CampaignResult } from \"../types\";\n\nexport const CampaignProgress: React.FC = () => {\n  const { campaignId } = useParams<{ campaignId: string }>();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const jobId = searchParams.get(\"jobId\");\n\n  // Use the job progress hook for real-time updates\n  const { progress: jobProgress } = useJobProgress(jobId || \"\");\n\n  const campaigns = useCampaignStore((state) => state.campaigns);\n  const addCampaign = useCampaignStore((state) => state.addCampaign);\n  const updateCampaign = useCampaignStore((state) => state.updateCampaign);\n  const setCurrentCampaign = useCampaignStore(\n    (state) => state.setCurrentCampaign\n  );\n  const clearLeads = useCampaignStore((state) => state.clearLeads);\n  const addLeads = useCampaignStore((state) => state.addLeads);\n  const setLoading = useCampaignStore((state) => state.setLoading);\n  const setError = useCampaignStore((state) => state.setError);\n\n  const [isFetchingResults, setIsFetchingResults] = useState(false);\n  const [resultFetchError, setResultFetchError] = useState<string | null>(null);\n  const hasFetchedResultsRef = useRef(false);\n  const isMountedRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  // Extract data from job progress\n  const progress = jobProgress?.progress || 0;\n  const status = jobProgress?.status || \"pending\";\n  const currentStage = jobProgress?.currentStage || \"Initializing...\";\n  const metrics = jobProgress?.metrics;\n  const isComplete = status === \"completed\";\n  const error = jobProgress?.error;\n\n  const displayStage = isFetchingResults\n    ? \"Preparing final results...\"\n    : currentStage;\n  const displayProgress = isFetchingResults\n    ? Math.min(100, Math.max(progress, 96))\n    : progress;\n  const isProcessing = !isComplete || isFetchingResults;\n\n  const fetchResults = useCallback(async () => {\n    if (!campaignId) {\n      return;\n    }\n\n    setIsFetchingResults(true);\n    setResultFetchError(null);\n    setLoading(true);\n\n    const metricsAny = metrics as Record<string, any> | undefined;\n\n    const normalizeStatus = (\n      value: string | null | undefined\n    ): CampaignResult[\"status\"] => {\n      switch (value) {\n        case \"running\":\n        case \"completed\":\n        case \"failed\":\n        case \"cancelled\":\n          return value;\n        default:\n          return \"completed\";\n      }\n    };\n\n    const normalizeValidationStatus = (\n      value: string | null | undefined\n    ): BusinessLead[\"validation_status\"] => {\n      switch (value) {\n        case \"pending\":\n        case \"validating\":\n        case \"validated\":\n        case \"failed\":\n          return value;\n        default:\n          return \"validated\";\n      }\n    };\n\n    const deriveDataSources = (enrichmentData: any): string[] => {\n      if (!enrichmentData) {\n        return [];\n      }\n\n      const fromServices = Array.isArray(\n        enrichmentData?.processingMetadata?.servicesUsed\n      )\n        ? enrichmentData.processingMetadata.servicesUsed\n        : [];\n\n      const fromSources = Array.isArray(enrichmentData?.verificationSources)\n        ? enrichmentData.verificationSources\n        : [];\n\n      return [...fromServices, ...fromSources].filter(Boolean);\n    };\n\n    const wait = (ms: number) =>\n      new Promise<void>((resolve) => {\n        setTimeout(resolve, ms);\n      });\n\n    try {\n      const MAX_ATTEMPTS = 5;\n      let campaignRecord: any = null;\n      let leadsRecords: any[] = [];\n\n      for (let attempt = 0; attempt < MAX_ATTEMPTS; attempt += 1) {\n        const { data: campaignData, error: campaignError } = await supabase\n          .from(\"campaigns\")\n          .select(\n            \"id,business_type,location,status,total_cost,results_count,created_at,updated_at\"\n          )\n          .eq(\"id\", campaignId)\n          .maybeSingle();\n\n        if (campaignError) {\n          throw campaignError;\n        }\n\n        const { data: leadsData, error: leadsError } = await supabase\n          .from(\"leads\")\n          .select(\n            \"id,campaign_id,business_name,address,phone,website,email,confidence_score,validation_cost,enrichment_data,created_at\"\n          )\n          .eq(\"campaign_id\", campaignId)\n          .order(\"confidence_score\", { ascending: false });\n\n        if (leadsError) {\n          throw leadsError;\n        }\n\n        campaignRecord = campaignData;\n        leadsRecords = leadsData ?? [];\n\n        if (\n          campaignRecord &&\n          (leadsRecords.length > 0 || attempt === MAX_ATTEMPTS - 1)\n        ) {\n          break;\n        }\n\n        await wait(2000);\n      }\n\n      if (!campaignRecord) {\n        throw new Error(\n          \"Campaign record not available yet. Please try again in a moment.\"\n        );\n      }\n\n      const totalFound =\n        typeof campaignRecord.results_count === \"number\"\n          ? campaignRecord.results_count\n          : Number(campaignRecord.results_count ?? leadsRecords.length);\n\n      const mappedLeads: BusinessLead[] = leadsRecords.map((lead) => {\n        const enrichmentData = lead.enrichment_data ?? undefined;\n        const rawCost =\n          lead.validation_cost ??\n          enrichmentData?.processingMetadata?.totalCost ??\n          0;\n        const costToAcquire = Number(rawCost) || 0;\n        const tierFromData =\n          enrichmentData?.processingMetadata?.enrichmentTier ||\n          enrichmentData?.enrichmentTier;\n\n        return {\n          id: String(lead.id),\n          campaign_id: lead.campaign_id ?? campaignRecord.id,\n          business_name: lead.business_name ?? \"Unknown Business\",\n          address: lead.address ?? \"\",\n          phone: lead.phone ?? \"\",\n          website: lead.website ?? \"\",\n          email: lead.email ?? \"\",\n          confidence_score: Number(lead.confidence_score ?? 0),\n          validation_status: normalizeValidationStatus(\n            enrichmentData?.validationStatus\n          ),\n          created_at: lead.created_at ?? new Date().toISOString(),\n          cost_to_acquire: costToAcquire,\n          data_sources: (() => {\n            const sources = deriveDataSources(enrichmentData);\n            return sources.length > 0 ? sources : [\"google_places\"];\n          })(),\n          enrichment_tier:\n            tierFromData ??\n            (metricsAny?.tier as string | undefined) ??\n            (metricsAny?.tier_name as string | undefined) ??\n            undefined,\n          vault_secured: true,\n          enrichment_data: enrichmentData,\n        };\n      });\n\n      const leadsQualified = mappedLeads.filter(\n        (lead) => lead.confidence_score >= 70\n      ).length;\n      const leadsValidated = mappedLeads.filter(\n        (lead) => lead.validation_status === \"validated\"\n      ).length;\n\n      const tierFromMetrics =\n        (metricsAny?.tier as string | undefined) ||\n        (metricsAny?.tier_name as string | undefined);\n\n      const campaignResult: CampaignResult = {\n        campaign_id: campaignRecord.id,\n        business_type: campaignRecord.business_type ?? undefined,\n        location: campaignRecord.location ?? undefined,\n        status: normalizeStatus(campaignRecord.status),\n        progress: 100,\n        total_cost: Number(\n          campaignRecord.total_cost ?? metrics?.total_cost ?? 0\n        ),\n        leads_found: Number.isNaN(totalFound) ? mappedLeads.length : totalFound,\n        leads_qualified: leadsQualified,\n        leads_validated: leadsValidated,\n        created_at: campaignRecord.created_at ?? new Date().toISOString(),\n        completed_at: campaignRecord.updated_at ?? undefined,\n        tier_used: tierFromMetrics ?? undefined,\n        vault_secured: true,\n        cache_performance: undefined,\n      };\n\n      const campaignExists = campaigns.some(\n        (item) => item.campaign_id === campaignResult.campaign_id\n      );\n\n      if (campaignExists) {\n        updateCampaign(campaignResult.campaign_id, campaignResult);\n      } else {\n        addCampaign(campaignResult);\n      }\n\n      clearLeads();\n      addLeads(mappedLeads);\n      setCurrentCampaign(campaignResult);\n\n      if (isMountedRef.current) {\n        setResultFetchError(null);\n        navigate(\"/results\", { replace: true, state: { campaignId } });\n      }\n    } catch (err) {\n      console.error(\"⚠️ Unable to load campaign results\", err);\n      const message =\n        err instanceof Error\n          ? err.message\n          : \"Unable to load campaign results. Please try again.\";\n\n      if (isMountedRef.current) {\n        setResultFetchError(message);\n      }\n\n      setError(message);\n      hasFetchedResultsRef.current = false;\n    } finally {\n      if (isMountedRef.current) {\n        setIsFetchingResults(false);\n        setLoading(false);\n      }\n    }\n  }, [\n    addCampaign,\n    addLeads,\n    campaignId,\n    campaigns,\n    clearLeads,\n    metrics,\n    navigate,\n    setCurrentCampaign,\n    setError,\n    setLoading,\n    updateCampaign,\n  ]);\n\n  useEffect(() => {\n    if (!isComplete || !campaignId || !jobId) {\n      return;\n    }\n\n    if (hasFetchedResultsRef.current) {\n      return;\n    }\n\n    hasFetchedResultsRef.current = true;\n    fetchResults();\n  }, [campaignId, fetchResults, isComplete, jobId]);\n\n  const handleRetryFetch = () => {\n    if (!campaignId) {\n      return;\n    }\n\n    hasFetchedResultsRef.current = true;\n    fetchResults();\n  };\n\n  if (!jobId || !campaignId) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-red-600 mb-4\">\n            Invalid Campaign\n          </h1>\n          <p className=\"text-gray-600 mb-4\">\n            Missing job or campaign information.\n          </p>\n          <button\n            onClick={() => navigate(\"/\")}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Return Home\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-red-600 mb-4\">\n            Processing Error\n          </h1>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => navigate(\"/\")}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Start New Campaign\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n          Campaign Discovery in Progress\n        </h1>\n        <p className=\"text-gray-600\">\n          Campaign ID: <span className=\"font-mono text-sm\">{campaignId}</span>\n        </p>\n        <p className=\"text-gray-600\">\n          Job ID: <span className=\"font-mono text-sm\">{jobId}</span>\n        </p>\n      </div>\n\n      {isFetchingResults && !resultFetchError && (\n        <div className=\"mb-6 rounded-lg border border-blue-200 bg-blue-50 p-4 text-sm text-blue-700\">\n          Finalizing campaign results and syncing verified leads to your\n          vault...\n        </div>\n      )}\n\n      {resultFetchError && (\n        <div className=\"mb-6 rounded-lg border border-red-200 bg-red-50 p-4 text-sm text-red-700\">\n          <div className=\"font-semibold\">Unable to load campaign results</div>\n          <p className=\"mt-1\">{resultFetchError}</p>\n          <button\n            onClick={handleRetryFetch}\n            className=\"mt-3 inline-flex items-center rounded border border-red-300 bg-white px-3 py-1.5 text-xs font-medium text-red-700 shadow-sm transition hover:bg-red-100\"\n          >\n            Retry syncing results\n          </button>\n        </div>\n      )}\n\n      {/* Progress Display */}\n      <ProgressDisplay\n        isDiscovering={isProcessing}\n        progress={displayProgress}\n        currentStage={displayStage}\n        cacheStats={null} // Real-time updates don't include cache stats\n      />\n\n      {/* Real-time Metrics */}\n      {metrics && (\n        <div className=\"mt-6 bg-white border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            📊 Live Discovery Metrics\n          </h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {metrics.total_found || 0}\n              </div>\n              <div className=\"text-sm text-gray-600\">Total Found</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {metrics.qualified_leads || 0}\n              </div>\n              <div className=\"text-sm text-gray-600\">Qualified</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {metrics.avg_confidence ? `${metrics.avg_confidence}%` : \"0%\"}\n              </div>\n              <div className=\"text-sm text-gray-600\">Avg Confidence</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-orange-600\">\n                ${(metrics.total_cost || 0).toFixed(2)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Total Cost</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Status Updates */}\n      <div className=\"mt-6 bg-gray-50 border border-gray-200 rounded-lg p-4\">\n        <h4 className=\"font-semibold text-gray-900 mb-2\">Status Updates</h4>\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center text-sm\">\n            <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n            <span className=\"text-gray-600\">\n              Campaign started at {new Date().toLocaleTimeString()}\n            </span>\n          </div>\n          {displayStage && (\n            <div className=\"flex items-center text-sm\">\n              <div className=\"w-2 h-2 bg-blue-400 rounded-full mr-2 animate-pulse\"></div>\n              <span className=\"text-gray-900 font-medium\">{displayStage}</span>\n            </div>\n          )}\n          {isFetchingResults && (\n            <div className=\"flex items-center text-sm\">\n              <div className=\"w-2 h-2 bg-purple-400 rounded-full mr-2 animate-pulse\"></div>\n              <span className=\"text-purple-600 font-medium\">\n                Finalizing leads and preparing results...\n              </span>\n            </div>\n          )}\n          {status === \"completed\" && (\n            <div className=\"flex items-center text-sm\">\n              <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n              <span className=\"text-green-600 font-medium\">\n                ✅ Discovery completed! Redirecting to results...\n              </span>\n            </div>\n          )}\n          {resultFetchError && (\n            <div className=\"flex items-center text-sm\">\n              <div className=\"w-2 h-2 bg-red-400 rounded-full mr-2\"></div>\n              <span className=\"text-red-600 font-medium\">\n                {resultFetchError}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"mt-8 text-center space-x-4\">\n        <button\n          onClick={() => navigate(\"/\")}\n          className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded hover:bg-gray-200\"\n        >\n          Start New Campaign\n        </button>\n        {!isProcessing && (\n          <button\n            onClick={() => navigate(\"/results\", { state: { campaignId } })}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            View Complete Results\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n"}}},
{"type":"measure","name":"lsp.did_open","count":48,"duration":4.895},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":447,"duration":0.283},
{"type":"mark","name":"lsp.did_open","count":49,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useJobProgress.tsx","languageId":"typescriptreact","version":1,"text":"// Real-time Job Progress Hook for ProspectPro v4.2\n// Subscribe to Supabase Real-time for live campaign updates\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { supabase } from \"../lib/supabase\";\n\ninterface JobProgress {\n  jobId: string;\n  status: \"pending\" | \"processing\" | \"completed\" | \"failed\";\n  progress: number;\n  currentStage: string;\n  metrics?: {\n    businesses_found?: number;\n    qualified_leads?: number;\n    leads_enriched?: number;\n    total_cost?: number;\n    total_found?: number;\n    avg_confidence?: number;\n  };\n  error?: string;\n  completedAt?: string;\n}\n\ninterface RealtimePayload {\n  new: DiscoveryJobRow;\n}\n\ntype DiscoveryJobRow = {\n  id: string;\n  status: string;\n  progress: number | null;\n  current_stage: string | null;\n  metrics: Record<string, number> | null;\n  error?: string | null;\n  completed_at?: string | null;\n};\n\nconst NORMALIZED_STATUS: Record<string, JobProgress[\"status\"]> = {\n  pending: \"pending\",\n  processing: \"processing\",\n  completed: \"completed\",\n  failed: \"failed\",\n};\n\nfunction normalizeStatus(\n  value: string | null | undefined\n): JobProgress[\"status\"] {\n  if (!value) {\n    return \"processing\";\n  }\n\n  return NORMALIZED_STATUS[value] ?? \"processing\";\n}\n\nexport function useJobProgress(jobId: string | null) {\n  const [progress, setProgress] = useState<JobProgress | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const pollingRef = useRef<number | null>(null);\n\n  const stopPolling = useCallback(() => {\n    if (pollingRef.current !== null) {\n      window.clearInterval(pollingRef.current);\n      pollingRef.current = null;\n    }\n  }, []);\n\n  const updateFromRow = useCallback(\n    (row: DiscoveryJobRow | null) => {\n      if (!row) {\n        return;\n      }\n\n      const next: JobProgress = {\n        jobId: row.id,\n        status: normalizeStatus(row.status),\n        progress: row.progress ?? 0,\n        currentStage: row.current_stage ?? \"processing\",\n        metrics: (row.metrics ?? undefined) as JobProgress[\"metrics\"],\n        error: row.error ?? undefined,\n        completedAt: row.completed_at ?? undefined,\n      };\n\n      setProgress(next);\n\n      if (next.status === \"completed\" || next.status === \"failed\") {\n        stopPolling();\n      }\n    },\n    [stopPolling]\n  );\n\n  const fetchStatus = useCallback(async (): Promise<DiscoveryJobRow | null> => {\n    if (!jobId) {\n      return null;\n    }\n\n    const { data, error } = await supabase\n      .from(\"discovery_jobs\")\n      .select(\"*\")\n      .eq(\"id\", jobId)\n      .single();\n\n    if (error) {\n      console.error(\"Error fetching job status:\", error);\n      return null;\n    }\n\n    updateFromRow(data);\n    return data;\n  }, [jobId, updateFromRow]);\n\n  const startPolling = useCallback(() => {\n    if (pollingRef.current !== null || !jobId) {\n      return;\n    }\n\n    pollingRef.current = window.setInterval(() => {\n      void fetchStatus();\n    }, 4000);\n  }, [fetchStatus, jobId]);\n\n  useEffect(() => {\n    if (!jobId) {\n      setIsLoading(false);\n      stopPolling();\n      setProgress(null);\n      return;\n    }\n\n    let isMounted = true;\n\n    const bootstrap = async () => {\n      const row = await fetchStatus();\n      if (!isMounted) {\n        return;\n      }\n\n      setIsLoading(false);\n\n      if (!row) {\n        return;\n      }\n\n      if (row.status !== \"completed\" && row.status !== \"failed\") {\n        startPolling();\n      }\n    };\n\n    void bootstrap();\n\n    const channel = supabase\n      .channel(`discovery_jobs:${jobId}`)\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"UPDATE\",\n          schema: \"public\",\n          table: \"discovery_jobs\",\n          filter: `id=eq.${jobId}`,\n        },\n        (payload: RealtimePayload) => {\n          console.log(\"Real-time update:\", payload.new);\n          updateFromRow(payload.new);\n        }\n      )\n      .subscribe((status) => {\n        if (\n          status === \"TIMED_OUT\" ||\n          status === \"CHANNEL_ERROR\" ||\n          status === \"CLOSED\"\n        ) {\n          console.warn(\n            \"Realtime subscription failed. Falling back to polling.\",\n            {\n              status,\n              jobId,\n            }\n          );\n          startPolling();\n        }\n      });\n\n    return () => {\n      isMounted = false;\n      supabase.removeChannel(channel);\n      stopPolling();\n    };\n  }, [fetchStatus, jobId, startPolling, stopPolling, updateFromRow]);\n\n  return { progress, isLoading };\n}\n\nexport const STAGE_LABELS: Record<string, string> = {\n  initializing: \"Initializing campaign...\",\n  discovering_businesses: \"Discovering businesses...\",\n  scoring_businesses: \"Scoring and qualifying leads...\",\n  enriching_contacts: \"Enriching contact information...\",\n  storing_results: \"Storing results...\",\n};\n\nexport function JobProgressDisplay({ jobId }: { jobId: string }) {\n  const { progress, isLoading } = useJobProgress(jobId);\n\n  if (isLoading) {\n    return <div>Loading job status...</div>;\n  }\n\n  if (!progress) {\n    return <div>Job not found</div>;\n  }\n\n  if (progress.status === \"failed\") {\n    return (\n      <div className=\"error\">\n        <h3>Campaign Failed</h3>\n        <p>{progress.error || \"Unknown error occurred\"}</p>\n      </div>\n    );\n  }\n\n  if (progress.status === \"completed\") {\n    return (\n      <div className=\"success\">\n        <h3>Campaign Completed! 🎉</h3>\n        <p>Found {progress.metrics?.total_found || 0} qualified leads</p>\n        <p>Total cost: ${progress.metrics?.total_cost?.toFixed(2) || \"0.00\"}</p>\n        <p>\n          Average confidence:{\" \"}\n          {progress.metrics?.avg_confidence?.toFixed(0) || 0}%\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"progress\">\n      <h3>Campaign In Progress</h3>\n      <div className=\"progress-bar\">\n        <div\n          className=\"progress-fill\"\n          style={{ width: `${progress.progress}%` }}\n        />\n      </div>\n      <p>{progress.progress}% complete</p>\n      <p className=\"stage\">\n        {STAGE_LABELS[progress.currentStage] || progress.currentStage}\n      </p>\n\n      {progress.metrics && (\n        <div className=\"metrics\">\n          {progress.metrics.businesses_found && (\n            <p>Businesses found: {progress.metrics.businesses_found}</p>\n          )}\n          {progress.metrics.qualified_leads && (\n            <p>Qualified leads: {progress.metrics.qualified_leads}</p>\n          )}\n          {progress.metrics.leads_enriched && (\n            <p>Enriched: {progress.metrics.leads_enriched}</p>\n          )}\n          {progress.metrics.total_cost && (\n            <p>Cost: ${progress.metrics.total_cost.toFixed(2)}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":49,"duration":3.277},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":448,"duration":0.363},
{"type":"mark","name":"lsp.did_close","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useBusinessDiscovery.ts"}}},
{"type":"measure","name":"lsp.did_close","count":25,"duration":0.982},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":449,"duration":0.302},
{"type":"mark","name":"lsp.did_close","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts"}}},
{"type":"measure","name":"lsp.did_close","count":26,"duration":0.96},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":450,"duration":0.289},
{"type":"mark","name":"lsp.did_close","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":27,"duration":1.046},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":451,"duration":0.281},
{"type":"mark","name":"lsp.did_open","count":50,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json","languageId":"jsonc","version":1,"text":"{\r\n  \"name\": \"ProspectPro - Verified Business Intelligence\",\r\n  \"image\": \"mcr.microsoft.com/devcontainers/javascript-node:20\",\r\n  \"features\": {\r\n    \"ghcr.io/devcontainers/features/git:1\": {}\r\n  },\r\n  \"customizations\": {\r\n    \"vscode\": {\r\n      \"extensions\": [\r\n        // Core Development\r\n        \"denoland.vscode-deno\",\r\n        \"supabase.supabase-vscode\",\r\n        \"dbaeumer.vscode-eslint\",\r\n        \"esbenp.prettier-vscode\",\r\n\r\n        // Productivity\r\n        \"eamodio.gitlens\",\r\n        \"github.copilot\",\r\n        \"github.copilot-chat\",\r\n        \"streetsidesoftware.code-spell-checker\",\r\n        \"wayou.vscode-todo-highlight\",\r\n\r\n        // API Development\r\n        \"humao.rest-client\",\r\n        \"rangav.vscode-thunder-client\",\r\n\r\n        // Database Tools\r\n        \"mtxr.sqltools\",\r\n        \"mtxr.sqltools-driver-pg\",\r\n\r\n        // Security\r\n        \"snyk-security.snyk-vulnerability-scanner\",\r\n\r\n        // Performance\r\n        \"wix.vscode-import-cost\",\r\n\r\n        // Documentation\r\n        \"bierner.markdown-preview-github-styles\",\r\n\r\n        // Development Theme & Visual Organization\r\n        \"deepforest.theme\", // Vira Deepforest theme for organized development\r\n        \"vscode-icons-team.vscode-icons\" // Better file icons for organization\r\n      ],\r\n      \"settings\": {\r\n        \"terminal.integrated.defaultProfile.linux\": \"bash\",\r\n        \"deno.enable\": true,\r\n        \"deno.enablePaths\": [\"supabase/functions\"],\r\n        \"git.autofetch\": true,\r\n        \"git.confirmSync\": false,\r\n        \"git.enableSmartCommit\": true,\r\n\r\n        // Editor Performance Settings - Enhanced for Development\r\n        \"editor.minimap.enabled\": false,\r\n        \"editor.renderWhitespace\": \"none\",\r\n        \"editor.renderControlCharacters\": false,\r\n        \"workbench.colorTheme\": \"Vira Deepforest\", // Development-specific theme\r\n        \"workbench.iconTheme\": \"vscode-icons\", // Better file icons for organization\r\n        \"workbench.list.smoothScrolling\": false,\r\n        \"workbench.tree.renderIndentGuides\": \"none\",\r\n        \"workbench.editor.closeOnFileDelete\": true,\r\n\r\n        // Development-specific UI enhancements\r\n        \"workbench.colorCustomizations\": {\r\n          \"[Vira Deepforest]\": {\r\n            \"titleBar.activeBackground\": \"#1a4d3a\",\r\n            \"titleBar.activeForeground\": \"#ffffff\",\r\n            \"statusBar.background\": \"#1a4d3a\",\r\n            \"statusBar.foreground\": \"#ffffff\",\r\n            \"activityBar.background\": \"#0d2818\",\r\n            \"panel.background\": \"#0a1f14\"\r\n          }\r\n        },\r\n        \"workbench.settings.editor\": \"json\",\r\n        \"breadcrumbs.enabled\": true,\r\n\r\n        // File System Performance\r\n        \"files.watcherExclude\": {\r\n          \"**/*.log\": true,\r\n          \"**/*.tmp\": true,\r\n          \"**/node_modules/**\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git/**\": true,\r\n          \"**/logs/**\": true\r\n        },\r\n\r\n        // Search Performance\r\n        \"search.exclude\": {\r\n          \"**/node_modules\": true,\r\n          \"**/*.log\": true,\r\n          \"**/archive/**\": true,\r\n          \"**/.git\": true\r\n        },\r\n        \"search.searchOnType\": false,\r\n\r\n        // Copilot Optimization\r\n        \"github.copilot.chat.historyCount\": 8,\r\n        \"github.copilot.chat.welcomeMessage\": \"none\",\r\n        \"github.copilot.chat.completionPhrasesEnabled\": false,\r\n        \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 30,\r\n\r\n        // Terminal Settings - Development Enhanced\r\n        \"terminal.integrated.gpuAcceleration\": \"on\",\r\n        \"terminal.integrated.scrollback\": 1000,\r\n        \"terminal.integrated.fontFamily\": \"Consolas, 'Courier New', monospace\",\r\n        \"terminal.integrated.fontSize\": 13,\r\n\r\n        // Development Environment Indicators\r\n        \"window.title\": \"🎯 ${folderName} - Verified Business Intelligence ${separator} ${activeEditorShort}\",\r\n        \"workbench.startupEditor\": \"welcomePageInEmptyWorkbench\",\r\n\r\n        // === MCP (Model Context Protocol) Configuration ===\r\n        \"mcp.enable\": true,\r\n        \"mcp.configFile\": \"${workspaceFolder}/.vscode/mcp-config.json\",\r\n\r\n        // API Development Specific Settings\r\n        \"rest-client.enableTelemetry\": false,\r\n        \"files.associations\": {\r\n          \"*.http\": \"http\",\r\n          \"*.rest\": \"http\"\r\n        },\r\n\r\n        // AI-Enhanced Development Settings for Verified Data Integration\r\n        \"ai.contextAware\": true,\r\n        \"ai.projectContext\": {\r\n          \"type\": \"verified-business-intelligence-platform\",\r\n          \"framework\": \"supabase-edge-functions\",\r\n          \"database\": \"supabase-postgresql\",\r\n          \"apis\": [\r\n            \"google-places\",\r\n            \"apollo-contacts\",\r\n            \"chamber-commerce\",\r\n            \"professional-licensing\"\r\n          ],\r\n          \"deployment\": \"supabase-edge-functions\",\r\n          \"dataPolicy\": \"zero-fake-data-verified-contacts-only\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"forwardPorts\": [3000, 5432],\r\n  \"postCreateCommand\": \"bash -lc 'set -e; echo \\\"� Setting up ProspectPro Verified Business Intelligence Environment...\\\"; sudo apt-get update && sudo apt-get install -y docker.io; if [ -f package-lock.json ]; then npm ci; else npm install; fi; npm i supabase --save-dev; npm run mcp:install; npm run mcp:test; echo \\\"✅ Verified data environment ready with zero fake data policy!\\\"; echo \\\"🚀 ProspectPro verified business intelligence development ready\\\"'\",\r\n  \"postStartCommand\": \"bash -c 'echo \\\"� ProspectPro Verified Business Intelligence Started\\\"; echo \\\"Data Policy: Zero Fake Data | Contacts: Verified Only | Architecture: Supabase Edge Functions\\\"; echo \\\"💡 Use Copilot Chat for AI-assisted development with verified data context\\\"'\",\r\n  \"runArgs\": [\"--init\", \"-v\", \"/var/run/docker.sock:/var/run/docker.sock\"],\r\n  \"remoteUser\": \"node\"\r\n}\r\n"}}},
{"type":"measure","name":"lsp.did_open","count":50,"duration":0.098},
{"type":"mark","name":"lsp.did_close","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/pages/CampaignProgress.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":28,"duration":1.49},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":452,"duration":0.315},
{"type":"mark","name":"lsp.did_open","count":51,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json","languageId":"jsonc","version":1,"text":"{\n  // === SUPABASE-FIRST CONFIGURATION ===\n  \"deno.enable\": true,\n  \"deno.enablePaths\": [\"supabase/functions\"],\n  \"deno.lint\": true,\n  \"deno.unstable\": [\"bare-node-builtins\", \"byonm\", \"sloppy-imports\"],\n  \"supabase.projectRef\": \"sriycekxdqnesdsgwiuc\",\n\n  // === GITHUB COPILOT COST OPTIMIZATIONS (40% token reduction) ===\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"plaintext\": false,\n    \"markdown\": false,\n    \"scminput\": false\n  },\n  \"github.copilot.inlineSuggest.enable\": true,\n  \"github.copilot.chat.welcomeMessage\": \"never\",\n  \"github.copilot.chat.localeOverride\": \"en\",\n  \"github.copilot.chat.historyCount\": 3,\n  \"github.copilot.chat.completionPhrasesEnabled\": false,\n  \"github.copilot.chat.dynamicContextTrailingLength\": 150,\n  \"github.copilot.advanced.setAutoCompletionTriggerThreshold\": 150,\n\n  // === PERFORMANCE OPTIMIZATIONS (50% faster) ===\n  \"search.searchOnType\": false,\n  \"editor.minimap.enabled\": false,\n  \"typescript.suggest.autoImports\": false,\n  \"editor.suggestOnTriggerCharacters\": false,\n  \"editor.acceptSuggestionOnCommitCharacter\": false,\n\n  // === EDITOR OPTIMIZATIONS ===\n  \"editor.formatOnSave\": true,\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n  \"editor.codeActionsOnSave\": {\n    \"source.organizeImports\": \"explicit\"\n  },\n\n  // === FILE WATCHING EXCLUSIONS (Memory optimization) ===\n  \"files.watcherExclude\": {\n    \"**/node_modules/**\": true,\n    \"**/mcp-servers/node_modules/**\": true,\n    \"**/.git/objects/**\": true,\n    \"**/.git/subtree-cache/**\": true,\n    \"**/target/**\": true,\n    \"**/.deno_lsp/**\": true,\n    \"**/archive/**\": true,\n    \"**/logs/**\": true,\n    \"**/.vscode/extensions/**\": true\n  },\n\n  // === INTELLIGENT CONTEXT MANAGEMENT ===\n  \"ai.contextFiles\": [\n    \"supabase/functions/*/index.ts\",\n    \"public/supabase-app.js\",\n    \"TECHNICAL_SUMMARY_v4.3.md\",\n    \"PROSPECTPRO_V4.3_RELEASE_NOTES.md\",\n    \".vscode/settings.json\"\n  ],\n  \"ai.excludeFiles\": [\n    \"archive/**\",\n    \"docs/**\",\n    \"mcp-servers/node_modules/**\",\n    \".deno_lsp/**\",\n    \"*.log\"\n  ],\n\n  // === GIT OPTIMIZATIONS ===\n  \"git.ignoreLimitWarning\": true,\n  \"git.autofetch\": false,\n  \"git.confirmSync\": false,\n  \"git.enableSmartCommit\": true,\n  \"git.fetchOnPull\": true,\n  \"git.mergeEditor\": false,\n\n  // === MCP SERVER OPTIMIZATIONS ===\n  \"mcp.servers\": {\n    \"prospectpro-production\": {\n      \"command\": \"node\",\n      \"args\": [\"./mcp-servers/production-server.js\"],\n      \"autoStart\": true,\n      \"lazyLoad\": true,\n      \"maxMemory\": \"256MB\",\n      \"timeout\": 30000\n    },\n    \"prospectpro-development\": {\n      \"command\": \"node\",\n      \"args\": [\"./mcp-servers/development-server.js\"],\n      \"autoStart\": false,\n      \"lazyLoad\": true,\n      \"maxMemory\": \"128MB\"\n    },\n    \"prospectpro-troubleshooting\": {\n      \"command\": \"node\",\n      \"args\": [\"./mcp-servers/supabase-troubleshooting-server.js\"],\n      \"autoStart\": false,\n      \"lazyLoad\": true,\n      \"maxMemory\": \"128MB\"\n    }\n  },\n\n  // === TERMINAL OPTIMIZATIONS ===\n  \"terminal.integrated.enableMultiLinePasteWarning\": \"never\",\n  \"terminal.integrated.persistentSessionReviveProcess\": \"never\"\n}\n"}}},
{"type":"measure","name":"lsp.did_open","count":51,"duration":0.096},
{"type":"mark","name":"lsp.did_open","count":52,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-config.json","languageId":"json","version":1,"text":"{\n    \"version\": \"1.1\",\n    \"description\": \"ProspectPro v4.3 MCP Server Configuration - Tier-Aware Background Discovery\",\n    \"servers\": {\n        \"prospectpro-production\": {\n            \"autoStart\": true,\n            \"lazyLoad\": true,\n            \"maxMemory\": \"192MB\",\n            \"priority\": \"high\",\n            \"description\": \"Production monitoring for tier-aware background discovery + enrichment (28 tools)\",\n            \"tools\": [\n                \"monitor_api_performance\",\n                \"analyze_database_metrics\",\n                \"check_edge_function_health\",\n                \"track_api_costs\",\n                \"monitor_supabase_usage\",\n                \"track_user_sessions\",\n                \"monitor_authentication\",\n                \"analyze_campaign_ownership\"\n            ]\n        },\n        \"prospectpro-development\": {\n            \"autoStart\": false,\n            \"onDemand\": true,\n            \"maxMemory\": \"96MB\",\n            \"priority\": \"medium\",\n            \"description\": \"Development tools for background discovery, census targeting, and enrichment\",\n            \"activationKeywords\": [\n                \"develop\",\n                \"integrate\",\n                \"new api\",\n                \"test integration\",\n                \"user auth\",\n                \"session management\"\n            ]\n        },\n        \"prospectpro-troubleshooting\": {\n            \"autoStart\": false,\n            \"onDemand\": true,\n            \"maxMemory\": \"96MB\",\n            \"priority\": \"medium\",\n            \"description\": \"Debugging tools for background jobs, auth, and enrichment pipelines\",\n            \"activationKeywords\": [\n                \"debug\",\n                \"error\",\n                \"fix\",\n                \"troubleshoot\",\n                \"404\",\n                \"500\",\n                \"auth error\",\n                \"jwt\",\n                \"session\"\n            ]\n        }\n    },\n    \"globalSettings\": {\n        \"maxConcurrentServers\": 2,\n        \"memoryThreshold\": \"384MB\",\n        \"smartLoading\": true,\n        \"contextOptimization\": true\n    },\n    \"contextFilters\": {\n        \"allowedExtensions\": [\n            \".ts\",\n            \".js\",\n            \".json\",\n            \".md\",\n            \".sql\"\n        ],\n        \"excludedPaths\": [\n            \"archive/**\",\n            \"node_modules/**\",\n            \".deno_lsp/**\",\n            \"logs/**\",\n            \"dist/**\"\n        ],\n        \"maxContextLength\": 200,\n        \"maxFileSize\": 50000\n    },\n    \"costOptimization\": {\n        \"enabled\": true,\n        \"tokenReduction\": 38,\n        \"cacheResponses\": true,\n        \"smartContext\": true,\n        \"quickCommands\": {\n            \"run prod mcp\": \"cd /workspaces/ProspectPro/mcp-servers && npm run start:production\",\n            \"deploy discovery background\": \"supabase functions deploy business-discovery-background\",\n            \"deploy orchestrator\": \"supabase functions deploy enrichment-orchestrator\",\n            \"deploy export\": \"supabase functions deploy campaign-export-user-aware\",\n            \"check background logs\": \"supabase functions logs business-discovery-background --follow\",\n            \"test background job\": \"curl -X POST \\\"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-background\\\" -H \\\"Authorization: Bearer JWT_TOKEN\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"businessType\\\":\\\"coffee shop\\\",\\\"location\\\":\\\"Seattle, WA\\\",\\\"maxResults\\\":2,\\\"tierKey\\\":\\\"PROFESSIONAL\\\"}'\",\n            \"test export\": \"curl -X POST \\\"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/campaign-export-user-aware\\\" -H \\\"Authorization: Bearer JWT_TOKEN\\\" -H \\\"Content-Type: application/json\\\" -d '{\\\"campaignId\\\":\\\"test\\\",\\\"format\\\":\\\"csv\\\"}'\"\n        }\n    },\n    \"userAwareFeatures\": {\n        \"enabled\": true,\n        \"sessionTracking\": true,\n        \"authenticationMonitoring\": true,\n        \"campaignOwnershipTracking\": true,\n        \"dataIsolationValidation\": true\n    }\n}"}}},
{"type":"measure","name":"lsp.did_open","count":52,"duration":0.075},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":861,"duration":0.021},
{"type":"mark","name":"lsp.code_action","count":79,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.inlay_hint","count":398,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":62,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.did_change_batched","count":416,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":416,"duration":4.9},
{"type":"mark","name":"lsp.code_action","count":80,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":862,"duration":0.008},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":453,"duration":0.303},
{"type":"mark","name":"lsp.inlay_hint","count":399,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.folding_range","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":76,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":31,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/Layout.tsx",{"start":0,"length":2474},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":13,"duration":0.681},
{"type":"mark","name":"tsc.op.op_load","count":285,"args":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"},
{"type":"measure","name":"tsc.op.op_load","count":285,"duration":0.04},
{"type":"mark","name":"tsc.op.op_load","count":286,"args":"file:///workspaces/ProspectPro/.vscode/settings.json"},
{"type":"measure","name":"tsc.op.op_load","count":286,"duration":0.032},
{"type":"mark","name":"tsc.op.op_load","count":287,"args":"file:///workspaces/ProspectPro/mcp-config.json"},
{"type":"measure","name":"tsc.op.op_load","count":287,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1248,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1248,"duration":0.186},
{"type":"mark","name":"tsc.op.op_resolve","count":1249,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1249,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1250,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1250,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":288,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":288,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1251,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1251,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":1252,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1252,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1253,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1253,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1254,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1254,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":289,"args":"file:///workspaces/ProspectPro/src/hooks/useJobProgress.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":289,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1255,"args":{"base":"file:///workspaces/ProspectPro/src/hooks/useJobProgress.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1255,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1256,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1256,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1257,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1257,"duration":0.174},
{"type":"mark","name":"tsc.op.op_resolve","count":1258,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1258,"duration":0.139},
{"type":"mark","name":"tsc.op.op_resolve","count":1259,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1259,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1260,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1260,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1261,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1261,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1262,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1262,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1263,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1263,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":1264,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1264,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1265,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1265,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1266,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1266,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1267,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1267,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":1268,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1268,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1269,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1269,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1270,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1270,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1271,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1271,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1272,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1272,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1273,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1273,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1274,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1274,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":1275,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1275,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1276,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1276,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1277,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1277,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1278,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1278,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1279,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1279,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1280,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1280,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1281,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1281,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":1282,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1282,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1283,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1283,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1284,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1284,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1285,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1285,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1286,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1286,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1287,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1287,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1288,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1288,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1289,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1289,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1290,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1290,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1291,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1291,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1292,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1292,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1293,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1293,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1294,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1294,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1295,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1295,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1296,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1296,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1297,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1297,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1298,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1298,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1299,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1299,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1300,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1300,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1301,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1301,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1302,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1302,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":1303,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1303,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1304,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1304,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1305,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1305,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1306,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1306,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1307,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1307,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1308,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1308,"duration":0.087},
{"type":"mark","name":"tsc.op.op_resolve","count":1309,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1309,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1310,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1310,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1311,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1311,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1312,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1312,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1313,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1313,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1314,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1314,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1315,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1315,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1316,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1316,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1317,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1317,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1318,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1318,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1319,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1319,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1320,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1320,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1321,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1321,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1322,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1322,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1323,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1323,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1324,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1324,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1325,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1325,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1326,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1326,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1327,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1327,"duration":0.408},
{"type":"mark","name":"tsc.op.op_resolve","count":1328,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1328,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1329,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1329,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1330,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1330,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1331,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1331,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1332,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1332,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1333,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1333,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1334,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1334,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1335,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1335,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1336,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1336,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1337,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1337,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1338,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1338,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1339,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1339,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1340,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1340,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1341,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1341,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1342,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1342,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1343,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1343,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1344,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1344,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1345,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1345,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1346,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1346,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1347,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1347,"duration":0.07},
{"type":"mark","name":"tsc.op.op_resolve","count":1348,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1348,"duration":1.245},
{"type":"mark","name":"tsc.op.op_resolve","count":1349,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1349,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1350,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1350,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1351,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1351,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1352,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1352,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1353,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1353,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1354,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1354,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1355,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1355,"duration":0.833},
{"type":"mark","name":"tsc.op.op_resolve","count":1356,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1356,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1357,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1357,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1358,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1358,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1359,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1359,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1360,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1360,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1361,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1361,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1362,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1362,"duration":0.057},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":118,"duration":0.011},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":119,"duration":0.003},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":120,"duration":0.003},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":31,"duration":62.739},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":31,"duration":62.91},
{"type":"measure","name":"lsp.semantic_tokens_range","count":9,"duration":63.069},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":105,"duration":0.021},
{"type":"mark","name":"lsp.code_lens","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.document_symbol","count":77,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":400,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":401,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.semantic_tokens_full","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":32,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/Layout.tsx",{"start":0,"length":2474},"2020"]}},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":32,"duration":1.04},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":32,"duration":3.088},
{"type":"measure","name":"lsp.semantic_tokens_full","count":24,"duration":3.21},
{"type":"mark","name":"lsp.semantic_tokens_range","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":63,"character":4}}}},
{"type":"measure","name":"lsp.semantic_tokens_range","count":10,"duration":0.017},
{"type":"mark","name":"lsp.did_close","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/hooks/useJobProgress.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":29,"duration":0.886},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":454,"duration":0.301},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":863,"duration":0.038},
{"type":"mark","name":"lsp.did_change_batched","count":417,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":417,"duration":21.154},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":864,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":455,"duration":0.249},
{"type":"mark","name":"lsp.inlay_hint","count":402,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":865,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":106,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":403,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_close","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"}}},
{"type":"measure","name":"lsp.did_close","count":30,"duration":0.034},
{"type":"mark","name":"lsp.did_close","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/.vscode/settings.json"}}},
{"type":"measure","name":"lsp.did_close","count":31,"duration":0.031},
{"type":"mark","name":"lsp.did_close","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/mcp-config.json"}}},
{"type":"measure","name":"lsp.did_close","count":32,"duration":0.031},
{"type":"mark","name":"lsp.did_change_batched","count":418,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":418,"duration":4.639},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":866,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":456,"duration":0.306},
{"type":"mark","name":"lsp.inlay_hint","count":404,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":867,"duration":0.002},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":107,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":405,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":868,"duration":0.023},
{"type":"mark","name":"lsp.did_change_batched","count":419,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":419,"duration":14.591},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":869,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":457,"duration":0.298},
{"type":"mark","name":"lsp.inlay_hint","count":406,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":870,"duration":0.024},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":108,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":871,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":407,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":420,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":420,"duration":4.13},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":872,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":458,"duration":0.267},
{"type":"mark","name":"lsp.inlay_hint","count":408,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":873,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":109,"duration":0.022},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":874,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":409,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":421,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":421,"duration":41.607},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":875,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":459,"duration":0.26},
{"type":"mark","name":"lsp.inlay_hint","count":410,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":876,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":110,"duration":0.036},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":877,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":411,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":422,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":460,"duration":0.249},
{"type":"measure","name":"lsp.did_change_batched","count":422,"duration":6.133},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":878,"duration":0.009},
{"type":"mark","name":"lsp.inlay_hint","count":412,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":879,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":111,"duration":0.04},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":880,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":413,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":423,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":423,"duration":15.024},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":881,"duration":0.011},
{"type":"measure","name":"lsp.testing_update","count":461,"duration":0.307},
{"type":"mark","name":"lsp.inlay_hint","count":414,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":882,"duration":0.023},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":112,"duration":0.031},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":883,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":415,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":424,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":424,"duration":13.574},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.diagnostic","count":884,"duration":0.01},
{"type":"measure","name":"lsp.testing_update","count":462,"duration":0.256},
{"type":"mark","name":"lsp.inlay_hint","count":416,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":885,"duration":0.022},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":113,"duration":0.024},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":886,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":417,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.goto_definition","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/App.tsx"},"position":{"line":5,"character":9}}},
{"type":"mark","name":"lsp.hover","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":20,"character":139}}},
{"type":"mark","name":"lsp.hover","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":20,"character":140}}},
{"type":"mark","name":"lsp.hover","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":21,"character":31}}},
{"type":"mark","name":"lsp.hover","count":30,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":21,"character":32}}},
{"type":"mark","name":"lsp.inlay_hint","count":418,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":419,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":425,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":425,"duration":3.585},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":887,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":463,"duration":0.321},
{"type":"mark","name":"lsp.inlay_hint","count":420,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":65,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":426,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":426,"duration":21.484},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":888,"duration":0.014},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":464,"duration":0.279},
{"type":"mark","name":"lsp.did_change_batched","count":427,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":427,"duration":10.844},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":889,"duration":0.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":465,"duration":0.41},
{"type":"mark","name":"lsp.did_change_batched","count":428,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":428,"duration":1.323},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":466,"duration":0.268},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":890,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":891,"duration":0.026},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":114,"duration":0.022},
{"type":"mark","name":"lsp.folding_range","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.inlay_hint","count":421,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.code_lens","count":46,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"lsp.did_change_batched","count":429,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":429,"duration":8.719},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":892,"duration":0.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":467,"duration":0.257},
{"type":"mark","name":"lsp.semantic_tokens_full","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":33,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/src/components/Layout.tsx",{"start":0,"length":2521},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":14,"duration":1.384},
{"type":"mark","name":"lsp.document_symbol","count":78,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"mark","name":"tsc.op.op_resolve","count":1363,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"mark","name":"lsp.document_symbol","count":79,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"}}},
{"type":"measure","name":"tsc.op.op_resolve","count":1363,"duration":0.922},
{"type":"mark","name":"tsc.op.op_load","count":290,"args":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":290,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1364,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1364,"duration":0.069},
{"type":"mark","name":"tsc.op.op_resolve","count":1365,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1365,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":291,"args":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":291,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1366,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1366,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1367,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1367,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1368,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1368,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1369,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1369,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1370,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1370,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":292,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":292,"duration":0.071},
{"type":"mark","name":"tsc.op.op_resolve","count":1371,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1371,"duration":0.184},
{"type":"mark","name":"tsc.op.op_resolve","count":1372,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1372,"duration":0.146},
{"type":"mark","name":"tsc.op.op_resolve","count":1373,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1373,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1374,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1374,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":1375,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1375,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1376,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1376,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1377,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1377,"duration":0.07},
{"type":"mark","name":"tsc.op.op_resolve","count":1378,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1378,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1379,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1379,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1380,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1380,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1381,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1381,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1382,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1382,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1383,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1383,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1384,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1384,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1385,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1385,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1386,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1386,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1387,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1387,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1388,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1388,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1389,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1389,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1390,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1390,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1391,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1391,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1392,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1392,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1393,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1393,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1394,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1394,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1395,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1395,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1396,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1396,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1397,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1397,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1398,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1398,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1399,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1399,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1400,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1400,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1401,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1401,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1402,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1402,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1403,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1403,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1404,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1404,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1405,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1405,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1406,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1406,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1407,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1407,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1408,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1408,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1409,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1409,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1410,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1410,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1411,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1411,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1412,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1412,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1413,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1413,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1414,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1414,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1415,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1415,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1416,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1416,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1417,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1417,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1418,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1418,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1419,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1419,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1420,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1420,"duration":0.011},
{"type":"mark","name":"tsc.op.op_resolve","count":1421,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1421,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1422,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1422,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":1423,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1423,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1424,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1424,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1425,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1425,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1426,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1426,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1427,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1427,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1428,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1428,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1429,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1429,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1430,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1430,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1431,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1431,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1432,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1432,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1433,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1433,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1434,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1434,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1435,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1435,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1436,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1436,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1437,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1437,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1438,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1438,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1439,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1439,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1440,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1440,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1441,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1441,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1442,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1442,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1443,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1443,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1444,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1444,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1445,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1445,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1446,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1446,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1447,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1447,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1448,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1448,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1449,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1449,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1450,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1450,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1451,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1451,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1452,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1452,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1453,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1453,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1454,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1454,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1455,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1455,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1456,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1456,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1457,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1457,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1458,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1458,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1459,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1459,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1460,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1460,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1461,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1461,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1462,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1462,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1463,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1463,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1464,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1464,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1465,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1465,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1466,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1466,"duration":0.075},
{"type":"mark","name":"tsc.op.op_resolve","count":1467,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1467,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1468,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1468,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1469,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1469,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1470,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1470,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1471,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1471,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1472,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1472,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1473,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1473,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1474,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1474,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1475,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1475,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1476,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1476,"duration":0.031},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":115,"duration":0.019},
{"type":"mark","name":"tsc.op.op_release","count":6,"args":"file:///workspaces/ProspectPro/.devcontainer/devcontainer.json"},
{"type":"measure","name":"tsc.op.op_release","count":6,"duration":0.159},
{"type":"mark","name":"tsc.op.op_release","count":7,"args":"file:///workspaces/ProspectPro/.vscode/settings.json"},
{"type":"measure","name":"tsc.op.op_release","count":7,"duration":0.094},
{"type":"mark","name":"tsc.op.op_release","count":8,"args":"file:///workspaces/ProspectPro/mcp-config.json"},
{"type":"measure","name":"tsc.op.op_release","count":8,"duration":0.084},
{"type":"mark","name":"tsc.op.op_release","count":9,"args":"file:///workspaces/ProspectPro/src/hooks/useJobProgress.tsx"},
{"type":"measure","name":"tsc.op.op_release","count":9,"duration":1.541},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":33,"duration":92.776},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":33,"duration":92.931},
{"type":"measure","name":"lsp.semantic_tokens_full","count":25,"duration":93.04},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":893,"duration":0.025},
{"type":"mark","name":"lsp.inlay_hint","count":422,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":894,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":423,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":116,"duration":0.021},
{"type":"mark","name":"lsp.inlay_hint","count":424,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":53,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx","languageId":"typescriptreact","version":1,"text":"import { Session, User } from \"@supabase/supabase-js\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { supabase } from \"../lib/supabase\";\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  sessionUserId: string | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [sessionUserId, setSessionUserId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Generate or retrieve session ID for anonymous users\n  const getOrCreateSessionId = () => {\n    let sessionId = localStorage.getItem(\"prospect_session_id\");\n    if (!sessionId) {\n      sessionId = `session_${Date.now()}_${Math.random()\n        .toString(36)\n        .substr(2, 9)}`;\n      localStorage.setItem(\"prospect_session_id\", sessionId);\n    }\n    return sessionId;\n  };\n\n  useEffect(() => {\n    // Initialize auth session (create anonymous session if needed)\n    const initializeAuth = async () => {\n      try {\n        // Get current session\n        const {\n          data: { session },\n          error: sessionError,\n        } = await supabase.auth.getSession();\n\n        if (sessionError) {\n          console.error(\"Session error:\", sessionError);\n        }\n\n        // If no session exists, create an anonymous session\n        if (!session) {\n          console.log(\"No session found, creating anonymous session...\");\n          const { data: anonData, error: anonError } =\n            await supabase.auth.signInAnonymously();\n\n          if (anonError) {\n            console.error(\"Anonymous sign-in error:\", anonError);\n            // Fall back to session ID if anonymous auth fails\n            setSessionUserId(getOrCreateSessionId());\n            setLoading(false);\n            return;\n          }\n\n          console.log(\n            \"✅ Anonymous session created:\",\n            anonData.session?.user?.id\n          );\n          setSession(anonData.session);\n          setUser(anonData.session?.user ?? null);\n          setSessionUserId(\n            anonData.session?.user?.id ?? getOrCreateSessionId()\n          );\n        } else {\n          // Existing session found\n          setSession(session);\n          setUser(session.user);\n          setSessionUserId(session.user.id);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        setSessionUserId(getOrCreateSessionId());\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log(\"Auth state changed:\", event, session?.user?.id);\n\n      setSession(session);\n      setUser(session?.user ?? null);\n\n      // Update session user ID\n      if (session?.user) {\n        setSessionUserId(session.user.id);\n        // Clear anonymous session ID\n        localStorage.removeItem(\"prospect_session_id\");\n      } else {\n        // If signed out, create new anonymous session\n        if (event === \"SIGNED_OUT\") {\n          console.log(\"User signed out, creating new anonymous session...\");\n          const { data: anonData } = await supabase.auth.signInAnonymously();\n          setSession(anonData.session);\n          setUser(anonData.session?.user ?? null);\n          setSessionUserId(\n            anonData.session?.user?.id ?? getOrCreateSessionId()\n          );\n        } else {\n          setSessionUserId(getOrCreateSessionId());\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n    if (error) throw error;\n  };\n\n  const signUp = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    if (error) throw error;\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    // Generate new anonymous session ID\n    setSessionUserId(getOrCreateSessionId());\n  };\n\n  const value = {\n    user,\n    session,\n    sessionUserId,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":468,"duration":0.295},
{"type":"measure","name":"lsp.did_open","count":53,"duration":4.848},
{"type":"mark","name":"lsp.did_open","count":54,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts","languageId":"typescript","version":1,"text":"import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\"Missing Supabase environment variables\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n  },\n});\n\n// Helper function to get current session token for Edge Function calls\nexport const getSessionToken = async (): Promise<string | null> => {\n  const {\n    data: { session },\n    error,\n  } = await supabase.auth.getSession();\n\n  if (error) {\n    console.error(\"Error getting session:\", error);\n    return null;\n  }\n\n  // Return the access token (JWT) from the session\n  return session?.access_token ?? null;\n};\n\n// Helper function to ensure we have a valid session\nexport const ensureSession = async (): Promise<boolean> => {\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  // If no session, create anonymous session\n  if (!session) {\n    console.log(\"No session found, creating anonymous session...\");\n    const { data, error } = await supabase.auth.signInAnonymously();\n\n    if (error) {\n      console.error(\"Failed to create anonymous session:\", error);\n      return false;\n    }\n\n    console.log(\"✅ Anonymous session created:\", data.session?.user?.id);\n    return true;\n  }\n\n  return true;\n};\n\n// Edge Functions URL\nexport const EDGE_FUNCTIONS_URL =\n  import.meta.env.VITE_EDGE_FUNCTIONS_URL || `${supabaseUrl}/functions/v1`;\n\n// Edge Function endpoints for vault-secured progressive enrichment\nexport const EDGE_FUNCTIONS = {\n  // Progressive Enrichment Orchestrator (vault-secured)\n  ENRICHMENT_ORCHESTRATOR: `${EDGE_FUNCTIONS_URL}/enrichment-orchestrator`,\n\n  // Individual enrichment services (vault-secured)\n  ENRICHMENT_BUSINESS_LICENSE: `${EDGE_FUNCTIONS_URL}/enrichment-business-license`,\n  ENRICHMENT_PDL: `${EDGE_FUNCTIONS_URL}/enrichment-pdl`,\n  ENRICHMENT_HUNTER: `${EDGE_FUNCTIONS_URL}/enrichment-hunter`,\n  ENRICHMENT_NEVERBOUNCE: `${EDGE_FUNCTIONS_URL}/enrichment-neverbounce`,\n\n  // Legacy endpoints (for backward compatibility)\n  ENHANCED_BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/enhanced-business-discovery`,\n  LEAD_VALIDATION: `${EDGE_FUNCTIONS_URL}/lead-validation-edge`,\n  BUSINESS_DISCOVERY: `${EDGE_FUNCTIONS_URL}/business-discovery-edge`,\n  DIAGNOSTICS: `${EDGE_FUNCTIONS_URL}/diag`,\n} as const;\n\n// Progressive Enrichment Tiers - Consolidated to 3 Tiers\nexport const ENRICHMENT_TIERS = {\n  BASE: {\n    name: \"Base\",\n    price: 0.15, // Essential Business Data\n    stages: [\"business-verification\", \"company-data\"],\n    description:\n      \"Essential Business Data - Perfect for targeted outreach campaigns\",\n    features: [\n      \"Business verification\",\n      \"Company data (name, industry, size)\",\n      \"Phone & address validation\",\n      \"Generic company email\",\n    ],\n    badge: \"Most Popular\",\n    hasOwnershipData: false,\n  },\n  PROFESSIONAL: {\n    name: \"Professional\",\n    price: 0.45, // Enhanced Sales Intelligence\n    stages: [\n      \"business-verification\",\n      \"company-data\",\n      \"email-discovery\",\n      \"email-verification\",\n    ],\n    description:\n      \"Enhanced Sales Intelligence - Verified contacts for higher conversion rates\",\n    features: [\n      \"Everything in Base\",\n      \"Professional email discovery & verification\",\n      \"Email deliverability verification\",\n      \"Enhanced company enrichment\",\n    ],\n    badge: \"\",\n    hasOwnershipData: false,\n  },\n  ENTERPRISE: {\n    name: \"Enterprise\",\n    price: 2.5, // Premium Executive Access\n    stages: [\n      \"business-verification\",\n      \"company-data\",\n      \"email-discovery\",\n      \"email-verification\",\n      \"executive-enrichment\",\n      \"compliance-verification\",\n    ],\n    description:\n      \"Premium Executive Access - Compliance-grade data with C-suite contacts\",\n    features: [\n      \"Everything in Professional\",\n      \"Executive contact enrichment\",\n      \"Full compliance verification\",\n      \"Advanced data validation\",\n    ],\n    badge: \"Premium\",\n    hasOwnershipData: true,\n  },\n} as const;\n"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":469,"duration":0.285},
{"type":"measure","name":"lsp.did_open","count":54,"duration":3.526},
{"type":"mark","name":"lsp.did_open","count":55,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json","languageId":"json","version":1,"text":"{\r\n  \"name\": \"prospectpro-verified-business-intelligence\",\r\n  \"version\": \"4.1.0\",\r\n  \"type\": \"module\",\r\n  \"description\": \"ProspectPro - Verified Business Intelligence Platform with Zero Fake Data Policy\",\r\n  \"scripts\": {\r\n    \"dev\": \"supabase functions serve --no-verify-jwt --debug\",\r\n    \"deploy:critical\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator\",\r\n    \"deploy:all\": \"supabase functions deploy business-discovery-optimized && supabase functions deploy enrichment-orchestrator && supabase functions deploy campaign-export && supabase functions deploy enrichment-hunter\",\r\n    \"test:edge\": \"curl -X POST 'http://localhost:54321/functions/v1/business-discovery-optimized' -H 'Content-Type: application/json' -d '{\\\"businessType\\\":\\\"test\\\",\\\"location\\\":\\\"test\\\"}'\",\r\n    \"logs:live\": \"supabase functions logs --follow\",\r\n    \"logs:errors\": \"supabase functions logs --filter=error\",\r\n    \"mcp:prod\": \"cd mcp-servers && npm run start:production\",\r\n    \"mcp:dev\": \"cd mcp-servers && npm run start:development\",\r\n    \"mcp:debug\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"frontend:build\": \"npm run build\",\r\n    \"frontend:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"static:deploy\": \"npm run build && cd dist && vercel --prod\",\r\n    \"health:check\": \"curl -f https://prospectpro.appsmithery.co/ || echo 'Health check failed'\",\r\n    \"cost:analyze\": \"echo 'Check GitHub billing dashboard for usage trends'\",\r\n    \"build\": \"tsc && vite build && echo '{\\\"version\\\":2,\\\"rewrites\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"destination\\\":\\\"/index.html\\\"}],\\\"headers\\\":[{\\\"source\\\":\\\"/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=0, s-maxage=0, must-revalidate\\\"}]},{\\\"source\\\":\\\"/assets/(.*)\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Cache-Control\\\",\\\"value\\\":\\\"public, max-age=31536000, immutable\\\"}]}]}' > dist/vercel.json\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\r\n    \"type-check\": \"tsc --noEmit\",\r\n    \"build:static\": \"npm run build\",\r\n    \"deploy:vercel\": \"vercel --prod\",\r\n    \"deploy:netlify\": \"netlify deploy --prod --dir=dist\",\r\n    \"deploy:gcs\": \"npm run build && gsutil -m rsync -r -d ./dist/ gs://prospectpro-static-frontend/\",\r\n    \"serve:local\": \"npm run preview\",\r\n    \"test:edge-functions\": \"supabase functions serve\",\r\n    \"deploy:edge-functions\": \"supabase functions deploy business-discovery && supabase functions deploy business-discovery-optimized && supabase functions deploy campaign-export\",\r\n    \"db:setup\": \"echo 'Run SQL from /database/supabase-first-schema.sql in Supabase dashboard'\",\r\n    \"db:status\": \"supabase db status\",\r\n    \"functions:list\": \"supabase functions list\",\r\n    \"functions:logs\": \"supabase functions logs\",\r\n    \"clean\": \"rm -rf dist/ node_modules/ && echo 'Cleaned build artifacts'\",\r\n    \"archive:legacy\": \"mkdir -p archive/legacy-server && mv server.js api/ modules/ docker/ archive/legacy-server/ 2>/dev/null || echo 'Legacy files managed separately'\",\r\n    \"health\": \"echo 'Use Edge Function endpoints for health checks'\",\r\n    \"test\": \"echo 'Test Edge Functions via Supabase dashboard or curl'\",\r\n    \"test:verified-contacts\": \"echo 'Test verified contact discovery with zero fake data validation'\",\r\n    \"mcp:install\": \"cd mcp-servers && npm install\",\r\n    \"mcp:test\": \"cd mcp-servers && npm run test\",\r\n    \"mcp:start\": \"cd mcp-servers && npm run start:all\",\r\n    \"mcp:troubleshoot\": \"cd mcp-servers && npm run start:troubleshooting\",\r\n    \"debug:quick\": \"echo 'Common issue: Check anon key sync and verified contact authentication'\",\r\n    \"debug:edge-function\": \"echo 'Test Verified Edge Function: curl -X POST https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/business-discovery-optimized -H \\\"Authorization: Bearer YOUR_ANON_KEY\\\" -H \\\"Content-Type: application/json\\\" -d \\\"{\\\\\\\"businessType\\\\\\\": \\\\\\\"test\\\\\\\", \\\\\\\"location\\\\\\\": \\\\\\\"test\\\\\\\"}\\\"'\",\r\n    \"debug:vercel\": \"echo 'Check Vercel deployment: curl -I https://your-vercel-url.vercel.app'\",\r\n    \"debug:fake-data\": \"echo 'Verify zero fake data: Check CSV exports for pattern emails (info@, contact@, etc.)'\"\r\n  },\r\n  \"keywords\": [\r\n    \"verified-business-intelligence\",\r\n    \"professional-contacts\",\r\n    \"apollo-api\",\r\n    \"chamber-of-commerce\",\r\n    \"professional-licensing\",\r\n    \"zero-fake-data\",\r\n    \"supabase\",\r\n    \"edge-functions\",\r\n    \"verified-contacts\"\r\n  ],\r\n  \"author\": \"Alex Torelli\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"@supabase/supabase-js\": \"^2.39.0\",\r\n    \"@tanstack/react-query\": \"^5.17.0\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.20.1\",\r\n    \"zustand\": \"^4.4.7\",\r\n    \"recharts\": \"^2.8.0\",\r\n    \"lucide-react\": \"^0.294.0\",\r\n    \"clsx\": \"^2.0.0\",\r\n    \"tailwind-merge\": \"^2.2.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^18.2.43\",\r\n    \"@types/react-dom\": \"^18.2.17\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^6.14.0\",\r\n    \"@typescript-eslint/parser\": \"^6.14.0\",\r\n    \"@vitejs/plugin-react\": \"^4.2.1\",\r\n    \"autoprefixer\": \"^10.4.16\",\r\n    \"eslint\": \"^8.55.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\r\n    \"postcss\": \"^8.4.32\",\r\n    \"tailwindcss\": \"^3.3.6\",\r\n    \"typescript\": \"^5.2.2\",\r\n    \"vite\": \"^5.0.8\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \"22.x\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/Alextorelli/ProspectPro\"\r\n  },\r\n  \"architecture\": {\r\n    \"frontend\": \"Static HTML/JS with verified contact display\",\r\n    \"backend\": \"Supabase Edge Functions with zero fake data\",\r\n    \"database\": \"Supabase PostgreSQL with verification tracking\",\r\n    \"contacts\": \"Apollo API + Professional Licensing + Chamber Directories\",\r\n    \"dataPolicy\": \"Zero fake data - verified contacts only\",\r\n    \"hosting\": \"Static hosting (Cloud Storage/CDN)\",\r\n    \"deployment\": \"Supabase CLI + gsutil\"\r\n  }\r\n}"}}},
{"type":"measure","name":"lsp.did_open","count":55,"duration":0.093},
{"type":"mark","name":"lsp.hover","count":31,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":21,"character":74}}},
{"type":"mark","name":"lsp.hover","count":32,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"position":{"line":21,"character":51}}},
{"type":"mark","name":"lsp.did_close","count":33,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/contexts/AuthContext.tsx"}}},
{"type":"measure","name":"lsp.did_close","count":33,"duration":1.218},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":470,"duration":0.259},
{"type":"mark","name":"lsp.did_close","count":34,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/lib/supabase.ts"}}},
{"type":"measure","name":"lsp.did_close","count":34,"duration":1.366},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":471,"duration":0.221},
{"type":"mark","name":"lsp.inlay_hint","count":425,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":426,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":427,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":428,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_close","count":35,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/package.json"}}},
{"type":"measure","name":"lsp.did_close","count":35,"duration":0.034},
{"type":"mark","name":"lsp.did_change_batched","count":430,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":430,"duration":7.348},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":895,"duration":0.012},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":472,"duration":0.259},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":896,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":429,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":117,"duration":0.013},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":897,"duration":0.023},
{"type":"mark","name":"lsp.inlay_hint","count":430,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":22,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":3}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":22,"duration":0.016},
{"type":"mark","name":"lsp.did_change_watched_files","count":23,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/dist/vercel.json","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":23,"duration":0.018},
{"type":"mark","name":"lsp.did_change_batched","count":431,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"lsp.did_change_batched","count":431,"duration":3.814},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":898,"duration":0.009},
{"type":"measure","name":"lsp.testing_update","count":473,"duration":0.284},
{"type":"mark","name":"lsp.inlay_hint","count":431,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":118,"duration":0.023},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":899,"duration":0.001},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":900,"duration":0.022},
{"type":"mark","name":"lsp.inlay_hint","count":432,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/src/components/Layout.tsx"},"range":{"start":{"line":0,"character":0},"end":{"line":69,"character":0}}}},
{"type":"mark","name":"lsp.did_open","count":56,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/prospectpro-metrics-client.js","languageId":"javascript","version":1,"text":"/**\r\n * ProspectPro Metrics Collection Client\r\n * Real-time monitoring and analytics for dashboard integration\r\n */\r\n\r\nconst { createClient } = require('@supabase/supabase-js');\r\n\r\nclass ProspectProMetricsClient {\r\n  constructor(supabaseClient) {\r\n    this.supabase = supabaseClient;\r\n    this.defaultUserId = null;\r\n  }\r\n\r\n  /**\r\n   * Initialize metrics client with user context\r\n   */\r\n  async initialize(userId = null) {\r\n    this.defaultUserId = userId;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Track API call with comprehensive metrics\r\n   */\r\n  async trackAPICall(campaignId, service, endpoint, cost, success, responseTime, metadata = {}) {\r\n    try {\r\n      const apiMetrics = {\r\n        campaign_id: campaignId,\r\n        api_service: service,\r\n        endpoint: endpoint,\r\n        request_count: 1,\r\n        cost_per_request: cost,\r\n        total_cost: cost,\r\n        success_count: success ? 1 : 0,\r\n        error_count: success ? 0 : 1,\r\n        avg_response_time_ms: responseTime,\r\n        rate_limit_remaining: metadata.rateLimitRemaining || null,\r\n        date: new Date().toISOString().split('T')[0],\r\n        hour: new Date().getHours(),\r\n        created_at: new Date().toISOString()\r\n      };\r\n\r\n      // Insert API cost tracking\r\n      const { error: costError } = await this.supabase\r\n        .from('api_cost_tracking')\r\n        .insert(apiMetrics);\r\n\r\n      if (costError) {\r\n        console.error('API cost tracking error:', costError);\r\n      }\r\n\r\n      // Track campaign analytics\r\n      await this.trackCampaignMetric(campaignId, 'api_call_cost', cost, 'cost', service);\r\n      await this.trackCampaignMetric(campaignId, 'api_response_time', responseTime, 'performance', service);\r\n      \r\n      if (!success && metadata.errorMessage) {\r\n        await this.trackCampaignMetric(campaignId, 'api_error', 1, 'usage', service, {\r\n          error_message: metadata.errorMessage\r\n        });\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('API call tracking failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Track individual campaign metrics\r\n   */\r\n  async trackCampaignMetric(campaignId, metricName, value, type, apiService = null, metadata = {}) {\r\n    try {\r\n      const metric = {\r\n        campaign_id: campaignId,\r\n        metric_name: metricName,\r\n        metric_value: value,\r\n        metric_type: type,\r\n        api_service: apiService,\r\n        timestamp: new Date().toISOString(),\r\n        metadata: metadata\r\n      };\r\n\r\n      const { error } = await this.supabase\r\n        .from('campaign_analytics')\r\n        .insert(metric);\r\n\r\n      if (error) {\r\n        console.error('Campaign metric tracking error:', error);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Campaign metric tracking failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update comprehensive campaign qualification metrics\r\n   */\r\n  async updateCampaignQualificationMetrics(campaignId) {\r\n    try {\r\n      // Get current campaign stats\r\n      const { data: campaignStats, error: statsError } = await this.supabase\r\n        .rpc('get_dashboard_realtime_metrics');\r\n\r\n      if (statsError) {\r\n        console.error('Failed to get campaign stats:', statsError);\r\n        return false;\r\n      }\r\n\r\n      // Get lead counts\r\n      const { data: leadCounts, error: leadsError } = await this.supabase\r\n        .from('enhanced_leads')\r\n        .select('confidence_score, total_cost')\r\n        .eq('campaign_id', campaignId);\r\n\r\n      if (leadsError) {\r\n        console.error('Failed to get lead counts:', leadsError);\r\n        return false;\r\n      }\r\n\r\n      const totalLeads = leadCounts.length;\r\n      const qualifiedLeads = leadCounts.filter(lead => lead.confidence_score >= 80).length;\r\n      const qualificationRate = totalLeads > 0 ? qualifiedLeads / totalLeads : 0;\r\n      const avgConfidence = totalLeads > 0 ? \r\n        leadCounts.reduce((sum, lead) => sum + lead.confidence_score, 0) / totalLeads : 0;\r\n      \r\n      // Get today's API costs\r\n      const { data: todayCosts, error: costsError } = await this.supabase\r\n        .from('api_cost_tracking')\r\n        .select('total_cost, request_count')\r\n        .eq('campaign_id', campaignId)\r\n        .eq('date', new Date().toISOString().split('T')[0]);\r\n\r\n      if (costsError) {\r\n        console.error('Failed to get today costs:', costsError);\r\n        return false;\r\n      }\r\n\r\n      const totalApiCost = todayCosts.reduce((sum, cost) => sum + parseFloat(cost.total_cost || 0), 0);\r\n      const totalApiCalls = todayCosts.reduce((sum, cost) => sum + (cost.request_count || 0), 0);\r\n      const costPerQualifiedLead = qualifiedLeads > 0 ? totalApiCost / qualifiedLeads : 0;\r\n      \r\n      // Calculate ROI (assuming $10 value per qualified lead)\r\n      const roiPercentage = totalApiCost > 0 ? \r\n        ((qualifiedLeads * 10.00 - totalApiCost) / totalApiCost) * 100 : 0;\r\n\r\n      // Insert qualification metrics\r\n      const qualificationMetrics = {\r\n        campaign_id: campaignId,\r\n        total_leads_discovered: totalLeads,\r\n        leads_qualified: qualifiedLeads,\r\n        qualification_rate: qualificationRate,\r\n        avg_confidence_score: avgConfidence,\r\n        total_api_calls: totalApiCalls,\r\n        total_api_cost: totalApiCost,\r\n        cost_per_qualified_lead: costPerQualifiedLead,\r\n        roi_percentage: roiPercentage,\r\n        date: new Date().toISOString().split('T')[0],\r\n        hour: new Date().getHours(),\r\n        created_at: new Date().toISOString()\r\n      };\r\n\r\n      const { error } = await this.supabase\r\n        .from('lead_qualification_metrics')\r\n        .insert(qualificationMetrics);\r\n\r\n      if (error) {\r\n        console.error('Campaign qualification metrics error:', error);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Campaign qualification metrics update failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update service health status for dashboard monitoring\r\n   */\r\n  async updateServiceHealth(serviceName, status, responseTime, errorRate, rateLimitRemaining, budgetRemaining) {\r\n    try {\r\n      // Get today's service usage\r\n      const { data: todayUsage, error: usageError } = await this.supabase\r\n        .from('api_cost_tracking')\r\n        .select('total_cost, request_count')\r\n        .eq('api_service', serviceName)\r\n        .eq('date', new Date().toISOString().split('T')[0]);\r\n\r\n      if (usageError) {\r\n        console.error('Failed to get today usage:', usageError);\r\n        return false;\r\n      }\r\n\r\n      const requestsToday = todayUsage.reduce((sum, usage) => sum + (usage.request_count || 0), 0);\r\n      const costToday = todayUsage.reduce((sum, usage) => sum + parseFloat(usage.total_cost || 0), 0);\r\n\r\n      const healthMetrics = {\r\n        service_name: serviceName,\r\n        status: status,\r\n        response_time_ms: responseTime,\r\n        error_rate: errorRate,\r\n        rate_limit_remaining: rateLimitRemaining,\r\n        cost_budget_remaining: budgetRemaining,\r\n        requests_today: requestsToday,\r\n        cost_today: costToday,\r\n        last_successful_call: status === 'healthy' ? new Date().toISOString() : null,\r\n        last_error: status !== 'healthy' ? `Service ${status} at ${new Date().toISOString()}` : null,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      const { error } = await this.supabase\r\n        .from('service_health_metrics')\r\n        .insert(healthMetrics);\r\n\r\n      if (error) {\r\n        console.error('Service health update error:', error);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Service health update failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get real-time dashboard metrics\r\n   */\r\n  async getDashboardMetrics() {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_dashboard_realtime_metrics');\r\n\r\n      if (error) {\r\n        console.error('Dashboard metrics fetch error:', error);\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Dashboard metrics fetch failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get cost per qualified lead analytics\r\n   */\r\n  async getCostAnalytics(campaignId = null, startDate = null, endDate = null) {\r\n    try {\r\n      const start = startDate || new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\r\n      const end = endDate || new Date().toISOString().split('T')[0];\r\n\r\n      const { data, error } = await this.supabase\r\n        .rpc('calculate_cost_per_qualified_lead_dashboard', {\r\n          campaign_id_param: campaignId,\r\n          start_date: start,\r\n          end_date: end\r\n        });\r\n\r\n      if (error) {\r\n        console.error('Cost analytics fetch error:', error);\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Cost analytics fetch failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get API service breakdown for dashboard\r\n   */\r\n  async getAPIServiceBreakdown(startDate = null, endDate = null) {\r\n    try {\r\n      const start = startDate || new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\r\n      const end = endDate || new Date().toISOString().split('T')[0];\r\n\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_api_service_breakdown', {\r\n          start_date: start,\r\n          end_date: end\r\n        });\r\n\r\n      if (error) {\r\n        console.error('API service breakdown fetch error:', error);\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('API service breakdown fetch failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepare dashboard export data\r\n   */\r\n  async prepareDashboardExport(exportType, startDate, endDate, campaignIds = null) {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('prepare_dashboard_export_data', {\r\n          export_type: exportType,\r\n          start_date: startDate,\r\n          end_date: endDate,\r\n          campaign_ids: campaignIds\r\n        });\r\n\r\n      if (error) {\r\n        console.error('Dashboard export preparation error:', error);\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Dashboard export preparation failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log dashboard export for tracking\r\n   */\r\n  async logDashboardExport(userId, exportType, fileFormat, startDate, endDate, campaignIds, rowCount, fileSizeMb) {\r\n    try {\r\n      const exportLog = {\r\n        user_id: userId,\r\n        export_type: exportType,\r\n        file_format: fileFormat,\r\n        start_date: startDate,\r\n        end_date: endDate,\r\n        campaign_ids: campaignIds,\r\n        row_count: rowCount,\r\n        file_size_mb: fileSizeMb,\r\n        export_status: 'completed',\r\n        expires_at: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days\r\n        created_at: new Date().toISOString()\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('dashboard_exports')\r\n        .insert(exportLog)\r\n        .select();\r\n\r\n      if (error) {\r\n        console.error('Dashboard export logging error:', error);\r\n        return null;\r\n      }\r\n\r\n      return data[0];\r\n    } catch (error) {\r\n      console.error('Dashboard export logging failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup real-time subscriptions for dashboard\r\n   */\r\n  setupRealTimeSubscriptions(callback) {\r\n    // Subscribe to service health updates\r\n    const serviceHealthSubscription = this.supabase\r\n      .channel('service-health-changes')\r\n      .on('postgres_changes', \r\n        { event: 'INSERT', schema: 'public', table: 'service_health_metrics' },\r\n        (payload) => callback('service_health', payload.new)\r\n      )\r\n      .subscribe();\r\n\r\n    // Subscribe to campaign qualification updates\r\n    const qualificationSubscription = this.supabase\r\n      .channel('qualification-changes')\r\n      .on('postgres_changes', \r\n        { event: 'INSERT', schema: 'public', table: 'lead_qualification_metrics' },\r\n        (payload) => callback('qualification_metrics', payload.new)\r\n      )\r\n      .subscribe();\r\n\r\n    // Subscribe to API cost updates\r\n    const costSubscription = this.supabase\r\n      .channel('cost-changes')\r\n      .on('postgres_changes', \r\n        { event: 'INSERT', schema: 'public', table: 'api_cost_tracking' },\r\n        (payload) => callback('cost_tracking', payload.new)\r\n      )\r\n      .subscribe();\r\n\r\n    return {\r\n      serviceHealth: serviceHealthSubscription,\r\n      qualification: qualificationSubscription,\r\n      cost: costSubscription\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Enhanced lead tracking for dashboard metrics\r\n   */\r\n  async trackLeadDiscovery(campaignId, leadData, apiCosts) {\r\n    try {\r\n      // Track the lead discovery costs\r\n      for (const [apiService, cost] of Object.entries(apiCosts)) {\r\n        await this.trackAPICall(\r\n          campaignId,\r\n          apiService,\r\n          'lead_discovery',\r\n          cost.amount,\r\n          cost.success,\r\n          cost.responseTime,\r\n          { lead_id: leadData.id, ...cost.metadata }\r\n        );\r\n      }\r\n\r\n      // Track lead quality metrics\r\n      await this.trackCampaignMetric(\r\n        campaignId,\r\n        'lead_confidence_score',\r\n        leadData.confidence_score,\r\n        'quality',\r\n        'system',\r\n        { lead_id: leadData.id }\r\n      );\r\n\r\n      // Update campaign qualification metrics\r\n      await this.updateCampaignQualificationMetrics(campaignId);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Lead discovery tracking failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = ProspectProMetricsClient;"}}},
{"type":"measure","name":"lsp.did_open","count":56,"duration":15.602},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":474,"duration":0.31},
{"type":"mark","name":"lsp.did_open","count":57,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/api-google-places-client.js","languageId":"javascript","version":1,"text":"const axios = require('axios');\r\n\r\nclass GooglePlacesClient {\r\n    constructor(apiKey) {\r\n        this.apiKey = apiKey;\r\n        this.baseUrl = 'https://maps.googleapis.com/maps/api/place';\r\n        this.requestCount = 0;\r\n        this.costTracking = {\r\n            textSearchCost: 0.032,\r\n            detailsCost: 0.017,\r\n            totalCost: 0\r\n        };\r\n    }\r\n\r\n    async textSearch(params) {\r\n        if (!this.apiKey) {\r\n            throw new Error('Google Places API key not configured');\r\n        }\r\n\r\n        const url = `${this.baseUrl}/textsearch/json`;\r\n\r\n        try {\r\n            console.log(`📡 Google Places Text Search: \"${params.query}\"`);\r\n\r\n            const response = await axios.get(url, {\r\n                params: {\r\n                    query: params.query,\r\n                    key: this.apiKey,\r\n                    type: params.type || 'establishment'\r\n                },\r\n                timeout: 10000\r\n            });\r\n\r\n            this.requestCount++;\r\n            this.costTracking.totalCost += this.costTracking.textSearchCost;\r\n\r\n            if (response.data.status !== 'OK') {\r\n                throw new Error(`Google Places API error: ${response.data.status} - ${response.data.error_message || 'Unknown error'}`);\r\n            }\r\n\r\n            const businesses = response.data.results.map(place => ({\r\n                placeId: place.place_id,\r\n                name: place.name,\r\n                address: place.formatted_address,\r\n                rating: place.rating || 0,\r\n                priceLevel: place.price_level,\r\n                types: place.types || [],\r\n                geometry: place.geometry,\r\n                source: 'google_places',\r\n                photos: place.photos || []\r\n            }));\r\n\r\n            console.log(`✅ Google Places found ${businesses.length} businesses`);\r\n            return businesses;\r\n\r\n        } catch (error) {\r\n            console.error('Google Places Text Search failed:', error.message);\r\n            throw new Error(`Google Places API failed: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    async getPlaceDetails(placeId) {\r\n        if (!this.apiKey) {\r\n            throw new Error('Google Places API key not configured');\r\n        }\r\n\r\n        const url = `${this.baseUrl}/details/json`;\r\n\r\n        try {\r\n            console.log(`📡 Google Places Details: ${placeId}`);\r\n\r\n            const response = await axios.get(url, {\r\n                params: {\r\n                    place_id: placeId,\r\n                    fields: 'formatted_phone_number,website,opening_hours,reviews,international_phone_number',\r\n                    key: this.apiKey\r\n                },\r\n                timeout: 10000\r\n            });\r\n\r\n            this.requestCount++;\r\n            this.costTracking.totalCost += this.costTracking.detailsCost;\r\n\r\n            if (response.data.status !== 'OK') {\r\n                throw new Error(`Google Places Details API error: ${response.data.status}`);\r\n            }\r\n\r\n            const result = response.data.result;\r\n            return {\r\n                phone: result.formatted_phone_number || result.international_phone_number || null,\r\n                website: result.website || null,\r\n                hours: result.opening_hours?.weekday_text || null,\r\n                reviews: result.reviews || []\r\n            };\r\n\r\n        } catch (error) {\r\n            console.error('Google Places Details failed:', error.message);\r\n            throw new Error(`Google Places Details API failed: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    getUsageStats() {\r\n        return {\r\n            requestCount: this.requestCount,\r\n            totalCost: this.costTracking.totalCost,\r\n            averageCostPerRequest: this.requestCount > 0 ? \r\n                this.costTracking.totalCost / this.requestCount : 0\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports = GooglePlacesClient;"}}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":475,"duration":0.321},
{"type":"measure","name":"lsp.did_open","count":57,"duration":2.016},
{"type":"mark","name":"lsp.did_open","count":58,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/api-hunter-comprehensive-client.js","languageId":"javascript","version":1,"text":"/**\n * COMPREHENSIVE HUNTER.IO CLIENT V3.0\n * \n * Optimized integr    // Performance tracking\n    this.stats = {\n      totalCost: 0,\n      totalRequests: 0,\n      endpointUsage: {},\n      emailsDiscovered: 0,\n      companiesEnriched: 0,\n      personsEnriched: 0,\n    };\n\n    // Circuit breaker states\n    this.circuitBreakers = {};\n    \n    // Initialize circuit breakers and stats\n    this.initializeCircuitBreakers();LL Hunter.io API v2 features:\n * ✅ Domain Search (implemented)\n * ✅ Email Finder (implemented) \n * ✅ Email Verifier (implemented)\n * 🆕 Company Enrichment (new)\n * 🆕 Person Enrichment (new)\n * 🆕 Combined Enrichment (new)\n * 🆕 Discover API (new)\n * 🆕 Email Count (new)\n * 🆕 Advanced Search Parameters (new)\n * \n * Features:\n * - Complete API coverage with all endpoints\n * - Intelligent cost optimization strategies\n * - Advanced circuit breaker with per-endpoint tracking\n * - Comprehensive data enrichment pipeline\n * - Smart email prioritization and verification\n * - Company and person intelligence gathering\n * - Lead scoring with enriched data\n */\n\nconst axios = require(\"axios\");\nconst { performance } = require(\"perf_hooks\");\n\nclass ComprehensiveHunterClient {\n  constructor(apiKey, config = {}) {\n    this.apiKey = apiKey;\n    this.baseUrl = \"https://api.hunter.io/v2\";\n\n    this.config = {\n      // Budget Management\n      maxDailyCost: config.maxDailyCost || 15.0,\n      maxPerLeadCost: config.maxPerLeadCost || 1.0,\n\n      // API Costs (per Hunter.io pricing)\n      costs: {\n        domainSearch: 0.034, // Updated pricing\n        emailFinder: 0.034, // Updated pricing\n        emailVerifier: 0.01, // Updated pricing\n        personEnrichment: 0.034, // Updated pricing\n        companyEnrichment: 0.034, // Updated pricing\n        combinedEnrichment: 0.068, // Updated pricing\n        discover: 0.0, // FREE\n        emailCount: 0.0, // FREE\n      },\n\n      // Quality Thresholds\n      minEmailConfidence: 75,\n      minVerificationScore: 80,\n      maxEmailsPerDomain: 10,\n      maxEnrichmentRequests: 3,\n\n      // Rate Limiting\n      maxConcurrentRequests: 3,\n      baseDelay: 800, // ms between requests\n\n      // Circuit Breaker per endpoint\n      circuitBreakerThreshold: 3,\n      recoveryTimeoutMs: 180000, // 3 minutes\n\n      ...config,\n    };\n\n    // Performance tracking\n    this.stats = {\n      totalCost: 0,\n      totalRequests: 0,\n      endpointUsage: {},\n      emailsDiscovered: 0,\n      companiesEnriched: 0,\n      personsEnriched: 0,\n    };\n\n    // Per-endpoint circuit breakers\n    this.circuitBreakers = {};\n    this.initializeCircuitBreakers();\n\n    console.log(\"🚀 Comprehensive Hunter.io Client V3.0 initialized\");\n    console.log(`   💰 Budget: $${this.config.maxDailyCost}/day`);\n    console.log(`   🎯 Min Confidence: ${this.config.minEmailConfidence}%`);\n    console.log(`   📊 All API endpoints enabled`);\n  }\n\n  initializeCircuitBreakers() {\n    const endpoints = [\n      \"domainSearch\",\n      \"emailFinder\",\n      \"emailVerifier\",\n      \"personEnrichment\",\n      \"companyEnrichment\",\n      \"combinedEnrichment\",\n      \"discover\",\n      \"emailCount\",\n    ];\n\n    endpoints.forEach((endpoint) => {\n      this.circuitBreakers[endpoint] = {\n        state: \"CLOSED\",\n        failures: 0,\n        lastFailureTime: null,\n        successCount: 0,\n      };\n\n      // Initialize endpoint usage stats\n      this.stats.endpointUsage[endpoint] = 0;\n    });\n  }\n\n  /**\n   * COMPREHENSIVE EMAIL DISCOVERY PIPELINE\n   * Uses all Hunter.io capabilities in intelligent sequence\n   */\n  async comprehensiveEmailDiscovery(businessData) {\n    const startTime = performance.now();\n\n    console.log(\n      `🔍 Comprehensive Hunter.io discovery: ${businessData.business_name}`\n    );\n\n    const result = {\n      business_name: businessData.business_name,\n      domain: this.extractDomain(businessData.website),\n\n      // Email discovery results\n      emails: [],\n      emailPatterns: [],\n      emailCount: 0,\n\n      // Enrichment results\n      companyData: null,\n      personData: [],\n      combinedData: [],\n\n      // Discovery results\n      similarCompanies: [],\n\n      // Metrics\n      total_cost: 0,\n      api_calls_made: 0,\n      confidence_score: 0,\n      processing_time: 0,\n      success: false,\n      endpoints_used: [],\n      error: null,\n    };\n\n    try {\n      if (!result.domain || this.isInvalidDomain(result.domain)) {\n        throw new Error(`Invalid domain: ${result.domain}`);\n      }\n\n      // STAGE 1: Email Count (FREE) - Check if domain has emails\n      console.log(`📊 Checking email availability for: ${result.domain}`);\n      const emailCount = await this.getEmailCount(result.domain);\n      if (emailCount) {\n        result.emailCount = emailCount.total;\n        result.endpoints_used.push(\"emailCount\");\n\n        if (emailCount.total === 0) {\n          console.log(`⚠️ No emails available for ${result.domain}`);\n          result.success = false;\n          return result;\n        }\n\n        console.log(\n          `📈 Found ${emailCount.total} emails available (${emailCount.personal_emails} personal)`\n        );\n      }\n\n      // STAGE 2: Company Enrichment (PAID) - Get rich company data\n      if (this.canMakeRequest(\"companyEnrichment\")) {\n        console.log(`🏢 Enriching company data: ${result.domain}`);\n        const companyData = await this.enrichCompanyData(result.domain);\n\n        if (companyData) {\n          result.companyData = companyData;\n          result.total_cost += this.config.costs.companyEnrichment;\n          result.api_calls_made++;\n          result.endpoints_used.push(\"companyEnrichment\");\n\n          // Use company data to enhance business profile\n          this.enhanceBusinessWithCompanyData(businessData, companyData);\n        }\n      }\n\n      // STAGE 3: Domain Search (PAID) - Get email patterns and addresses\n      if (this.canMakeRequest(\"domainSearch\")) {\n        console.log(`🔍 Domain search: ${result.domain}`);\n        const domainResult = await this.comprehensiveDomainSearch(\n          result.domain,\n          businessData\n        );\n\n        if (domainResult?.emails?.length > 0) {\n          result.emails.push(...domainResult.emails);\n          result.emailPatterns = domainResult.patterns || [];\n          result.total_cost += this.config.costs.domainSearch;\n          result.api_calls_made++;\n          result.endpoints_used.push(\"domainSearch\");\n\n          console.log(\n            `✅ Domain search found ${domainResult.emails.length} emails`\n          );\n        }\n      }\n\n      // STAGE 4: Targeted Email Finder (PAID) - Find specific person emails\n      if (businessData.owner_name && this.canMakeRequest(\"emailFinder\")) {\n        const ownerEmail = await this.findPersonEmail(\n          result.domain,\n          businessData.owner_name\n        );\n\n        if (ownerEmail && !this.isDuplicateEmail(ownerEmail, result.emails)) {\n          result.emails.push(ownerEmail);\n          result.total_cost += this.config.costs.emailFinder;\n          result.api_calls_made++;\n          result.endpoints_used.push(\"emailFinder\");\n\n          console.log(`👤 Found owner email: ${ownerEmail.value}`);\n        }\n      }\n\n      // STAGE 5: Email Verification (PAID) - Verify high-priority emails\n      if (result.emails.length > 0) {\n        const verifiedEmails = await this.verifyPriorityEmails(result.emails);\n        result.emails = verifiedEmails.emails;\n        result.total_cost += verifiedEmails.cost;\n        result.api_calls_made += verifiedEmails.verifications;\n\n        if (verifiedEmails.verifications > 0) {\n          result.endpoints_used.push(\"emailVerifier\");\n        }\n      }\n\n      // STAGE 6: Person Enrichment (PAID) - Get rich person data\n      if (result.emails.length > 0 && this.canMakeRequest(\"personEnrichment\")) {\n        const personEnrichments = await this.enrichPersonData(\n          result.emails.slice(0, 3) // Top 3 emails only to control costs\n        );\n\n        if (personEnrichments.length > 0) {\n          result.personData = personEnrichments;\n          result.total_cost +=\n            personEnrichments.length * this.config.costs.personEnrichment;\n          result.api_calls_made += personEnrichments.length;\n          result.endpoints_used.push(\"personEnrichment\");\n        }\n      }\n\n      // STAGE 7: Combined Enrichment (PAID) - Get person + company data\n      const topEmail = this.getTopPriorityEmail(result.emails);\n      if (topEmail && this.canMakeRequest(\"combinedEnrichment\")) {\n        console.log(`🔗 Combined enrichment for: ${topEmail.value}`);\n        const combinedData = await this.getCombinedEnrichment(topEmail.value);\n\n        if (combinedData) {\n          result.combinedData.push(combinedData);\n          result.total_cost += this.config.costs.combinedEnrichment;\n          result.api_calls_made++;\n          result.endpoints_used.push(\"combinedEnrichment\");\n        }\n      }\n\n      // STAGE 8: Company Discovery (FREE) - Find similar companies\n      if (result.companyData?.industry) {\n        console.log(\n          `🏭 Discovering similar companies in: ${result.companyData.industry}`\n        );\n        const similarCompanies = await this.discoverSimilarCompanies(\n          result.companyData\n        );\n\n        if (similarCompanies?.length > 0) {\n          result.similarCompanies = similarCompanies.slice(0, 5);\n          result.endpoints_used.push(\"discover\");\n\n          console.log(`🎯 Found ${similarCompanies.length} similar companies`);\n        }\n      }\n\n      // Calculate final metrics\n      result.confidence_score = this.calculateComprehensiveConfidence(result);\n      result.processing_time = performance.now() - startTime;\n      result.success =\n        result.emails.length > 0 &&\n        result.confidence_score >= this.config.minEmailConfidence;\n\n      // Update statistics\n      this.updateStats(result);\n\n      console.log(`✅ Comprehensive discovery complete:`);\n      console.log(`   📧 ${result.emails.length} emails discovered`);\n      console.log(`   🏢 ${result.companyData ? 1 : 0} company enriched`);\n      console.log(`   👥 ${result.personData.length} persons enriched`);\n      console.log(`   💰 $${result.total_cost.toFixed(3)} total cost`);\n      console.log(`   🎯 ${result.confidence_score}% confidence`);\n      console.log(\n        `   🚀 ${\n          result.endpoints_used.length\n        } endpoints used: ${result.endpoints_used.join(\", \")}`\n      );\n\n      return result;\n    } catch (error) {\n      console.error(`❌ Comprehensive discovery failed: ${error.message}`);\n      result.error = error.message;\n      result.processing_time = performance.now() - startTime;\n      return result;\n    }\n  }\n\n  /**\n   * EMAIL COUNT API (FREE)\n   * Check how many emails are available for a domain before searching\n   */\n  async getEmailCount(domain) {\n    if (!this.isEndpointAvailable(\"emailCount\")) return null;\n\n    try {\n      const response = await this.makeApiRequest(\"GET\", \"email-count\", {\n        domain: domain,\n      });\n\n      if (response.data) {\n        this.recordEndpointSuccess(\"emailCount\");\n        return {\n          total: response.data.total || 0,\n          personal_emails: response.data.personal_emails || 0,\n          generic_emails: response.data.generic_emails || 0,\n          department_breakdown: response.data.department || {},\n          seniority_breakdown: response.data.seniority || {},\n        };\n      }\n\n      return null;\n    } catch (error) {\n      this.recordEndpointFailure(\"emailCount\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * COMPANY ENRICHMENT API (PAID)\n   * Get comprehensive company data\n   */\n  async enrichCompanyData(domain) {\n    if (!this.isEndpointAvailable(\"companyEnrichment\")) return null;\n\n    try {\n      const response = await this.makeApiRequest(\"GET\", \"companies/find\", {\n        domain: domain,\n      });\n\n      if (response.data) {\n        this.recordEndpointSuccess(\"companyEnrichment\");\n\n        return {\n          name: response.data.name,\n          domain: response.data.domain,\n          industry: response.data.category?.industry,\n          employees: response.data.metrics?.employees,\n          revenue: response.data.metrics?.estimatedAnnualRevenue,\n          location: response.data.location,\n          phone: response.data.phone,\n          description: response.data.description,\n          founded_year: response.data.foundedYear,\n          technologies: response.data.tech || [],\n          social_profiles: {\n            linkedin: response.data.linkedin?.handle,\n            twitter: response.data.twitter?.handle,\n            facebook: response.data.facebook?.handle,\n          },\n          headcount_range: response.data.metrics?.employees,\n          funding_info: response.data.fundingRounds || [],\n        };\n      }\n\n      return null;\n    } catch (error) {\n      this.recordEndpointFailure(\"companyEnrichment\", error);\n      console.warn(\n        `⚠️ Company enrichment failed for ${domain}: ${error.message}`\n      );\n      return null;\n    }\n  }\n\n  /**\n   * PERSON ENRICHMENT API (PAID)\n   * Get comprehensive person data from email addresses\n   */\n  async enrichPersonData(emails) {\n    const enrichedPersons = [];\n\n    for (const email of emails) {\n      if (!this.canMakeRequest(\"personEnrichment\")) break;\n\n      try {\n        const response = await this.makeApiRequest(\"GET\", \"people/find\", {\n          email: email.value,\n        });\n\n        if (response.data) {\n          this.recordEndpointSuccess(\"personEnrichment\");\n\n          enrichedPersons.push({\n            email: email.value,\n            name: {\n              full: response.data.name?.fullName,\n              first: response.data.name?.givenName,\n              last: response.data.name?.familyName,\n            },\n            location: response.data.location,\n            employment: {\n              title: response.data.employment?.title,\n              company: response.data.employment?.name,\n              domain: response.data.employment?.domain,\n              seniority: response.data.employment?.seniority,\n              role: response.data.employment?.role,\n            },\n            social_profiles: {\n              linkedin: response.data.linkedin?.handle,\n              twitter: response.data.twitter?.handle,\n              github: response.data.github?.handle,\n            },\n            phone: response.data.phone,\n            timezone: response.data.timeZone,\n          });\n        }\n\n        // Rate limiting\n        await this.delay(this.config.baseDelay);\n      } catch (error) {\n        this.recordEndpointFailure(\"personEnrichment\", error);\n        console.warn(\n          `⚠️ Person enrichment failed for ${email.value}: ${error.message}`\n        );\n      }\n    }\n\n    return enrichedPersons;\n  }\n\n  /**\n   * COMBINED ENRICHMENT API (PAID)\n   * Get both person and company data in one call\n   */\n  async getCombinedEnrichment(email) {\n    if (!this.isEndpointAvailable(\"combinedEnrichment\")) return null;\n\n    try {\n      const response = await this.makeApiRequest(\"GET\", \"combined/find\", {\n        email: email,\n      });\n\n      if (response.data) {\n        this.recordEndpointSuccess(\"combinedEnrichment\");\n\n        return {\n          person: {\n            email: response.data.person?.email,\n            name: response.data.person?.name?.fullName,\n            location: response.data.person?.location,\n            employment: response.data.person?.employment,\n            social_profiles: {\n              linkedin: response.data.person?.linkedin?.handle,\n              twitter: response.data.person?.twitter?.handle,\n            },\n          },\n          company: {\n            name: response.data.company?.name,\n            domain: response.data.company?.domain,\n            industry: response.data.company?.category?.industry,\n            employees: response.data.company?.metrics?.employees,\n            location: response.data.company?.location,\n            description: response.data.company?.description,\n            technologies: response.data.company?.tech || [],\n          },\n        };\n      }\n\n      return null;\n    } catch (error) {\n      this.recordEndpointFailure(\"combinedEnrichment\", error);\n      console.warn(\n        `⚠️ Combined enrichment failed for ${email}: ${error.message}`\n      );\n      return null;\n    }\n  }\n\n  /**\n   * DISCOVER API (FREE)\n   * Find companies matching criteria\n   */\n  async discoverSimilarCompanies(companyData) {\n    if (!this.isEndpointAvailable(\"discover\")) return null;\n\n    try {\n      const searchCriteria = {\n        industry: {\n          include: [companyData.industry],\n        },\n        headcount: this.getHeadcountRange(companyData.employees),\n      };\n\n      // Add location if available\n      if (companyData.location) {\n        searchCriteria.headquarters_location = {\n          include: [{ city: this.extractCity(companyData.location) }],\n        };\n      }\n\n      const response = await this.makeApiRequest(\n        \"POST\",\n        \"discover\",\n        searchCriteria\n      );\n\n      if (response.data && Array.isArray(response.data)) {\n        this.recordEndpointSuccess(\"discover\");\n\n        return response.data.map((company) => ({\n          domain: company.domain,\n          organization: company.organization,\n          email_count: company.emails_count?.total || 0,\n          personal_emails: company.emails_count?.personal || 0,\n        }));\n      }\n\n      return [];\n    } catch (error) {\n      this.recordEndpointFailure(\"discover\", error);\n      console.warn(`⚠️ Company discovery failed: ${error.message}`);\n      return [];\n    }\n  }\n\n  /**\n   * COMPREHENSIVE DOMAIN SEARCH with advanced parameters\n   */\n  async comprehensiveDomainSearch(domain, businessData) {\n    if (!this.isEndpointAvailable(\"domainSearch\")) return null;\n\n    try {\n      const searchParams = {\n        domain: domain,\n        limit: this.config.maxEmailsPerDomain,\n        offset: 0,\n        type: \"personal\", // Focus on personal emails first\n      };\n\n      // Add advanced parameters based on business data\n      if (businessData.industry) {\n        // Target specific departments based on industry\n        searchParams.department = this.getTargetDepartments(\n          businessData.industry\n        );\n      }\n\n      // Target senior-level contacts\n      searchParams.seniority = \"senior,executive\";\n\n      // Require full names and positions for better quality\n      searchParams.required_field = \"full_name,position\";\n\n      const response = await this.makeApiRequest(\n        \"GET\",\n        \"domain-search\",\n        searchParams\n      );\n\n      if (response.data?.emails) {\n        this.recordEndpointSuccess(\"domainSearch\");\n\n        return {\n          emails: this.processEmailResults(response.data.emails),\n          patterns: [response.data.pattern],\n          organization: response.data.organization,\n          domain_info: {\n            disposable: response.data.disposable,\n            webmail: response.data.webmail,\n            accept_all: response.data.accept_all,\n          },\n        };\n      }\n\n      return null;\n    } catch (error) {\n      this.recordEndpointFailure(\"domainSearch\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Enhanced email verification with batch processing\n   */\n  async verifyPriorityEmails(emails) {\n    const result = {\n      emails: [],\n      cost: 0,\n      verifications: 0,\n    };\n\n    // Sort emails by priority\n    const priorityEmails = this.prioritizeEmailsForVerification(emails);\n    const emailsToVerify = priorityEmails.slice(0, 5); // Limit to control costs\n\n    console.log(`🔍 Verifying ${emailsToVerify.length} priority emails...`);\n\n    for (const email of emailsToVerify) {\n      if (!this.canMakeRequest(\"emailVerifier\")) break;\n\n      try {\n        const verification = await this.verifyEmail(email.value);\n\n        if (verification) {\n          result.cost += this.config.costs.emailVerifier;\n          result.verifications++;\n\n          // Update email with verification data\n          const updatedEmail = {\n            ...email,\n            verification: verification,\n            confidence: this.combineConfidenceScores(\n              email.confidence || 50,\n              verification.score || 0\n            ),\n            deliverability: verification.status,\n            is_valid: verification.status === \"valid\",\n          };\n\n          result.emails.push(updatedEmail);\n        } else {\n          result.emails.push(email);\n        }\n\n        await this.delay(this.config.baseDelay);\n      } catch (error) {\n        console.warn(\n          `⚠️ Email verification failed for ${email.value}: ${error.message}`\n        );\n        result.emails.push(email);\n      }\n    }\n\n    // Add non-verified emails\n    const nonVerifiedEmails = emails.filter(\n      (email) => !emailsToVerify.includes(email)\n    );\n    result.emails.push(...nonVerifiedEmails);\n\n    return result;\n  }\n\n  /**\n   * API Request wrapper with circuit breaker\n   */\n  async makeApiRequest(method, endpoint, params = {}) {\n    const url = `${this.baseUrl}/${endpoint}`;\n    const config = {\n      method: method,\n      url: url,\n      timeout: 15000,\n      headers: {\n        Accept: \"application/json\",\n        \"User-Agent\": \"ProspectPro/3.0\",\n      },\n    };\n\n    // Add API key and parameters\n    if (method === \"GET\") {\n      config.params = { ...params, api_key: this.apiKey };\n    } else {\n      config.data = params;\n      config.params = { api_key: this.apiKey };\n    }\n\n    const response = await axios(config);\n    return response.data;\n  }\n\n  /**\n   * Circuit breaker and budget management\n   */\n  isEndpointAvailable(endpoint) {\n    const breaker = this.circuitBreakers[endpoint];\n    const currentTime = Date.now();\n\n    // Check circuit breaker state\n    if (breaker.state === \"OPEN\") {\n      if (\n        currentTime - breaker.lastFailureTime >\n        this.config.recoveryTimeoutMs\n      ) {\n        breaker.state = \"HALF_OPEN\";\n        console.log(`🔄 ${endpoint} circuit breaker: HALF_OPEN`);\n        return true;\n      }\n      return false;\n    }\n\n    return true;\n  }\n\n  canMakeRequest(endpoint) {\n    // Check budget\n    if (this.stats.totalCost >= this.config.maxDailyCost) {\n      console.warn(`💰 Daily budget exceeded: $${this.stats.totalCost}`);\n      return false;\n    }\n\n    // Check endpoint-specific cost\n    const estimatedCost = this.config.costs[endpoint] || 0;\n    if (this.stats.totalCost + estimatedCost > this.config.maxDailyCost) {\n      console.warn(`💰 Endpoint ${endpoint} would exceed budget`);\n      return false;\n    }\n\n    return this.isEndpointAvailable(endpoint);\n  }\n\n  recordEndpointSuccess(endpoint) {\n    const breaker = this.circuitBreakers[endpoint];\n\n    if (breaker.state === \"HALF_OPEN\") {\n      breaker.successCount++;\n      if (breaker.successCount >= 2) {\n        breaker.state = \"CLOSED\";\n        breaker.failures = 0;\n        console.log(`✅ ${endpoint} circuit breaker: CLOSED (recovered)`);\n      }\n    } else {\n      breaker.failures = Math.max(0, breaker.failures - 1);\n    }\n\n    this.stats.endpointUsage[endpoint]++;\n  }\n\n  recordEndpointFailure(endpoint, error) {\n    const breaker = this.circuitBreakers[endpoint];\n    breaker.failures++;\n    breaker.lastFailureTime = Date.now();\n\n    if (breaker.failures >= this.config.circuitBreakerThreshold) {\n      breaker.state = \"OPEN\";\n      console.error(\n        `🚫 ${endpoint} circuit breaker: OPEN (${breaker.failures} failures)`\n      );\n    }\n  }\n\n  /**\n   * Business intelligence and scoring\n   */\n  calculateComprehensiveConfidence(result) {\n    let score = 0;\n    let factors = 0;\n\n    // Email quality and quantity\n    if (result.emails.length > 0) {\n      const avgEmailConfidence =\n        result.emails.reduce(\n          (sum, email) => sum + (email.confidence || 50),\n          0\n        ) / result.emails.length;\n      score += avgEmailConfidence * 0.4;\n      factors += 0.4;\n    }\n\n    // Company enrichment data quality\n    if (result.companyData) {\n      let companyScore = 0;\n      if (result.companyData.phone) companyScore += 25;\n      if (result.companyData.industry) companyScore += 20;\n      if (result.companyData.employees) companyScore += 15;\n      if (result.companyData.description) companyScore += 10;\n      if (result.companyData.founded_year) companyScore += 10;\n\n      score += companyScore * 0.3;\n      factors += 0.3;\n    }\n\n    // Person enrichment data quality\n    if (result.personData.length > 0) {\n      let personScore = 0;\n      result.personData.forEach((person) => {\n        if (person.employment?.title) personScore += 15;\n        if (person.phone) personScore += 20;\n        if (person.social_profiles?.linkedin) personScore += 10;\n      });\n\n      score += Math.min(100, personScore) * 0.2;\n      factors += 0.2;\n    }\n\n    // Email verification quality\n    const verifiedEmails = result.emails.filter(\n      (email) => email.verification?.status === \"valid\"\n    );\n    if (verifiedEmails.length > 0) {\n      score += (verifiedEmails.length / result.emails.length) * 100 * 0.1;\n      factors += 0.1;\n    }\n\n    return factors > 0 ? Math.round(score / factors) : 0;\n  }\n\n  /**\n   * Utility functions\n   */\n  enhanceBusinessWithCompanyData(businessData, companyData) {\n    businessData.enriched_company_data = companyData;\n\n    // Update business data with enriched information\n    if (!businessData.phone && companyData.phone) {\n      businessData.phone = companyData.phone;\n    }\n    if (!businessData.industry && companyData.industry) {\n      businessData.industry = companyData.industry;\n    }\n    if (!businessData.employee_count && companyData.employees) {\n      businessData.employee_count = companyData.employees;\n    }\n  }\n\n  getTargetDepartments(industry) {\n    const departmentMap = {\n      technology: \"it,executive\",\n      healthcare: \"health,executive\",\n      finance: \"finance,executive\",\n      retail: \"sales,marketing,executive\",\n      manufacturing: \"operations,executive\",\n      \"real estate\": \"sales,executive\",\n      legal: \"legal,executive\",\n    };\n\n    return departmentMap[industry.toLowerCase()] || \"executive,management\";\n  }\n\n  getHeadcountRange(employees) {\n    if (!employees) return [\"1-10\", \"11-50\"];\n\n    const ranges = {\n      \"1-10\": [\"1-10\"],\n      \"11-50\": [\"11-50\"],\n      \"51-200\": [\"51-200\"],\n      \"201-500\": [\"201-500\"],\n      \"501-1000\": [\"501-1000\"],\n      \"1001-5000\": [\"1001-5000\"],\n      \"5001-10000\": [\"5001-10000\"],\n      \"10K-50K\": [\"5001-10000\", \"10001+\"],\n    };\n\n    return ranges[employees] || [\"11-50\", \"51-200\"];\n  }\n\n  extractCity(location) {\n    // Simple city extraction - enhance as needed\n    return location.split(\",\")[0].trim();\n  }\n\n  prioritizeEmailsForVerification(emails) {\n    return emails.sort((a, b) => {\n      // Priority: personal > professional > generic\n      const typeScore = { personal: 3, professional: 2, generic: 1 };\n      const aScore = (typeScore[a.type] || 1) * (a.confidence || 50);\n      const bScore = (typeScore[b.type] || 1) * (b.confidence || 50);\n      return bScore - aScore;\n    });\n  }\n\n  getTopPriorityEmail(emails) {\n    if (!emails || emails.length === 0) return null;\n\n    // Find highest confidence email with verification\n    const verifiedEmails = emails.filter(\n      (email) => email.verification?.status === \"valid\"\n    );\n    if (verifiedEmails.length > 0) {\n      return verifiedEmails.sort(\n        (a, b) => (b.confidence || 0) - (a.confidence || 0)\n      )[0];\n    }\n\n    // Return highest confidence email\n    return emails.sort((a, b) => (b.confidence || 0) - (a.confidence || 0))[0];\n  }\n\n  combineConfidenceScores(emailScore, verificationScore) {\n    // Weighted combination: 60% email discovery confidence, 40% verification score\n    return Math.round(emailScore * 0.6 + verificationScore * 0.4);\n  }\n\n  updateStats(result) {\n    this.stats.totalCost += result.total_cost;\n    this.stats.totalRequests++;\n    this.stats.emailsDiscovered += result.emails.length;\n\n    if (result.companyData) this.stats.companiesEnriched++;\n    if (result.personData.length > 0)\n      this.stats.personsEnriched += result.personData.length;\n  }\n\n  // Inherited utility functions\n  extractDomain(website) {\n    if (!website) return null;\n    try {\n      const url = website.startsWith(\"http\") ? website : `https://${website}`;\n      return new URL(url).hostname.replace(\"www.\", \"\");\n    } catch {\n      return null;\n    }\n  }\n\n  isInvalidDomain(domain) {\n    const invalidPatterns = [\n      \"localhost\",\n      \"127.0.0.1\",\n      \"example.com\",\n      \"test.com\",\n      \"facebook.com\",\n      \"instagram.com\",\n      \"twitter.com\",\n      \"linkedin.com\",\n    ];\n    return (\n      !domain || invalidPatterns.some((pattern) => domain.includes(pattern))\n    );\n  }\n\n  processEmailResults(emails) {\n    if (!emails || !Array.isArray(emails)) return [];\n\n    return emails\n      .filter((email) => email?.value && this.isValidEmailFormat(email.value))\n      .map((email) => ({\n        value: email.value,\n        type: email.type || \"professional\",\n        confidence: email.confidence || 50,\n        sources: email.sources?.map((s) => s.domain) || [\"hunter_io\"],\n        first_name: email.first_name,\n        last_name: email.last_name,\n        position: email.position,\n        department: email.department,\n        seniority: email.seniority,\n        linkedin: email.linkedin,\n        phone_number: email.phone_number,\n        verification: email.verification,\n      }))\n      .sort((a, b) => (b.confidence || 0) - (a.confidence || 0));\n  }\n\n  isValidEmailFormat(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  isDuplicateEmail(newEmail, existingEmails) {\n    return existingEmails.some(\n      (existing) =>\n        existing.value.toLowerCase() === newEmail.value.toLowerCase()\n    );\n  }\n\n  delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  async verifyEmail(email) {\n    try {\n      const response = await this.makeApiRequest(\"GET\", \"email-verifier\", {\n        email,\n      });\n\n      if (response.data) {\n        this.recordEndpointSuccess(\"emailVerifier\");\n\n        return {\n          status: response.data.status,\n          result: response.data.result,\n          score: response.data.score || 0,\n          deliverable: response.data.result === \"deliverable\",\n          mx_records: response.data.mx_records,\n          smtp_check: response.data.smtp_check,\n          disposable: response.data.disposable,\n          webmail: response.data.webmail,\n        };\n      }\n\n      return null;\n    } catch (error) {\n      this.recordEndpointFailure(\"emailVerifier\", error);\n      throw error;\n    }\n  }\n\n  async findPersonEmail(domain, fullName) {\n    if (!this.isEndpointAvailable(\"emailFinder\")) return null;\n\n    const nameParts = fullName.trim().split(/\\s+/);\n    const firstName = nameParts[0];\n    const lastName = nameParts[nameParts.length - 1];\n\n    if (!firstName || !lastName) return null;\n\n    try {\n      const response = await this.makeApiRequest(\"GET\", \"email-finder\", {\n        domain,\n        first_name: firstName,\n        last_name: lastName,\n      });\n\n      if (response.data?.email) {\n        this.recordEndpointSuccess(\"emailFinder\");\n\n        return {\n          value: response.data.email,\n          type: \"personal\",\n          confidence: response.data.score || 75,\n          sources: [\"hunter_io_finder\"],\n          first_name: response.data.first_name,\n          last_name: response.data.last_name,\n          position: response.data.position,\n        };\n      }\n\n      return null;\n    } catch (error) {\n      this.recordEndpointFailure(\"emailFinder\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get comprehensive performance statistics\n   */\n  getComprehensiveStats() {\n    const totalEndpointCalls = Object.values(this.stats.endpointUsage).reduce(\n      (sum, count) => sum + count,\n      0\n    );\n\n    return {\n      ...this.stats,\n      averageCostPerRequest:\n        this.stats.totalRequests > 0\n          ? (this.stats.totalCost / this.stats.totalRequests).toFixed(3)\n          : \"0.000\",\n      averageEmailsPerRequest:\n        this.stats.totalRequests > 0\n          ? (this.stats.emailsDiscovered / this.stats.totalRequests).toFixed(1)\n          : \"0.0\",\n      endpointUtilization: this.stats.endpointUsage,\n      circuitBreakerStatus: Object.keys(this.circuitBreakers).reduce(\n        (status, endpoint) => {\n          status[endpoint] = this.circuitBreakers[endpoint].state;\n          return status;\n        },\n        {}\n      ),\n      budgetUtilization: `${(\n        (this.stats.totalCost / this.config.maxDailyCost) *\n        100\n      ).toFixed(1)}%`,\n      remainingBudget: `$${(\n        this.config.maxDailyCost - this.stats.totalCost\n      ).toFixed(2)}`,\n    };\n  }\n}\n\nmodule.exports = ComprehensiveHunterClient;\n"}}},
{"type":"measure","name":"lsp.did_open","count":58,"duration":10.776},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":476,"duration":0.176},
{"type":"mark","name":"lsp.did_open","count":59,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\n\n/**\n * ProspectPro v4.3 - Advanced Enrichment Orchestrator Edge Function\n * Coordinates all enrichment services with intelligent routing and cost optimization\n *\n * Progressive Enrichment Waterfall:\n * 1. Free Validation (Google Places, basic checks) - $0.00\n * 2. Business License Lookup (professional validation) - $0.03\n * 3. Company Enrichment (PeopleDataLabs) - $0.05-$0.10\n * 4. Hunter.io Email Discovery (domain search, email finder) - $0.034\n * 5. NeverBounce Email Verification (validate discovered emails) - $0.008\n * 6. Person Enrichment (PeopleDataLabs executives) - $0.20-$0.28\n * 7. Apollo Enrichment (optional, premium contacts) - $1.00\n * 8. Compliance Verification (FINRA, specialized) - $0.40-$1.25\n *\n * Cost Optimization: 81% cheaper than Apollo ($0.19 vs $1.00 average)\n * Industry Routing: Financial services → FINRA (99.6% savings)\n *\n * Features:\n * - Progressive enrichment waterfall with cost controls\n * - Industry-specific routing (healthcare, financial, legal)\n * - Circuit breaker pattern for fault tolerance\n * - 90-day intelligent caching for cost efficiency\n * - Budget constraints with early termination\n * - Confidence scoring and quality thresholds\n */\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface EnrichmentRequest {\n  businessName: string;\n  domain?: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  industry?: string;\n  state?: string;\n\n  // Progressive enrichment options\n  includeBusinessLicense?: boolean;\n  includeCompanyEnrichment?: boolean;\n  discoverEmails?: boolean;\n  verifyEmails?: boolean;\n  includePersonEnrichment?: boolean;\n  apolloEnrichment?: boolean;\n  complianceVerification?: boolean;\n\n  // Control parameters\n  maxCostPerBusiness?: number;\n  minConfidenceScore?: number;\n  tier?: \"starter\" | \"professional\" | \"enterprise\" | \"compliance\";\n  executiveContactsOnly?: boolean;\n}\n\ninterface EnrichmentResponse {\n  success: boolean;\n  businessName: string;\n  originalData: {\n    domain?: string;\n    address?: string;\n    phone?: string;\n    website?: string;\n  };\n  enrichedData: {\n    emails?: Array<{\n      email: string;\n      confidence: number;\n      verified: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    businessLicense?: {\n      isValid: boolean;\n      licenseNumber?: string;\n      status?: string;\n      expirationDate?: string;\n      professionalType?: string;\n      source: string;\n    };\n    companyInfo?: {\n      name?: string;\n      industry?: string;\n      size?: string;\n      founded?: number;\n      revenue?: string;\n      website?: string;\n      description?: string;\n      source: string;\n    };\n    executiveContacts?: Array<{\n      name: string;\n      title: string;\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n    }>;\n    personEnrichment?: Array<{\n      name: string;\n      title: string;\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n      confidence: number;\n    }>;\n    complianceData?: {\n      finraCheck?: boolean;\n      sanctionsCheck?: boolean;\n      riskScore?: number;\n      findings?: Array<{\n        type: string;\n        description: string;\n        severity: string;\n      }>;\n    };\n  };\n  confidenceScore: number;\n  totalCost: number;\n  costBreakdown: {\n    businessLicenseCost: number;\n    companyEnrichmentCost: number;\n    hunterCost: number;\n    neverBounceCost: number;\n    personEnrichmentCost: number;\n    apolloCost: number;\n    complianceCost: number;\n  };\n  processingMetadata: {\n    servicesUsed: string[];\n    servicesSkipped: string[];\n    processingTime: number;\n    errors: Array<{\n      service: string;\n      error: string;\n    }>;\n  };\n}\n\nclass EnrichmentOrchestrator {\n  private supabaseUrl: string;\n  private supabaseKey: string;\n  private maxCostPerBusiness: number;\n\n  constructor(\n    supabaseUrl: string,\n    supabaseKey: string,\n    maxCostPerBusiness = 2.0\n  ) {\n    this.supabaseUrl = supabaseUrl;\n    this.supabaseKey = supabaseKey;\n    this.maxCostPerBusiness = maxCostPerBusiness;\n  }\n\n  /**\n   * Orchestrate all enrichment services for a single business\n   */\n  async enrichBusiness(\n    request: EnrichmentRequest\n  ): Promise<EnrichmentResponse> {\n    const startTime = Date.now();\n\n    const response: EnrichmentResponse = {\n      success: false,\n      businessName: request.businessName,\n      originalData: {\n        domain: request.domain,\n        address: request.address,\n        phone: request.phone,\n        website: request.website,\n      },\n      enrichedData: {},\n      confidenceScore: 0,\n      totalCost: 0,\n      costBreakdown: {\n        businessLicenseCost: 0,\n        companyEnrichmentCost: 0,\n        hunterCost: 0,\n        neverBounceCost: 0,\n        personEnrichmentCost: 0,\n        apolloCost: 0,\n        complianceCost: 0,\n      },\n      processingMetadata: {\n        servicesUsed: [],\n        servicesSkipped: [],\n        processingTime: 0,\n        errors: [],\n      },\n    };\n\n    let currentCost = 0;\n\n    try {\n      // Apply tier-based defaults\n      const tierDefaults = this.getTierDefaults(request.tier || \"professional\");\n      const enrichmentConfig = { ...tierDefaults, ...request };\n\n      // Progressive Enrichment Waterfall - Stage 1: Business License Validation ($0.03)\n      if (\n        enrichmentConfig.includeBusinessLicense &&\n        request.businessName &&\n        request.state\n      ) {\n        try {\n          console.log(\n            `🏛️ Stage 1: Business License Lookup for ${request.businessName} in ${request.state}`\n          );\n\n          const licenseResult = await this.callBusinessLicense({\n            action: \"searchCompany\",\n            companyName: request.businessName,\n            state: request.state,\n          });\n\n          if (licenseResult.success && licenseResult.data) {\n            response.enrichedData.businessLicense = {\n              isValid: licenseResult.data.isValid || false,\n              licenseNumber: licenseResult.data.licenseNumber,\n              status: licenseResult.data.status,\n              source: \"business_license_lookup\",\n            };\n\n            response.costBreakdown.businessLicenseCost =\n              licenseResult.cost || 0.03;\n            currentCost += response.costBreakdown.businessLicenseCost;\n            response.processingMetadata.servicesUsed.push(\"business_license\");\n\n            console.log(\n              `✅ Business license validated: ${\n                licenseResult.data.isValid ? \"Valid\" : \"Not found\"\n              }`\n            );\n          }\n        } catch (error) {\n          console.error(\"Business License Lookup error:\", error);\n          response.processingMetadata.errors.push({\n            service: \"business_license\",\n            error: error instanceof Error ? error.message : \"Unknown error\",\n          });\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 2: Company Enrichment ($0.05-$0.10)\n      if (\n        enrichmentConfig.includeCompanyEnrichment &&\n        (request.businessName || request.website)\n      ) {\n        const companyEnrichmentCost = 0.1;\n\n        if (currentCost + companyEnrichmentCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`🏢 Stage 2: Company Enrichment via PeopleDataLabs`);\n\n            const companyParams: Record<string, unknown> = {\n              action: \"enrichCompany\",\n            };\n\n            if (request.website) {\n              companyParams.website = request.website;\n            } else if (request.businessName) {\n              companyParams.companyName = request.businessName;\n            }\n\n            const companyResult = await this.callPeopleDataLabs(companyParams);\n\n            if (companyResult.success && companyResult.data) {\n              response.enrichedData.companyInfo = {\n                name: companyResult.data.name,\n                industry: companyResult.data.industry,\n                size: companyResult.data.size,\n                founded: companyResult.data.founded,\n                revenue: companyResult.data.revenue,\n                description: companyResult.data.description,\n                source: \"peopledatalabs\",\n              };\n\n              response.costBreakdown.companyEnrichmentCost =\n                companyResult.cost || companyEnrichmentCost;\n              currentCost += response.costBreakdown.companyEnrichmentCost;\n              response.processingMetadata.servicesUsed.push(\n                \"peopledatalabs_company\"\n              );\n\n              console.log(\n                `✅ Company enriched: ${\n                  companyResult.data.name || \"Data retrieved\"\n                }`\n              );\n            }\n          } catch (error) {\n            console.error(\"Company enrichment error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"peopledatalabs_company\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping company enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"peopledatalabs_company (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 3: Email Discovery ($0.034)\n      if (enrichmentConfig.discoverEmails && request.domain) {\n        const emailDiscoveryCost = 0.034;\n\n        if (currentCost + emailDiscoveryCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(\n              `📧 Stage 3: Email Discovery for ${request.domain} via Hunter.io`\n            );\n\n            const hunterResult = await this.callHunterIO({\n              action: \"domain-search\",\n              domain: request.domain,\n              limit: 10,\n            });\n\n            if (hunterResult.success && hunterResult.data?.emails) {\n              response.enrichedData.emails = hunterResult.data.emails;\n              response.costBreakdown.hunterCost =\n                hunterResult.cost || emailDiscoveryCost;\n              currentCost += response.costBreakdown.hunterCost;\n              response.processingMetadata.servicesUsed.push(\"hunter_io\");\n\n              console.log(\n                `✅ Found ${hunterResult.data.emails.length} emails via Hunter.io`\n              );\n            }\n          } catch (error) {\n            console.error(\"Hunter.io error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"hunter_io\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping email discovery - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"hunter_io (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 4: Email Verification ($0.008 per email)\n      if (\n        enrichmentConfig.verifyEmails &&\n        response.enrichedData.emails &&\n        response.enrichedData.emails.length > 0\n      ) {\n        const emailVerificationCost =\n          response.enrichedData.emails.length * 0.008;\n\n        if (currentCost + emailVerificationCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(\n              `✅ Stage 4: Verifying ${response.enrichedData.emails.length} emails via NeverBounce`\n            );\n\n            const emailsToVerify = response.enrichedData.emails.map(\n              (e) => e.email\n            );\n            const neverBounceResult = await this.callNeverBounce({\n              action: \"verify-batch\",\n              emails: emailsToVerify,\n            });\n\n            if (neverBounceResult.success && neverBounceResult.data?.results) {\n              response.enrichedData.emails = response.enrichedData.emails.map(\n                (email) => {\n                  const verification = neverBounceResult.data?.results.find(\n                    (r: { email: string }) => r.email === email.email\n                  );\n\n                  return {\n                    ...email,\n                    verified: verification?.result === \"valid\",\n                    verificationResult: verification?.result,\n                  };\n                }\n              );\n\n              response.costBreakdown.neverBounceCost =\n                neverBounceResult.cost || emailVerificationCost;\n              currentCost += response.costBreakdown.neverBounceCost;\n              response.processingMetadata.servicesUsed.push(\"neverbounce\");\n\n              const verifiedCount = response.enrichedData.emails.filter(\n                (e) => e.verified\n              ).length;\n              console.log(\n                `✅ Verified ${verifiedCount}/${response.enrichedData.emails.length} emails`\n              );\n            }\n          } catch (error) {\n            console.error(\"NeverBounce error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"neverbounce\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping email verification - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"neverbounce (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 5: Person Enrichment ($0.20-$0.28)\n      if (enrichmentConfig.includePersonEnrichment && request.businessName) {\n        const personEnrichmentCost = 0.28;\n\n        if (currentCost + personEnrichmentCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`� Stage 5: Person Enrichment for executives`);\n\n            const personResult = await this.callPeopleDataLabs({\n              action: \"searchPerson\",\n              companyName: request.businessName,\n              jobTitle: \"CEO OR Owner OR President OR Director\",\n              minLikelihood: 7,\n            });\n            if (personResult.success && personResult.data?.results) {\n              response.enrichedData.personEnrichment =\n                personResult.data.results.map((person: any) => ({\n                  name: person.name,\n                  title: person.title,\n                  email: person.email,\n                  phone: person.phone,\n                  linkedin: person.linkedin,\n                  confidence: person.likelihood,\n                }));\n\n              response.costBreakdown.personEnrichmentCost =\n                personResult.cost || personEnrichmentCost;\n              currentCost += response.costBreakdown.personEnrichmentCost;\n              response.processingMetadata.servicesUsed.push(\n                \"peopledatalabs_person\"\n              );\n\n              console.log(\n                `✅ Found ${response.enrichedData.personEnrichment.length} executive contacts`\n              );\n            }\n          } catch (error) {\n            console.error(\"Person enrichment error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"peopledatalabs_person\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping person enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"peopledatalabs_person (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 6: Apollo Premium ($1.00)\n      if (enrichmentConfig.apolloEnrichment && request.domain) {\n        const apolloCost = 1.0;\n\n        if (currentCost + apolloCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`� Stage 6: Premium Apollo Enrichment`);\n\n            // Placeholder for Apollo implementation\n            await new Promise((resolve) => setTimeout(resolve, 100));\n\n            response.enrichedData.executiveContacts = [\n              {\n                name: \"Executive Contact (Apollo)\",\n                title: \"Owner/CEO\",\n                email: `contact@${request.domain}`,\n              },\n            ];\n\n            response.costBreakdown.apolloCost = apolloCost;\n            currentCost += apolloCost;\n            response.processingMetadata.servicesUsed.push(\"apollo\");\n\n            console.log(`✅ Apollo executive contacts retrieved`);\n          } catch (error) {\n            console.error(\"Apollo error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"apollo\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping Apollo enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\"apollo (budget)\");\n        }\n      }\n\n      // Calculate final confidence score and complete response\n      response.confidenceScore = this.calculateConfidenceScore(response);\n      response.totalCost = currentCost;\n      response.success = true;\n      response.processingMetadata.processingTime = Date.now() - startTime;\n\n      console.log(\n        `✅ Progressive enrichment complete: ${\n          response.businessName\n        } - Confidence: ${\n          response.confidenceScore\n        }% - Cost: $${response.totalCost.toFixed(3)}`\n      );\n\n      return response;\n    } catch (error) {\n      console.error(\"Enrichment orchestration error:\", error);\n      response.processingMetadata.processingTime = Date.now() - startTime;\n      response.processingMetadata.errors.push({\n        service: \"orchestrator\",\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      });\n      return response;\n    }\n  }\n\n  /**\n   * Get tier-based enrichment defaults\n   */\n  private getTierDefaults(tier: string) {\n    const tierConfigs = {\n      starter: {\n        includeBusinessLicense: false,\n        includeCompanyEnrichment: false,\n        discoverEmails: true,\n        verifyEmails: false,\n        includePersonEnrichment: false,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 0.5,\n      },\n      professional: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: false,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 1.5,\n      },\n      enterprise: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: true,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 3.5,\n      },\n      compliance: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: true,\n        apolloEnrichment: true,\n        complianceVerification: true,\n        maxCostPerBusiness: 7.5,\n      },\n    };\n\n    return (\n      tierConfigs[tier as keyof typeof tierConfigs] || tierConfigs.professional\n    );\n  }\n\n  /**\n   * Call Business License Lookup Edge Function\n   */\n  private async callBusinessLicense(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-business-license`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Call PeopleDataLabs Edge Function\n   */\n  private async callPeopleDataLabs(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-pdl`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Call Hunter.io Edge Function\n   */\n  private async callHunterIO(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-hunter`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Call NeverBounce Edge Function\n   */\n  private async callNeverBounce(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-neverbounce`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Calculate confidence score based on enriched data\n   */\n  private calculateConfidenceScore(response: EnrichmentResponse): number {\n    let score = 40; // Base score\n\n    // Business license validation bonus\n    if (response.enrichedData.businessLicense?.isValid) {\n      score += 20;\n    } else if (response.enrichedData.businessLicense) {\n      score += 5; // Attempted validation\n    }\n\n    // Company enrichment bonus\n    if (response.enrichedData.companyInfo) {\n      score += 15;\n      // Additional bonus for complete company data\n      if (\n        response.enrichedData.companyInfo.industry &&\n        response.enrichedData.companyInfo.size\n      ) {\n        score += 5;\n      }\n    }\n\n    // Email discovery bonus\n    if (\n      response.enrichedData.emails &&\n      response.enrichedData.emails.length > 0\n    ) {\n      score += 10;\n\n      // Verified emails bonus\n      const verifiedEmails = response.enrichedData.emails.filter(\n        (e) => e.verified\n      );\n      if (verifiedEmails.length > 0) {\n        score += 15;\n      }\n    }\n\n    // Person enrichment bonus\n    if (\n      response.enrichedData.personEnrichment &&\n      response.enrichedData.personEnrichment.length > 0\n    ) {\n      score += 10;\n      // High confidence person data\n      const highConfidencePersons =\n        response.enrichedData.personEnrichment.filter((p) => p.confidence > 8);\n      if (highConfidencePersons.length > 0) {\n        score += 10;\n      }\n    }\n\n    // Executive contacts bonus (Apollo)\n    if (\n      response.enrichedData.executiveContacts &&\n      response.enrichedData.executiveContacts.length > 0\n    ) {\n      score += 5;\n    }\n\n    // Compliance verification bonus\n    if (response.enrichedData.complianceData) {\n      score += 5;\n    }\n\n    return Math.min(score, 100);\n  }\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    console.log(`🎯 Enrichment Orchestrator Edge Function`);\n\n    // Get Supabase credentials\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n\n    if (!supabaseUrl || !supabaseKey) {\n      throw new Error(\"Supabase credentials not configured\");\n    }\n\n    // Parse request\n    const requestData: EnrichmentRequest = await req.json();\n\n    console.log(\n      `📋 Enriching business: ${requestData.businessName} (Domain: ${\n        requestData.domain || \"N/A\"\n      })`\n    );\n\n    // Initialize orchestrator\n    const orchestrator = new EnrichmentOrchestrator(\n      supabaseUrl,\n      supabaseKey,\n      requestData.maxCostPerBusiness || 2.0\n    );\n\n    // Enrich business\n    const result = await orchestrator.enrichBusiness(requestData);\n\n    return new Response(\n      JSON.stringify({\n        ...result,\n        timestamp: new Date().toISOString(),\n        version: \"1.0\",\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Orchestrator error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":59,"duration":8.059},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":477,"duration":0.557},
{"type":"mark","name":"lsp.did_open","count":60,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/07-enhanced-monitoring-schema.sql","languageId":"sql","version":1,"text":"-- ============================================================================\n-- ProspectPro Enhanced Monitoring & Business Intelligence Schema\n-- Phase 7: Comprehensive tracking for new API sources, cost optimization, and quality metrics\n-- ============================================================================\n-- This script creates enhanced monitoring tables for:\n-- - New API sources (Yelp Fusion, Chamber directories, Government APIs)\n-- - Real-time cost tracking and budget management\n-- - Quality scoring and validation success metrics\n-- - Business intelligence and ROI analytics\n-- ============================================================================\n-- Phase 7.1: Enhanced API Source Tracking\n-- ============================================================================\n-- Track all available API data sources and their configurations\nCREATE TABLE IF NOT EXISTS api_data_sources (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- Source identification\n    source_name TEXT NOT NULL UNIQUE,\n    -- 'yelp_fusion', 'chamber_directory', 'google_places', 'state_registry', etc.\n    source_type TEXT NOT NULL,\n    -- 'discovery', 'enrichment', 'validation', 'verification'\n    provider_name TEXT NOT NULL,\n    -- 'Yelp', 'Google', 'California SOS', 'Chamber of Commerce'\n    -- API configuration\n    base_url TEXT,\n    api_version TEXT,\n    requires_auth BOOLEAN DEFAULT true,\n    auth_type TEXT,\n    -- 'api_key', 'oauth', 'none'\n    -- Cost structure\n    cost_per_request DECIMAL(10, 4) DEFAULT 0.0000,\n    cost_model TEXT DEFAULT 'per_request',\n    -- 'per_request', 'per_result', 'monthly_quota'\n    free_tier_limit INTEGER DEFAULT 0,\n    -- Quality and reliability metrics\n    quality_score INTEGER DEFAULT 50,\n    -- 0-100, based on data accuracy\n    reliability_score INTEGER DEFAULT 50,\n    -- 0-100, based on uptime/success rate\n    data_freshness_hours INTEGER DEFAULT 24,\n    -- How fresh the data typically is\n    -- Business value\n    priority_level INTEGER DEFAULT 5,\n    -- 1-10, higher = more important\n    business_value TEXT,\n    -- Description of what this source provides\n    -- Status\n    is_active BOOLEAN DEFAULT true,\n    last_health_check TIMESTAMP WITH TIME ZONE,\n    health_status TEXT DEFAULT 'unknown' -- 'healthy', 'degraded', 'unhealthy', 'unknown'\n);\n-- Enhanced API usage tracking with detailed cost attribution\nCREATE TABLE IF NOT EXISTS enhanced_api_usage (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- Request identification\n    campaign_id UUID REFERENCES campaigns(id),\n    session_id TEXT,\n    request_id TEXT,\n    -- API source details\n    source_id UUID REFERENCES api_data_sources(id),\n    source_name TEXT NOT NULL,\n    endpoint TEXT,\n    http_method TEXT DEFAULT 'GET',\n    -- Request details\n    request_params JSONB,\n    query_type TEXT,\n    -- 'discovery', 'enrichment', 'validation'\n    business_query TEXT,\n    location_query TEXT,\n    -- Response details\n    response_code INTEGER,\n    response_time_ms INTEGER,\n    results_returned INTEGER DEFAULT 0,\n    success BOOLEAN DEFAULT false,\n    error_message TEXT,\n    -- Cost tracking\n    estimated_cost DECIMAL(10, 4) DEFAULT 0.0000,\n    actual_cost DECIMAL(10, 4),\n    cost_currency TEXT DEFAULT 'USD',\n    billing_category TEXT,\n    -- 'free_tier', 'paid_usage', 'overage'\n    -- Quality metrics\n    data_quality_score INTEGER,\n    -- 0-100\n    useful_results INTEGER DEFAULT 0,\n    -- Results that passed quality filters\n    -- Performance tracking\n    cache_hit BOOLEAN DEFAULT false,\n    rate_limited BOOLEAN DEFAULT false,\n    retry_count INTEGER DEFAULT 0\n);\n-- Phase 7.2: Lead Quality and Validation Tracking\n-- ============================================================================\n-- Track the 4-stage validation pipeline results\nCREATE TABLE IF NOT EXISTS lead_validation_pipeline (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- Lead identification\n    lead_id UUID REFERENCES enhanced_leads(id),\n    campaign_id UUID REFERENCES campaigns(id),\n    business_name TEXT NOT NULL,\n    -- Stage 1: Pre-validation\n    stage_1_prevalidation JSONB DEFAULT '{}',\n    stage_1_score INTEGER DEFAULT 0,\n    -- 0-100\n    stage_1_passed BOOLEAN DEFAULT false,\n    stage_1_cost DECIMAL(8, 4) DEFAULT 0.0000,\n    -- Stage 2: Registry Validation (Government APIs)\n    stage_2_registry JSONB DEFAULT '{}',\n    stage_2_score INTEGER DEFAULT 0,\n    -- 0-100  \n    stage_2_sources_checked INTEGER DEFAULT 0,\n    stage_2_sources_validated INTEGER DEFAULT 0,\n    stage_2_passed BOOLEAN DEFAULT false,\n    stage_2_cost DECIMAL(8, 4) DEFAULT 0.0000,\n    -- Stage 3: Email Validation\n    stage_3_email JSONB DEFAULT '{}',\n    stage_3_score INTEGER DEFAULT 0,\n    -- 0-100\n    stage_3_emails_found INTEGER DEFAULT 0,\n    stage_3_emails_validated INTEGER DEFAULT 0,\n    stage_3_passed BOOLEAN DEFAULT false,\n    stage_3_cost DECIMAL(8, 4) DEFAULT 0.0000,\n    -- Stage 4: Final Scoring\n    stage_4_final JSONB DEFAULT '{}',\n    stage_4_confidence_score INTEGER DEFAULT 0,\n    -- 0-100\n    stage_4_qualified BOOLEAN DEFAULT false,\n    stage_4_export_ready BOOLEAN DEFAULT false,\n    -- Overall pipeline results\n    total_cost DECIMAL(10, 4) DEFAULT 0.0000,\n    processing_time_seconds INTEGER,\n    final_quality_grade TEXT,\n    -- 'A', 'B', 'C', 'D', 'F'\n    qualification_reasons TEXT [],\n    -- Array of reasons why qualified/disqualified\n    -- Business intelligence\n    data_source_attribution JSONB DEFAULT '{}',\n    -- Which sources contributed what data\n    enrichment_level TEXT DEFAULT 'basic' -- 'basic', 'enhanced', 'premium'\n);\n-- Phase 7.3: Business Intelligence and ROI Tracking\n-- ============================================================================\n-- Campaign performance analytics with ROI calculations\nCREATE TABLE IF NOT EXISTS campaign_analytics (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- Campaign identification\n    campaign_id UUID REFERENCES campaigns(id) UNIQUE,\n    campaign_name TEXT,\n    campaign_date DATE DEFAULT CURRENT_DATE,\n    -- Discovery metrics\n    businesses_discovered INTEGER DEFAULT 0,\n    sources_used INTEGER DEFAULT 0,\n    discovery_cost DECIMAL(10, 4) DEFAULT 0.0000,\n    discovery_time_minutes INTEGER DEFAULT 0,\n    -- Validation metrics\n    businesses_validated INTEGER DEFAULT 0,\n    validation_success_rate DECIMAL(5, 2) DEFAULT 0.00,\n    -- Percentage\n    avg_confidence_score DECIMAL(5, 2) DEFAULT 0.00,\n    validation_cost DECIMAL(10, 4) DEFAULT 0.0000,\n    -- Quality metrics\n    qualified_leads INTEGER DEFAULT 0,\n    qualification_rate DECIMAL(5, 2) DEFAULT 0.00,\n    -- Percentage\n    a_grade_leads INTEGER DEFAULT 0,\n    b_grade_leads INTEGER DEFAULT 0,\n    c_grade_leads INTEGER DEFAULT 0,\n    -- Cost analysis\n    total_cost DECIMAL(10, 4) DEFAULT 0.0000,\n    cost_per_lead DECIMAL(8, 4) DEFAULT 0.0000,\n    cost_per_qualified_lead DECIMAL(8, 4) DEFAULT 0.0000,\n    -- ROI metrics\n    estimated_lead_value DECIMAL(10, 2) DEFAULT 0.00,\n    estimated_roi_percentage DECIMAL(8, 2) DEFAULT 0.00,\n    -- Performance benchmarks\n    processing_speed_leads_per_minute DECIMAL(8, 2) DEFAULT 0.00,\n    api_success_rate DECIMAL(5, 2) DEFAULT 0.00,\n    error_count INTEGER DEFAULT 0,\n    -- Business intelligence\n    top_performing_sources JSONB DEFAULT '[]',\n    cost_optimization_opportunities JSONB DEFAULT '{}',\n    quality_improvement_suggestions JSONB DEFAULT '[]'\n);\n-- Phase 7.4: Budget Management and Cost Controls\n-- ============================================================================\n-- Budget allocation and monitoring\nCREATE TABLE IF NOT EXISTS budget_management (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- Budget period\n    budget_period TEXT NOT NULL,\n    -- 'daily', 'weekly', 'monthly'\n    period_start DATE NOT NULL,\n    period_end DATE NOT NULL,\n    -- Budget allocation\n    total_budget DECIMAL(10, 2) NOT NULL,\n    discovery_budget DECIMAL(10, 2) DEFAULT 0.00,\n    validation_budget DECIMAL(10, 2) DEFAULT 0.00,\n    enrichment_budget DECIMAL(10, 2) DEFAULT 0.00,\n    -- API source budget allocation\n    google_places_budget DECIMAL(8, 2) DEFAULT 0.00,\n    yelp_fusion_budget DECIMAL(8, 2) DEFAULT 0.00,\n    chamber_directory_budget DECIMAL(8, 2) DEFAULT 0.00,\n    email_validation_budget DECIMAL(8, 2) DEFAULT 0.00,\n    government_apis_budget DECIMAL(8, 2) DEFAULT 0.00,\n    -- Current usage\n    total_spent DECIMAL(10, 2) DEFAULT 0.00,\n    discovery_spent DECIMAL(10, 2) DEFAULT 0.00,\n    validation_spent DECIMAL(10, 2) DEFAULT 0.00,\n    enrichment_spent DECIMAL(10, 2) DEFAULT 0.00,\n    -- Utilization metrics\n    budget_utilization_percentage DECIMAL(5, 2) DEFAULT 0.00,\n    projected_overage DECIMAL(10, 2) DEFAULT 0.00,\n    days_remaining_in_period INTEGER,\n    -- Controls and alerts\n    alert_threshold_percentage DECIMAL(5, 2) DEFAULT 75.00,\n    hard_limit_enabled BOOLEAN DEFAULT true,\n    auto_pause_campaigns BOOLEAN DEFAULT false,\n    -- Status\n    is_active BOOLEAN DEFAULT true,\n    last_alert_sent TIMESTAMP WITH TIME ZONE,\n    over_budget BOOLEAN DEFAULT false\n);\n-- Budget alerts and notifications\nCREATE TABLE IF NOT EXISTS budget_alerts (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- Alert identification\n    budget_id UUID REFERENCES budget_management(id),\n    alert_type TEXT NOT NULL,\n    -- 'threshold', 'overage', 'projection', 'daily_limit'\n    severity_level TEXT NOT NULL,\n    -- 'info', 'warning', 'critical'\n    -- Alert details\n    current_spend DECIMAL(10, 2),\n    budget_limit DECIMAL(10, 2),\n    utilization_percentage DECIMAL(5, 2),\n    projected_overage DECIMAL(10, 2),\n    -- Alert message\n    title TEXT NOT NULL,\n    message TEXT NOT NULL,\n    recommended_actions JSONB DEFAULT '[]',\n    -- Status\n    is_acknowledged BOOLEAN DEFAULT false,\n    acknowledged_by TEXT,\n    acknowledged_at TIMESTAMP WITH TIME ZONE,\n    resolved BOOLEAN DEFAULT false\n);\n-- Phase 7.5: System Health and Performance Monitoring\n-- ============================================================================\n-- API health monitoring\nCREATE TABLE IF NOT EXISTS api_health_monitoring (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    -- API source\n    source_id UUID REFERENCES api_data_sources(id),\n    source_name TEXT NOT NULL,\n    -- Health check details\n    check_type TEXT NOT NULL,\n    -- 'automated', 'manual', 'alert_triggered'\n    response_time_ms INTEGER,\n    status_code INTEGER,\n    success BOOLEAN DEFAULT false,\n    -- Performance metrics\n    requests_per_minute INTEGER DEFAULT 0,\n    success_rate_percentage DECIMAL(5, 2) DEFAULT 0.00,\n    error_rate_percentage DECIMAL(5, 2) DEFAULT 0.00,\n    -- Quality metrics\n    data_accuracy_score INTEGER DEFAULT 0,\n    -- 0-100\n    data_completeness_score INTEGER DEFAULT 0,\n    -- 0-100\n    -- Issues and alerts\n    issues_detected JSONB DEFAULT '[]',\n    performance_degraded BOOLEAN DEFAULT false,\n    requires_attention BOOLEAN DEFAULT false,\n    -- Resolution\n    issue_resolved BOOLEAN DEFAULT false,\n    resolution_notes TEXT\n);\n-- System performance aggregates\nCREATE TABLE IF NOT EXISTS system_performance_metrics (\n    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    metric_date DATE DEFAULT CURRENT_DATE,\n    -- Overall system metrics\n    total_api_requests INTEGER DEFAULT 0,\n    successful_requests INTEGER DEFAULT 0,\n    failed_requests INTEGER DEFAULT 0,\n    avg_response_time_ms INTEGER DEFAULT 0,\n    -- Lead processing metrics\n    leads_processed INTEGER DEFAULT 0,\n    leads_qualified INTEGER DEFAULT 0,\n    avg_processing_time_seconds INTEGER DEFAULT 0,\n    -- Cost metrics\n    total_daily_cost DECIMAL(10, 4) DEFAULT 0.0000,\n    cost_per_lead DECIMAL(8, 4) DEFAULT 0.0000,\n    cost_efficiency_score INTEGER DEFAULT 0,\n    -- 0-100\n    -- Quality metrics\n    avg_confidence_score DECIMAL(5, 2) DEFAULT 0.00,\n    data_quality_score INTEGER DEFAULT 0,\n    -- 0-100\n    -- Business metrics\n    campaigns_active INTEGER DEFAULT 0,\n    users_active INTEGER DEFAULT 0,\n    exports_completed INTEGER DEFAULT 0\n);\n-- Phase 7.6: Indexes and Constraints for Performance\n-- ============================================================================\n-- API usage tracking indexes\nCREATE INDEX IF NOT EXISTS idx_enhanced_api_usage_created_at ON enhanced_api_usage(created_at DESC);\nCREATE INDEX IF NOT EXISTS idx_enhanced_api_usage_campaign_id ON enhanced_api_usage(campaign_id);\nCREATE INDEX IF NOT EXISTS idx_enhanced_api_usage_source_name ON enhanced_api_usage(source_name);\nCREATE INDEX IF NOT EXISTS idx_enhanced_api_usage_success ON enhanced_api_usage(success);\n-- Lead validation pipeline indexes\nCREATE INDEX IF NOT EXISTS idx_lead_validation_pipeline_created_at ON lead_validation_pipeline(created_at DESC);\nCREATE INDEX IF NOT EXISTS idx_lead_validation_pipeline_lead_id ON lead_validation_pipeline(lead_id);\nCREATE INDEX IF NOT EXISTS idx_lead_validation_pipeline_qualified ON lead_validation_pipeline(stage_4_qualified);\nCREATE INDEX IF NOT EXISTS idx_lead_validation_pipeline_confidence ON lead_validation_pipeline(stage_4_confidence_score DESC);\n-- Campaign analytics indexes\nCREATE INDEX IF NOT EXISTS idx_campaign_analytics_campaign_date ON campaign_analytics(campaign_date DESC);\n-- Ensure qualification_rate column exists before creating an index (safe for existing DBs)\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'qualification_rate'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS qualification_rate DECIMAL(5, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column campaign_analytics.qualification_rate';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM pg_indexes\n    WHERE schemaname = 'public'\n        AND tablename = 'campaign_analytics'\n        AND indexname = 'idx_campaign_analytics_qualification_rate'\n) THEN EXECUTE 'CREATE INDEX idx_campaign_analytics_qualification_rate ON campaign_analytics(qualification_rate DESC)';\nRAISE NOTICE 'Created index idx_campaign_analytics_qualification_rate';\nEND IF;\nEND $$;\n-- Ensure cost_per_qualified_lead exists before creating an index (safe for existing DBs)\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'cost_per_qualified_lead'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS cost_per_qualified_lead DECIMAL(8, 4) DEFAULT 0.0000;\nRAISE NOTICE 'Added column campaign_analytics.cost_per_qualified_lead';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM pg_indexes\n    WHERE schemaname = 'public'\n        AND tablename = 'campaign_analytics'\n        AND indexname = 'idx_campaign_analytics_cost_per_lead'\n) THEN EXECUTE 'CREATE INDEX idx_campaign_analytics_cost_per_lead ON campaign_analytics(cost_per_qualified_lead)';\nRAISE NOTICE 'Created index idx_campaign_analytics_cost_per_lead';\nEND IF;\nEND $$;\n-- Budget management indexes\nCREATE INDEX IF NOT EXISTS idx_budget_management_period ON budget_management(period_start, period_end);\nCREATE INDEX IF NOT EXISTS idx_budget_management_active ON budget_management(is_active, budget_utilization_percentage);\n-- System performance indexes\nCREATE INDEX IF NOT EXISTS idx_system_performance_metrics_date ON system_performance_metrics(metric_date DESC);\nCREATE INDEX IF NOT EXISTS idx_api_health_monitoring_source_created ON api_health_monitoring(source_name, created_at DESC);\n-- Phase 7.7: Initial Data Population\n-- ============================================================================\n-- Insert known API data sources\n-- Ensure the `api_data_sources` table has the expected columns (safe for older DBs)\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'base_url'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS base_url TEXT;\nRAISE NOTICE 'Added column api_data_sources.base_url';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'cost_per_request'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS cost_per_request DECIMAL(10, 4) DEFAULT 0.0000;\nRAISE NOTICE 'Added column api_data_sources.cost_per_request';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'quality_score'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS quality_score INTEGER DEFAULT 50;\nRAISE NOTICE 'Added column api_data_sources.quality_score';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'reliability_score'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS reliability_score INTEGER DEFAULT 50;\nRAISE NOTICE 'Added column api_data_sources.reliability_score';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'priority_level'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS priority_level INTEGER DEFAULT 5;\nRAISE NOTICE 'Added column api_data_sources.priority_level';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'business_value'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS business_value TEXT;\nRAISE NOTICE 'Added column api_data_sources.business_value';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'is_active'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true;\nRAISE NOTICE 'Added column api_data_sources.is_active';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'updated_at'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT now();\nRAISE NOTICE 'Added column api_data_sources.updated_at';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'created_at'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT now();\nRAISE NOTICE 'Added column api_data_sources.created_at';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'source_name'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS source_name TEXT NOT NULL;\nRAISE NOTICE 'Added column api_data_sources.source_name';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'source_type'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS source_type TEXT;\nRAISE NOTICE 'Added column api_data_sources.source_type';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'provider_name'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS provider_name TEXT;\nRAISE NOTICE 'Added column api_data_sources.provider_name';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'cost_currency'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS cost_currency TEXT DEFAULT 'USD';\nRAISE NOTICE 'Added column api_data_sources.cost_currency';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'api_data_sources'\n        AND column_name = 'auth_type'\n) THEN\nALTER TABLE api_data_sources\nADD COLUMN IF NOT EXISTS auth_type TEXT;\nRAISE NOTICE 'Added column api_data_sources.auth_type';\nEND IF;\nEND $$;\nINSERT INTO api_data_sources (\n        source_name,\n        source_type,\n        provider_name,\n        base_url,\n        cost_per_request,\n        quality_score,\n        reliability_score,\n        priority_level,\n        business_value,\n        is_active\n    )\nVALUES (\n        'google_places',\n        'discovery',\n        'Google',\n        'https://maps.googleapis.com/maps/api/place',\n        0.0320,\n        85,\n        95,\n        10,\n        'Primary business discovery and location data',\n        true\n    ),\n    (\n        'yelp_fusion',\n        'discovery',\n        'Yelp',\n        'https://api.yelp.com/v3',\n        0.0000,\n        80,\n        90,\n        9,\n        'Business reviews, photos, and enhanced details',\n        true\n    ),\n    (\n        'chamber_directory',\n        'enrichment',\n        'Chamber of Commerce',\n        NULL,\n        0.0000,\n        75,\n        80,\n        8,\n        'Local business membership and networking data',\n        true\n    ),\n    (\n        'california_sos',\n        'validation',\n        'California Secretary of State',\n        'https://bizfileonline.sos.ca.gov',\n        0.0000,\n        90,\n        85,\n        9,\n        'Official business registration validation',\n        true\n    ),\n    (\n        'newyork_sos',\n        'validation',\n        'New York Secretary of State',\n        'https://data.ny.gov',\n        0.0000,\n        85,\n        80,\n        8,\n        'NY business entity verification',\n        true\n    ),\n    (\n        'zerobounce',\n        'verification',\n        'ZeroBounce',\n        'https://api.zerobounce.net/v2',\n        0.0080,\n        95,\n        95,\n        9,\n        'Email deliverability validation',\n        true\n    ),\n    (\n        'hunter_io',\n        'enrichment',\n        'Hunter.io',\n        'https://api.hunter.io/v2',\n        0.0400,\n        85,\n        90,\n        7,\n        'Email discovery and domain search',\n        true\n    ),\n    (\n        'sec_edgar',\n        'validation',\n        'SEC',\n        'https://data.sec.gov',\n        0.0000,\n        70,\n        75,\n        6,\n        'Public company financial data',\n        true\n    ),\n    (\n        'uspto_trademarks',\n        'validation',\n        'USPTO',\n        'https://developer.uspto.gov',\n        0.0000,\n        65,\n        70,\n        5,\n        'Trademark and intellectual property data',\n        true\n    ) ON CONFLICT (source_name) DO\nUPDATE\nSET updated_at = now(),\n    cost_per_request = EXCLUDED.cost_per_request,\n    quality_score = EXCLUDED.quality_score,\n    reliability_score = EXCLUDED.reliability_score,\n    is_active = EXCLUDED.is_active;\n-- Create initial budget for current month\n-- Ensure budget_management has expected budget allocation columns (safe for older DBs)\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'discovery_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS discovery_budget DECIMAL(10, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.discovery_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'validation_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS validation_budget DECIMAL(10, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.validation_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'enrichment_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS enrichment_budget DECIMAL(10, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.enrichment_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'google_places_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS google_places_budget DECIMAL(8, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.google_places_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'yelp_fusion_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS yelp_fusion_budget DECIMAL(8, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.yelp_fusion_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'email_validation_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS email_validation_budget DECIMAL(8, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.email_validation_budget';\nEND IF;\nEND $$;\n-- Create initial budget for current month\nINSERT INTO budget_management (\n        budget_period,\n        period_start,\n        period_end,\n        total_budget,\n        discovery_budget,\n        validation_budget,\n        enrichment_budget,\n        google_places_budget,\n        yelp_fusion_budget,\n        email_validation_budget,\n        is_active\n    )\nVALUES (\n        'monthly',\n        DATE_TRUNC('month', CURRENT_DATE)::DATE,\n        (\n            DATE_TRUNC('month', CURRENT_DATE) + INTERVAL '1 month' - INTERVAL '1 day'\n        )::DATE,\n        150.00,\n        -- Total monthly budget\n        80.00,\n        -- Discovery (Google Places, Yelp)\n        40.00,\n        -- Validation (Email verification)  \n        30.00,\n        -- Enrichment (Hunter.io, etc.)\n        60.00,\n        -- Google Places allocation\n        0.00,\n        -- Yelp is free\n        30.00,\n        -- Email validation\n        true\n    ) ON CONFLICT DO NOTHING;\n-- Ensure budget_management has expected budget allocation columns (safe for older DBs)\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'discovery_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS discovery_budget DECIMAL(10, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.discovery_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'validation_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS validation_budget DECIMAL(10, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.validation_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'enrichment_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS enrichment_budget DECIMAL(10, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.enrichment_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'google_places_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS google_places_budget DECIMAL(8, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.google_places_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'yelp_fusion_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS yelp_fusion_budget DECIMAL(8, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.yelp_fusion_budget';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'budget_management'\n        AND column_name = 'email_validation_budget'\n) THEN\nALTER TABLE budget_management\nADD COLUMN IF NOT EXISTS email_validation_budget DECIMAL(8, 2) DEFAULT 0.00;\nRAISE NOTICE 'Added column budget_management.email_validation_budget';\nEND IF;\nEND $$;\n-- Phase 7.8: Functions and Triggers for Automated Updates\n-- ============================================================================\n-- Function to update API usage costs in campaign analytics\n-- Ensure `campaign_analytics` has columns used by trigger functions (safe for older DBs)\nDO $$\nDECLARE dup_campaign RECORD;\nBEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'campaign_name'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS campaign_name TEXT;\nRAISE NOTICE 'Added column campaign_analytics.campaign_name';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'updated_at'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT now();\nRAISE NOTICE 'Added column campaign_analytics.updated_at';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'total_cost'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS total_cost DECIMAL(10, 4) DEFAULT 0.0000;\nRAISE NOTICE 'Added column campaign_analytics.total_cost';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'businesses_discovered'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS businesses_discovered INTEGER DEFAULT 0;\nRAISE NOTICE 'Added column campaign_analytics.businesses_discovered';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'discovery_cost'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS discovery_cost DECIMAL(10, 4) DEFAULT 0.0000;\nRAISE NOTICE 'Added column campaign_analytics.discovery_cost';\nEND IF;\nIF NOT EXISTS (\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema = 'public'\n        AND table_name = 'campaign_analytics'\n        AND column_name = 'validation_cost'\n) THEN\nALTER TABLE campaign_analytics\nADD COLUMN IF NOT EXISTS validation_cost DECIMAL(10, 4) DEFAULT 0.0000;\nRAISE NOTICE 'Added column campaign_analytics.validation_cost';\nEND IF;\n-- Create a unique index on campaign_id to support ON CONFLICT (campaign_id) UPSERTs if safe\nIF NOT EXISTS (\n    SELECT 1\n    FROM pg_indexes\n    WHERE schemaname = 'public'\n        AND tablename = 'campaign_analytics'\n        AND indexname = 'ux_campaign_analytics_campaign_id'\n) THEN\nSELECT campaign_id INTO dup_campaign\nFROM campaign_analytics\nGROUP BY campaign_id\nHAVING COUNT(*) > 1\nLIMIT 1;\nIF FOUND THEN RAISE NOTICE 'Skipping creation of unique index ux_campaign_analytics_campaign_id because duplicate campaign_id values exist';\nELSE EXECUTE 'CREATE UNIQUE INDEX ux_campaign_analytics_campaign_id ON campaign_analytics(campaign_id)';\nRAISE NOTICE 'Created unique index ux_campaign_analytics_campaign_id';\nEND IF;\nEND IF;\nEND $$;\nCREATE OR REPLACE FUNCTION update_campaign_analytics() RETURNS TRIGGER AS $$ BEGIN -- Update campaign analytics when new API usage is recorded\nINSERT INTO campaign_analytics (campaign_id, campaign_name)\nSELECT NEW.campaign_id,\n    c.campaign_name\nFROM campaigns c\nWHERE c.id = NEW.campaign_id ON CONFLICT (campaign_id) DO\nUPDATE\nSET updated_at = now(),\n    total_cost = campaign_analytics.total_cost + NEW.actual_cost,\n    businesses_discovered = CASE\n        WHEN NEW.source_name IN ('google_places', 'yelp_fusion') THEN campaign_analytics.businesses_discovered + NEW.results_returned\n        ELSE campaign_analytics.businesses_discovered\n    END,\n    validation_cost = CASE\n        WHEN NEW.source_name IN ('zerobounce', 'hunter_io') THEN campaign_analytics.validation_cost + NEW.actual_cost\n        ELSE campaign_analytics.validation_cost\n    END,\n    discovery_cost = CASE\n        WHEN NEW.source_name IN ('google_places', 'yelp_fusion') THEN campaign_analytics.discovery_cost + NEW.actual_cost\n        ELSE campaign_analytics.discovery_cost\n    END;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n-- Trigger to automatically update analytics\nCREATE TRIGGER trigger_update_campaign_analytics\nAFTER\nINSERT ON enhanced_api_usage FOR EACH ROW EXECUTE FUNCTION update_campaign_analytics();\n-- Function to check and create budget alerts\nCREATE OR REPLACE FUNCTION check_budget_alerts() RETURNS TRIGGER AS $$\nDECLARE budget_record RECORD;\nutilization_pct DECIMAL(5, 2);\nBEGIN -- Get active budget for current period\nSELECT * INTO budget_record\nFROM budget_management\nWHERE is_active = true\n    AND CURRENT_DATE BETWEEN period_start AND period_end\nLIMIT 1;\nIF budget_record.id IS NOT NULL THEN -- Calculate current utilization\nutilization_pct = (\n    budget_record.total_spent / budget_record.total_budget\n) * 100;\n-- Create alert if threshold exceeded\nIF utilization_pct >= budget_record.alert_threshold_percentage THEN\nINSERT INTO budget_alerts (\n        budget_id,\n        alert_type,\n        severity_level,\n        current_spend,\n        budget_limit,\n        utilization_percentage,\n        title,\n        message\n    )\nVALUES (\n        budget_record.id,\n        'threshold',\n        CASE\n            WHEN utilization_pct >= 90 THEN 'critical'\n            ELSE 'warning'\n        END,\n        budget_record.total_spent,\n        budget_record.total_budget,\n        utilization_pct,\n        'Budget Alert: ' || utilization_pct::TEXT || '% Used',\n        'Current spending is ' || budget_record.total_spent::TEXT || ' of ' || budget_record.total_budget::TEXT || ' budget (' || utilization_pct::TEXT || '% utilized)'\n    );\nEND IF;\nEND IF;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n-- ============================================================================\n-- Phase 7.6: Security - Row Level Security (RLS) Configuration\n-- ============================================================================\n-- Enable RLS on all monitoring tables for security\nALTER TABLE api_data_sources ENABLE ROW LEVEL SECURITY;\nALTER TABLE enhanced_api_usage ENABLE ROW LEVEL SECURITY;\nALTER TABLE lead_validation_pipeline ENABLE ROW LEVEL SECURITY;\nALTER TABLE budget_management ENABLE ROW LEVEL SECURITY;\nALTER TABLE budget_alerts ENABLE ROW LEVEL SECURITY;\nALTER TABLE api_health_monitoring ENABLE ROW LEVEL SECURITY;\nALTER TABLE system_performance_metrics ENABLE ROW LEVEL SECURITY;\n-- Create secure RLS policies for service role access (admin operations)\n-- These policies allow the service role to access all monitoring data\n-- Guarded creation of service-role RLS policies (avoid duplicate-policy errors)\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'api_data_sources'\n        AND policyname = 'Service role can access all API data sources'\n) THEN CREATE POLICY \"Service role can access all API data sources\" ON api_data_sources FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all API data sources';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all API data sources';\nEND IF;\nEND $$;\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'enhanced_api_usage'\n        AND policyname = 'Service role can access all enhanced API usage'\n) THEN CREATE POLICY \"Service role can access all enhanced API usage\" ON enhanced_api_usage FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all enhanced API usage';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all enhanced API usage';\nEND IF;\nEND $$;\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'lead_validation_pipeline'\n        AND policyname = 'Service role can access all lead validation data'\n) THEN CREATE POLICY \"Service role can access all lead validation data\" ON lead_validation_pipeline FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all lead validation data';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all lead validation data';\nEND IF;\nEND $$;\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'budget_management'\n        AND policyname = 'Service role can access all budget management'\n) THEN CREATE POLICY \"Service role can access all budget management\" ON budget_management FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all budget management';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all budget management';\nEND IF;\nEND $$;\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'budget_alerts'\n        AND policyname = 'Service role can access all budget alerts'\n) THEN CREATE POLICY \"Service role can access all budget alerts\" ON budget_alerts FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all budget alerts';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all budget alerts';\nEND IF;\nEND $$;\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'api_health_monitoring'\n        AND policyname = 'Service role can access all API health monitoring'\n) THEN CREATE POLICY \"Service role can access all API health monitoring\" ON api_health_monitoring FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all API health monitoring';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all API health monitoring';\nEND IF;\nEND $$;\nDO $$ BEGIN IF NOT EXISTS (\n    SELECT 1\n    FROM pg_policies\n    WHERE schemaname = 'public'\n        AND tablename = 'system_performance_metrics'\n        AND policyname = 'Service role can access all system performance metrics'\n) THEN CREATE POLICY \"Service role can access all system performance metrics\" ON system_performance_metrics FOR ALL USING (auth.role() = 'service_role');\nRAISE NOTICE 'Created policy: Service role can access all system performance metrics';\nELSE RAISE NOTICE 'Policy already exists: Service role can access all system performance metrics';\nEND IF;\nEND $$;\n-- Note: Additional user-specific policies can be added later if needed\n-- For example:\n-- CREATE POLICY \"Users can view own API usage\" ON enhanced_api_usage\n-- FOR SELECT USING (auth.uid() = user_id);\nDO $$ BEGIN RAISE NOTICE '🔒 Phase 7.6 Complete: RLS security policies configured';\nRAISE NOTICE '   ✅ api_data_sources: RLS enabled with service role access';\nRAISE NOTICE '   ✅ enhanced_api_usage: RLS enabled with service role access';\nRAISE NOTICE '   ✅ lead_validation_pipeline: RLS enabled with service role access';\nRAISE NOTICE '   ✅ budget_management: RLS enabled with service role access';\nRAISE NOTICE '   ✅ budget_alerts: RLS enabled with service role access';\nRAISE NOTICE '   ✅ api_health_monitoring: RLS enabled with service role access';\nRAISE NOTICE '   ✅ system_performance_metrics: RLS enabled with service role access';\nEND $$;\n-- ============================================================================\n-- Phase 7 Complete: Enhanced Monitoring Schema Ready\n-- ============================================================================\nDO $$ BEGIN RAISE NOTICE '🎉 Phase 7 Complete: Enhanced Monitoring & Business Intelligence Schema';\nRAISE NOTICE '   ✅ API data sources tracking: % sources configured',\n(\n    SELECT COUNT(*)\n    FROM api_data_sources\n);\nRAISE NOTICE '   ✅ Lead validation pipeline tracking enabled';\nRAISE NOTICE '   ✅ Campaign analytics and ROI calculations ready';\nRAISE NOTICE '   ✅ Budget management and cost controls active';\nRAISE NOTICE '   ✅ System health monitoring configured';\nRAISE NOTICE '   ✅ Performance indexes created for optimal queries';\nRAISE NOTICE '   📊 Ready for comprehensive business intelligence and monitoring!';\nEND $$;\n-- Pin function search_path to avoid mutable search_path linter warnings\nDO $$ BEGIN IF EXISTS (\n    SELECT 1\n    FROM pg_proc p\n        JOIN pg_namespace n ON p.pronamespace = n.oid\n    WHERE n.nspname = 'public'\n        AND p.proname = 'update_campaign_analytics'\n) THEN BEGIN EXECUTE 'ALTER FUNCTION public.update_campaign_analytics() SET search_path = public, pg_temp';\nEXCEPTION\nWHEN undefined_function THEN -- function might have different argument signature; ignore if not exact\nRAISE NOTICE 'update_campaign_analytics() not found with exact signature; skipping ALTER';\nEND;\nEND IF;\nIF EXISTS (\n    SELECT 1\n    FROM pg_proc p\n        JOIN pg_namespace n ON p.pronamespace = n.oid\n    WHERE n.nspname = 'public'\n        AND p.proname = 'check_budget_alerts'\n) THEN BEGIN EXECUTE 'ALTER FUNCTION public.check_budget_alerts() SET search_path = public, pg_temp';\nEXCEPTION\nWHEN undefined_function THEN RAISE NOTICE 'check_budget_alerts() not found with exact signature; skipping ALTER';\nEND;\nEND IF;\nRAISE NOTICE 'Pinned search_path for Phase 7 functions (if present)';\nEND $$;"}}},
{"type":"measure","name":"lsp.did_open","count":60,"duration":0.335},
{"type":"mark","name":"lsp.did_close","count":36,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/prospectpro-metrics-client.js"}}},
{"type":"measure","name":"lsp.did_close","count":36,"duration":2.99},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":478,"duration":0.286},
{"type":"mark","name":"lsp.did_open","count":61,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/02-leads-and-enrichment.sql","languageId":"sql","version":1,"text":"-- ============================================================================\r\n-- ProspectPro Database Foundation - Phase 2: Leads and Enrichment\r\n-- ============================================================================\r\n-- This script creates lead management and enrichment tables with proper\r\n-- foreign key relationships to foundation tables from Phase 1.\r\n--\r\n-- PREREQUISITES: Execute 01-database-foundation.sql FIRST\r\n-- ============================================================================\r\n\r\n-- Phase 2.1: Verify Foundation Prerequisites\r\n-- ============================================================================\r\n\r\nDO $$\r\nDECLARE\r\n  foundation_tables TEXT[] := ARRAY['campaigns', 'system_settings', 'service_health_metrics'];\r\n  missing_table TEXT;\r\n  table_exists BOOLEAN;\r\nBEGIN\r\n  RAISE NOTICE '🔍 Phase 2.1: Verifying foundation prerequisites...';\r\n  \r\n  FOREACH missing_table IN ARRAY foundation_tables LOOP\r\n    SELECT EXISTS (\r\n      SELECT FROM information_schema.tables \r\n      WHERE table_schema = 'public' AND table_name = missing_table\r\n    ) INTO table_exists;\r\n    \r\n    IF NOT table_exists THEN\r\n      RAISE EXCEPTION 'Missing foundation table: %. Execute 01-database-foundation.sql first.', missing_table;\r\n    END IF;\r\n    \r\n    RAISE NOTICE '   ✅ Foundation table % exists', missing_table;\r\n  END LOOP;\r\n  \r\n  RAISE NOTICE '✅ Phase 2.1 Complete: All foundation prerequisites verified';\r\nEND $$;\r\n\r\n-- Phase 2.2: Lead Management Tables\r\n-- ============================================================================\r\n\r\n-- Enhanced leads table (depends on campaigns)\r\nCREATE TABLE IF NOT EXISTS enhanced_leads (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  campaign_id UUID NOT NULL REFERENCES campaigns(id) ON DELETE CASCADE,\r\n  \r\n  -- Basic business data\r\n  business_name TEXT NOT NULL CHECK (LENGTH(business_name) > 0),\r\n  address TEXT,\r\n  phone TEXT,\r\n  website TEXT,\r\n  \r\n  -- Enhanced intelligence fields\r\n  confidence_score confidence_score_type DEFAULT 0,\r\n  business_type TEXT[] DEFAULT '{}',\r\n  owner_name TEXT,\r\n  employee_count INTEGER CHECK (employee_count IS NULL OR employee_count > 0),\r\n  \r\n  -- API source attribution\r\n  discovery_source TEXT, -- 'google_places', 'scrapingdog_maps', etc.\r\n  enrichment_sources JSONB DEFAULT '{}',\r\n  validation_sources JSONB DEFAULT '{}',\r\n  \r\n  -- Cost tracking\r\n  discovery_cost cost_amount_type DEFAULT 0.00,\r\n  enrichment_cost cost_amount_type DEFAULT 0.00,\r\n  total_cost cost_amount_type GENERATED ALWAYS AS (discovery_cost + enrichment_cost) STORED,\r\n  \r\n  -- Quality metrics\r\n  data_completeness_score confidence_score_type DEFAULT 0,\r\n  email_verified BOOLEAN DEFAULT false,\r\n  website_status INTEGER CHECK (website_status IS NULL OR (website_status >= 100 AND website_status <= 599)), -- HTTP status codes\r\n  social_verified BOOLEAN DEFAULT false,\r\n  \r\n  -- Export tracking\r\n  export_status TEXT DEFAULT 'pending' CHECK (export_status IN ('pending', 'exported', 'excluded')),\r\n  exported_at TIMESTAMP WITH TIME ZONE,\r\n  \r\n  -- Location and search context\r\n  search_query TEXT,\r\n  -- Use PostGIS geography for accurate earth distance calculations\r\n  location_coordinates geography(Point,4326),\r\n  search_radius_km INTEGER CHECK (search_radius_km IS NULL OR search_radius_km > 0),\r\n  \r\n  -- Rich metadata\r\n  metadata JSONB DEFAULT '{}',\r\n  \r\n  -- Timestamps\r\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  \r\n  -- Constraints\r\n  CONSTRAINT enhanced_leads_valid_export CHECK (\r\n    (export_status = 'exported' AND exported_at IS NOT NULL) OR\r\n    (export_status != 'exported' AND exported_at IS NULL)\r\n  )\r\n);\r\n\r\n-- Email tracking table (depends on enhanced_leads)\r\nCREATE TABLE IF NOT EXISTS lead_emails (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  lead_id UUID NOT NULL REFERENCES enhanced_leads(id) ON DELETE CASCADE,\r\n  email TEXT NOT NULL CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'),\r\n  source TEXT CHECK (source IN ('hunter_io', 'scraped', 'pattern_generated', 'manual')),\r\n  verification_status verification_status_type DEFAULT 'pending',\r\n  verification_score confidence_score_type,\r\n  discovery_cost cost_amount_type DEFAULT 0.00,\r\n  verified_at TIMESTAMP WITH TIME ZONE,\r\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  \r\n  -- Constraints\r\n  UNIQUE(lead_id, email),\r\n  CONSTRAINT lead_emails_verified_score CHECK (\r\n    (verification_status = 'deliverable' AND verification_score >= 80) OR\r\n    (verification_status != 'deliverable')\r\n  )\r\n);\r\n\r\n-- Social media profiles table (depends on enhanced_leads)\r\nCREATE TABLE IF NOT EXISTS lead_social_profiles (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  lead_id UUID NOT NULL REFERENCES enhanced_leads(id) ON DELETE CASCADE,\r\n  platform TEXT NOT NULL CHECK (platform IN ('linkedin', 'facebook', 'twitter', 'instagram', 'tiktok', 'youtube')),\r\n  profile_url TEXT CHECK (profile_url IS NULL OR profile_url ~* '^https?://'),\r\n  username TEXT,\r\n  followers_count INTEGER CHECK (followers_count IS NULL OR followers_count >= 0),\r\n  verification_status verification_status_type DEFAULT 'pending',\r\n  scraped_data JSONB DEFAULT '{}',\r\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  \r\n  UNIQUE(lead_id, platform)\r\n);\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 2.2 Complete: Lead management tables created';\r\n  RAISE NOTICE '   - enhanced_leads: Primary lead storage with quality scoring';\r\n  RAISE NOTICE '   - lead_emails: Email discovery and verification tracking';\r\n  RAISE NOTICE '   - lead_social_profiles: Social media presence tracking';\r\nEND $$;\r\n\r\n-- Phase 2.3: API Usage and Cost Tracking\r\n-- ============================================================================\r\n\r\n-- API usage log (depends on campaigns)\r\nCREATE TABLE IF NOT EXISTS api_usage_log (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  campaign_id UUID REFERENCES campaigns(id) ON DELETE SET NULL,\r\n  api_service TEXT NOT NULL CHECK (LENGTH(api_service) > 0),\r\n  endpoint TEXT,\r\n  request_cost cost_amount_type DEFAULT 0.00,\r\n  response_status INTEGER CHECK (response_status >= 100 AND response_status <= 599),\r\n  credits_used INTEGER DEFAULT 1 CHECK (credits_used > 0),\r\n  processing_time_ms INTEGER CHECK (processing_time_ms IS NULL OR processing_time_ms >= 0),\r\n  request_data JSONB DEFAULT '{}',\r\n  response_data JSONB DEFAULT '{}',\r\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT now()\r\n);\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 2.3 Complete: API usage tracking table created';\r\n  RAISE NOTICE '   - api_usage_log: Comprehensive API call tracking with cost attribution';\r\nEND $$;\r\n\r\n-- Phase 2.4: Performance Indexes for Lead Tables\r\n-- ============================================================================\r\n\r\n-- Enhanced leads table indexes\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_campaign_id ON enhanced_leads(campaign_id);\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_confidence ON enhanced_leads(confidence_score DESC);\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_export_status ON enhanced_leads(export_status);\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_created ON enhanced_leads(created_at DESC);\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_business_name ON enhanced_leads USING GIN(to_tsvector('english', business_name));\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_location ON enhanced_leads USING GIST((location_coordinates)) WHERE location_coordinates IS NOT NULL;\r\n\r\n-- Composite indexes for common query patterns\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_campaign_confidence ON enhanced_leads(campaign_id, confidence_score DESC);\r\nCREATE INDEX IF NOT EXISTS idx_enhanced_leads_campaign_status ON enhanced_leads(campaign_id, export_status);\r\n\r\n-- Lead emails table indexes\r\nCREATE INDEX IF NOT EXISTS idx_lead_emails_lead_id ON lead_emails(lead_id);\r\nCREATE INDEX IF NOT EXISTS idx_lead_emails_verification_status ON lead_emails(verification_status);\r\nCREATE INDEX IF NOT EXISTS idx_lead_emails_verification_score ON lead_emails(verification_score DESC) WHERE verification_score IS NOT NULL;\r\n\r\n-- Lead social profiles indexes\r\nCREATE INDEX IF NOT EXISTS idx_lead_social_profiles_lead_id ON lead_social_profiles(lead_id);\r\nCREATE INDEX IF NOT EXISTS idx_lead_social_profiles_platform ON lead_social_profiles(platform);\r\nCREATE INDEX IF NOT EXISTS idx_lead_social_profiles_verification ON lead_social_profiles(verification_status);\r\n\r\n-- API usage log indexes\r\nCREATE INDEX IF NOT EXISTS idx_api_usage_campaign_id ON api_usage_log(campaign_id) WHERE campaign_id IS NOT NULL;\r\nCREATE INDEX IF NOT EXISTS idx_api_usage_service ON api_usage_log(api_service);\r\nCREATE INDEX IF NOT EXISTS idx_api_usage_created ON api_usage_log(created_at DESC);\r\nCREATE INDEX IF NOT EXISTS idx_api_usage_cost ON api_usage_log(request_cost DESC) WHERE request_cost > 0;\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 2.4 Complete: Performance indexes created for lead management';\r\nEND $$;\r\n\r\n-- Phase 2.5: Updated Timestamp Triggers for Lead Tables\r\n-- ============================================================================\r\n\r\n-- Apply updated_at triggers to lead tables\r\nCREATE TRIGGER enhanced_leads_update_updated_at\r\n  BEFORE UPDATE ON enhanced_leads\r\n  FOR EACH ROW\r\n  EXECUTE FUNCTION update_updated_at_column();\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 2.5 Complete: Timestamp triggers configured for lead tables';\r\nEND $$;\r\n\r\n-- Phase 2.6: Lead Management Table Validation\r\n-- ============================================================================\r\n\r\nDO $$\r\nDECLARE\r\n  table_count INTEGER;\r\n  fk_count INTEGER;\r\n  index_count INTEGER;\r\nBEGIN\r\n  -- Verify all lead tables exist\r\n  SELECT COUNT(*) INTO table_count\r\n  FROM information_schema.tables\r\n  WHERE table_schema = 'public' \r\n    AND table_name IN ('enhanced_leads', 'lead_emails', 'lead_social_profiles', 'api_usage_log');\r\n    \r\n  IF table_count != 4 THEN\r\n    RAISE EXCEPTION 'Lead table creation failed. Expected 4 tables, found %', table_count;\r\n  END IF;\r\n  \r\n  -- Verify foreign key relationships\r\n  SELECT COUNT(*) INTO fk_count\r\n  FROM information_schema.table_constraints\r\n  WHERE table_schema = 'public'\r\n    AND constraint_type = 'FOREIGN KEY'\r\n    AND table_name IN ('enhanced_leads', 'lead_emails', 'lead_social_profiles', 'api_usage_log');\r\n    \r\n  IF fk_count < 4 THEN\r\n    RAISE NOTICE 'Warning: Expected at least 4 foreign keys, found %', fk_count;\r\n  END IF;\r\n  \r\n  -- Verify performance indexes\r\n  SELECT COUNT(*) INTO index_count\r\n  FROM pg_indexes\r\n  WHERE schemaname = 'public'\r\n    AND (indexname LIKE 'idx_enhanced_leads_%'\r\n      OR indexname LIKE 'idx_lead_emails_%'\r\n      OR indexname LIKE 'idx_lead_social_profiles_%'\r\n      OR indexname LIKE 'idx_api_usage_%');\r\n     \r\n  RAISE NOTICE '✅ Phase 2.6 Complete: Lead management validation successful';\r\n  RAISE NOTICE '   - Lead tables created: %', table_count;\r\n  RAISE NOTICE '   - Foreign key constraints: %', fk_count;\r\n  RAISE NOTICE '   - Performance indexes: %', index_count;\r\nEND $$;\r\n\r\n-- ============================================================================\r\n-- Phase 2 Complete Summary\r\n-- ============================================================================\r\n\r\nDO $$\r\nDECLARE\r\n  completion_time TIMESTAMP WITH TIME ZONE := now();\r\nBEGIN\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE '🎯 PHASE 2 COMPLETE: Leads and Enrichment Infrastructure';\r\n  RAISE NOTICE '=====================================================';\r\n  RAISE NOTICE 'Completion Time: %', completion_time;\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE 'Lead Management Infrastructure:';\r\n  RAISE NOTICE '- ✅ Enhanced leads with quality scoring and cost tracking';\r\n  RAISE NOTICE '- ✅ Email discovery and verification system';\r\n  RAISE NOTICE '- ✅ Social media profile tracking';\r\n  RAISE NOTICE '- ✅ Comprehensive API usage logging';\r\n  RAISE NOTICE '- ✅ Performance-optimized indexes';\r\n  RAISE NOTICE '- ✅ Data integrity constraints';\r\n  RAISE NOTICE '- ✅ Automatic timestamp maintenance';\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE 'Foreign Key Relationships Established:';\r\n  RAISE NOTICE '- enhanced_leads → campaigns';\r\n  RAISE NOTICE '- lead_emails → enhanced_leads';\r\n  RAISE NOTICE '- lead_social_profiles → enhanced_leads';\r\n  RAISE NOTICE '- api_usage_log → campaigns (optional)';\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE 'Next Steps:';\r\n  RAISE NOTICE '1. Execute 03-monitoring-and-analytics.sql';\r\n  RAISE NOTICE '2. Execute 04-functions-and-procedures.sql';\r\n  RAISE NOTICE '3. Execute 05-security-and-rls.sql';\r\nEND $$;"}}},
{"type":"measure","name":"lsp.did_open","count":61,"duration":0.393},
{"type":"mark","name":"lsp.did_open","count":62,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/01-database-foundation.sql","languageId":"sql","version":1,"text":"-- ============================================================================\r\n-- ProspectPro Database Foundation - Phase 1: Core Infrastructure\r\n-- ============================================================================\r\n-- This script creates the essential database infrastructure with proper\r\n-- dependency order, comprehensive validation, and zero-downtime deployment.\r\n--\r\n-- Execute this script FIRST before any other database scripts.\r\n-- ============================================================================\r\n\r\n-- Phase 1.1: Extensions and Prerequisites\r\n-- ============================================================================\r\n\r\n-- Enable UUID generation (required for all primary keys)\r\nCREATE EXTENSION IF NOT EXISTS \"pgcrypto\"; -- required for gen_random_uuid()\r\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\r\n\r\n-- Enable PostGIS for geographic operations (location coordinates)\r\nCREATE EXTENSION IF NOT EXISTS \"postgis\";\r\n\r\n-- Enable trigram similarity for fuzzy text search (SIMILARITY(), % operator)\r\nCREATE EXTENSION IF NOT EXISTS \"pg_trgm\";\r\n\r\n-- Log successful extension creation\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 1.1 Complete: Database extensions enabled';\r\n  RAISE NOTICE '   - uuid-ossp: UUID generation';\r\n  RAISE NOTICE '   - postgis: Geographic operations';\r\nEND $$;\r\n\r\n-- Phase 1.2: Core Data Types and Domains\r\n-- ============================================================================\r\n\r\n-- Create custom domains for data validation\r\nDO $$\r\nBEGIN\r\n  -- confidence_score_type\r\n  IF NOT EXISTS (\r\n    SELECT 1 FROM pg_type WHERE typname = 'confidence_score_type'\r\n  ) THEN\r\n    EXECUTE 'CREATE DOMAIN confidence_score_type AS INTEGER CHECK (VALUE >= 0 AND VALUE <= 100)';\r\n    RAISE NOTICE 'Created domain: confidence_score_type';\r\n  ELSE\r\n    RAISE NOTICE 'Domain already exists: confidence_score_type';\r\n  END IF;\r\n\r\n  -- cost_amount_type\r\n  IF NOT EXISTS (\r\n    SELECT 1 FROM pg_type WHERE typname = 'cost_amount_type'\r\n  ) THEN\r\n    EXECUTE 'CREATE DOMAIN cost_amount_type AS DECIMAL(10,4) CHECK (VALUE >= 0)';\r\n    RAISE NOTICE 'Created domain: cost_amount_type';\r\n  ELSE\r\n    RAISE NOTICE 'Domain already exists: cost_amount_type';\r\n  END IF;\r\n\r\n  -- campaign_status_type\r\n  IF NOT EXISTS (\r\n    SELECT 1 FROM pg_type WHERE typname = 'campaign_status_type'\r\n  ) THEN\r\n    EXECUTE $cmd$CREATE DOMAIN campaign_status_type AS TEXT CHECK (VALUE IN ('running','paused','completed','cancelled'))$cmd$;\r\n    RAISE NOTICE 'Created domain: campaign_status_type';\r\n  ELSE\r\n    RAISE NOTICE 'Domain already exists: campaign_status_type';\r\n  END IF;\r\n\r\n  -- verification_status_type\r\n  IF NOT EXISTS (\r\n    SELECT 1 FROM pg_type WHERE typname = 'verification_status_type'\r\n  ) THEN\r\n    EXECUTE $cmd$CREATE DOMAIN verification_status_type AS TEXT CHECK (VALUE IN ('deliverable','undeliverable','risky','unknown','pending'))$cmd$;\r\n    RAISE NOTICE 'Created domain: verification_status_type';\r\n  ELSE\r\n    RAISE NOTICE 'Domain already exists: verification_status_type';\r\n  END IF;\r\nEND $$;\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 1.2 Complete: Custom data types created';\r\nEND $$;\r\n\r\n-- Phase 1.3: Foundation Tables (No Dependencies)\r\n-- ============================================================================\r\n\r\n-- Core campaigns table (foundational - no foreign key dependencies)\r\nCREATE TABLE IF NOT EXISTS campaigns (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  user_id UUID NOT NULL, -- References auth.users (Supabase managed)\r\n  name TEXT NOT NULL,\r\n  search_parameters JSONB NOT NULL DEFAULT '{}',\r\n  status campaign_status_type DEFAULT 'running',\r\n  \r\n  -- Budget and limits\r\n  budget_limit DECIMAL(10,2) CHECK (budget_limit IS NULL OR budget_limit > 0),\r\n  lead_limit INTEGER CHECK (lead_limit IS NULL OR lead_limit > 0),\r\n  quality_threshold confidence_score_type DEFAULT 70,\r\n  \r\n  -- Performance tracking (updated via triggers)\r\n  leads_discovered INTEGER DEFAULT 0 CHECK (leads_discovered >= 0),\r\n  leads_qualified INTEGER DEFAULT 0 CHECK (leads_qualified >= 0),\r\n  total_cost cost_amount_type DEFAULT 0.00,\r\n  \r\n  -- Timestamps\r\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  completed_at TIMESTAMP WITH TIME ZONE,\r\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  \r\n  -- Constraints\r\n  CONSTRAINT campaigns_valid_completion CHECK (\r\n    (status IN ('completed', 'cancelled') AND completed_at IS NOT NULL) OR\r\n    (status NOT IN ('completed', 'cancelled') AND completed_at IS NULL)\r\n  ),\r\n  CONSTRAINT campaigns_qualified_lte_discovered CHECK (leads_qualified <= leads_discovered)\r\n);\r\n\r\n-- System settings table (no dependencies)\r\nCREATE TABLE IF NOT EXISTS system_settings (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  user_id UUID NOT NULL, -- References auth.users (Supabase managed)\r\n  setting_key VARCHAR(255) NOT NULL,\r\n  setting_value JSONB NOT NULL,\r\n  data_type TEXT DEFAULT 'string' CHECK (data_type IN ('string', 'number', 'boolean', 'object', 'array')),\r\n  description TEXT,\r\n  is_active BOOLEAN DEFAULT true,\r\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\r\n  \r\n  CONSTRAINT system_settings_unique_user_key UNIQUE (user_id, setting_key)\r\n);\r\n\r\n-- Service health metrics (no dependencies - system monitoring)\r\nCREATE TABLE IF NOT EXISTS service_health_metrics (\r\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\r\n  service_name TEXT NOT NULL, -- 'hunter_io', 'scrapingdog', 'google_places'\r\n  status TEXT NOT NULL CHECK (status IN ('healthy', 'degraded', 'down')),\r\n  response_time_ms INTEGER CHECK (response_time_ms >= 0),\r\n  error_rate DECIMAL(5,4) CHECK (error_rate >= 0 AND error_rate <= 1), -- 0-100%\r\n  rate_limit_remaining INTEGER CHECK (rate_limit_remaining >= 0),\r\n  cost_budget_remaining DECIMAL(10,2) CHECK (cost_budget_remaining >= 0),\r\n  requests_today INTEGER DEFAULT 0 CHECK (requests_today >= 0),\r\n  cost_today cost_amount_type DEFAULT 0.00,\r\n  last_successful_call TIMESTAMP WITH TIME ZONE,\r\n  last_error TEXT,\r\n  metadata JSONB DEFAULT '{}',\r\n  timestamp TIMESTAMP WITH TIME ZONE DEFAULT now()\r\n);\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 1.3 Complete: Foundation tables created';\r\n  RAISE NOTICE '   - campaigns: Core campaign management';\r\n  RAISE NOTICE '   - system_settings: User preferences and configuration';\r\n  RAISE NOTICE '   - service_health_metrics: System monitoring';\r\nEND $$;\r\n\r\n-- Phase 1.4: Primary Indexes for Foundation Tables\r\n-- ============================================================================\r\n\r\n-- Campaigns table indexes\r\nCREATE INDEX IF NOT EXISTS idx_campaigns_user_id ON campaigns(user_id);\r\nCREATE INDEX IF NOT EXISTS idx_campaigns_status ON campaigns(status);\r\nCREATE INDEX IF NOT EXISTS idx_campaigns_created ON campaigns(created_at DESC);\r\nCREATE INDEX IF NOT EXISTS idx_campaigns_user_status ON campaigns(user_id, status);\r\n\r\n-- System settings indexes\r\nCREATE INDEX IF NOT EXISTS idx_system_settings_user_id ON system_settings(user_id);\r\nCREATE INDEX IF NOT EXISTS idx_system_settings_user_key ON system_settings(user_id, setting_key);\r\nCREATE INDEX IF NOT EXISTS idx_system_settings_active ON system_settings(is_active) WHERE is_active = true;\r\n\r\n-- Service health metrics indexes\r\nCREATE INDEX IF NOT EXISTS idx_service_health_service ON service_health_metrics(service_name);\r\nCREATE INDEX IF NOT EXISTS idx_service_health_timestamp ON service_health_metrics(timestamp DESC);\r\nCREATE INDEX IF NOT EXISTS idx_service_health_status ON service_health_metrics(service_name, status, timestamp DESC);\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 1.4 Complete: Primary indexes created for optimal query performance';\r\nEND $$;\r\n\r\n-- Phase 1.5: Foundation Table Validation\r\n-- ============================================================================\r\n\r\n-- Test foundation table creation\r\nDO $$\r\nDECLARE\r\n  table_count INTEGER;\r\n  index_count INTEGER;\r\nBEGIN\r\n  -- Verify all foundation tables exist\r\n  SELECT COUNT(*) INTO table_count\r\n  FROM information_schema.tables\r\n  WHERE table_schema = 'public' \r\n    AND table_name IN ('campaigns', 'system_settings', 'service_health_metrics');\r\n    \r\n  IF table_count != 3 THEN\r\n    RAISE EXCEPTION 'Foundation table creation failed. Expected 3 tables, found %', table_count;\r\n  END IF;\r\n  \r\n  -- Verify essential indexes exist\r\n  SELECT COUNT(*) INTO index_count\r\n  FROM pg_indexes\r\n  WHERE schemaname = 'public'\r\n    AND indexname LIKE 'idx_campaigns_%'\r\n     OR indexname LIKE 'idx_system_settings_%'\r\n     OR indexname LIKE 'idx_service_health_%';\r\n     \r\n  IF index_count < 8 THEN\r\n    RAISE NOTICE 'Warning: Expected at least 8 indexes, found %', index_count;\r\n  END IF;\r\n  \r\n  RAISE NOTICE '✅ Phase 1.5 Complete: Foundation validation successful';\r\n  RAISE NOTICE '   - Tables created: %', table_count;\r\n  RAISE NOTICE '   - Indexes created: %', index_count;\r\nEND $$;\r\n\r\n-- Phase 1.6: Updated Timestamp Triggers\r\n-- ============================================================================\r\n\r\n-- Generic updated_at trigger function\r\nCREATE OR REPLACE FUNCTION update_updated_at_column()\r\nRETURNS TRIGGER AS $$\r\nBEGIN\r\n  NEW.updated_at = now();\r\n  RETURN NEW;\r\nEND;\r\n$$ LANGUAGE plpgsql;\r\n\r\n-- Apply updated_at triggers to foundation tables\r\nCREATE TRIGGER campaigns_update_updated_at\r\n  BEFORE UPDATE ON campaigns\r\n  FOR EACH ROW\r\n  EXECUTE FUNCTION update_updated_at_column();\r\n\r\nCREATE TRIGGER system_settings_update_updated_at\r\n  BEFORE UPDATE ON system_settings\r\n  FOR EACH ROW\r\n  EXECUTE FUNCTION update_updated_at_column();\r\n\r\nDO $$\r\nBEGIN\r\n  RAISE NOTICE '✅ Phase 1.6 Complete: Timestamp triggers configured';\r\n  RAISE NOTICE '   - Automatic updated_at maintenance for foundation tables';\r\nEND $$;\r\n\r\n-- ============================================================================\r\n-- Phase 1 Complete Summary\r\n-- ============================================================================\r\n\r\nDO $$\r\nDECLARE\r\n  completion_time TIMESTAMP WITH TIME ZONE := now();\r\nBEGIN\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE '🎯 PHASE 1 COMPLETE: Database Foundation Established';\r\n  RAISE NOTICE '================================================';\r\n  RAISE NOTICE 'Completion Time: %', completion_time;\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE 'Foundation Infrastructure:';\r\n  RAISE NOTICE '- ✅ Database extensions (uuid-ossp, postgis)';\r\n  RAISE NOTICE '- ✅ Custom data types and domains';\r\n  RAISE NOTICE '- ✅ Core tables (campaigns, system_settings, service_health_metrics)';\r\n  RAISE NOTICE '- ✅ Performance indexes';\r\n  RAISE NOTICE '- ✅ Timestamp triggers';\r\n  RAISE NOTICE '- ✅ Data validation constraints';\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE 'Next Steps:';\r\n  RAISE NOTICE '1. Execute 02-leads-and-enrichment.sql';\r\n  RAISE NOTICE '2. Execute 03-monitoring-and-analytics.sql';\r\n  RAISE NOTICE '3. Execute 04-functions-and-procedures.sql';\r\n  RAISE NOTICE '4. Execute 05-security-and-rls.sql';\r\n  RAISE NOTICE '';\r\n  RAISE NOTICE 'Database is ready for dependent table creation.';\r\nEND $$;"}}},
{"type":"measure","name":"lsp.did_open","count":62,"duration":0.134},
{"type":"mark","name":"lsp.did_close","count":37,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/api-google-places-client.js"}}},
{"type":"measure","name":"lsp.did_close","count":37,"duration":1.644},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":479,"duration":0.761},
{"type":"mark","name":"lsp.did_close","count":38,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/modules/api-clients/api-hunter-comprehensive-client.js"}}},
{"type":"measure","name":"lsp.did_close","count":38,"duration":1.232},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":480,"duration":0.278},
{"type":"mark","name":"lsp.did_close","count":39,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":39,"duration":4.52},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":481,"duration":0.26},
{"type":"mark","name":"lsp.did_close","count":40,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/07-enhanced-monitoring-schema.sql"}}},
{"type":"measure","name":"lsp.did_close","count":40,"duration":0.037},
{"type":"mark","name":"lsp.did_close","count":41,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/02-leads-and-enrichment.sql"}}},
{"type":"measure","name":"lsp.did_close","count":41,"duration":0.055},
{"type":"mark","name":"lsp.did_close","count":42,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/database/01-database-foundation.sql"}}},
{"type":"measure","name":"lsp.did_close","count":42,"duration":0.03},
{"type":"mark","name":"lsp.did_open","count":63,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport {\n  EdgeFunctionAuth,\n  corsHeaders,\n  handleCORS,\n} from \"../_shared/edge-auth.ts\";\nimport { API_SECRETS, createVaultClient } from \"../_shared/vault-client.ts\";\n\n/**\n * Hunter.io Comprehensive Email Discovery & Verification Edge Function\n * Implements all Hunter.io API endpoints with cost optimization\n *\n * Pricing:\n * - Email Count (Domain Search stats): FREE\n * - Domain Search: $0.034 per search\n * - Email Finder: $0.034 per request\n * - Email Verifier: $0.01 per verification\n * - Person/Company Enrichment: $0.034 per enrichment\n *\n * Features:\n * - Secure vault integration for API keys\n * - Circuit breakers per endpoint\n * - Cost tracking and budgeting\n * - Confidence scoring\n * - Smart email prioritization\n */\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface HunterRequest {\n  action:\n    | \"domain-search\"\n    | \"email-finder\"\n    | \"email-verifier\"\n    | \"email-count\"\n    | \"person-enrichment\"\n    | \"company-enrichment\";\n\n  // Domain search parameters\n  domain?: string;\n  companyName?: string;\n  limit?: number;\n\n  // Email finder parameters\n  firstName?: string;\n  lastName?: string;\n\n  // Email verifier parameters\n  email?: string;\n\n  // Enrichment parameters\n  personEmail?: string;\n\n  // Budget control\n  maxCostPerRequest?: number;\n}\n\ninterface HunterResponse {\n  success: boolean;\n  action: string;\n  data?: any;\n  cost: number;\n  confidence?: number;\n  metadata?: {\n    requests_remaining?: number;\n    requests_used?: number;\n    reset_date?: string;\n  };\n  error?: string;\n}\n\nclass HunterAPIClient {\n  private apiKey: string;\n  private baseURL = \"https://api.hunter.io/v2\";\n  private circuitBreaker = {\n    emailCount: { failures: 0, lastFailure: 0, threshold: 3 },\n    domainSearch: { failures: 0, lastFailure: 0, threshold: 3 },\n    emailFinder: { failures: 0, lastFailure: 0, threshold: 3 },\n    emailVerifier: { failures: 0, lastFailure: 0, threshold: 3 },\n    enrichment: { failures: 0, lastFailure: 0, threshold: 3 },\n  };\n  private cache = new Map();\n  private cacheTTL = 24 * 60 * 60 * 1000; // 24 hours\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  /**\n   * FREE: Get email count for a domain (doesn't count against quota)\n   */\n  async getEmailCount(domain: string): Promise<HunterResponse> {\n    const endpoint = \"emailCount\";\n\n    // Check circuit breaker\n    if (this.isCircuitOpen(endpoint)) {\n      throw new Error(`Circuit breaker open for ${endpoint}`);\n    }\n\n    try {\n      const url = `${this.baseURL}/email-count?domain=${encodeURIComponent(\n        domain\n      )}&api_key=${this.apiKey}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.errors?.[0]?.details || \"Email count failed\");\n      }\n\n      this.resetCircuitBreaker(endpoint);\n\n      return {\n        success: true,\n        action: \"email-count\",\n        data: {\n          domain,\n          total: data.data.total,\n          personal_emails: data.data.personal_emails,\n          generic_emails: data.data.generic_emails,\n        },\n        cost: 0, // FREE\n        metadata: {\n          requests_remaining: data.meta.requests?.remaining,\n          requests_used: data.meta.requests?.used,\n        },\n      };\n    } catch (error) {\n      this.recordFailure(endpoint);\n      throw error;\n    }\n  }\n\n  /**\n   * PAID: Domain search - find all emails for a domain\n   * Cost: $0.034 per search\n   */\n  async domainSearch(domain: string, limit = 10): Promise<HunterResponse> {\n    const endpoint = \"domainSearch\";\n    const cost = 0.034;\n\n    // Check circuit breaker\n    if (this.isCircuitOpen(endpoint)) {\n      throw new Error(`Circuit breaker open for ${endpoint}`);\n    }\n\n    // Check cache first\n    const cacheKey = `domain_search_${domain}_${limit}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(`📦 Using cached domain search for ${domain}`);\n      return { ...cached.data, cost: 0 }; // No cost for cached results\n    }\n\n    try {\n      const url = `${this.baseURL}/domain-search?domain=${encodeURIComponent(\n        domain\n      )}&limit=${limit}&api_key=${this.apiKey}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.errors?.[0]?.details || \"Domain search failed\");\n      }\n\n      this.resetCircuitBreaker(endpoint);\n\n      const result: HunterResponse = {\n        success: true,\n        action: \"domain-search\",\n        data: {\n          domain,\n          organization: data.data.organization,\n          emails: data.data.emails.map((email: any) => ({\n            value: email.value,\n            type: email.type,\n            confidence: email.confidence,\n            firstName: email.first_name,\n            lastName: email.last_name,\n            position: email.position,\n            seniority: email.seniority,\n            department: email.department,\n            linkedin: email.linkedin,\n            twitter: email.twitter,\n            phone_number: email.phone_number,\n          })),\n          pattern: data.data.pattern,\n          webmail: data.data.webmail,\n        },\n        cost,\n        confidence: data.data.emails.length > 0 ? 85 : 0,\n        metadata: {\n          requests_remaining: data.meta.requests?.remaining,\n          requests_used: data.meta.requests?.used,\n        },\n      };\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        data: result,\n        timestamp: Date.now(),\n      });\n\n      return result;\n    } catch (error) {\n      this.recordFailure(endpoint);\n      throw error;\n    }\n  }\n\n  /**\n   * PAID: Email finder - find email for a specific person\n   * Cost: $0.034 per request\n   */\n  async emailFinder(\n    domain: string,\n    firstName: string,\n    lastName: string\n  ): Promise<HunterResponse> {\n    const endpoint = \"emailFinder\";\n    const cost = 0.034;\n\n    // Check circuit breaker\n    if (this.isCircuitOpen(endpoint)) {\n      throw new Error(`Circuit breaker open for ${endpoint}`);\n    }\n\n    // Check cache first\n    const cacheKey = `email_finder_${domain}_${firstName}_${lastName}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(`📦 Using cached email finder for ${firstName} ${lastName}`);\n      return { ...cached.data, cost: 0 };\n    }\n\n    try {\n      const url = `${this.baseURL}/email-finder?domain=${encodeURIComponent(\n        domain\n      )}&first_name=${encodeURIComponent(\n        firstName\n      )}&last_name=${encodeURIComponent(lastName)}&api_key=${this.apiKey}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.errors?.[0]?.details || \"Email finder failed\");\n      }\n\n      this.resetCircuitBreaker(endpoint);\n\n      const result: HunterResponse = {\n        success: true,\n        action: \"email-finder\",\n        data: {\n          email: data.data.email,\n          firstName: data.data.first_name,\n          lastName: data.data.last_name,\n          position: data.data.position,\n          company: data.data.company,\n          linkedin: data.data.linkedin,\n          twitter: data.data.twitter,\n          phone_number: data.data.phone_number,\n          score: data.data.score,\n          verification: data.data.verification,\n        },\n        cost,\n        confidence: data.data.score || 0,\n        metadata: {\n          requests_remaining: data.meta.requests?.remaining,\n          requests_used: data.meta.requests?.used,\n        },\n      };\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        data: result,\n        timestamp: Date.now(),\n      });\n\n      return result;\n    } catch (error) {\n      this.recordFailure(endpoint);\n      throw error;\n    }\n  }\n\n  /**\n   * PAID: Email verifier - verify email deliverability\n   * Cost: $0.01 per verification\n   */\n  async emailVerifier(email: string): Promise<HunterResponse> {\n    const endpoint = \"emailVerifier\";\n    const cost = 0.01;\n\n    // Check circuit breaker\n    if (this.isCircuitOpen(endpoint)) {\n      throw new Error(`Circuit breaker open for ${endpoint}`);\n    }\n\n    // Check cache first\n    const cacheKey = `email_verifier_${email}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(`📦 Using cached email verification for ${email}`);\n      return { ...cached.data, cost: 0 };\n    }\n\n    try {\n      const url = `${this.baseURL}/email-verifier?email=${encodeURIComponent(\n        email\n      )}&api_key=${this.apiKey}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\n          data.errors?.[0]?.details || \"Email verification failed\"\n        );\n      }\n\n      this.resetCircuitBreaker(endpoint);\n\n      const result: HunterResponse = {\n        success: true,\n        action: \"email-verifier\",\n        data: {\n          email: data.data.email,\n          status: data.data.status,\n          result: data.data.result,\n          score: data.data.score,\n          regexp: data.data.regexp,\n          gibberish: data.data.gibberish,\n          disposable: data.data.disposable,\n          webmail: data.data.webmail,\n          mx_records: data.data.mx_records,\n          smtp_server: data.data.smtp_server,\n          smtp_check: data.data.smtp_check,\n          accept_all: data.data.accept_all,\n          block: data.data.block,\n        },\n        cost,\n        confidence: data.data.score || 0,\n        metadata: {\n          requests_remaining: data.meta.requests?.remaining,\n          requests_used: data.meta.requests?.used,\n        },\n      };\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        data: result,\n        timestamp: Date.now(),\n      });\n\n      return result;\n    } catch (error) {\n      this.recordFailure(endpoint);\n      throw error;\n    }\n  }\n\n  /**\n   * PAID: Person enrichment - get details about a person\n   * Cost: $0.034 per enrichment\n   */\n  async personEnrichment(email: string): Promise<HunterResponse> {\n    const endpoint = \"enrichment\";\n    const cost = 0.034;\n\n    // Check circuit breaker\n    if (this.isCircuitOpen(endpoint)) {\n      throw new Error(`Circuit breaker open for ${endpoint}`);\n    }\n\n    try {\n      const url = `${this.baseURL}/email-enrichment?email=${encodeURIComponent(\n        email\n      )}&api_key=${this.apiKey}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\n          data.errors?.[0]?.details || \"Person enrichment failed\"\n        );\n      }\n\n      this.resetCircuitBreaker(endpoint);\n\n      return {\n        success: true,\n        action: \"person-enrichment\",\n        data: {\n          email: data.data.email,\n          firstName: data.data.first_name,\n          lastName: data.data.last_name,\n          company: data.data.company,\n          position: data.data.position,\n          seniority: data.data.seniority,\n          department: data.data.department,\n          linkedin: data.data.linkedin,\n          twitter: data.data.twitter,\n          phone_number: data.data.phone_number,\n        },\n        cost,\n        confidence: 80,\n        metadata: {\n          requests_remaining: data.meta.requests?.remaining,\n          requests_used: data.meta.requests?.used,\n        },\n      };\n    } catch (error) {\n      this.recordFailure(endpoint);\n      throw error;\n    }\n  }\n\n  /**\n   * PAID: Company enrichment - get details about a company\n   * Cost: $0.034 per enrichment\n   */\n  async companyEnrichment(domain: string): Promise<HunterResponse> {\n    const endpoint = \"enrichment\";\n    const cost = 0.034;\n\n    // Check circuit breaker\n    if (this.isCircuitOpen(endpoint)) {\n      throw new Error(`Circuit breaker open for ${endpoint}`);\n    }\n\n    try {\n      const url = `${\n        this.baseURL\n      }/domain-enrichment?domain=${encodeURIComponent(domain)}&api_key=${\n        this.apiKey\n      }`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\n          data.errors?.[0]?.details || \"Company enrichment failed\"\n        );\n      }\n\n      this.resetCircuitBreaker(endpoint);\n\n      return {\n        success: true,\n        action: \"company-enrichment\",\n        data: {\n          domain: data.data.domain,\n          organization: data.data.organization,\n          country: data.data.country,\n          description: data.data.description,\n          industry: data.data.industry,\n          size: data.data.size,\n          founded: data.data.founded,\n          revenue: data.data.revenue,\n          linkedin: data.data.linkedin,\n          twitter: data.data.twitter,\n          facebook: data.data.facebook,\n          technologies: data.data.technologies,\n        },\n        cost,\n        confidence: 75,\n        metadata: {\n          requests_remaining: data.meta.requests?.remaining,\n          requests_used: data.meta.requests?.used,\n        },\n      };\n    } catch (error) {\n      this.recordFailure(endpoint);\n      throw error;\n    }\n  }\n\n  // Circuit breaker management\n  private isCircuitOpen(endpoint: string): boolean {\n    const breaker = this.circuitBreaker[endpoint];\n    if (!breaker) return false;\n\n    // Reset after 5 minutes\n    if (Date.now() - breaker.lastFailure > 5 * 60 * 1000) {\n      breaker.failures = 0;\n      return false;\n    }\n\n    return breaker.failures >= breaker.threshold;\n  }\n\n  private recordFailure(endpoint: string): void {\n    const breaker = this.circuitBreaker[endpoint];\n    if (breaker) {\n      breaker.failures++;\n      breaker.lastFailure = Date.now();\n    }\n  }\n\n  private resetCircuitBreaker(endpoint: string): void {\n    const breaker = this.circuitBreaker[endpoint];\n    if (breaker) {\n      breaker.failures = 0;\n    }\n  }\n}\n\nserve(async (req) => {\n  // Handle CORS preflight\n  const corsResponse = handleCORS(req);\n  if (corsResponse) return corsResponse;\n\n  try {\n    console.log(`🔍 Hunter.io Email Enrichment Edge Function`);\n\n    // Initialize Edge Function authentication\n    const edgeAuth = new EdgeFunctionAuth();\n    const authContext = edgeAuth.getAuthContext();\n\n    console.log(\n      `🔐 Authentication: ${authContext.keyFormat} (${\n        authContext.isValid ? \"Valid\" : \"Invalid\"\n      })`\n    );\n\n    if (!authContext.isValid) {\n      console.warn(\n        \"⚠️ No valid authentication, proceeding with vault access only\"\n      );\n    }\n\n    // Get Hunter.io API key from vault\n    const vaultClient = createVaultClient();\n    const hunterApiKey = await vaultClient.getSecret(API_SECRETS.HUNTER_IO);\n\n    // Parse request\n    const requestData: HunterRequest = await req.json();\n    const { action, maxCostPerRequest = 2.0 } = requestData;\n\n    console.log(`📋 Action: ${action}`);\n\n    // Initialize Hunter.io client\n    const hunterClient = new HunterAPIClient(hunterApiKey);\n\n    // Route to appropriate action\n    let result: HunterResponse;\n\n    switch (action) {\n      case \"email-count\":\n        if (!requestData.domain) {\n          throw new Error(\"domain is required for email-count\");\n        }\n        result = await hunterClient.getEmailCount(requestData.domain);\n        break;\n\n      case \"domain-search\":\n        if (!requestData.domain) {\n          throw new Error(\"domain is required for domain-search\");\n        }\n        result = await hunterClient.domainSearch(\n          requestData.domain,\n          requestData.limit || 10\n        );\n        break;\n\n      case \"email-finder\":\n        if (\n          !requestData.domain ||\n          !requestData.firstName ||\n          !requestData.lastName\n        ) {\n          throw new Error(\n            \"domain, firstName, and lastName are required for email-finder\"\n          );\n        }\n        result = await hunterClient.emailFinder(\n          requestData.domain,\n          requestData.firstName,\n          requestData.lastName\n        );\n        break;\n\n      case \"email-verifier\":\n        if (!requestData.email) {\n          throw new Error(\"email is required for email-verifier\");\n        }\n        result = await hunterClient.emailVerifier(requestData.email);\n        break;\n\n      case \"person-enrichment\":\n        if (!requestData.personEmail) {\n          throw new Error(\"personEmail is required for person-enrichment\");\n        }\n        result = await hunterClient.personEnrichment(requestData.personEmail);\n        break;\n\n      case \"company-enrichment\":\n        if (!requestData.domain) {\n          throw new Error(\"domain is required for company-enrichment\");\n        }\n        result = await hunterClient.companyEnrichment(requestData.domain);\n        break;\n\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n\n    // Check cost limit\n    if (result.cost > maxCostPerRequest) {\n      console.warn(\n        `⚠️ Cost limit exceeded: $${result.cost} > $${maxCostPerRequest}`\n      );\n    }\n\n    console.log(`✅ Hunter.io ${action} completed - Cost: $${result.cost}`);\n\n    return new Response(\n      JSON.stringify({\n        ...result,\n        timestamp: new Date().toISOString(),\n        version: \"1.0\",\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Hunter.io enrichment error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":63,"duration":5.597},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":482,"duration":0.268},
{"type":"mark","name":"lsp.did_open","count":64,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { API_SECRETS, createVaultClient } from \"../_shared/vault-client.ts\";\n\n/**\n * NeverBounce Email Verification Edge Function\n * Real-time email validation with quota management\n *\n * Pricing:\n * - Free Tier: 1,000 verifications/month\n * - Paid: $0.008 per verification\n * - Syntax validation: FREE (doesn't count against quota)\n *\n * Features:\n * - Secure vault integration for API keys\n * - Real-time email verification\n * - Batch verification support\n * - Quota tracking\n * - Syntax validation (free)\n * - Confidence scoring\n */\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface NeverBounceRequest {\n  action: \"verify\" | \"verify-batch\" | \"account-info\" | \"syntax-check\";\n  email?: string;\n  emails?: string[];\n  maxCostPerRequest?: number;\n}\n\ninterface NeverBounceResponse {\n  success: boolean;\n  action: string;\n  data?: Record<string, unknown>;\n  cost: number;\n  confidence?: number;\n  quotaUsed?: number;\n  quotaRemaining?: number;\n  error?: string;\n}\n\nclass NeverBounceClient {\n  private apiKey: string;\n  private baseURL = \"https://api.neverbounce.com/v4\";\n  private monthlyQuota = 1000; // Free tier monthly quota\n  private costPerVerification = 0.008;\n  private cache = new Map();\n  private cacheTTL = 7 * 24 * 60 * 60 * 1000; // 7 days\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  /**\n   * FREE: Syntax validation (doesn't count against quota)\n   */\n  async syntaxCheck(email: string): Promise<NeverBounceResponse> {\n    // Basic regex validation (completely free, no API call)\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValid = emailRegex.test(email);\n\n    return {\n      success: true,\n      action: \"syntax-check\",\n      data: {\n        email,\n        valid: isValid,\n        reason: isValid ? \"valid_syntax\" : \"invalid_syntax\",\n      },\n      cost: 0,\n      confidence: isValid ? 50 : 0,\n    };\n  }\n\n  /**\n   * PAID: Single email verification\n   * Cost: $0.008 per verification (or uses free quota)\n   */\n  async verifySingle(email: string): Promise<NeverBounceResponse> {\n    // Check cache first\n    const cacheKey = `verify_${email}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n      console.log(`📦 Using cached verification for ${email}`);\n      return { ...cached.data, cost: 0 };\n    }\n\n    try {\n      const url = `${this.baseURL}/single/check`;\n      const body = {\n        key: this.apiKey,\n        email: email,\n        address_info: 1,\n        credits_info: 1,\n        timeout: 15,\n      };\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n\n      if (data.status !== \"success\") {\n        throw new Error(data.message || \"Email verification failed\");\n      }\n\n      const result: NeverBounceResponse = {\n        success: true,\n        action: \"verify\",\n        data: {\n          email,\n          result: data.result,\n          flags: data.flags,\n          suggested_correction: data.suggested_correction,\n          address_info: data.address_info,\n          execution_time: data.execution_time,\n        },\n        cost: this.costPerVerification,\n        confidence: this.calculateConfidence(data.result),\n        quotaUsed: data.credits_info?.paid_credits_used || 0,\n        quotaRemaining: data.credits_info?.free_credits_remaining || 0,\n      };\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        data: result,\n        timestamp: Date.now(),\n      });\n\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * PAID: Batch email verification\n   * Cost: $0.008 per verification\n   */\n  async verifyBatch(emails: string[]): Promise<NeverBounceResponse> {\n    const results: Array<Record<string, unknown>> = [];\n    let totalCost = 0;\n    let totalQuotaUsed = 0;\n\n    console.log(`📧 Verifying batch of ${emails.length} emails`);\n\n    // Verify each email (with rate limiting)\n    for (const email of emails) {\n      try {\n        const result = await this.verifySingle(email);\n        results.push({\n          email,\n          result: result.data?.result,\n          confidence: result.confidence,\n          cost: result.cost,\n        });\n        totalCost += result.cost || 0;\n        totalQuotaUsed += result.quotaUsed || 0;\n\n        // Rate limiting: 1 second between requests\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (error) {\n        console.error(`Error verifying ${email}:`, error);\n        results.push({\n          email,\n          error: error instanceof Error ? error.message : \"Unknown error\",\n        });\n      }\n    }\n\n    return {\n      success: true,\n      action: \"verify-batch\",\n      data: {\n        total: emails.length,\n        verified: results.filter((r) => r.result).length,\n        results,\n      },\n      cost: totalCost,\n      quotaUsed: totalQuotaUsed,\n    };\n  }\n\n  /**\n   * Get account information and quota status\n   */\n  async getAccountInfo(): Promise<NeverBounceResponse> {\n    try {\n      const url = `${this.baseURL}/account/info`;\n      const body = {\n        key: this.apiKey,\n      };\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n\n      if (data.status !== \"success\") {\n        throw new Error(data.message || \"Failed to get account info\");\n      }\n\n      return {\n        success: true,\n        action: \"account-info\",\n        data: {\n          credits_info: {\n            free_credits_remaining:\n              data.credits_info?.free_credits_remaining || 0,\n            free_credits_used: data.credits_info?.free_credits_used || 0,\n            paid_credits_remaining:\n              data.credits_info?.paid_credits_remaining || 0,\n            paid_credits_used: data.credits_info?.paid_credits_used || 0,\n          },\n          job_counts: data.job_counts,\n        },\n        cost: 0,\n        quotaRemaining: data.credits_info?.free_credits_remaining || 0,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate confidence score based on NeverBounce result\n   */\n  private calculateConfidence(result: string): number {\n    const confidenceMap: Record<string, number> = {\n      valid: 95,\n      accept_all: 70,\n      unknown: 50,\n      disposable: 20,\n      invalid: 0,\n    };\n\n    return confidenceMap[result] || 0;\n  }\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    console.log(`✅ NeverBounce Email Verification Edge Function`);\n\n    // Get NeverBounce API key from vault\n    const vaultClient = createVaultClient();\n    const neverBounceApiKey = await vaultClient.getSecret(\n      API_SECRETS.NEVERBOUNCE\n    );\n\n    // Parse request\n    const requestData: NeverBounceRequest = await req.json();\n    const { action, maxCostPerRequest = 2.0 } = requestData;\n\n    console.log(`📋 Action: ${action}`);\n\n    // Initialize NeverBounce client\n    const neverBounceClient = new NeverBounceClient(neverBounceApiKey);\n\n    // Route to appropriate action\n    let result: NeverBounceResponse;\n\n    switch (action) {\n      case \"syntax-check\":\n        if (!requestData.email) {\n          throw new Error(\"email is required for syntax-check\");\n        }\n        result = await neverBounceClient.syntaxCheck(requestData.email);\n        break;\n\n      case \"verify\":\n        if (!requestData.email) {\n          throw new Error(\"email is required for verify\");\n        }\n        result = await neverBounceClient.verifySingle(requestData.email);\n        break;\n\n      case \"verify-batch\":\n        if (!requestData.emails || requestData.emails.length === 0) {\n          throw new Error(\"emails array is required for verify-batch\");\n        }\n        // Check cost limit for batch\n        const estimatedCost = requestData.emails.length * 0.008;\n        if (estimatedCost > maxCostPerRequest) {\n          throw new Error(\n            `Batch verification cost ($${estimatedCost.toFixed(\n              2\n            )}) exceeds budget limit ($${maxCostPerRequest})`\n          );\n        }\n        result = await neverBounceClient.verifyBatch(requestData.emails);\n        break;\n\n      case \"account-info\":\n        result = await neverBounceClient.getAccountInfo();\n        break;\n\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n\n    // Check cost limit\n    if (result.cost > maxCostPerRequest) {\n      console.warn(\n        `⚠️ Cost limit exceeded: $${result.cost} > $${maxCostPerRequest}`\n      );\n    }\n\n    console.log(\n      `✅ NeverBounce ${action} completed - Cost: $${\n        result.cost\n      } - Quota remaining: ${result.quotaRemaining || \"N/A\"}`\n    );\n\n    return new Response(\n      JSON.stringify({\n        ...result,\n        timestamp: new Date().toISOString(),\n        version: \"1.0\",\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"NeverBounce verification error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":64,"duration":2.975},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":483,"duration":0.374},
{"type":"mark","name":"lsp.did_open","count":65,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts","languageId":"typescript","version":1,"text":""}}},
{"type":"measure","name":"lsp.did_open","count":65,"duration":0.932},
{"type":"mark","name":"lsp.document_symbol","count":80,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":5,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":3,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"]}},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":484,"duration":0.288},
{"type":"mark","name":"tsc.op.op_load","count":293,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},
{"type":"measure","name":"tsc.op.op_load","count":293,"duration":0.056},
{"type":"measure","name":"tsc.host.getNavigationTree","count":3,"duration":195.463},
{"type":"measure","name":"tsc.request.getNavigationTree","count":3,"duration":198.676},
{"type":"measure","name":"lsp.get_navigation_tree","count":5,"duration":198.724},
{"type":"measure","name":"lsp.document_symbol","count":80,"duration":198.754},
{"type":"mark","name":"lsp.did_change_batched","count":432,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":485,"duration":0.334},
{"type":"measure","name":"lsp.did_change_batched","count":432,"duration":5.988},
{"type":"mark","name":"lsp.semantic_tokens_full","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"tsc.request.getEncodedSemanticClassifications"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.host.getEncodedSemanticClassifications","count":34,"args":{"GetEncodedSemanticClassifications":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",{"start":0,"length":5203},"2020"]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":15,"duration":0.655},
{"type":"mark","name":"tsc.op.op_resolve","count":1477,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1477,"duration":0.159},
{"type":"mark","name":"tsc.op.op_resolve","count":1478,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1478,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1479,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1479,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1480,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1480,"duration":0.045},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.op.op_resolve","count":1481,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1481,"duration":0.038},
{"type":"mark","name":"tsc.op.op_resolve","count":1482,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1482,"duration":0.027},
{"type":"mark","name":"tsc.op.op_resolve","count":1483,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1483,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1484,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1484,"duration":0.024},
{"type":"mark","name":"tsc.op.op_load","count":294,"args":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx"},
{"type":"measure","name":"tsc.op.op_load","count":294,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1485,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1485,"duration":0.202},
{"type":"mark","name":"tsc.op.op_resolve","count":1486,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1486,"duration":0.132},
{"type":"mark","name":"tsc.op.op_resolve","count":1487,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1487,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1488,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1488,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1489,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1489,"duration":0.012},
{"type":"mark","name":"tsc.op.op_load","count":295,"args":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},
{"type":"measure","name":"tsc.op.op_load","count":295,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":1490,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1490,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1491,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1491,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":1492,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1492,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1493,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1493,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1494,"args":{"base":"https://esm.sh/@supabase/functions-js@2.5.0/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1494,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1495,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1495,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":1496,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1496,"duration":0.024},
{"type":"mark","name":"tsc.op.op_resolve","count":1497,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1497,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1498,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./select-query-parser/utils.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1498,"duration":0.048},
{"type":"mark","name":"tsc.op.op_resolve","count":1499,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1499,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1500,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./select-query-parser/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1500,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1501,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"],[false,"./select-query-parser/types.d.ts"],[false,"./select-query-parser/utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1501,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1502,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1502,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1503,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1503,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1504,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1504,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1505,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1505,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1506,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./lib/websocket-factory.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1506,"duration":2.063},
{"type":"mark","name":"tsc.op.op_resolve","count":1507,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeClient.d.ts","specifiers":[[false,"./lib/websocket-factory.d.ts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1507,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1508,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1508,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1509,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1509,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1510,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1510,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1511,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1511,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1512,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1512,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1513,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"./BlobDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1513,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1514,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1514,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1515,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1515,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1516,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/BlobDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"],[false,"./StreamDownloadBuilder.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1516,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1517,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StreamDownloadBuilder.d.ts","specifiers":[[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1517,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1518,"args":{"base":"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"],[false,"../StorageClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1518,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1519,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1519,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1520,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1520,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1521,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1521,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1522,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1522,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1523,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/types.d.ts","specifiers":[[false,"./web3/ethereum.d.ts"],[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./web3/solana.d.ts"],[false,"./web3/ethereum.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1523,"duration":0.03},
{"type":"mark","name":"tsc.op.op_resolve","count":1524,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1524,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1525,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1525,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1526,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1526,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1527,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1527,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1528,"args":{"base":"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1528,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1529,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.58.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/auth-js@2.72.0/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.15.5/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.21.4/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.12.2/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1529,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1530,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/edge-auth.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"],[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1530,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1531,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1531,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1532,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1532,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1533,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts","specifiers":[[false,"./FunctionsClient.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1533,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1534,"args":{"base":"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/FunctionsClient.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1534,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1535,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts","specifiers":[[false,"./PostgrestClient.d.ts"],[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./PostgrestTransformBuilder.d.ts"],[false,"./PostgrestBuilder.d.ts"],[false,"./PostgrestError.d.ts"],[false,"./types.d.ts"],[false,"./select-query-parser/result.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1535,"duration":0.05},
{"type":"mark","name":"tsc.op.op_resolve","count":1536,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestClient.d.ts","specifiers":[[false,"./PostgrestQueryBuilder.d.ts"],[false,"./PostgrestFilterBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1536,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1537,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestQueryBuilder.d.ts","specifiers":[[false,"./PostgrestFilterBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1537,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1538,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestFilterBuilder.d.ts","specifiers":[[false,"./PostgrestTransformBuilder.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1538,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1539,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestTransformBuilder.d.ts","specifiers":[[false,"./PostgrestBuilder.d.ts"],[false,"./select-query-parser/result.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1539,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1540,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/PostgrestBuilder.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1540,"duration":0.012},
{"type":"mark","name":"tsc.op.op_resolve","count":1541,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/types.d.ts","specifiers":[[false,"./PostgrestError.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1541,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1542,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/result.d.ts","specifiers":[[false,"../types.d.ts"],[false,"./types.d.ts"],[false,"./parser.d.ts"],[false,"./types.d.ts"],[false,"./utils.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1542,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1543,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/types.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1543,"duration":0.02},
{"type":"mark","name":"tsc.op.op_resolve","count":1544,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/parser.d.ts","specifiers":[[false,"../types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1544,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1545,"args":{"base":"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/select-query-parser/utils.d.ts","specifiers":[[false,"./parser.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1545,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1546,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts","specifiers":[[false,"./RealtimeClient.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1546,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1547,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeClient.d.ts","specifiers":[[false,"https://esm.sh/@types/ws@8.5.13/index.d.mts"],[false,"./lib/constants.d.ts"],[false,"./lib/serializer.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimeChannel.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1547,"duration":0.042},
{"type":"mark","name":"tsc.op.op_resolve","count":1548,"args":{"base":"https://esm.sh/@types/ws@8.5.13/index.d.mts","specifiers":[[false,"./index.d.mts"],[true,"./index.d.mts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1548,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1549,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimeChannel.d.ts","specifiers":[[false,"./lib/constants.d.ts"],[false,"./lib/push.d.ts"],[false,"./RealtimeClient.d.ts"],[false,"./lib/timer.d.ts"],[false,"./RealtimePresence.d.ts"],[false,"./RealtimePresence.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1549,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1550,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/lib/push.d.ts","specifiers":[[false,"../RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1550,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1551,"args":{"base":"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/RealtimePresence.d.ts","specifiers":[[false,"https://esm.sh/@types/phoenix@1.6.6/index.d.ts"],[false,"./RealtimeChannel.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1551,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1552,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts","specifiers":[[false,"./StorageClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1552,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1553,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/StorageClient.d.ts","specifiers":[[false,"./packages/StorageFileApi.d.ts"],[false,"./packages/StorageBucketApi.d.ts"],[false,"./lib/fetch.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1553,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1554,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageFileApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1554,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1555,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1555,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1556,"args":{"base":"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/packages/StorageBucketApi.d.ts","specifiers":[[false,"../lib/errors.d.ts"],[false,"../lib/fetch.d.ts"],[false,"../lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1556,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1557,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1557,"duration":0.022},
{"type":"mark","name":"tsc.op.op_resolve","count":1558,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./GoTrueClient.d.ts"],[false,"./AuthAdminApi.d.ts"],[false,"./AuthClient.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/locks.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1558,"duration":2.069},
{"type":"mark","name":"tsc.op.op_resolve","count":1559,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueAdminApi.d.ts","specifiers":[[false,"./lib/fetch.d.ts"],[false,"./lib/types.d.ts"],[false,"./lib/errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1559,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1560,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/fetch.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1560,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1561,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/types.d.ts","specifiers":[[false,"./errors.d.ts"],[false,"./fetch.d.ts"],[false,"./internal-types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1561,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1562,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/errors.d.ts","specifiers":[[false,"./types.d.ts"],[false,"./error-codes.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1562,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1563,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/internal-types.d.ts","specifiers":[[false,"./errors.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1563,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1564,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/GoTrueClient.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"],[false,"./lib/errors.d.ts"],[false,"./lib/fetch.d.ts"],[false,"./lib/helpers.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1564,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1565,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/lib/helpers.d.ts","specifiers":[[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1565,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1566,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthAdminApi.d.ts","specifiers":[[false,"./GoTrueAdminApi.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1566,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1567,"args":{"base":"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/AuthClient.d.ts","specifiers":[[false,"./GoTrueClient.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1567,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1568,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.0/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1568,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1569,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/_shared/vault-client.ts","specifiers":[[false,"https://esm.sh/@supabase/supabase-js@2.38.0"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1569,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1570,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1570,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1571,"args":{"base":"https://deno.land/std@0.168.0/http/server.ts","specifiers":[[false,"../async/mod.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1571,"duration":0.017},
{"type":"mark","name":"tsc.op.op_resolve","count":1572,"args":{"base":"https://deno.land/std@0.168.0/async/mod.ts","specifiers":[[false,"./abortable.ts"],[false,"./deadline.ts"],[false,"./debounce.ts"],[false,"./deferred.ts"],[false,"./delay.ts"],[false,"./mux_async_iterator.ts"],[false,"./pool.ts"],[false,"./tee.ts"],[false,"./retry.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1572,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1573,"args":{"base":"https://deno.land/std@0.168.0/async/abortable.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1573,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1574,"args":{"base":"https://deno.land/std@0.168.0/async/deadline.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1574,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1575,"args":{"base":"https://deno.land/std@0.168.0/async/mux_async_iterator.ts","specifiers":[[false,"./deferred.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1575,"duration":0.013},
{"type":"mark","name":"tsc.op.op_resolve","count":1576,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-optimized/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1576,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1577,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1577,"duration":0.04},
{"type":"mark","name":"tsc.op.op_resolve","count":1578,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export-user-aware/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1578,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1579,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/campaign-export/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1579,"duration":0.026},
{"type":"mark","name":"tsc.op.op_resolve","count":1580,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-business-license/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1580,"duration":0.023},
{"type":"mark","name":"tsc.op.op_resolve","count":1581,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/index.d.ts","specifiers":[[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"./SupabaseClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1581,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1582,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/SupabaseClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/functions-js@2.4.4/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/postgrest-js@1.17.11/dist/cjs/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/storage-js@2.7.1/dist/module/index.d.ts"],[false,"./lib/SupabaseAuthClient.d.ts"],[false,"./lib/types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1582,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":1583,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/SupabaseAuthClient.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"./types.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1583,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1584,"args":{"base":"https://esm.sh/@supabase/supabase-js@2.38.4/dist/module/lib/types.d.ts","specifiers":[[false,"https://esm.sh/@supabase/gotrue-js@2.67.3/dist/module/index.d.ts"],[false,"https://esm.sh/@supabase/realtime-js@2.11.3/dist/module/index.d.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1584,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":296,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":296,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":1585,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1585,"duration":0.054},
{"type":"mark","name":"tsc.op.op_load","count":297,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":297,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1586,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1586,"duration":0.037},
{"type":"mark","name":"tsc.op.op_load","count":298,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":298,"duration":0.059},
{"type":"mark","name":"tsc.op.op_resolve","count":1587,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1587,"duration":0.018},
{"type":"mark","name":"tsc.op.op_resolve","count":1588,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-pdl/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2.38.4"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1588,"duration":0.028},
{"type":"mark","name":"tsc.op.op_resolve","count":1589,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-business-discovery/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1589,"duration":0.036},
{"type":"mark","name":"tsc.op.op_resolve","count":1590,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-google-places/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1590,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1591,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/test-new-auth/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1591,"duration":0.024},
{"type":"mark","name":"lsp.inlay_hint","count":433,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":0}}}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":121,"duration":0.013},
{"type":"mark","name":"lsp.document_symbol","count":81,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":6,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}},
{"type":"mark","name":"tsc.request.getNavigationTree"},
{"type":"measure","name":"tsc.host.getEncodedSemanticClassifications","count":34,"duration":233.88},
{"type":"measure","name":"tsc.request.getEncodedSemanticClassifications","count":34,"duration":234.206},
{"type":"measure","name":"lsp.semantic_tokens_full","count":26,"duration":234.303},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":7,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",486]}},
{"type":"mark","name":"lsp.semantic_tokens_range","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":73,"character":43}}}},
{"type":"measure","name":"lsp.semantic_tokens_range","count":11,"duration":0.032},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":7,"duration":50.576},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":7,"duration":284.577},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.getNavigationTree","count":4,"args":{"GetNavigationTree":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"]}},
{"type":"measure","name":"tsc.host.getNavigationTree","count":4,"duration":7.995},
{"type":"measure","name":"tsc.request.getNavigationTree","count":4,"duration":68.894},
{"type":"measure","name":"lsp.get_navigation_tree","count":6,"duration":68.993},
{"type":"measure","name":"lsp.document_symbol","count":81,"duration":69.132},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":6,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":6,"duration":0.372},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":6,"duration":18.958},
{"type":"measure","name":"lsp.diagnostic","count":901,"duration":305.499},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":902,"duration":0.043},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":119,"duration":0.052},
{"type":"mark","name":"lsp.code_lens","count":47,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":7,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":7,"duration":0.0},
{"type":"measure","name":"lsp.code_lens","count":47,"duration":0.193},
{"type":"mark","name":"lsp.folding_range","count":45,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"tsc.request.getOutliningSpans"},
{"type":"mark","name":"tsc.host.getOutliningSpans","count":2,"args":{"GetOutliningSpans":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"]}},
{"type":"measure","name":"tsc.host.getOutliningSpans","count":2,"duration":3.02},
{"type":"measure","name":"tsc.request.getOutliningSpans","count":2,"duration":3.151},
{"type":"measure","name":"lsp.folding_range","count":45,"duration":3.269},
{"type":"mark","name":"lsp.inlay_hint","count":434,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":103,"character":0}}}},
{"type":"mark","name":"lsp.document_symbol","count":82,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.get_navigation_tree","count":8,"args":{"specifier":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}},
{"type":"measure","name":"lsp.get_navigation_tree","count":8,"duration":0.0},
{"type":"measure","name":"lsp.document_symbol","count":82,"duration":0.165},
{"type":"mark","name":"lsp.inlay_hint","count":435,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":1,"args":{"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":32}},"data":{"source":"implementations","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.goto_implementation","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":2,"character":17}}},
{"type":"mark","name":"tsc.request.getImplementationAtPosition"},
{"type":"mark","name":"lsp.code_lens_resolve","count":2,"args":{"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":32}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":1,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":2,"character":17},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.host.getImplementationAtPosition","count":1,"args":{"GetImplementationAtPosition":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",89]}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":3,"args":{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":3,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":4,"args":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":11}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":4,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":5,"args":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":7}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":4,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":5,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":6,"args":{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":9}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":5,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":6,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":7,"args":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":6,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":7,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":8,"args":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":7,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":8,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":9,"args":{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":31}},"data":{"source":"implementations","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.goto_implementation","count":2,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":11,"character":17}}},
{"type":"mark","name":"tsc.request.getImplementationAtPosition"},
{"type":"mark","name":"lsp.code_lens_resolve","count":10,"args":{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":31}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":8,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":11,"character":17},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":11,"args":{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":9,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":12,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":12,"args":{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":10,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":13,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":13,"args":{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":11,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":14,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":14,"args":{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":12,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":15,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":15,"args":{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":11}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":13,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":16,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":16,"args":{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":14}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":14,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":17,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":17,"args":{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":16}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":15,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":18,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":18,"args":{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":17}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":16,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":19,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":19,"args":{"range":{"start":{"line":20,"character":2},"end":{"line":20,"character":9}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":17,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":20,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":20,"args":{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":14}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":18,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":21,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"measure","name":"tsc.host.getImplementationAtPosition","count":1,"duration":10.661},
{"type":"mark","name":"tsc.host.findReferences","count":1,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",89]}},
{"type":"measure","name":"tsc.request.getImplementationAtPosition","count":1,"duration":16.279},
{"type":"measure","name":"lsp.goto_implementation","count":1,"duration":27.362},
{"type":"measure","name":"lsp.code_lens_resolve","count":1,"duration":30.28},
{"type":"measure","name":"tsc.host.findReferences","count":1,"duration":27.453},
{"type":"mark","name":"tsc.host.findReferences","count":2,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",109]}},
{"type":"measure","name":"tsc.request.findReferences","count":1,"duration":49.675},
{"type":"measure","name":"lsp.references","count":1,"duration":50.024},
{"type":"measure","name":"lsp.code_lens_resolve","count":2,"duration":52.618},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":122,"duration":0.011},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":123,"duration":0.013},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":124,"duration":0.013},
{"type":"measure","name":"tsc.host.findReferences","count":2,"duration":175.89},
{"type":"mark","name":"tsc.host.findReferences","count":3,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",139]}},
{"type":"measure","name":"tsc.request.findReferences","count":2,"duration":214.508},
{"type":"measure","name":"lsp.references","count":2,"duration":214.61},
{"type":"measure","name":"lsp.code_lens_resolve","count":3,"duration":214.643},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":125,"duration":0.008},
{"type":"measure","name":"tsc.host.findReferences","count":3,"duration":9.491},
{"type":"mark","name":"tsc.host.findReferences","count":4,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",168]}},
{"type":"measure","name":"tsc.request.findReferences","count":3,"duration":223.956},
{"type":"measure","name":"lsp.references","count":3,"duration":224.036},
{"type":"measure","name":"lsp.code_lens_resolve","count":4,"duration":224.058},
{"type":"measure","name":"tsc.host.findReferences","count":4,"duration":4.988},
{"type":"mark","name":"tsc.host.findReferences","count":5,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",193]}},
{"type":"measure","name":"tsc.request.findReferences","count":4,"duration":228.927},
{"type":"measure","name":"lsp.references","count":4,"duration":229.008},
{"type":"measure","name":"lsp.code_lens_resolve","count":5,"duration":229.028},
{"type":"measure","name":"tsc.host.findReferences","count":5,"duration":2.397},
{"type":"mark","name":"tsc.host.findReferences","count":6,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",220]}},
{"type":"measure","name":"tsc.request.findReferences","count":5,"duration":231.42},
{"type":"measure","name":"lsp.references","count":5,"duration":231.494},
{"type":"measure","name":"lsp.code_lens_resolve","count":6,"duration":231.509},
{"type":"measure","name":"tsc.host.findReferences","count":6,"duration":1.415},
{"type":"mark","name":"tsc.host.findReferences","count":7,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",253]}},
{"type":"measure","name":"tsc.host.findReferences","count":7,"duration":1.165},
{"type":"mark","name":"tsc.host.getImplementationAtPosition","count":2,"args":{"GetImplementationAtPosition":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",304]}},
{"type":"measure","name":"tsc.request.findReferences","count":6,"duration":234.31},
{"type":"measure","name":"lsp.references","count":6,"duration":234.393},
{"type":"measure","name":"lsp.code_lens_resolve","count":7,"duration":234.416},
{"type":"measure","name":"tsc.request.findReferences","count":7,"duration":234.309},
{"type":"measure","name":"lsp.references","count":7,"duration":234.407},
{"type":"measure","name":"lsp.code_lens_resolve","count":8,"duration":234.426},
{"type":"measure","name":"tsc.host.getImplementationAtPosition","count":2,"duration":2.978},
{"type":"mark","name":"tsc.host.findReferences","count":8,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",304]}},
{"type":"measure","name":"tsc.request.getImplementationAtPosition","count":2,"duration":236.742},
{"type":"measure","name":"lsp.goto_implementation","count":2,"duration":236.804},
{"type":"measure","name":"lsp.code_lens_resolve","count":9,"duration":236.819},
{"type":"measure","name":"tsc.host.findReferences","count":8,"duration":3.122},
{"type":"mark","name":"tsc.host.findReferences","count":9,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",356]}},
{"type":"measure","name":"tsc.request.findReferences","count":8,"duration":241.803},
{"type":"measure","name":"lsp.references","count":8,"duration":241.898},
{"type":"measure","name":"lsp.code_lens_resolve","count":10,"duration":241.925},
{"type":"measure","name":"tsc.host.findReferences","count":9,"duration":2.336},
{"type":"mark","name":"tsc.host.findReferences","count":10,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",378]}},
{"type":"measure","name":"tsc.request.findReferences","count":9,"duration":244.775},
{"type":"measure","name":"lsp.references","count":9,"duration":244.861},
{"type":"measure","name":"lsp.code_lens_resolve","count":11,"duration":244.882},
{"type":"measure","name":"tsc.host.findReferences","count":10,"duration":6.806},
{"type":"mark","name":"tsc.host.findReferences","count":11,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",399]}},
{"type":"measure","name":"tsc.request.findReferences","count":10,"duration":249.109},
{"type":"measure","name":"lsp.references","count":10,"duration":249.178},
{"type":"measure","name":"lsp.code_lens_resolve","count":12,"duration":249.196},
{"type":"measure","name":"tsc.host.findReferences","count":11,"duration":1.804},
{"type":"mark","name":"tsc.host.findReferences","count":12,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",422]}},
{"type":"measure","name":"tsc.request.findReferences","count":11,"duration":252.625},
{"type":"measure","name":"lsp.references","count":11,"duration":252.7},
{"type":"measure","name":"lsp.code_lens_resolve","count":13,"duration":252.719},
{"type":"measure","name":"tsc.host.findReferences","count":12,"duration":2.03},
{"type":"measure","name":"tsc.request.findReferences","count":12,"duration":252.684},
{"type":"measure","name":"lsp.references","count":12,"duration":252.776},
{"type":"measure","name":"lsp.code_lens_resolve","count":14,"duration":252.795},
{"type":"mark","name":"tsc.host.findReferences","count":13,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",472]}},
{"type":"measure","name":"tsc.host.findReferences","count":13,"duration":7.203},
{"type":"mark","name":"tsc.host.findReferences","count":14,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",542]}},
{"type":"measure","name":"tsc.request.findReferences","count":13,"duration":261.478},
{"type":"measure","name":"lsp.references","count":13,"duration":261.557},
{"type":"measure","name":"lsp.code_lens_resolve","count":15,"duration":261.576},
{"type":"measure","name":"tsc.host.findReferences","count":14,"duration":4.338},
{"type":"measure","name":"tsc.request.findReferences","count":14,"duration":265.943},
{"type":"measure","name":"lsp.references","count":14,"duration":266.035},
{"type":"measure","name":"lsp.code_lens_resolve","count":16,"duration":266.06},
{"type":"mark","name":"tsc.host.findReferences","count":15,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",574]}},
{"type":"measure","name":"tsc.host.findReferences","count":15,"duration":1.025},
{"type":"measure","name":"tsc.request.findReferences","count":15,"duration":269.137},
{"type":"measure","name":"lsp.references","count":15,"duration":269.217},
{"type":"measure","name":"lsp.code_lens_resolve","count":17,"duration":269.237},
{"type":"mark","name":"tsc.host.findReferences","count":16,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",608]}},
{"type":"measure","name":"tsc.host.findReferences","count":16,"duration":2.841},
{"type":"measure","name":"tsc.request.findReferences","count":16,"duration":272.554},
{"type":"measure","name":"lsp.references","count":16,"duration":272.638},
{"type":"measure","name":"lsp.code_lens_resolve","count":18,"duration":272.662},
{"type":"mark","name":"tsc.host.findReferences","count":17,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",643]}},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":126,"duration":0.01},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":127,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":128,"duration":0.007},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":129,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":130,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":131,"duration":0.004},
{"type":"measure","name":"tsc.host.findReferences","count":17,"duration":38.889},
{"type":"mark","name":"tsc.host.findReferences","count":18,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",664]}},
{"type":"measure","name":"tsc.request.findReferences","count":17,"duration":311.603},
{"type":"measure","name":"lsp.references","count":17,"duration":311.694},
{"type":"measure","name":"lsp.code_lens_resolve","count":19,"duration":311.722},
{"type":"measure","name":"tsc.host.findReferences","count":18,"duration":1.207},
{"type":"measure","name":"tsc.request.findReferences","count":18,"duration":312.775},
{"type":"measure","name":"lsp.references","count":18,"duration":312.848},
{"type":"measure","name":"lsp.code_lens_resolve","count":20,"duration":312.866},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":8,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",486]}},
{"type":"measure","name":"lsp.diagnostic","count":903,"duration":64.736},
{"type":"mark","name":"lsp.did_change_batched","count":433,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":486,"duration":0.26},
{"type":"measure","name":"lsp.did_change_batched","count":433,"duration":8.639},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":8,"duration":137.398},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":9,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",487]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":18,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":299,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":299,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1592,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1592,"duration":0.185},
{"type":"mark","name":"tsc.op.op_resolve","count":1593,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1593,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1594,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1594,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1595,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1595,"duration":0.047},
{"type":"mark","name":"tsc.op.op_resolve","count":1596,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1596,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1597,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1597,"duration":0.035},
{"type":"mark","name":"tsc.op.op_resolve","count":1598,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1598,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1599,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1599,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1600,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1600,"duration":0.183},
{"type":"mark","name":"tsc.op.op_resolve","count":1601,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1601,"duration":0.131},
{"type":"mark","name":"tsc.op.op_resolve","count":1602,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1602,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1603,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1603,"duration":0.045},
{"type":"mark","name":"tsc.op.op_resolve","count":1604,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1604,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1605,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1605,"duration":0.062},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":9,"duration":251.058},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":9,"duration":317.079},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":7,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":7,"duration":0.173},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":7,"duration":1.894},
{"type":"measure","name":"lsp.diagnostic","count":904,"duration":321.233},
{"type":"mark","name":"lsp.inlay_hint","count":436,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":120,"duration":0.057},
{"type":"mark","name":"lsp.inlay_hint","count":437,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":434,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":434,"duration":6.368},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":487,"duration":0.857},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":10,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",488]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":19,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":300,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":300,"duration":0.062},
{"type":"mark","name":"tsc.op.op_resolve","count":1606,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1606,"duration":0.072},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":10,"duration":240.368},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":10,"duration":241.831},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":8,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":8,"duration":139.626},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":8,"duration":140.292},
{"type":"measure","name":"lsp.diagnostic","count":905,"duration":382.425},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":121,"duration":0.06},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":906,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":438,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.inlay_hint","count":439,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":435,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":435,"duration":12.154},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":488,"duration":0.256},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":11,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",489]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":20,"duration":0.013},
{"type":"mark","name":"tsc.op.op_load","count":301,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":301,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":1607,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1607,"duration":0.065},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":11,"duration":127.554},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":11,"duration":127.997},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":9,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":9,"duration":74.183},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":9,"duration":74.303},
{"type":"measure","name":"lsp.diagnostic","count":907,"duration":204.214},
{"type":"mark","name":"lsp.inlay_hint","count":440,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":122,"duration":0.06},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":908,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":441,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_close","count":43,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":43,"duration":5.094},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":489,"duration":0.281},
{"type":"mark","name":"lsp.did_change_batched","count":436,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":436,"duration":5.949},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":490,"duration":0.282},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":12,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",491]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":16,"duration":0.57},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":21,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":302,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":302,"duration":0.056},
{"type":"mark","name":"tsc.op.op_load","count":303,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":303,"duration":0.066},
{"type":"mark","name":"tsc.op.op_resolve","count":1608,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1608,"duration":0.125},
{"type":"mark","name":"tsc.op.op_resolve","count":1609,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1609,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1610,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1610,"duration":0.01},
{"type":"mark","name":"tsc.op.op_resolve","count":1611,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1611,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":1612,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1612,"duration":0.025},
{"type":"mark","name":"tsc.op.op_resolve","count":1613,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1613,"duration":0.021},
{"type":"mark","name":"tsc.op.op_resolve","count":1614,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1614,"duration":0.019},
{"type":"mark","name":"tsc.op.op_resolve","count":1615,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1615,"duration":0.039},
{"type":"mark","name":"tsc.op.op_resolve","count":1616,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1616,"duration":0.17},
{"type":"mark","name":"tsc.op.op_resolve","count":1617,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1617,"duration":0.137},
{"type":"mark","name":"tsc.op.op_resolve","count":1618,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1618,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1619,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1619,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1620,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1620,"duration":0.014},
{"type":"mark","name":"tsc.op.op_resolve","count":1621,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1621,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1622,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-hunter/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1622,"duration":0.047},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":12,"duration":161.72},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":12,"duration":162.122},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":10,"args":"GetAmbientModules"},
{"type":"mark","name":"lsp.inlay_hint","count":442,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":10,"duration":78.704},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":10,"duration":78.837},
{"type":"measure","name":"lsp.diagnostic","count":909,"duration":241.143},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":910,"duration":0.001},
{"type":"mark","name":"lsp.did_close","count":44,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"}}},
{"type":"measure","name":"lsp.did_close","count":44,"duration":4.043},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":491,"duration":0.219},
{"type":"mark","name":"lsp.did_change_batched","count":437,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":437,"duration":5.09},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":13,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",493]}},
{"type":"measure","name":"lsp.testing_update","count":492,"duration":0.275},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":17,"duration":0.56},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":22,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":304,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":304,"duration":0.062},
{"type":"mark","name":"tsc.op.op_load","count":305,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":305,"duration":0.052},
{"type":"mark","name":"tsc.op.op_resolve","count":1623,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1623,"duration":0.174},
{"type":"mark","name":"tsc.op.op_resolve","count":1624,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1624,"duration":0.058},
{"type":"mark","name":"tsc.op.op_resolve","count":1625,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1625,"duration":0.016},
{"type":"mark","name":"tsc.op.op_resolve","count":1626,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1626,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1627,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1627,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1628,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1628,"duration":0.034},
{"type":"mark","name":"tsc.op.op_resolve","count":1629,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1629,"duration":0.074},
{"type":"mark","name":"tsc.op.op_resolve","count":1630,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1630,"duration":0.032},
{"type":"mark","name":"tsc.op.op_resolve","count":1631,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1631,"duration":0.153},
{"type":"mark","name":"tsc.op.op_resolve","count":1632,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1632,"duration":0.132},
{"type":"mark","name":"tsc.op.op_resolve","count":1633,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1633,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1634,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1634,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1635,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1635,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1636,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1636,"duration":0.064},
{"type":"mark","name":"tsc.op.op_resolve","count":1637,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-neverbounce/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/vault-client.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1637,"duration":0.039},
{"type":"mark","name":"lsp.inlay_hint","count":443,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":13,"duration":158.291},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":13,"duration":159.284},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":11,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":11,"duration":77.919},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":11,"duration":78.034},
{"type":"measure","name":"lsp.diagnostic","count":911,"duration":237.556},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":123,"duration":0.095},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":912,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":444,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":438,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":438,"duration":5.075},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":493,"duration":0.28},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":14,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",494]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":23,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":306,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":306,"duration":0.057},
{"type":"mark","name":"tsc.op.op_resolve","count":1638,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1638,"duration":0.057},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":14,"duration":126.084},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":14,"duration":126.374},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":12,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":12,"duration":0.111},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":12,"duration":0.18},
{"type":"measure","name":"lsp.diagnostic","count":913,"duration":126.786},
{"type":"mark","name":"lsp.inlay_hint","count":445,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":914,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":124,"duration":0.06},
{"type":"mark","name":"lsp.inlay_hint","count":446,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":439,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":439,"duration":15.459},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":494,"duration":0.29},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":15,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",495]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":24,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":307,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":307,"duration":0.063},
{"type":"mark","name":"tsc.op.op_resolve","count":1639,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1639,"duration":0.093},
{"type":"mark","name":"lsp.inlay_hint","count":447,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":15,"duration":154.119},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":15,"duration":154.386},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":13,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":13,"duration":0.21},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":13,"duration":0.295},
{"type":"measure","name":"lsp.diagnostic","count":915,"duration":154.951},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":916,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":125,"duration":0.058},
{"type":"mark","name":"lsp.inlay_hint","count":448,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":440,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":440,"duration":8.85},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.testing_update","count":495,"duration":0.313},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":16,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",496]}},
{"type":"mark","name":"lsp.inlay_hint","count":449,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":25,"duration":0.034},
{"type":"mark","name":"tsc.op.op_load","count":308,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":308,"duration":0.041},
{"type":"mark","name":"tsc.op.op_resolve","count":1640,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1640,"duration":0.081},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":16,"duration":286.754},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":16,"duration":286.918},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":14,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":14,"duration":160.878},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":14,"duration":161.136},
{"type":"measure","name":"lsp.diagnostic","count":917,"duration":448.462},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":126,"duration":0.532},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":918,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":450,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":441,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":441,"duration":18.125},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":496,"duration":0.315},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":17,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",497]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":26,"duration":0.017},
{"type":"mark","name":"tsc.op.op_load","count":309,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":309,"duration":0.061},
{"type":"mark","name":"tsc.op.op_resolve","count":1641,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1641,"duration":0.07},
{"type":"mark","name":"lsp.inlay_hint","count":451,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":17,"duration":146.957},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":17,"duration":147.223},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":15,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":15,"duration":76.719},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":15,"duration":76.847},
{"type":"measure","name":"lsp.diagnostic","count":919,"duration":224.297},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":127,"duration":0.059},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":920,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":452,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":442,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":442,"duration":9.348},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":497,"duration":0.282},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":18,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",498]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":27,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":310,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":310,"duration":0.085},
{"type":"mark","name":"tsc.op.op_resolve","count":1642,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1642,"duration":0.073},
{"type":"mark","name":"lsp.inlay_hint","count":453,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":18,"duration":206.411},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":18,"duration":207.682},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":16,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":16,"duration":0.116},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":16,"duration":0.171},
{"type":"measure","name":"lsp.diagnostic","count":921,"duration":208.065},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":128,"duration":0.06},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":922,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":454,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":443,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":443,"duration":9.123},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":19,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",499]}},
{"type":"measure","name":"lsp.testing_update","count":498,"duration":1.895},
{"type":"mark","name":"lsp.inlay_hint","count":455,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":28,"duration":0.031},
{"type":"mark","name":"tsc.op.op_load","count":311,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":311,"duration":0.044},
{"type":"mark","name":"tsc.op.op_resolve","count":1643,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1643,"duration":0.068},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":19,"duration":217.702},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":19,"duration":217.9},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":17,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":17,"duration":133.54},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":17,"duration":134.073},
{"type":"measure","name":"lsp.diagnostic","count":923,"duration":352.192},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":129,"duration":0.058},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":924,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":456,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":444,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":444,"duration":6.457},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":499,"duration":0.272},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":20,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",500]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":29,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":312,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":312,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1644,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1644,"duration":4.107},
{"type":"mark","name":"lsp.inlay_hint","count":457,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":20,"duration":140.022},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":20,"duration":140.279},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":18,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":18,"duration":0.092},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":18,"duration":0.167},
{"type":"measure","name":"lsp.diagnostic","count":925,"duration":140.656},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":130,"duration":0.061},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":926,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":458,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":445,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":445,"duration":5.897},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":21,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",501]}},
{"type":"measure","name":"lsp.testing_update","count":500,"duration":0.29},
{"type":"mark","name":"lsp.inlay_hint","count":459,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":30,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":313,"args":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":313,"duration":0.046},
{"type":"mark","name":"tsc.op.op_resolve","count":1645,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"https://esm.sh/@supabase/supabase-js@2"],[false,"../_shared/edge-auth.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1645,"duration":0.054},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":132,"duration":0.044},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":21,"duration":215.246},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":21,"duration":215.376},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":19,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":19,"duration":73.128},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":19,"duration":73.24},
{"type":"measure","name":"lsp.diagnostic","count":927,"duration":288.818},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":131,"duration":0.057},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":928,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":460,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_open","count":66,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","languageId":"typescript","version":1,"text":"import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\n\n/**\n * ProspectPro v4.3 - Advanced Enrichment Orchestrator Edge Function\n * Coordinates all enrichment services with intelligent routing and cost optimization\n *\n * Progressive Enrichment Waterfall:\n * 1. Free Validation (Google Places, basic checks) - $0.00\n * 2. Business License Lookup (professional validation) - $0.03\n * 3. Company Enrichment (PeopleDataLabs) - $0.05-$0.10\n * 4. Hunter.io Email Discovery (domain search, email finder) - $0.034\n * 5. NeverBounce Email Verification (validate discovered emails) - $0.008\n * 6. Person Enrichment (PeopleDataLabs executives) - $0.20-$0.28\n * 7. Apollo Enrichment (optional, premium contacts) - $1.00\n * 8. Compliance Verification (FINRA, specialized) - $0.40-$1.25\n *\n * Cost Optimization: 81% cheaper than Apollo ($0.19 vs $1.00 average)\n * Industry Routing: Financial services → FINRA (99.6% savings)\n *\n * Features:\n * - Progressive enrichment waterfall with cost controls\n * - Industry-specific routing (healthcare, financial, legal)\n * - Circuit breaker pattern for fault tolerance\n * - 90-day intelligent caching for cost efficiency\n * - Budget constraints with early termination\n * - Confidence scoring and quality thresholds\n */\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\ninterface EnrichmentRequest {\n  businessName: string;\n  domain?: string;\n  address?: string;\n  phone?: string;\n  website?: string;\n  industry?: string;\n  state?: string;\n\n  // Progressive enrichment options\n  includeBusinessLicense?: boolean;\n  includeCompanyEnrichment?: boolean;\n  discoverEmails?: boolean;\n  verifyEmails?: boolean;\n  includePersonEnrichment?: boolean;\n  apolloEnrichment?: boolean;\n  complianceVerification?: boolean;\n\n  // Control parameters\n  maxCostPerBusiness?: number;\n  minConfidenceScore?: number;\n  tier?: \"starter\" | \"professional\" | \"enterprise\" | \"compliance\";\n  executiveContactsOnly?: boolean;\n}\n\ninterface EnrichmentResponse {\n  success: boolean;\n  businessName: string;\n  originalData: {\n    domain?: string;\n    address?: string;\n    phone?: string;\n    website?: string;\n  };\n  enrichedData: {\n    emails?: Array<{\n      email: string;\n      confidence: number;\n      verified: boolean;\n      type?: string;\n      firstName?: string;\n      lastName?: string;\n      position?: string;\n    }>;\n    businessLicense?: {\n      isValid: boolean;\n      licenseNumber?: string;\n      status?: string;\n      expirationDate?: string;\n      professionalType?: string;\n      source: string;\n    };\n    companyInfo?: {\n      name?: string;\n      industry?: string;\n      size?: string;\n      founded?: number;\n      revenue?: string;\n      website?: string;\n      description?: string;\n      source: string;\n    };\n    executiveContacts?: Array<{\n      name: string;\n      title: string;\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n    }>;\n    personEnrichment?: Array<{\n      name: string;\n      title: string;\n      email?: string;\n      phone?: string;\n      linkedin?: string;\n      confidence: number;\n    }>;\n    complianceData?: {\n      finraCheck?: boolean;\n      sanctionsCheck?: boolean;\n      riskScore?: number;\n      findings?: Array<{\n        type: string;\n        description: string;\n        severity: string;\n      }>;\n    };\n  };\n  confidenceScore: number;\n  totalCost: number;\n  costBreakdown: {\n    businessLicenseCost: number;\n    companyEnrichmentCost: number;\n    hunterCost: number;\n    neverBounceCost: number;\n    personEnrichmentCost: number;\n    apolloCost: number;\n    complianceCost: number;\n  };\n  processingMetadata: {\n    servicesUsed: string[];\n    servicesSkipped: string[];\n    processingTime: number;\n    errors: Array<{\n      service: string;\n      error: string;\n    }>;\n  };\n}\n\nclass EnrichmentOrchestrator {\n  private supabaseUrl: string;\n  private supabaseKey: string;\n  private maxCostPerBusiness: number;\n\n  constructor(\n    supabaseUrl: string,\n    supabaseKey: string,\n    maxCostPerBusiness = 2.0\n  ) {\n    this.supabaseUrl = supabaseUrl;\n    this.supabaseKey = supabaseKey;\n    this.maxCostPerBusiness = maxCostPerBusiness;\n  }\n\n  /**\n   * Orchestrate all enrichment services for a single business\n   */\n  async enrichBusiness(\n    request: EnrichmentRequest\n  ): Promise<EnrichmentResponse> {\n    const startTime = Date.now();\n\n    const response: EnrichmentResponse = {\n      success: false,\n      businessName: request.businessName,\n      originalData: {\n        domain: request.domain,\n        address: request.address,\n        phone: request.phone,\n        website: request.website,\n      },\n      enrichedData: {},\n      confidenceScore: 0,\n      totalCost: 0,\n      costBreakdown: {\n        businessLicenseCost: 0,\n        companyEnrichmentCost: 0,\n        hunterCost: 0,\n        neverBounceCost: 0,\n        personEnrichmentCost: 0,\n        apolloCost: 0,\n        complianceCost: 0,\n      },\n      processingMetadata: {\n        servicesUsed: [],\n        servicesSkipped: [],\n        processingTime: 0,\n        errors: [],\n      },\n    };\n\n    let currentCost = 0;\n\n    try {\n      // Apply tier-based defaults\n      const tierDefaults = this.getTierDefaults(request.tier || \"professional\");\n      const enrichmentConfig = { ...tierDefaults, ...request };\n\n      // Progressive Enrichment Waterfall - Stage 1: Business License Validation ($0.03)\n      if (\n        enrichmentConfig.includeBusinessLicense &&\n        request.businessName &&\n        request.state\n      ) {\n        try {\n          console.log(\n            `🏛️ Stage 1: Business License Lookup for ${request.businessName} in ${request.state}`\n          );\n\n          const licenseResult = await this.callBusinessLicense({\n            action: \"searchCompany\",\n            companyName: request.businessName,\n            state: request.state,\n          });\n\n          if (licenseResult.success && licenseResult.data) {\n            response.enrichedData.businessLicense = {\n              isValid: licenseResult.data.isValid || false,\n              licenseNumber: licenseResult.data.licenseNumber,\n              status: licenseResult.data.status,\n              source: \"business_license_lookup\",\n            };\n\n            response.costBreakdown.businessLicenseCost =\n              licenseResult.cost || 0.03;\n            currentCost += response.costBreakdown.businessLicenseCost;\n            response.processingMetadata.servicesUsed.push(\"business_license\");\n\n            console.log(\n              `✅ Business license validated: ${\n                licenseResult.data.isValid ? \"Valid\" : \"Not found\"\n              }`\n            );\n          }\n        } catch (error) {\n          console.error(\"Business License Lookup error:\", error);\n          response.processingMetadata.errors.push({\n            service: \"business_license\",\n            error: error instanceof Error ? error.message : \"Unknown error\",\n          });\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 2: Company Enrichment ($0.05-$0.10)\n      if (\n        enrichmentConfig.includeCompanyEnrichment &&\n        (request.businessName || request.website)\n      ) {\n        const companyEnrichmentCost = 0.1;\n\n        if (currentCost + companyEnrichmentCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`🏢 Stage 2: Company Enrichment via PeopleDataLabs`);\n\n            const companyParams: Record<string, unknown> = {\n              action: \"enrichCompany\",\n            };\n\n            if (request.website) {\n              companyParams.website = request.website;\n            } else if (request.businessName) {\n              companyParams.companyName = request.businessName;\n            }\n\n            const companyResult = await this.callPeopleDataLabs(companyParams);\n\n            if (companyResult.success && companyResult.data) {\n              response.enrichedData.companyInfo = {\n                name: companyResult.data.name,\n                industry: companyResult.data.industry,\n                size: companyResult.data.size,\n                founded: companyResult.data.founded,\n                revenue: companyResult.data.revenue,\n                description: companyResult.data.description,\n                source: \"peopledatalabs\",\n              };\n\n              response.costBreakdown.companyEnrichmentCost =\n                companyResult.cost || companyEnrichmentCost;\n              currentCost += response.costBreakdown.companyEnrichmentCost;\n              response.processingMetadata.servicesUsed.push(\n                \"peopledatalabs_company\"\n              );\n\n              console.log(\n                `✅ Company enriched: ${\n                  companyResult.data.name || \"Data retrieved\"\n                }`\n              );\n            }\n          } catch (error) {\n            console.error(\"Company enrichment error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"peopledatalabs_company\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping company enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"peopledatalabs_company (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 3: Email Discovery ($0.034)\n      if (enrichmentConfig.discoverEmails && request.domain) {\n        const emailDiscoveryCost = 0.034;\n\n        if (currentCost + emailDiscoveryCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(\n              `📧 Stage 3: Email Discovery for ${request.domain} via Hunter.io`\n            );\n\n            const hunterResult = await this.callHunterIO({\n              action: \"domain-search\",\n              domain: request.domain,\n              limit: 10,\n            });\n\n            if (hunterResult.success && hunterResult.data?.emails) {\n              response.enrichedData.emails = hunterResult.data.emails;\n              response.costBreakdown.hunterCost =\n                hunterResult.cost || emailDiscoveryCost;\n              currentCost += response.costBreakdown.hunterCost;\n              response.processingMetadata.servicesUsed.push(\"hunter_io\");\n\n              console.log(\n                `✅ Found ${hunterResult.data.emails.length} emails via Hunter.io`\n              );\n            }\n          } catch (error) {\n            console.error(\"Hunter.io error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"hunter_io\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping email discovery - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"hunter_io (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 4: Email Verification ($0.008 per email)\n      if (\n        enrichmentConfig.verifyEmails &&\n        response.enrichedData.emails &&\n        response.enrichedData.emails.length > 0\n      ) {\n        const emailVerificationCost =\n          response.enrichedData.emails.length * 0.008;\n\n        if (currentCost + emailVerificationCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(\n              `✅ Stage 4: Verifying ${response.enrichedData.emails.length} emails via NeverBounce`\n            );\n\n            const emailsToVerify = response.enrichedData.emails.map(\n              (e) => e.email\n            );\n            const neverBounceResult = await this.callNeverBounce({\n              action: \"verify-batch\",\n              emails: emailsToVerify,\n            });\n\n            if (neverBounceResult.success && neverBounceResult.data?.results) {\n              response.enrichedData.emails = response.enrichedData.emails.map(\n                (email) => {\n                  const verification = neverBounceResult.data?.results.find(\n                    (r: { email: string }) => r.email === email.email\n                  );\n\n                  return {\n                    ...email,\n                    verified: verification?.result === \"valid\",\n                    verificationResult: verification?.result,\n                  };\n                }\n              );\n\n              response.costBreakdown.neverBounceCost =\n                neverBounceResult.cost || emailVerificationCost;\n              currentCost += response.costBreakdown.neverBounceCost;\n              response.processingMetadata.servicesUsed.push(\"neverbounce\");\n\n              const verifiedCount = response.enrichedData.emails.filter(\n                (e) => e.verified\n              ).length;\n              console.log(\n                `✅ Verified ${verifiedCount}/${response.enrichedData.emails.length} emails`\n              );\n            }\n          } catch (error) {\n            console.error(\"NeverBounce error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"neverbounce\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping email verification - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"neverbounce (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 5: Person Enrichment ($0.20-$0.28)\n      if (enrichmentConfig.includePersonEnrichment && request.businessName) {\n        const personEnrichmentCost = 0.28;\n\n        if (currentCost + personEnrichmentCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`� Stage 5: Person Enrichment for executives`);\n\n            const personResult = await this.callPeopleDataLabs({\n              action: \"searchPerson\",\n              companyName: request.businessName,\n              jobTitle: \"CEO OR Owner OR President OR Director\",\n              minLikelihood: 7,\n            });\n            if (personResult.success && personResult.data?.results) {\n              response.enrichedData.personEnrichment =\n                personResult.data.results.map((person: any) => ({\n                  name: person.name,\n                  title: person.title,\n                  email: person.email,\n                  phone: person.phone,\n                  linkedin: person.linkedin,\n                  confidence: person.likelihood,\n                }));\n\n              response.costBreakdown.personEnrichmentCost =\n                personResult.cost || personEnrichmentCost;\n              currentCost += response.costBreakdown.personEnrichmentCost;\n              response.processingMetadata.servicesUsed.push(\n                \"peopledatalabs_person\"\n              );\n\n              console.log(\n                `✅ Found ${response.enrichedData.personEnrichment.length} executive contacts`\n              );\n            }\n          } catch (error) {\n            console.error(\"Person enrichment error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"peopledatalabs_person\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping person enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\n            \"peopledatalabs_person (budget)\"\n          );\n        }\n      }\n\n      // Progressive Enrichment Waterfall - Stage 6: Apollo Premium ($1.00)\n      if (enrichmentConfig.apolloEnrichment && request.domain) {\n        const apolloCost = 1.0;\n\n        if (currentCost + apolloCost <= this.maxCostPerBusiness) {\n          try {\n            console.log(`� Stage 6: Premium Apollo Enrichment`);\n\n            // Placeholder for Apollo implementation\n            await new Promise((resolve) => setTimeout(resolve, 100));\n\n            response.enrichedData.executiveContacts = [\n              {\n                name: \"Executive Contact (Apollo)\",\n                title: \"Owner/CEO\",\n                email: `contact@${request.domain}`,\n              },\n            ];\n\n            response.costBreakdown.apolloCost = apolloCost;\n            currentCost += apolloCost;\n            response.processingMetadata.servicesUsed.push(\"apollo\");\n\n            console.log(`✅ Apollo executive contacts retrieved`);\n          } catch (error) {\n            console.error(\"Apollo error:\", error);\n            response.processingMetadata.errors.push({\n              service: \"apollo\",\n              error: error instanceof Error ? error.message : \"Unknown error\",\n            });\n          }\n        } else {\n          console.warn(`⚠️ Skipping Apollo enrichment - would exceed budget`);\n          response.processingMetadata.servicesSkipped.push(\"apollo (budget)\");\n        }\n      }\n\n      // Calculate final confidence score and complete response\n      response.confidenceScore = this.calculateConfidenceScore(response);\n      response.totalCost = currentCost;\n      response.success = true;\n      response.processingMetadata.processingTime = Date.now() - startTime;\n\n      console.log(\n        `✅ Progressive enrichment complete: ${\n          response.businessName\n        } - Confidence: ${\n          response.confidenceScore\n        }% - Cost: $${response.totalCost.toFixed(3)}`\n      );\n\n      return response;\n    } catch (error) {\n      console.error(\"Enrichment orchestration error:\", error);\n      response.processingMetadata.processingTime = Date.now() - startTime;\n      response.processingMetadata.errors.push({\n        service: \"orchestrator\",\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      });\n      return response;\n    }\n  }\n\n  /**\n   * Get tier-based enrichment defaults\n   */\n  private getTierDefaults(tier: string) {\n    const tierConfigs = {\n      starter: {\n        includeBusinessLicense: false,\n        includeCompanyEnrichment: false,\n        discoverEmails: true,\n        verifyEmails: false,\n        includePersonEnrichment: false,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 0.5,\n      },\n      professional: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: false,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 1.5,\n      },\n      enterprise: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: true,\n        apolloEnrichment: false,\n        complianceVerification: false,\n        maxCostPerBusiness: 3.5,\n      },\n      compliance: {\n        includeBusinessLicense: true,\n        includeCompanyEnrichment: true,\n        discoverEmails: true,\n        verifyEmails: true,\n        includePersonEnrichment: true,\n        apolloEnrichment: true,\n        complianceVerification: true,\n        maxCostPerBusiness: 7.5,\n      },\n    };\n\n    return (\n      tierConfigs[tier as keyof typeof tierConfigs] || tierConfigs.professional\n    );\n  }\n\n  /**\n   * Call Business License Lookup Edge Function\n   */\n  private async callBusinessLicense(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-business-license`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Call PeopleDataLabs Edge Function\n   */\n  private async callPeopleDataLabs(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-pdl`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Call Hunter.io Edge Function\n   */\n  private async callHunterIO(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-hunter`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Call NeverBounce Edge Function\n   */\n  private async callNeverBounce(params: Record<string, unknown>) {\n    const response = await fetch(\n      `${this.supabaseUrl}/functions/v1/enrichment-neverbounce`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      }\n    );\n\n    return await response.json();\n  }\n\n  /**\n   * Calculate confidence score based on enriched data\n   */\n  private calculateConfidenceScore(response: EnrichmentResponse): number {\n    let score = 40; // Base score\n\n    // Business license validation bonus\n    if (response.enrichedData.businessLicense?.isValid) {\n      score += 20;\n    } else if (response.enrichedData.businessLicense) {\n      score += 5; // Attempted validation\n    }\n\n    // Company enrichment bonus\n    if (response.enrichedData.companyInfo) {\n      score += 15;\n      // Additional bonus for complete company data\n      if (\n        response.enrichedData.companyInfo.industry &&\n        response.enrichedData.companyInfo.size\n      ) {\n        score += 5;\n      }\n    }\n\n    // Email discovery bonus\n    if (\n      response.enrichedData.emails &&\n      response.enrichedData.emails.length > 0\n    ) {\n      score += 10;\n\n      // Verified emails bonus\n      const verifiedEmails = response.enrichedData.emails.filter(\n        (e) => e.verified\n      );\n      if (verifiedEmails.length > 0) {\n        score += 15;\n      }\n    }\n\n    // Person enrichment bonus\n    if (\n      response.enrichedData.personEnrichment &&\n      response.enrichedData.personEnrichment.length > 0\n    ) {\n      score += 10;\n      // High confidence person data\n      const highConfidencePersons =\n        response.enrichedData.personEnrichment.filter((p) => p.confidence > 8);\n      if (highConfidencePersons.length > 0) {\n        score += 10;\n      }\n    }\n\n    // Executive contacts bonus (Apollo)\n    if (\n      response.enrichedData.executiveContacts &&\n      response.enrichedData.executiveContacts.length > 0\n    ) {\n      score += 5;\n    }\n\n    // Compliance verification bonus\n    if (response.enrichedData.complianceData) {\n      score += 5;\n    }\n\n    return Math.min(score, 100);\n  }\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  try {\n    console.log(`🎯 Enrichment Orchestrator Edge Function`);\n\n    // Get Supabase credentials\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseKey = Deno.env.get(\"SUPABASE_SERVICE_ROLE_KEY\");\n\n    if (!supabaseUrl || !supabaseKey) {\n      throw new Error(\"Supabase credentials not configured\");\n    }\n\n    // Parse request\n    const requestData: EnrichmentRequest = await req.json();\n\n    console.log(\n      `📋 Enriching business: ${requestData.businessName} (Domain: ${\n        requestData.domain || \"N/A\"\n      })`\n    );\n\n    // Initialize orchestrator\n    const orchestrator = new EnrichmentOrchestrator(\n      supabaseUrl,\n      supabaseKey,\n      requestData.maxCostPerBusiness || 2.0\n    );\n\n    // Enrich business\n    const result = await orchestrator.enrichBusiness(requestData);\n\n    return new Response(\n      JSON.stringify({\n        ...result,\n        timestamp: new Date().toISOString(),\n        version: \"1.0\",\n      }),\n      {\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  } catch (error) {\n    console.error(\"Orchestrator error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n});\n"}}},
{"type":"measure","name":"lsp.did_open","count":66,"duration":5.421},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":501,"duration":0.322},
{"type":"mark","name":"lsp.did_change_batched","count":446,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":446,"duration":4.427},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":502,"duration":0.313},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":22,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",503]}},
{"type":"mark","name":"tsc.op.op_script_names"},
{"type":"measure","name":"tsc.op.op_script_names","count":18,"duration":2.09},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":31,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":314,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":314,"duration":0.076},
{"type":"mark","name":"tsc.op.op_resolve","count":1646,"args":{"base":"file:///workspaces/ProspectPro/src/App.tsx","specifiers":[[false,"react-router-dom"],[false,"./components/Layout"],[false,"./contexts/AuthContext"],[false,"./pages/AdminPanel"],[false,"./pages/AuthCallback"],[false,"./pages/BusinessDiscovery"],[false,"./pages/Campaign"],[false,"./pages/CampaignProgress"],[false,"./pages/Dashboard"],[false,"./pages/Results"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1646,"duration":0.175},
{"type":"mark","name":"tsc.op.op_resolve","count":1647,"args":{"base":"file:///workspaces/ProspectPro/src/components/AuthComponent.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../contexts/AuthContext"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1647,"duration":0.049},
{"type":"mark","name":"tsc.op.op_resolve","count":1648,"args":{"base":"file:///workspaces/ProspectPro/src/components/GeographicSelector.tsx","specifiers":[[false,"react"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1648,"duration":0.015},
{"type":"mark","name":"tsc.op.op_resolve","count":1649,"args":{"base":"file:///workspaces/ProspectPro/src/components/Layout.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"./AuthComponent"],[false,"./ThemeToggle"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1649,"duration":0.072},
{"type":"mark","name":"tsc.op.op_resolve","count":1650,"args":{"base":"file:///workspaces/ProspectPro/src/components/MultiSelectBusinessTypes.tsx","specifiers":[[false,"react"],[false,"../constants/businessTaxonomy"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1650,"duration":0.037},
{"type":"mark","name":"tsc.op.op_resolve","count":1651,"args":{"base":"file:///workspaces/ProspectPro/src/components/PaymentMethods.tsx","specifiers":[[false,"@supabase/supabase-js"],[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1651,"duration":0.031},
{"type":"mark","name":"tsc.op.op_resolve","count":1652,"args":{"base":"file:///workspaces/ProspectPro/src/components/TierSelector.tsx","specifiers":[[false,"react"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1652,"duration":0.029},
{"type":"mark","name":"tsc.op.op_resolve","count":1653,"args":{"base":"file:///workspaces/ProspectPro/src/pages/AuthCallback.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../lib/supabase"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1653,"duration":0.033},
{"type":"mark","name":"tsc.op.op_resolve","count":1654,"args":{"base":"file:///workspaces/ProspectPro/src/pages/BusinessDiscovery.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/GeographicSelector"],[false,"../components/MultiSelectBusinessTypes"],[false,"../components/ProgressDisplay"],[false,"../components/TierSelector"],[false,"../constants/businessTaxonomy"],[false,"../hooks/useBusinessDiscovery"],[false,"../lib/supabase"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1654,"duration":0.156},
{"type":"mark","name":"tsc.op.op_resolve","count":1655,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Campaign.tsx","specifiers":[[false,"react"],[false,"react-router-dom"],[false,"../components/EnrichmentButton"],[false,"../components/ProgressDisplay"],[false,"../hooks/useBusinessDiscovery"],[false,"../stores/campaignStore"],[false,"../types"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1655,"duration":0.125},
{"type":"mark","name":"tsc.op.op_resolve","count":1656,"args":{"base":"file:///workspaces/ProspectPro/src/pages/Results.tsx","specifiers":[[false,"react"],[false,"../stores/campaignStore"],[false,"../utils/exportLeadsToCsv"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1656,"duration":0.053},
{"type":"mark","name":"tsc.op.op_resolve","count":1657,"args":{"base":"file:///workspaces/ProspectPro/src/utils/exportLeadsToCsv.ts","specifiers":[[false,"../types"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1657,"duration":0.043},
{"type":"mark","name":"tsc.op.op_resolve","count":1658,"args":{"base":"file:///workspaces/ProspectPro/src/vite-env.d.ts","specifiers":[[false,"vite/client"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1658,"duration":0.02},
{"type":"measure","name":"lsp.diagnostic","count":929,"duration":31.314},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.op.op_resolve","count":1659,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1659,"duration":0.041},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":22,"duration":71.997},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":23,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",503]}},
{"type":"mark","name":"lsp.inlay_hint","count":461,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":23,"duration":89.751},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":23,"duration":127.128},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":20,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":20,"duration":0.121},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":20,"duration":0.186},
{"type":"measure","name":"lsp.diagnostic","count":930,"duration":130.231},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":24,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",503]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":24,"duration":191.673},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":24,"duration":192.829},
{"type":"measure","name":"lsp.diagnostic","count":931,"duration":193.106},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":132,"duration":0.077},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":932,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":462,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":447,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":447,"duration":3.513},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":25,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",504]}},
{"type":"measure","name":"lsp.testing_update","count":503,"duration":0.256},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":32,"duration":0.019},
{"type":"mark","name":"tsc.op.op_load","count":315,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":315,"duration":0.071},
{"type":"mark","name":"tsc.op.op_resolve","count":1660,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1660,"duration":0.052},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":25,"duration":63.089},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":25,"duration":63.249},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":21,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":21,"duration":74.8},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":21,"duration":74.919},
{"type":"measure","name":"lsp.diagnostic","count":933,"duration":138.359},
{"type":"mark","name":"lsp.inlay_hint","count":463,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":133,"duration":0.061},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":26,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",504]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":26,"duration":108.227},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":26,"duration":108.469},
{"type":"measure","name":"lsp.diagnostic","count":934,"duration":108.688},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":935,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":464,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":448,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":448,"duration":3.706},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":27,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",505]}},
{"type":"measure","name":"lsp.testing_update","count":504,"duration":0.258},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":33,"duration":0.02},
{"type":"mark","name":"tsc.op.op_load","count":316,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":316,"duration":0.078},
{"type":"mark","name":"tsc.op.op_resolve","count":1661,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1661,"duration":0.243},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":27,"duration":67.202},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":27,"duration":67.356},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":22,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":22,"duration":0.131},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":22,"duration":0.228},
{"type":"measure","name":"lsp.diagnostic","count":936,"duration":67.788},
{"type":"mark","name":"lsp.inlay_hint","count":465,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":28,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",505]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":28,"duration":117.708},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":28,"duration":117.878},
{"type":"measure","name":"lsp.diagnostic","count":937,"duration":119.682},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":938,"duration":0.001},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":134,"duration":0.06},
{"type":"mark","name":"lsp.inlay_hint","count":466,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_change_batched","count":449,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":449,"duration":6.836},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":505,"duration":0.266},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":29,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",506]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":34,"duration":0.035},
{"type":"mark","name":"tsc.op.op_load","count":317,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":317,"duration":0.051},
{"type":"mark","name":"tsc.op.op_resolve","count":1662,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1662,"duration":0.043},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":29,"duration":148.076},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":29,"duration":148.358},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":23,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":23,"duration":0.113},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":23,"duration":0.18},
{"type":"measure","name":"lsp.diagnostic","count":939,"duration":148.729},
{"type":"mark","name":"lsp.inlay_hint","count":467,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":135,"duration":0.058},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":30,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",506]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":30,"duration":105.681},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":30,"duration":105.92},
{"type":"measure","name":"lsp.diagnostic","count":940,"duration":106.191},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":941,"duration":0.002},
{"type":"mark","name":"lsp.inlay_hint","count":468,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":87,"character":21}}}},
{"type":"mark","name":"lsp.inlay_hint","count":469,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":92,"character":1}}}},
{"type":"mark","name":"lsp.inlay_hint","count":470,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":96,"character":0}}}},
{"type":"mark","name":"lsp.inlay_hint","count":471,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.code_lens_resolve","count":21,"args":{"range":{"start":{"line":22,"character":2},"end":{"line":22,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":19,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":22,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"tsc.host.findReferences","count":19,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",696]}},
{"type":"mark","name":"lsp.code_lens_resolve","count":22,"args":{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":20,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":23,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":23,"args":{"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":17}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":21,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":24,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":24,"args":{"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":18}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":22,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":25,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":25,"args":{"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":15}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":23,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":26,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":26,"args":{"range":{"start":{"line":27,"character":2},"end":{"line":27,"character":10}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":24,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":27,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":27,"args":{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":13}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":25,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":28,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":28,"args":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":12}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":26,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":29,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":29,"args":{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":11}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":27,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":30,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":30,"args":{"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":28}},"data":{"source":"implementations","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.goto_implementation","count":3,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":33,"character":17}}},
{"type":"mark","name":"tsc.request.getImplementationAtPosition"},
{"type":"mark","name":"lsp.code_lens_resolve","count":31,"args":{"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":28}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":28,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":33,"character":17},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"mark","name":"lsp.code_lens_resolve","count":32,"args":{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":5}},"data":{"source":"references","uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"}}},
{"type":"mark","name":"lsp.references","count":29,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"position":{"line":34,"character":2},"context":{"includeDeclaration":false}}},
{"type":"mark","name":"tsc.request.findReferences"},
{"type":"measure","name":"tsc.host.findReferences","count":19,"duration":83.405},
{"type":"mark","name":"tsc.host.findReferences","count":20,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",729]}},
{"type":"measure","name":"tsc.request.findReferences","count":19,"duration":83.623},
{"type":"measure","name":"lsp.references","count":19,"duration":83.964},
{"type":"measure","name":"lsp.code_lens_resolve","count":21,"duration":84.031},
{"type":"measure","name":"tsc.host.findReferences","count":20,"duration":2.877},
{"type":"mark","name":"tsc.host.findReferences","count":21,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",759]}},
{"type":"measure","name":"tsc.request.findReferences","count":20,"duration":86.284},
{"type":"measure","name":"lsp.references","count":20,"duration":86.507},
{"type":"measure","name":"lsp.code_lens_resolve","count":22,"duration":86.55},
{"type":"measure","name":"tsc.host.findReferences","count":21,"duration":2.065},
{"type":"measure","name":"tsc.request.findReferences","count":21,"duration":88.018},
{"type":"measure","name":"lsp.references","count":21,"duration":88.092},
{"type":"measure","name":"lsp.code_lens_resolve","count":23,"duration":88.111},
{"type":"mark","name":"tsc.host.findReferences","count":22,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",826]}},
{"type":"measure","name":"tsc.host.findReferences","count":22,"duration":0.824},
{"type":"mark","name":"tsc.host.findReferences","count":23,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",862]}},
{"type":"measure","name":"tsc.request.findReferences","count":22,"duration":89.056},
{"type":"measure","name":"lsp.references","count":22,"duration":89.132},
{"type":"measure","name":"lsp.code_lens_resolve","count":24,"duration":89.157},
{"type":"measure","name":"tsc.host.findReferences","count":23,"duration":2.53},
{"type":"mark","name":"tsc.host.findReferences","count":24,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",895]}},
{"type":"measure","name":"tsc.request.findReferences","count":23,"duration":91.565},
{"type":"measure","name":"lsp.references","count":23,"duration":91.711},
{"type":"measure","name":"lsp.code_lens_resolve","count":25,"duration":91.734},
{"type":"measure","name":"tsc.host.findReferences","count":24,"duration":1.179},
{"type":"mark","name":"tsc.host.findReferences","count":25,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",917]}},
{"type":"measure","name":"tsc.request.findReferences","count":24,"duration":93.367},
{"type":"measure","name":"lsp.references","count":24,"duration":93.437},
{"type":"measure","name":"lsp.code_lens_resolve","count":26,"duration":93.455},
{"type":"measure","name":"tsc.host.findReferences","count":25,"duration":1.082},
{"type":"mark","name":"tsc.host.findReferences","count":26,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",942]}},
{"type":"measure","name":"tsc.request.findReferences","count":25,"duration":93.72},
{"type":"measure","name":"lsp.references","count":25,"duration":93.794},
{"type":"measure","name":"lsp.code_lens_resolve","count":27,"duration":93.813},
{"type":"measure","name":"tsc.host.findReferences","count":26,"duration":1.742},
{"type":"mark","name":"tsc.host.findReferences","count":27,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",965]}},
{"type":"measure","name":"tsc.request.findReferences","count":26,"duration":95.462},
{"type":"measure","name":"lsp.references","count":26,"duration":95.529},
{"type":"measure","name":"lsp.code_lens_resolve","count":28,"duration":95.546},
{"type":"measure","name":"tsc.host.findReferences","count":27,"duration":1.539},
{"type":"mark","name":"tsc.host.getImplementationAtPosition","count":3,"args":{"GetImplementationAtPosition":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",1005]}},
{"type":"measure","name":"tsc.request.findReferences","count":27,"duration":96.967},
{"type":"measure","name":"lsp.references","count":27,"duration":97.034},
{"type":"measure","name":"lsp.code_lens_resolve","count":29,"duration":97.051},
{"type":"measure","name":"tsc.host.getImplementationAtPosition","count":3,"duration":7.507},
{"type":"measure","name":"tsc.request.getImplementationAtPosition","count":3,"duration":104.437},
{"type":"mark","name":"tsc.host.findReferences","count":28,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",1005]}},
{"type":"measure","name":"lsp.goto_implementation","count":3,"duration":104.543},
{"type":"measure","name":"lsp.code_lens_resolve","count":30,"duration":104.565},
{"type":"measure","name":"tsc.host.findReferences","count":28,"duration":5.226},
{"type":"mark","name":"tsc.host.findReferences","count":29,"args":{"FindReferences":["file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts",1021]}},
{"type":"measure","name":"tsc.request.findReferences","count":28,"duration":109.719},
{"type":"measure","name":"lsp.references","count":28,"duration":109.946},
{"type":"measure","name":"lsp.code_lens_resolve","count":31,"duration":109.992},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":133,"duration":0.008},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":134,"duration":0.006},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":135,"duration":0.005},
{"type":"mark","name":"tsc.op.op_is_node_file"},
{"type":"measure","name":"tsc.op.op_is_node_file","count":136,"duration":0.005},
{"type":"measure","name":"tsc.host.findReferences","count":29,"duration":23.606},
{"type":"measure","name":"tsc.request.findReferences","count":29,"duration":133.335},
{"type":"measure","name":"lsp.references","count":29,"duration":133.499},
{"type":"measure","name":"lsp.code_lens_resolve","count":32,"duration":133.571},
{"type":"mark","name":"lsp.did_change_batched","count":450,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":450,"duration":14.701},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":506,"duration":0.251},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":31,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",507]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":35,"duration":0.018},
{"type":"mark","name":"tsc.op.op_load","count":318,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":318,"duration":0.082},
{"type":"mark","name":"tsc.op.op_resolve","count":1663,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1663,"duration":0.052},
{"type":"mark","name":"lsp.inlay_hint","count":472,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":31,"duration":90.532},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":31,"duration":90.815},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":24,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":24,"duration":0.117},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":24,"duration":0.188},
{"type":"measure","name":"lsp.diagnostic","count":942,"duration":91.187},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":32,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",507]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":32,"duration":138.069},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":32,"duration":138.23},
{"type":"measure","name":"lsp.diagnostic","count":943,"duration":138.7},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":136,"duration":0.058},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":944,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":473,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":451,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":451,"duration":5.212},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":507,"duration":0.291},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":33,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",508]}},
{"type":"mark","name":"lsp.inlay_hint","count":474,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":36,"duration":0.033},
{"type":"mark","name":"tsc.op.op_load","count":319,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":319,"duration":0.06},
{"type":"mark","name":"tsc.op.op_resolve","count":1664,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1664,"duration":0.047},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":33,"duration":190.621},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":33,"duration":190.775},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":25,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":25,"duration":0.174},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":25,"duration":0.251},
{"type":"measure","name":"lsp.diagnostic","count":945,"duration":192.487},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":34,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",508]}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":137,"duration":0.061},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":34,"duration":101.754},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":34,"duration":101.913},
{"type":"measure","name":"lsp.diagnostic","count":946,"duration":102.17},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":947,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":475,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":452,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":452,"duration":5.281},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":508,"duration":0.283},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":35,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",509]}},
{"type":"mark","name":"lsp.inlay_hint","count":476,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":37,"duration":0.042},
{"type":"mark","name":"tsc.op.op_load","count":320,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":320,"duration":0.092},
{"type":"mark","name":"tsc.op.op_resolve","count":1665,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1665,"duration":0.076},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":35,"duration":225.019},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":35,"duration":225.621},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":26,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":26,"duration":0.136},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":26,"duration":0.229},
{"type":"measure","name":"lsp.diagnostic","count":948,"duration":226.11},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":138,"duration":0.059},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":36,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",509]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":36,"duration":109.549},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":36,"duration":109.759},
{"type":"measure","name":"lsp.diagnostic","count":949,"duration":109.947},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":950,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":477,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":453,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":453,"duration":4.153},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":37,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",510]}},
{"type":"measure","name":"lsp.testing_update","count":509,"duration":0.257},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":38,"duration":0.036},
{"type":"mark","name":"tsc.op.op_load","count":321,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":321,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1666,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1666,"duration":0.054},
{"type":"mark","name":"lsp.inlay_hint","count":478,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":37,"duration":172.03},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":37,"duration":172.176},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":27,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":27,"duration":0.118},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":27,"duration":0.182},
{"type":"measure","name":"lsp.diagnostic","count":951,"duration":172.542},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":139,"duration":0.08},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":38,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",510]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":38,"duration":90.082},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":38,"duration":90.335},
{"type":"measure","name":"lsp.diagnostic","count":952,"duration":90.582},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":953,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":479,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":454,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"mark","name":"lsp.testing_update"},
{"type":"measure","name":"lsp.testing_update","count":510,"duration":0.277},
{"type":"measure","name":"lsp.did_change_batched","count":454,"duration":5.835},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":39,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",511]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":39,"duration":0.041},
{"type":"mark","name":"tsc.op.op_load","count":322,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":322,"duration":0.09},
{"type":"mark","name":"tsc.op.op_resolve","count":1667,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1667,"duration":0.05},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":39,"duration":184.725},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":39,"duration":184.888},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":28,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":28,"duration":0.165},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":28,"duration":0.246},
{"type":"measure","name":"lsp.diagnostic","count":954,"duration":187.194},
{"type":"mark","name":"lsp.inlay_hint","count":480,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":40,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",511]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":40,"duration":134.684},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":40,"duration":134.952},
{"type":"measure","name":"lsp.diagnostic","count":955,"duration":135.193},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":140,"duration":0.05},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":956,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":481,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":455,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":455,"duration":9.507},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":511,"duration":0.274},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":41,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",512]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":40,"duration":0.05},
{"type":"mark","name":"tsc.op.op_load","count":323,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":323,"duration":0.054},
{"type":"mark","name":"tsc.op.op_resolve","count":1668,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1668,"duration":0.038},
{"type":"mark","name":"lsp.inlay_hint","count":482,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":41,"duration":168.504},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":41,"duration":168.808},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":29,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":29,"duration":0.161},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":29,"duration":0.22},
{"type":"measure","name":"lsp.diagnostic","count":957,"duration":169.217},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":141,"duration":0.059},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":42,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",512]}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":42,"duration":88.64},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":42,"duration":88.809},
{"type":"measure","name":"lsp.diagnostic","count":958,"duration":89.019},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":959,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":483,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_batched","count":456,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"lsp.did_change_batched","count":456,"duration":4.539},
{"type":"mark","name":"lsp.testing_update"},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"measure","name":"lsp.testing_update","count":512,"duration":0.272},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":43,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts",513]}},
{"type":"mark","name":"tsc.op.op_script_version"},
{"type":"measure","name":"tsc.op.op_script_version","count":41,"duration":0.03},
{"type":"mark","name":"tsc.op.op_load","count":324,"args":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts"},
{"type":"measure","name":"tsc.op.op_load","count":324,"duration":0.056},
{"type":"mark","name":"tsc.op.op_resolve","count":1669,"args":{"base":"file:///workspaces/ProspectPro/supabase/functions/enrichment-orchestrator/index.ts","specifiers":[[false,"https://deno.land/std@0.168.0/http/server.ts"],[false,"../_shared/api-usage.ts"]]}},
{"type":"measure","name":"tsc.op.op_resolve","count":1669,"duration":0.038},
{"type":"mark","name":"lsp.inlay_hint","count":484,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":43,"duration":158.05},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":43,"duration":158.324},
{"type":"mark","name":"tsc.request.$getAmbientModules"},
{"type":"mark","name":"tsc.host.$getAmbientModules","count":30,"args":"GetAmbientModules"},
{"type":"measure","name":"tsc.host.$getAmbientModules","count":30,"duration":0.15},
{"type":"measure","name":"tsc.request.$getAmbientModules","count":30,"duration":0.229},
{"type":"measure","name":"lsp.diagnostic","count":960,"duration":158.729},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"mark","name":"tsc.request.$getDiagnostics"},
{"type":"mark","name":"tsc.host.$getDiagnostics","count":44,"args":{"GetDiagnostics":["file:///workspaces/ProspectPro/supabase/functions/business-discovery-background/index.ts",513]}},
{"type":"mark","name":"lsp.did_save"},
{"type":"measure","name":"lsp.did_save","count":142,"duration":0.07},
{"type":"measure","name":"tsc.host.$getDiagnostics","count":44,"duration":102.503},
{"type":"measure","name":"tsc.request.$getDiagnostics","count":44,"duration":102.676},
{"type":"measure","name":"lsp.diagnostic","count":961,"duration":102.959},
{"type":"mark","name":"lsp.diagnostic"},
{"type":"measure","name":"lsp.diagnostic","count":962,"duration":0.001},
{"type":"mark","name":"lsp.inlay_hint","count":485,"args":{"textDocument":{"uri":"file:///workspaces/ProspectPro/supabase/functions/_shared/api-usage.ts"},"range":{"start":{"line":0,"character":0},"end":{"line":100,"character":0}}}},
{"type":"mark","name":"lsp.did_change_watched_files","count":24,"args":{"changes":[{"uri":"file:///workspaces/ProspectPro/deno.lock","type":1}]}},
{"type":"measure","name":"lsp.did_change_watched_files","count":24,"duration":0.015},
