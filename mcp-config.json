{
  "version": "1.1",
  "description": "ProspectPro v4.3 MCP Server Configuration - Tier-Aware Background Discovery & Supabase CLI Guard",
  "servers": {
    "prospectpro-production": {
      "autoStart": true,
      "lazyLoad": true,
      "maxMemory": "192MB",
      "priority": "high",
      "description": "Production monitoring for tier-aware background discovery, enrichment, and session-enforced auth (32 tools)",
      "tools": [
        "environment_health_check",
        "github_actions_monitor",
        "dev_prod_config_diff",
        "cost_budget_monitor",
        "api_health_dashboard",
        "vault_api_key_status",
        "production_startup_validator",
        "github_workflow_optimizer",
        "get_system_health",
        "read_diagnostics",
        "analyze_logs",
        "validate_configuration",
        "generate_performance_report",
        "monitor_api_quotas",
        "validate_supabase_session",
        "diagnose_rls_failure",
        "analyze_campaign_costs",
        "predict_campaign_cost",
        "query_leads",
        "get_campaign_stats",
        "analyze_lead_quality",
        "get_api_costs",
        "test_google_places",
        "test_foursquare_places",
        "test_email_discovery",
        "verify_email",
        "get_api_usage_stats",
        "simulate_lead_discovery",
        "analyze_project_structure",
        "find_code_patterns",
        "analyze_api_clients",
        "check_fake_data_violations"
      ]
    },
    "prospectpro-development": {
      "autoStart": false,
      "onDemand": true,
      "maxMemory": "96MB",
      "priority": "medium",
      "description": "Development tools for API integration testing, edge function deployment, documentation automation (12 tools)",
      "tools": [
        "test_new_api_integration",
        "compare_api_sources",
        "benchmark_api_performance",
        "analyze_error_handling",
        "get_configuration_overview",
        "check_docker_status",
        "generate_api_client_template",
        "validate_environment_setup",
        "create_test_scenario",
        "deploy_and_validate_function",
        "compare_edge_function_versions",
        "update_technical_docs",
        "generate_api_changelog"
      ],
      "activationKeywords": [
        "develop",
        "integrate",
        "new api",
        "test integration",
        "deploy function",
        "edge function",
        "documentation",
        "changelog",
        "diff",
        "version compare"
      ]
    },
    "prospectpro-troubleshooting": {
      "autoStart": false,
      "onDemand": true,
      "maxMemory": "96MB",
      "priority": "medium",
      "description": "Debugging tools for background jobs, Supabase auth sessions, RLS policies, and enrichment pipelines (6 tools)",
      "tools": [
        "test_edge_function",
        "validate_database_permissions",
        "check_vercel_deployment",
        "diagnose_anon_key_mismatch",
        "run_rls_diagnostics",
        "generate_debugging_commands"
      ],
      "activationKeywords": [
        "debug",
        "error",
        "fix",
        "troubleshoot",
        "404",
        "500",
        "auth error",
        "jwt",
        "session",
        "rls",
        "permission denied",
        "policy"
      ]
    },
    "supabase_cli_context": {
      "autoStart": false,
      "description": "Supabase CLI command reference derived from recent terminal usage",
      "command": "node",
      "args": [
        "-e",
        "const supabaseCommands={docs:{functions_overview:'https://supabase.com/docs/reference/cli/supabase-functions',serve:'https://supabase.com/docs/reference/cli/supabase-functions-serve',deploy:'https://supabase.com/docs/reference/cli/supabase-functions-deploy'},common_patterns:{cli_prefix:'npx --yes supabase@latest',workdir_context:'cd /workspaces/ProspectPro/supabase &&'},project_management:{link:'npx --yes supabase@latest link --project-ref <project_ref>',status:'npx --yes supabase@latest status',unlink:'npx --yes supabase@latest unlink'},migration_commands:{new:'npx --yes supabase@latest migration new <migration_name>',list:'npx --yes supabase@latest migration list',status:'npx --yes supabase@latest migration status',repair:'npx --yes supabase@latest migration repair <version> --status <applied|reverted>',up:'npx --yes supabase@latest migration up',down:'npx --yes supabase@latest migration down <version>'},db_operations:{push:'npx --yes supabase@latest db push',push_local:'npx --yes supabase@latest db push --local',pull_schema:'npx --yes supabase@latest db pull --schema <schema_name>',pull_migration:'npx --yes supabase@latest db pull <migration_name>',reset_local:'npx --yes supabase@latest db reset --local',dump:'npx --yes supabase@latest db dump --schema <schema> --file <path>'},type_generation:{typescript:'npx --yes supabase@latest gen types --lang typescript',typescript_local:'npx --yes supabase@latest gen types --local --lang typescript'},output_formats:{available:['env','pretty','json','toml','yaml'],default:'pretty'},deprecated_commands:{db_remote_commit:'DEPRECATED: Use \"db pull\" instead'},error_patterns:{rate_limit:'Rate exceeded - retry after delay',auth_required:'Run authentication script first',project_not_linked:'Run link command with --project-ref',invalid_flags:'Check available flags with --help'}};console.log(JSON.stringify(supabaseCommands,null,2));"
      ]
    },
    "supabase_edge_functions_context": {
      "autoStart": false,
      "description": "Edge Function command reference with Supabase CLI documentation links",
      "command": "node",
      "args": [
        "-e",
        "const edgeFunctionsCommands={docs:{functions_overview:'https://supabase.com/docs/reference/cli/supabase-functions',serve:'https://supabase.com/docs/reference/cli/supabase-functions-serve',deploy:'https://supabase.com/docs/reference/cli/supabase-functions-deploy'},common_patterns:{cli_prefix:'npx --yes supabase@latest',workdir_context:'cd /workspaces/ProspectPro/supabase &&'},local_development:{serve_all:'npx --yes supabase@latest functions serve --no-verify-jwt --debug',serve_single:'npx --yes supabase@latest functions serve <function_name> --no-verify-jwt --debug',serve_port:'npx --yes supabase@latest functions serve --port 54321'},function_deployment:{deploy_single:'npx --yes supabase@latest functions deploy <function_name>',deploy_no_verify:'npx --yes supabase@latest functions deploy <function_name> --no-verify-jwt',deploy_critical_set:'npx --yes supabase@latest functions deploy business-discovery-background --no-verify-jwt && npx --yes supabase@latest functions deploy enrichment-orchestrator',deploy_discovery_group:'npx --yes supabase@latest functions deploy business-discovery-background --no-verify-jwt && npx --yes supabase@latest functions deploy business-discovery-optimized && npx --yes supabase@latest functions deploy business-discovery-user-aware',deploy_enrichment_group:'npx --yes supabase@latest functions deploy enrichment-orchestrator && npx --yes supabase@latest functions deploy enrichment-hunter && npx --yes supabase@latest functions deploy enrichment-neverbounce && npx --yes supabase@latest functions deploy enrichment-business-license && npx --yes supabase@latest functions deploy enrichment-pdl'},function_management:{list:'npx --yes supabase@latest functions list',delete:'npx --yes supabase@latest functions delete <function_name>',new:'npx --yes supabase@latest functions new <function_name>'},logging_debugging:{logs_live:'npx --yes supabase@latest functions logs --follow',logs_function:'npx --yes supabase@latest functions logs <function_name> --follow',logs_errors:'npx --yes supabase@latest functions logs --filter=error',logs_level:'npx --yes supabase@latest functions logs --level <debug|info|warn|error>',logs_since:'npx --yes supabase@latest functions logs --since=<duration>'},testing_patterns:{test_discovery_background:'curl -X POST \"http://localhost:54321/functions/v1/business-discovery-background\" -H \"Content-Type: application/json\" -d {\\\"businessType\\\":\\\"test\\\",\\\"location\\\":\\\"test\\\"}',test_enrichment_orchestrator:'curl -X POST \"http://localhost:54321/functions/v1/enrichment-orchestrator\" -H \"Content-Type: application/json\" -H \"Authorization: Bearer <jwt_token>\"',test_production:'curl -X POST \"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/<function_name>\" -H \"Authorization: Bearer <session_jwt>\" -H \"Content-Type: application/json\"'},function_categories:{discovery:['business-discovery-background','business-discovery-optimized','business-discovery-user-aware'],enrichment:['enrichment-orchestrator','enrichment-hunter','enrichment-neverbounce','enrichment-business-license','enrichment-pdl'],export:['campaign-export-user-aware','campaign-export'],diagnostics:['test-google-places','auth-diagnostics','test-user-deduplication']}};console.log(JSON.stringify(edgeFunctionsCommands,null,2));"
      ]
    }
  },
  "globalSettings": {
    "maxConcurrentServers": 2,
    "memoryThreshold": "384MB",
    "smartLoading": true,
    "contextOptimization": true
  },
  "contextFilters": {
    "allowedExtensions": [".ts", ".js", ".json", ".md", ".sql"],
    "excludedPaths": [
      "archive/**",
      "node_modules/**",
      ".deno_lsp/**",
      "logs/**",
      "dist/**"
    ],
    "maxContextLength": 200,
    "maxFileSize": 50000
  },
  "costOptimization": {
    "enabled": true,
    "tokenReduction": 38,
    "cacheResponses": true,
    "smartContext": true,
    "quickCommands": {
      "run prod mcp": "cd /workspaces/ProspectPro/mcp-servers && npm run start:production",
      "ensure supabase session": "source scripts/ensure-supabase-cli-session.sh && echo 'Supabase CLI session ready (shell opts restored).'",
      "prepare edge auth env": "source scripts/setup-edge-auth-env.sh",
      "stop mcp": "./scripts/stop-mcp.sh",
      "deploy discovery background": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli functions deploy business-discovery-background",
      "deploy orchestrator": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli functions deploy enrichment-orchestrator",
      "deploy export": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli functions deploy campaign-export-user-aware",
      "check background logs": "source scripts/ensure-supabase-cli-session.sh && echo 'Open Supabase dashboard → Edge Functions → business-discovery-background → Logs'",
      "push supabase migrations": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli db push --linked",
      "list supabase migrations": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli migration list",
      "test background job": "curl -sS -X POST \"$SUPABASE_URL/functions/v1/business-discovery-background\" -H \"Authorization: Bearer $SUPABASE_SESSION_JWT\" -H \"apikey: $SUPABASE_PUBLISHABLE_KEY\" -H \"Content-Type: application/json\" -d '{\"businessType\":\"coffee shop\",\"location\":\"Seattle, WA\",\"maxResults\":1,\"tierKey\":\"PROFESSIONAL\"}'",
      "test export": "curl -sS -X POST \"$SUPABASE_URL/functions/v1/campaign-export-user-aware\" -H \"Authorization: Bearer $SUPABASE_SESSION_JWT\" -H \"apikey: $SUPABASE_PUBLISHABLE_KEY\" -H \"Content-Type: application/json\" -d '{\"campaignId\":\"test\",\"format\":\"csv\"}'",
      "test auth diagnostics": "curl -sS -X POST \"$SUPABASE_URL/functions/v1/auth-diagnostics\" -H \"Authorization: Bearer $SUPABASE_SESSION_JWT\" -H \"apikey: $SUPABASE_PUBLISHABLE_KEY\" -H \"Content-Type: application/json\" -d '{\"echo\": true}'",
      "refresh codebase index": "npm run codebase:index",
      "compare auth patterns": "./scripts/test-auth-patterns.sh \"$SUPABASE_SESSION_JWT\"",
      "rebuild frontend": "npm install && npm run build",
      "verify repo root": "git rev-parse --show-toplevel && pwd",
      "pull vercel env": "vercel env pull .env.vercel",
      "run supabase db tests": "npm run supabase:test:db",
      "run supabase function tests": "npm run supabase:test:functions",
      "diagnose discovery logs": "./scripts/diagnose-campaign-failure.sh business-discovery",
      "diagnose enrichment logs": "./scripts/diagnose-campaign-failure.sh enrichment",
      "function report discovery": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && get_function_report business-discovery-background",
      "validate session": "echo 'Use MCP production tool: validate_supabase_session with sessionJwt parameter'",
      "diagnose rls": "echo 'Use MCP production tool: diagnose_rls_failure with tableName and sessionJwt parameters'",
      "analyze costs": "echo 'Use MCP production tool: analyze_campaign_costs with optional campaignId, dateRange, groupBy parameters'",
      "predict cost": "echo 'Use MCP production tool: predict_campaign_cost with tierKey, businessType, targetCount parameters'",
      "deploy edge function": "echo 'Use MCP development tool: deploy_and_validate_function with functionName and optional sessionJwt'",
      "compare function versions": "echo 'Use MCP development tool: compare_edge_function_versions with functionName and optional ref'",
      "update docs": "echo 'Use MCP development tool: update_technical_docs or run: npm run docs:update'",
      "generate changelog": "echo 'Use MCP development tool: generate_api_changelog with optional limit, includeDocs, pathFilters'"
    }
  },
  "userAwareFeatures": {
    "enabled": true,
    "sessionTracking": true,
    "authenticationMonitoring": true,
    "campaignOwnershipTracking": true,
    "dataIsolationValidation": true
  }
}
