{
    "version": "1.1",
    "description": "ProspectPro v4.3 MCP Server Configuration - Tier-Aware Background Discovery & Supabase CLI Guard",
    "servers": {
        "prospectpro-production": {
            "autoStart": true,
            "lazyLoad": true,
            "maxMemory": "192MB",
            "priority": "high",
            "description": "Production monitoring for tier-aware background discovery, enrichment, and session-enforced auth (28 tools)",
            "tools": [
                "monitor_api_performance",
                "analyze_database_metrics",
                "check_edge_function_health",
                "track_api_costs",
                "monitor_supabase_usage",
                "track_user_sessions",
                "monitor_authentication",
                "analyze_campaign_ownership"
            ]
        },
        "prospectpro-development": {
            "autoStart": false,
            "onDemand": true,
            "maxMemory": "96MB",
            "priority": "medium",
            "description": "Development tools for background discovery, census targeting, enrichment, and session token workflows",
            "activationKeywords": [
                "develop",
                "integrate",
                "new api",
                "test integration",
                "user auth",
                "session management"
            ]
        },
        "prospectpro-troubleshooting": {
            "autoStart": false,
            "onDemand": true,
            "maxMemory": "96MB",
            "priority": "medium",
            "description": "Debugging tools for background jobs, Supabase auth sessions, and enrichment pipelines",
            "activationKeywords": [
                "debug",
                "error",
                "fix",
                "troubleshoot",
                "404",
                "500",
                "auth error",
                "jwt",
                "session"
            ]
        },
        "supabase_cli_context": {
            "autoStart": false,
            "description": "Supabase CLI command reference derived from recent terminal usage",
            "command": "node",
            "args": [
                "-e",
                "const supabaseCommands={docs:{functions_overview:'https://supabase.com/docs/reference/cli/supabase-functions',serve:'https://supabase.com/docs/reference/cli/supabase-functions-serve',deploy:'https://supabase.com/docs/reference/cli/supabase-functions-deploy'},common_patterns:{cli_prefix:'npx --yes supabase@latest',workdir_context:'cd /workspaces/ProspectPro/supabase &&'},project_management:{link:'npx --yes supabase@latest link --project-ref <project_ref>',status:'npx --yes supabase@latest status',unlink:'npx --yes supabase@latest unlink'},migration_commands:{new:'npx --yes supabase@latest migration new <migration_name>',list:'npx --yes supabase@latest migration list',status:'npx --yes supabase@latest migration status',repair:'npx --yes supabase@latest migration repair <version> --status <applied|reverted>',up:'npx --yes supabase@latest migration up',down:'npx --yes supabase@latest migration down <version>'},db_operations:{push:'npx --yes supabase@latest db push',push_local:'npx --yes supabase@latest db push --local',pull_schema:'npx --yes supabase@latest db pull --schema <schema_name>',pull_migration:'npx --yes supabase@latest db pull <migration_name>',reset_local:'npx --yes supabase@latest db reset --local',dump:'npx --yes supabase@latest db dump --schema <schema> --file <path>'},type_generation:{typescript:'npx --yes supabase@latest gen types --lang typescript',typescript_local:'npx --yes supabase@latest gen types --local --lang typescript'},output_formats:{available:['env','pretty','json','toml','yaml'],default:'pretty'},deprecated_commands:{db_remote_commit:'DEPRECATED: Use \"db pull\" instead'},error_patterns:{rate_limit:'Rate exceeded - retry after delay',auth_required:'Run authentication script first',project_not_linked:'Run link command with --project-ref',invalid_flags:'Check available flags with --help'}};console.log(JSON.stringify(supabaseCommands,null,2));"
            ]
        },
        "supabase_edge_functions_context": {
            "autoStart": false,
            "description": "Edge Function command reference with Supabase CLI documentation links",
            "command": "node",
            "args": [
                "-e",
                "const edgeFunctionsCommands={docs:{functions_overview:'https://supabase.com/docs/reference/cli/supabase-functions',serve:'https://supabase.com/docs/reference/cli/supabase-functions-serve',deploy:'https://supabase.com/docs/reference/cli/supabase-functions-deploy'},common_patterns:{cli_prefix:'npx --yes supabase@latest',workdir_context:'cd /workspaces/ProspectPro/supabase &&'},local_development:{serve_all:'npx --yes supabase@latest functions serve --no-verify-jwt --debug',serve_single:'npx --yes supabase@latest functions serve <function_name> --no-verify-jwt --debug',serve_port:'npx --yes supabase@latest functions serve --port 54321'},function_deployment:{deploy_single:'npx --yes supabase@latest functions deploy <function_name>',deploy_no_verify:'npx --yes supabase@latest functions deploy <function_name> --no-verify-jwt',deploy_critical_set:'npx --yes supabase@latest functions deploy business-discovery-background --no-verify-jwt && npx --yes supabase@latest functions deploy enrichment-orchestrator',deploy_discovery_group:'npx --yes supabase@latest functions deploy business-discovery-background --no-verify-jwt && npx --yes supabase@latest functions deploy business-discovery-optimized && npx --yes supabase@latest functions deploy business-discovery-user-aware',deploy_enrichment_group:'npx --yes supabase@latest functions deploy enrichment-orchestrator && npx --yes supabase@latest functions deploy enrichment-hunter && npx --yes supabase@latest functions deploy enrichment-neverbounce && npx --yes supabase@latest functions deploy enrichment-business-license && npx --yes supabase@latest functions deploy enrichment-pdl'},function_management:{list:'npx --yes supabase@latest functions list',delete:'npx --yes supabase@latest functions delete <function_name>',new:'npx --yes supabase@latest functions new <function_name>'},logging_debugging:{logs_live:'npx --yes supabase@latest functions logs --follow',logs_function:'npx --yes supabase@latest functions logs <function_name> --follow',logs_errors:'npx --yes supabase@latest functions logs --filter=error',logs_level:'npx --yes supabase@latest functions logs --level <debug|info|warn|error>',logs_since:'npx --yes supabase@latest functions logs --since=<duration>'},testing_patterns:{test_discovery_background:'curl -X POST \"http://localhost:54321/functions/v1/business-discovery-background\" -H \"Content-Type: application/json\" -d {\\\"businessType\\\":\\\"test\\\",\\\"location\\\":\\\"test\\\"}',test_enrichment_orchestrator:'curl -X POST \"http://localhost:54321/functions/v1/enrichment-orchestrator\" -H \"Content-Type: application/json\" -H \"Authorization: Bearer <jwt_token>\"',test_production:'curl -X POST \"https://sriycekxdqnesdsgwiuc.supabase.co/functions/v1/<function_name>\" -H \"Authorization: Bearer <session_jwt>\" -H \"Content-Type: application/json\"'},function_categories:{discovery:['business-discovery-background','business-discovery-optimized','business-discovery-user-aware'],enrichment:['enrichment-orchestrator','enrichment-hunter','enrichment-neverbounce','enrichment-business-license','enrichment-pdl'],export:['campaign-export-user-aware','campaign-export'],diagnostics:['test-google-places','auth-diagnostics','test-user-deduplication']}};console.log(JSON.stringify(edgeFunctionsCommands,null,2));"
            ]
        }
    },
    "globalSettings": {
        "maxConcurrentServers": 2,
        "memoryThreshold": "384MB",
        "smartLoading": true,
        "contextOptimization": true
    },
    "contextFilters": {
        "allowedExtensions": [
            ".ts",
            ".js",
            ".json",
            ".md",
            ".sql"
        ],
        "excludedPaths": [
            "archive/**",
            "node_modules/**",
            ".deno_lsp/**",
            "logs/**",
            "dist/**"
        ],
        "maxContextLength": 200,
        "maxFileSize": 50000
    },
    "costOptimization": {
        "enabled": true,
        "tokenReduction": 38,
        "cacheResponses": true,
        "smartContext": true,
        "quickCommands": {
            "run prod mcp": "cd /workspaces/ProspectPro/mcp-servers && npm run start:production",
            "ensure supabase session": "source scripts/ensure-supabase-cli-session.sh && echo 'Supabase CLI session ready (shell opts restored).'",
            "prepare edge auth env": "source scripts/setup-edge-auth-env.sh",
            "stop mcp": "./scripts/stop-mcp.sh",
            "deploy discovery background": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli functions deploy business-discovery-background",
            "deploy orchestrator": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli functions deploy enrichment-orchestrator",
            "deploy export": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli functions deploy campaign-export-user-aware",
            "check background logs": "source scripts/ensure-supabase-cli-session.sh && echo 'Open Supabase dashboard → Edge Functions → business-discovery-background → Logs'",
            "push supabase migrations": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli db push --linked",
            "list supabase migrations": "source scripts/ensure-supabase-cli-session.sh && source scripts/lib/supabase_cli_helpers.sh && prospectpro_supabase_cli migration list",
            "test background job": "curl -sS -X POST \"$SUPABASE_URL/functions/v1/business-discovery-background\" -H \"Authorization: Bearer $SUPABASE_SESSION_JWT\" -H \"apikey: $SUPABASE_PUBLISHABLE_KEY\" -H \"Content-Type: application/json\" -d '{\"businessType\":\"coffee shop\",\"location\":\"Seattle, WA\",\"maxResults\":1,\"tierKey\":\"PROFESSIONAL\"}'",
            "test export": "curl -sS -X POST \"$SUPABASE_URL/functions/v1/campaign-export-user-aware\" -H \"Authorization: Bearer $SUPABASE_SESSION_JWT\" -H \"apikey: $SUPABASE_PUBLISHABLE_KEY\" -H \"Content-Type: application/json\" -d '{\"campaignId\":\"test\",\"format\":\"csv\"}'",
            "test auth diagnostics": "curl -sS -X POST \"$SUPABASE_URL/functions/v1/auth-diagnostics\" -H \"Authorization: Bearer $SUPABASE_SESSION_JWT\" -H \"apikey: $SUPABASE_PUBLISHABLE_KEY\" -H \"Content-Type: application/json\" -d '{\"echo\": true}'",
            "refresh codebase index": "npm run codebase:index",
            "compare auth patterns": "./scripts/test-auth-patterns.sh \"$SUPABASE_SESSION_JWT\"",
            "rebuild frontend": "npm install && npm run build",
            "verify repo root": "git rev-parse --show-toplevel && pwd",
            "pull vercel env": "vercel env pull .env.vercel"
        }
    },
    "userAwareFeatures": {
        "enabled": true,
        "sessionTracking": true,
        "authenticationMonitoring": true,
        "campaignOwnershipTracking": true,
        "dataIsolationValidation": true
    }
}