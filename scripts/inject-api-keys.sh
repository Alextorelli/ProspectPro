#!/bin/bash

# ProspectPro API Key Injection Script
# Injects API keys from Supabase Edge Function secrets into Vite environment variables

set -e

echo "🔑 ProspectPro API Key Injection"
echo "================================"

# Check if Supabase CLI is available
if ! command -v supabase &> /dev/null; then
    echo "❌ Supabase CLI not found. Please install: npm install -g supabase"
    exit 1
fi

# Check if we're linked to a Supabase project
if ! supabase status &> /dev/null; then
    echo "❌ Not linked to Supabase project. Run: supabase link --project-ref sriycekxdqnesdsgwiuc"
    exit 1
fi

echo "📡 Fetching API keys from Supabase Edge Function secrets..."

resolve_env() {
    for var in "$@"; do
        local value="${!var}"
        if [ -n "$value" ]; then
            echo "$value"
            return 0
        fi
    done
    echo ""
}

SUPABASE_URL_VALUE=$(resolve_env VITE_SUPABASE_URL NEXT_PUBLIC_SUPABASE_URL SUPABASE_URL)
SUPABASE_ANON_KEY_VALUE=$(resolve_env VITE_SUPABASE_ANON_KEY NEXT_PUBLIC_SUPABASE_ANON_KEY SUPABASE_ANON_KEY)
EDGE_FUNCTIONS_URL_VALUE=$(resolve_env VITE_EDGE_FUNCTIONS_URL NEXT_PUBLIC_SUPABASE_FUNCTIONS_URL SUPABASE_FUNCTIONS_URL)

if [ -z "$SUPABASE_URL_VALUE" ]; then
    SUPABASE_URL_VALUE="https://sriycekxdqnesdsgwiuc.supabase.co"
    echo "ℹ️  VITE/NEXT_PUBLIC_SUPABASE_URL not set. Falling back to project URL: $SUPABASE_URL_VALUE"
else
    echo "✅ Resolved Supabase URL from environment"
fi

if [ -z "$SUPABASE_ANON_KEY_VALUE" ]; then
    echo "❌ Supabase anon key not found in environment"
    echo "   Set one of: VITE_SUPABASE_ANON_KEY, NEXT_PUBLIC_SUPABASE_ANON_KEY, SUPABASE_ANON_KEY"
    exit 1
fi

if [ -z "$EDGE_FUNCTIONS_URL_VALUE" ]; then
    EDGE_FUNCTIONS_URL_VALUE="${SUPABASE_URL_VALUE%/}/functions/v1"
    echo "ℹ️  Edge Functions URL not set. Using default: $EDGE_FUNCTIONS_URL_VALUE"
else
    echo "✅ Resolved Edge Functions URL from environment"
fi

# Get the Google Maps API key from Supabase secrets
GOOGLE_MAPS_KEY=$(supabase secrets get GOOGLE_PLACES_API_KEY 2>/dev/null || echo "")

if [ -z "$GOOGLE_MAPS_KEY" ]; then
    echo "⚠️  Warning: GOOGLE_PLACES_API_KEY not found in Supabase secrets"
    echo "   Using empty value for development"
    GOOGLE_MAPS_KEY=""
else
    echo "✅ Retrieved Google Maps API key from Supabase secrets"
fi

# Update .env.local with injected API keys
cat > .env.local << EOF
# Vite Environment Variables for ProspectPro
# Generated by inject-api-keys.sh on $(date)

# Supabase Configuration
VITE_SUPABASE_URL=$SUPABASE_URL_VALUE
VITE_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY_VALUE
VITE_EDGE_FUNCTIONS_URL=$EDGE_FUNCTIONS_URL_VALUE

# Google Maps API Configuration (injected from Supabase secrets)
VITE_GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_KEY
VITE_GOOGLE_PLACES_API_KEY=$GOOGLE_MAPS_KEY

# Note: Other API keys (Hunter.io, NeverBounce, etc.) are stored in
# Supabase Edge Function secrets and accessed only by Edge Functions
# They are NOT exposed to the frontend for security
EOF

echo "✅ API keys injected into .env.local"
echo "📁 Frontend now has access to:"
echo "   - Supabase connection details from environment"
echo "   - Google Maps API key for map display (if configured)"
echo ""
echo "🔒 Security Note: Sensitive API keys (Hunter.io, NeverBounce) remain"
echo "   secure in Supabase Edge Function secrets and are not exposed to frontend"
echo ""
echo "🚀 Ready to build and deploy!"