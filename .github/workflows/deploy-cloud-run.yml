name: Deploy to Google Cloud Run (Docker)

on:
    push:
        branches: [main]
    workflow_dispatch:
        inputs:
            force_deploy:
                description: "Force deployment"
                required: false
                default: "true"

env:
    PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    SERVICE_NAME: prospectpro
    REGION: ${{ secrets.GCP_REGION || 'us-central1' }}
    IMAGE_NAME: prospectpro

jobs:
    docker-deploy:
        name: Docker Build and Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }}
                  create_credentials_file: true
                  export_environment_variables: true

            - name: Setup Google Cloud CLI
              uses: google-github-actions/setup-gcloud@v2

            - name: Configure Docker for Artifact Registry
              run: |
                  echo "🐳 Configuring Docker for Google Cloud..."
                  gcloud auth configure-docker $REGION-docker.pkg.dev

            - name: Build Docker image
              run: |
                  echo "🔨 Building Docker image..."
                  docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:latest .
                  docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:${{ github.sha }} .

            - name: Push Docker image
              run: |
                  echo "📤 Pushing Docker image to Artifact Registry..."
                  docker push $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:latest
                  docker push $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:${{ github.sha }}

            - name: Deploy to Cloud Run
              run: |
                  echo "🚀 Deploying to Cloud Run with Docker image..."
                  gcloud run deploy $SERVICE_NAME \
                    --image $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:latest \
                    --platform managed \
                    --region $REGION \
                    --allow-unauthenticated \
                    --port 3100 \
                    --memory 2Gi \
                    --cpu 2 \
                    --min-instances 0 \
                    --max-instances 10 \
                    --concurrency 100 \
                    --timeout 300 \
                    --set-env-vars NODE_ENV=production \
                    --set-env-vars SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
                    --set-env-vars SUPABASE_SECRET_KEY="${{ secrets.SUPABASE_SECRET_KEY }}" \
                    --set-env-vars PORT=3100 \
                    --set-env-vars ALLOW_DEGRADED_START=true \
                    --quiet

            - name: Get service URL
              id: get-url
              run: |
                  SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
                  echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
                  echo "🚀 Service deployed at: $SERVICE_URL"

            - name: Test deployment
              run: |
                  echo "⏳ Waiting for service to be ready..."
                  sleep 45

                  SERVICE_URL="${{ steps.get-url.outputs.SERVICE_URL }}"

                  echo "🧪 Testing health endpoint..."
                  curl -f --max-time 30 "$SERVICE_URL/health" || echo "❌ Health check failed"

                  echo "🧪 Testing business discovery..."
                  curl -X POST --max-time 30 -H "Content-Type: application/json" \
                    -d '{"businessType":"restaurant","location":"Austin, TX","maxResults":1}' \
                    -f "$SERVICE_URL/api/business/discover-businesses" || echo "❌ API test failed"

            - name: Deployment summary
              run: |
                  echo "✅ Docker deployment completed!"
                  echo "🌐 Service URL: ${{ steps.get-url.outputs.SERVICE_URL }}"
                  echo "📊 Health: ${{ steps.get-url.outputs.SERVICE_URL }}/health"
                  echo "📋 API: ${{ steps.get-url.outputs.SERVICE_URL }}/api/business/discover-businesses"
