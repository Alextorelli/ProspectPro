name: Docker Environment with Supabase Vault

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: false
        default: "production"
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  generate-docker-env:
    name: Generate Environment for Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --only=production

      - name: Generate Docker Environment
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "🔧 Generating Docker-compatible environment..."

          # Create .env file for Docker
          cat > .env << EOF
          # ================================
          # DOCKER ENVIRONMENT CONFIGURATION
          # Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          # Commit: ${{ github.sha }}
          # ================================

          # Environment
          NODE_ENV=${{ github.event.inputs.environment || 'production' }}
          PORT=3000
          HOST=0.0.0.0

          # Core Infrastructure (from GitHub Secrets)
          SUPABASE_URL=${SUPABASE_URL}
          SUPABASE_SECRET_KEY=${SUPABASE_SECRET_KEY}
          PERSONAL_ACCESS_TOKEN=${PERSONAL_ACCESS_TOKEN}

          # API Keys (pulled from Supabase Vault at runtime)
          USE_SUPABASE_VAULT=true
          VAULT_KEY_PREFIX=prospectpro

          # Production Settings
          ALLOW_DEGRADED_START=true
          ENABLE_HEALTH_CHECKS=true
          ENABLE_COST_TRACKING=true
          ENABLE_TTL_CACHE=true

          # Budget Controls
          DEFAULT_BUDGET_LIMIT=25.00
          MIN_CONFIDENCE_SCORE=75

          # Build Info
          BUILD_COMMIT=${{ github.sha }}
          BUILD_DATE=$(date -u +"%Y-%m-%d_%H-%M-%S_UTC")
          EOF

          echo "✅ Docker environment file generated"
          echo "📋 Configuration:"
          echo "   - Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "   - Vault Integration: Enabled"
          echo "   - Docker-Compatible: Yes"

      - name: Test Supabase Connection
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
        run: |
          echo "🔍 Testing Supabase connection..."

          # Simple connection test
          node -e "
          const { createClient } = require('@supabase/supabase-js');
          const supabase = createClient('$SUPABASE_URL', '$SUPABASE_SECRET_KEY');

          // Test connection
          supabase.from('campaigns').select('count').limit(1)
            .then(({ data, error }) => {
              if (error && !error.message.includes('relation')) {
                console.log('❌ Supabase connection failed:', error.message);
                process.exit(1);
              }
              console.log('✅ Supabase connection successful');
            })
            .catch(err => {
              console.log('⚠️  Connection test skipped:', err.message);
              console.log('✅ Basic client creation successful');
            });
          "

      - name: Test Docker Build
        run: |
          echo "🐳 Testing Docker build..."
          docker build -t prospectpro:test . --quiet
          echo "✅ Docker build successful"

      - name: Upload Environment Configuration
        uses: actions/upload-artifact@v4
        with:
          name: docker-environment-${{ github.event.inputs.environment || 'production' }}
          path: .env
          retention-days: 7

      - name: Create Deployment Summary
        run: |
          echo "## 🐳 Docker Environment Ready" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Environment**: \`${{ github.event.inputs.environment || 'production' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Supabase Vault**: Enabled for API key management" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Docker Build**: Tested and ready" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the environment artifact" >> $GITHUB_STEP_SUMMARY
          echo "2. Run: \`docker-compose up -d\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Application will pull API keys from Supabase Vault automatically" >> $GITHUB_STEP_SUMMARY
