{
  "name": "production-ops",
  "version": "2.1.0",
  "role": "site_reliability_engineer",
  "capabilities": [
    "deployment_orchestration",
    "incident_response",
    "rollback_management",
    "capacity_planning",
    "health_monitoring",
    "cost_optimization"
  ],
  "mcp_dependencies": {
    "primary": ["github", "supabase", "supabase-troubleshooting"],
    "secondary": []
  },
  "tools_access": [
    "github.create_pull_request",
    "github.merge_pull_request",
    "supabase.validate_migration",
    "supabase.check_pool_health",
    "supabase.execute_query",
    "supabase_troubleshooting.correlate_errors",
    "supabase_troubleshooting.generate_incident_timeline"
  ],
  "testing_tooling": ["Playwright"],
  "environment_credentials": {
    "development": {
      "supabase_project_ref_var": "AGENT_DEV_SUPABASE_PROJECT_REF",
      "supabase_url_var": "AGENT_DEV_SUPABASE_URL",
      "vercel_project_var": "AGENT_DEV_VERCEL_PROJECT"
    },
    "production": {
      "supabase_project_ref_var": "AGENT_PROD_SUPABASE_PROJECT_REF",
      "supabase_url_var": "AGENT_PROD_SUPABASE_URL",
      "vercel_project_var": "AGENT_PROD_VERCEL_PROJECT"
    },
    "troubleshooting": {
      "supabase_project_ref_var": "AGENT_TROUBLESHOOT_SUPABASE_PROJECT_REF",
      "supabase_url_var": "AGENT_TROUBLESHOOT_SUPABASE_URL",
      "vercel_project_var": "AGENT_TROUBLESHOOT_VERCEL_PROJECT"
    }
  },
  "secrets_management": {
    "env_file": "dev-tools/agents/.env",
    "template": "dev-tools/agents/.env.agent.example",
    "required_variables": [
      "AGENT_SUPABASE_ACCESS_TOKEN",
      "AGENT_SUPABASE_DEFAULT_JWT",
      "AGENT_DEV_SUPABASE_PROJECT_REF",
      "AGENT_PROD_SUPABASE_PROJECT_REF",
      "AGENT_TROUBLESHOOT_SUPABASE_PROJECT_REF",
      "AGENT_DEV_VERCEL_PROJECT",
      "AGENT_PROD_VERCEL_PROJECT",
      "AGENT_TROUBLESHOOT_VERCEL_PROJECT"
    ]
  },
  "deployment_config": {
    "edge_functions_sequence": [
      "business-discovery-background",
      "enrichment-orchestrator",
      "campaign-export-user-aware"
    ],
    "verification_window_minutes": 5,
    "rollback_threshold_error_rate": 0.05,
    "smoke_test_scripts": [
      "./scripts/testing/test-discovery-pipeline.sh",
      "./scripts/testing/test-enrichment-chain.sh",
      "dev-tools/agents/scripts/context-snapshot.sh",
      "scripts/automation/vercel-validate.sh",
      "scripts/automation/redis-observability.sh"
    ]
  },
  "incident_response": {
    "severity_levels": {
      "P0": {
        "description": "Production down, >50% error rate",
        "mttr_minutes": 30
      },
      "P1": {
        "description": "Degraded performance, >10% error rate",
        "mttr_minutes": 120
      },
      "P2": {
        "description": "Minor feature broken, <5% error rate",
        "mttr_minutes": 480
      },
      "P3": {
        "description": "Cosmetic issues, no functional impact",
        "mttr_minutes": 1440
      }
    },
    "alert_channels": {
      "pagerduty": "integration_hub.send_notification",
      "slack": "integration_hub.send_notification",
      "email": "integration_hub.send_notification"
    },
    "investigation_tools": [
      "supabase_troubleshooting.correlate_errors",
      "supabase_troubleshooting.generate_incident_timeline",
      "integration_hub.check_integration_health",
      "supabase.check_pool_health"
    ]
  },
  "capacity_planning": {
    "connection_pool": {
      "max_connections": 20,
      "scale_up_threshold": 0.8,
      "scale_down_threshold": 0.4
    },
    "api_quotas": {
      "hunter_io": { "monthly_limit": 500, "alert_threshold": 400 },
      "neverbounce": { "monthly_limit": 10000, "alert_threshold": 8000 },
      "google_places": { "monthly_limit": 40000, "alert_threshold": 32000 }
    },
    "cost_budget": {
      "monthly_total": 270,
      "breakdown": { "supabase": 50, "vercel": 20, "apis": 200 },
      "alert_threshold": 0.8
    }
  },
  "health_checks": {
    "interval_seconds": 300,
    "endpoints": [
      "https://${env:AGENT_PROD_SUPABASE_PROJECT_REF}.supabase.co/functions/v1/test-new-auth",
      "https://prospect-fyhedobh1-appsmithery.vercel.app"
    ],
    "database_check": "SELECT 1",
    "mcp_servers": [
      "chrome-devtools",
      "github",
      "supabase-troubleshooting",
      "supabase",
      "integration-hub"
    ]
  },
  "sla_targets": {
    "uptime_percent": 99.9,
    "max_downtime_minutes_per_month": 43,
    "deployment_success_rate": 0.99,
    "mttr_p0_minutes": 30,
    "migration_safety_rate": 1.0
  },
  "rollback_procedures": {
    "edge_function": [
      "git checkout <commit-sha> -- app/backend/functions/<function-name>",
      "npx --yes supabase@latest functions deploy <function-name> --no-verify-jwt",
      "notify team via integration_hub"
    ],
    "frontend": [
      "git revert <commit-sha>",
      "npm run build && npx --yes vercel@latest --prod",
      "verify deployment via curl"
    ],
    "database": [
      "create inverse migration SQL",
      "mcp supabase validate_migration --rollback=true",
      "npx --yes supabase@latest db push"
    ]
  },
  "knowledge_base": {
    "ops_fast_readme": "/docs/mmd-shared/FAST_README.md",
    "deployment_workflow": "/integration/monitoring/diagnostics/deployment-validation-workflow.sh",
    "edge_diagnostics": "/integration/monitoring/diagnostics/edge-function-diagnostics.sh",
    "production_health": "/scripts/diagnostics/verify-toolchain.sh",
    "context_store": "/dev-tools/agents/context/README.md",
    "mcp_registry": "/dev-tools/agents/mcp-servers/active-registry.json",
    "filetrees": {
      "app": "/dev-tools/context/session_store/app-filetree.txt",
      "dev_tools": "/dev-tools/context/session_store/dev-tools-filetree.txt",
      "integration": "/dev-tools/context/session_store/integration-filetree.txt"
    }
  },
  "production_access": {
    "supabase_dashboard": "https://supabase.com/dashboard/project/${env:AGENT_PROD_SUPABASE_PROJECT_REF}",
    "vercel_dashboard": "https://vercel.com/appsmithery/prospect-pro",
    "production_url": "https://prospect-fyhedobh1-appsmithery.vercel.app",
    "jaeger_tracing": "https://jaeger.prospectpro.app"
  },
  "escalation_criteria": [
    "p0_unresolved_gt_30_min",
    "migration_failure_production",
    "security_vulnerability_emergency",
    "cost_overrun_gt_50_percent",
    "cascade_failure_gt_3_integrations"
  ],
  "collaboration": [
    "system-architect",
    "development-workflow",
    "observability"
  ],
  "automation_workflows": {
    "deploy_edge_functions": "integration_hub.execute_workflow",
    "incident_communication": "integration_hub.execute_workflow",
    "health_check_cron": "*/5 * * * *",
    "context_snapshot": "dev-tools/agents/scripts/context-snapshot.sh",
    "vercel_validate": "scripts/automation/vercel-validate.sh",
    "redis_observability": "scripts/automation/redis-observability.sh"
  },
  "routing_helper": "scripts/automation/lib/participant-routing.sh",
  "dry_run_guidance": "All automation scripts support --dry-run for safe diagnostics. Load agent credentials from dev-tools/agents/.env (see .env.agent.example) before invoking MCP tools."
}
