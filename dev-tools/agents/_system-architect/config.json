{
  "name": "system-architect",
  "version": "2.1.0",
  "role": "technical_architect",
  "capabilities": [
    "schema_design",
    "migration_validation",
    "performance_optimization",
    "integration_architecture",
    "resilience_patterns",
    "observability_design"
  ],
  "mcp_dependencies": {
    "primary": ["supabase", "supabase-troubleshooting"],
    "secondary": []
  },
  "tools_access": [
    "supabase.execute_query",
    "supabase.explain_query",
    "supabase.validate_migration",
    "supabase.check_pool_health",
    "supabase.analyze_slow_queries",
    "supabase_troubleshooting.correlate_errors",
    "supabase_troubleshooting.generate_incident_timeline"
  ],
  "testing_tooling": ["Playwright"],
  "environment_credentials": {
    "development": {
      "supabase_project_ref_var": "AGENT_DEV_SUPABASE_PROJECT_REF",
      "supabase_url_var": "AGENT_DEV_SUPABASE_URL",
      "vercel_project_var": "AGENT_DEV_VERCEL_PROJECT"
    },
    "production": {
      "supabase_project_ref_var": "AGENT_PROD_SUPABASE_PROJECT_REF",
      "supabase_url_var": "AGENT_PROD_SUPABASE_URL",
      "vercel_project_var": "AGENT_PROD_VERCEL_PROJECT"
    },
    "troubleshooting": {
      "supabase_project_ref_var": "AGENT_TROUBLESHOOT_SUPABASE_PROJECT_REF",
      "supabase_url_var": "AGENT_TROUBLESHOOT_SUPABASE_URL",
      "vercel_project_var": "AGENT_TROUBLESHOOT_VERCEL_PROJECT"
    }
  },
  "secrets_management": {
    "env_file": "dev-tools/agents/.env",
    "template": "dev-tools/agents/.env.agent.example",
    "required_variables": [
      "AGENT_SUPABASE_ACCESS_TOKEN",
      "AGENT_SUPABASE_DEFAULT_JWT",
      "AGENT_DEV_SUPABASE_PROJECT_REF",
      "AGENT_PROD_SUPABASE_PROJECT_REF",
      "AGENT_TROUBLESHOOT_SUPABASE_PROJECT_REF"
    ]
  },
  "knowledge_base": {
    "app_system_reference": "/docs/app/SYSTEM_REFERENCE.md",
    "technical_reference": "/docs/technical/SYSTEM_REFERENCE.md",
    "database": "/app/backend/schema/",
    "edge_functions": "/app/backend/functions/",
    "mcp_registry": "/dev-tools/agents/mcp-servers/active-registry.json",
    "instructions": ".github/copilot-instructions.md",
    "context_snapshot_script": "dev-tools/agents/scripts/context-snapshot.sh",
    "redis_observability_script": "scripts/automation/redis-observability.sh",
    "filetrees": {
      "app": "/dev-tools/context/session_store/app-filetree.txt",
      "dev_tools": "/dev-tools/context/session_store/dev-tools-filetree.txt",
      "integration": "/dev-tools/context/session_store/integration-filetree.txt"
    }
  },
  "routing_helper": "scripts/automation/lib/participant-routing.sh",
  "dry_run_guidance": "All automation scripts support --dry-run for safe diagnostics. Load agent credentials from dev-tools/agents/.env (see .env.agent.example) before invoking MCP tools.",
  "performance_targets": {
    "migration_validation_time_ms": 5000,
    "query_explanation_time_ms": 3000,
    "architecture_review_time_min": 15
  },
  "escalation_criteria": [
    "zero_fake_data_violation",
    "budget_threshold_exceeded",
    "critical_table_migration",
    "security_vulnerability",
    "performance_degradation_gt_50_percent"
  ],
  "communication_channels": {
    "adr_location": "/docs/technical/architecture/",
    "collaboration": [
      "development-workflow",
      "observability",
      "production-ops"
    ],
    "review_frequency": "per_feature"
  },
  "validation_rules": {
    "require_migration_validation": true,
    "require_query_explanation": true,
    "require_circuit_breaker": true,
    "require_otel_tracing": true,
    "require_rls_policies": true
  }
}
